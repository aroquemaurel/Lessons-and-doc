
package exo1;

import java.awt.Point;

/**
 *
 * @author florent
 */
public class PaintlessFrameRubberBanding extends javax.swing.JFrame {
        private enum States {
            RELEASED, PRESSED
        };

        /**
         * Creates new form PaintlessFrameRubberBanding
         */
        public PaintlessFrameRubberBanding() {
            initComponents();
            init();
        }

        private void init() {
            state = States.RELEASED;
            panelDraw.init();               
        }

        private void treatmentMousePressed(Point p) {
            panelDraw.clean();
            panelDraw.setOrigin(p);
            panelDraw.setDestination(p);
            //isMoving = isMoving;
        }

        private void treatmentMouseReleased(Point p) {
            if (panelDraw.IsMoving()) {
                //origin = origin;
                panelDraw.setDestination(p);
                panelDraw.storePoint();
                panelDraw.setIsMoving(false);
                panelDraw.clean();
            } /*else {
                        origin = origin;
                        destination = destination;
                        isMoving = false;         
                        clean();
                }
                */
        }
        
        private void treatmentMouseMovePressing(Point p) {
            //origin = origin;
            panelDraw.setDestination(p);
            panelDraw.setIsMoving(true);
            panelDraw.clean();
            
        }
        
         private void treatmentMouseMoveReleasing() {                 
/*            origin = origin;
            destination = destination;
            isMoving = isMoving;*/
        }
        
                
        
        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDraw = new exo1.DrawPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Paintless");

        panelDraw.setMinimumSize(new java.awt.Dimension(400, 300));
        panelDraw.setPreferredSize(new java.awt.Dimension(1024, 600));
        panelDraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelDrawMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panelDrawMouseReleased(evt);
            }
        });
        panelDraw.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelDrawMouseDragged(evt);
            }
        });
        getContentPane().add(panelDraw, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private void panelDrawMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelDrawMousePressed
            switch(state) {
                case RELEASED:
                    state = States.PRESSED;
                    treatmentMousePressed((Point)evt.getPoint());
                    break;
                case PRESSED:
                    throw new RuntimeException("bad state");                    
            }
        }//GEN-LAST:event_panelDrawMousePressed

        private void panelDrawMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelDrawMouseReleased
            switch(state) {
                case PRESSED:
                    state = States.RELEASED;
                    treatmentMouseReleased((Point)evt.getPoint());
                    break;
                case RELEASED:
                    throw new RuntimeException("bad state");
            }
        }//GEN-LAST:event_panelDrawMouseReleased

        private void panelDrawMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelDrawMouseDragged
            switch(state) {
                case PRESSED:
                    state = States.PRESSED;
                    treatmentMouseMovePressing((Point)evt.getPoint());
                    break;
                case RELEASED:
                    state = States.RELEASED;
                    treatmentMouseMoveReleasing();
                    break;
            }
        }//GEN-LAST:event_panelDrawMouseDragged

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
                 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(PaintlessFrameRubberBanding.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(PaintlessFrameRubberBanding.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(PaintlessFrameRubberBanding.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(PaintlessFrameRubberBanding.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
        //</editor-fold>

                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                new PaintlessFrameRubberBanding().setVisible(true);
                        }
                });
        }

    private States state;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private exo1.DrawPanel panelDraw;
    // End of variables declaration//GEN-END:variables
}
