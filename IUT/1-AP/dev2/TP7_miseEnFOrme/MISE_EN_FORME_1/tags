!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Balise	miseEnForme.h	/^struct Balise$/;"	s
Balise::cadrage	miseEnForme.h	/^    char cadrage;$/;"	m	struct:Balise	access:public
Balise::largeur	miseEnForme.h	/^    int largeur;$/;"	m	struct:Balise	access:public
Balise::retrait	miseEnForme.h	/^    int retrait;$/;"	m	struct:Balise	access:public
Ligne	miseEnForme.h	/^struct Ligne$/;"	s
Ligne::ch	miseEnForme.h	/^    TabCaracteres ch;$/;"	m	struct:Ligne	access:public
Ligne::lg	miseEnForme.h	/^    int lg;$/;"	m	struct:Ligne	access:public
ListeMots	miseEnForme.h	/^struct ListeMots$/;"	s
ListeMots::mots	miseEnForme.h	/^    TabMots mots;$/;"	m	struct:ListeMots	access:public
ListeMots::nbCaracteres	miseEnForme.h	/^    int nbCaracteres; \/\/ nombre total de caracteres des mots de la liste$/;"	m	struct:ListeMots	access:public
ListeMots::nbMots	miseEnForme.h	/^    int nbMots;$/;"	m	struct:ListeMots	access:public
Mot	miseEnForme.h	/^struct Mot$/;"	s
Mot::ch	miseEnForme.h	/^    TabCaracteres ch;$/;"	m	struct:Mot	access:public
Mot::lg	miseEnForme.h	/^    int lg;$/;"	m	struct:Mot	access:public
TAILLE	miseEnForme.h	/^const int TAILLE = 80;$/;"	v
TabCaracteres	miseEnForme.h	/^typedef char TabCaracteres[TAILLE];$/;"	t
TabMots	miseEnForme.h	/^typedef Mot TabMots[TAILLE \/ 2];$/;"	t
cadrage	miseEnForme.h	/^    char cadrage;$/;"	m	struct:Balise	access:public
cadrerDroiteLigne	miseEnForme.h	/^void cadrerDroiteLigne(Ligne &ligne, const ListeMots &l, const int largeur);$/;"	p	signature:(Ligne &ligne, const ListeMots &l, const int largeur)
cadrerDroiteParagraphe	miseEnForme.h	/^void cadrerDroiteParagraphe(Mot &motEnAttente, const int largeur);$/;"	p	signature:(Mot &motEnAttente, const int largeur)
cadrerGaucheLigne	miseEnForme.h	/^void cadrerGaucheLigne(Ligne &ligne, const ListeMots &l, const int largeur, $/;"	p	signature:(Ligne &ligne, const ListeMots &l, const int largeur, const int retrait)
cadrerGaucheParagraphe	miseEnForme.h	/^void cadrerGaucheParagraphe(Mot &motEnAttente, const int largeur, const int retrait);$/;"	p	signature:(Mot &motEnAttente, const int largeur, const int retrait)
centrerLigne	miseEnForme.h	/^void centrerLigne(Ligne &ligne, const ListeMots &l, const int largeur);$/;"	p	signature:(Ligne &ligne, const ListeMots &l, const int largeur)
centrerParagraphe	miseEnForme.h	/^void centrerParagraphe(Mot &motEnAttente, const int largeur);$/;"	p	signature:(Mot &motEnAttente, const int largeur)
ch	miseEnForme.h	/^    TabCaracteres ch;$/;"	m	struct:Ligne	access:public
ch	miseEnForme.h	/^    TabCaracteres ch;$/;"	m	struct:Mot	access:public
constructionBalise	miseEnForme.h	/^Balise constructionBalise(const Mot &mot);$/;"	p	signature:(const Mot &mot)
ecrireLigne	miseEnForme.h	/^void ecrireLigne(const Ligne &ligne);$/;"	p	signature:(const Ligne &ligne)
estBlanc	miseEnForme.h	/^bool estBlanc(const char c);$/;"	p	signature:(const char c)
estUneBalise	miseEnForme.h	/^bool estUneBalise(const Mot &mot);$/;"	p	signature:(const Mot &mot)
justifierLigne	miseEnForme.h	/^void justifierLigne(Ligne &ligne, const ListeMots &l, const int largeur, $/;"	p	signature:(Ligne &ligne, const ListeMots &l, const int largeur, const int retrait)
justifierParagraphe	miseEnForme.h	/^void justifierParagraphe(Mot &motEnAttente, const int largeur, const int retrait);$/;"	p	signature:(Mot &motEnAttente, const int largeur, const int retrait)
largeur	miseEnForme.h	/^    int largeur;$/;"	m	struct:Balise	access:public
lg	miseEnForme.h	/^    int lg;$/;"	m	struct:Ligne	access:public
lg	miseEnForme.h	/^    int lg;$/;"	m	struct:Mot	access:public
lireMot	miseEnForme.h	/^void lireMot(Mot &mot);$/;"	p	signature:(Mot &mot)
main	client.cpp	/^int main(void)$/;"	f	signature:(void)
mettreEnForme	client.cpp	/^void mettreEnForme(char name[]) ;$/;"	p	file:	signature:(char name[])
mettreEnForme	client.cpp	/^void mettreEnForme(char name[]) {$/;"	f	signature:(char name[])
mots	miseEnForme.h	/^    TabMots mots;$/;"	m	struct:ListeMots	access:public
nbCaracteres	miseEnForme.h	/^    int nbCaracteres; \/\/ nombre total de caracteres des mots de la liste$/;"	m	struct:ListeMots	access:public
nbMots	miseEnForme.h	/^    int nbMots;$/;"	m	struct:ListeMots	access:public
recopierBlancs	miseEnForme.h	/^void recopierBlancs(Ligne &ligne, const int nbBlancs);$/;"	p	signature:(Ligne &ligne, const int nbBlancs)
recopierMots	miseEnForme.h	/^void recopierMots(Ligne &ligne, const ListeMots &l, const int nbBlancs);$/;"	p	signature:(Ligne &ligne, const ListeMots &l, const int nbBlancs)
recopierUnMot	miseEnForme.h	/^void recopierUnMot(Ligne &ligne, const Mot &mot);$/;"	p	signature:(Ligne &ligne, const Mot &mot)
remplirListeDeMots	miseEnForme.h	/^void remplirListeDeMots(ListeMots &l, Mot &motEnAttente, $/;"	p	signature:(ListeMots &l, Mot &motEnAttente, const int largeurLigne)
retrait	miseEnForme.h	/^    int retrait;$/;"	m	struct:Balise	access:public
traiterParagraphe	miseEnForme.h	/^void traiterParagraphe(Mot &motEnAttente);$/;"	p	signature:(Mot &motEnAttente)
valeur	miseEnForme.h	/^int valeur(const char c);$/;"	p	signature:(const char c)
