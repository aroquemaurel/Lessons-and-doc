importer entréeSortie, cribleEratosthène;

--type Ruban : tableau [1 à 250] de <Entier>;

-- Pose un jeton sur la case de rang i du ruban rub ; si celle-ci est occupée l'opération est sans effet.
procédure poser (màj rub <Ruban>, entrée i <Entier>)
début
    rub[i] <- 1 ;
fin 

-- Enleve un jeton sur la case de rang i du ruban rub ; si celle-ci est vide l'opération est sans effet.
procédure enlever (màj rub <Ruban>, entrée i <Entier>)
début
    rub[i] <- -1 ; 
fin

-- retourne VRAI si la case ne contient pas de jeton et FAUX sinon.
fonction estLibre (entrée rub <Ruban>, entrée i <Entier>) retourne <Booléen>
glossaire
    retour <Booléen>;
début
    si (rub[i] = 1) alors
        retour <- FAUX;
    sinon
        retour <- VRAI;
    fin si;
    retourner  (retour);
fin

fonction nouveauRuban retourne <Ruban>
glossaire
    retour <Ruban>;
    i <Entier>;
début
    i <- 1;
    tantque i <=250 faire
        retour[i] <- 0;
        i <- i+1;
    fin tantque;
    retourner (retour);
fin

-- Affiche un ruban Ã  l'écran. Affiche un . si la case est vide et * si la case contient un jeton.
procédure afficherRuban (entrée rub <Ruban>) 
glossaire
    i <Entier>;
début
    écrirenl;
    si (rub[1] /= 1) et (rub[1] /= -1) alors
        écrirenl ("Attention : Ruban non initialise...");
    fin si;
    i <- 1;
    tantque (i <= 250) et ((rub[i] = 1) ou (rub[i] = -1)) faire
        si (estLibre(rub,i)) alors
            écrire (".");
        sinon
            écrire ("*");
        fin si;    
        i <- i + 1;   
    fin tantque ;
    écrirenl;
fin
