<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0069)http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1 -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link rel="stylesheet" type="text/css" href="./Langage Python_files/widget53.css" media="all">

        


        
        <meta name="keywords" content="tutoriels, concernant, programmation, python">
        <meta name="description" content="Tutoriels concernant la programmation en Python">
        <meta name="robots" content="index,follow">
        <meta name="verify-v1" content="UL/4+QUCNTv1xBkNcC4sv4EjPUAoVj1yE+fMZClqLsc=">

        <title>
            Langage Python
        </title>

        <link rel="shortcut icon" type="image/x-icon" href="http://www.siteduzero.com/Templates/images/designs/2/favicon.ico">
        <link rel="alternate" type="application/rss+xml" title="News du Site du Zéro" href="http://www.siteduzero.com/Templates/xml/news_fr.xml">
        
        <link rel="alternate" type="application/rss+xml" title="Derniers tutoriels du Site du Zéro" href="http://www.siteduzero.com/Templates/xml/tutoriels_fr.xml">
        

        <link rel="index" href="http://www.siteduzero.com/plan.html">
        <link rel="start" title="Accueil" href="http://www.siteduzero.com/">
        <link rel="search" type="application/opensearchdescription+xml" title="Site Du Zero" href="http://www.siteduzero.com/Templates/xml/xpi/fr/siteduzero.xpi">
        <link rel="search" href="http://www.siteduzero.com/recherche.html" title="Rechercher">
        <link rel="help" title="Accessibilité" href="http://www.siteduzero.com/accessibilite.html">
        <link rel="accesskeys" title="Raccourcis et Accesskeys" href="http://www.siteduzero.com/accessibilite.html">


        <link href="./Langage Python_files/design.min.css" rel="stylesheet" type="text/css" media="screen, handheld, tv, projection">
        <link href="./Langage Python_files/zcode.min.css" rel="stylesheet" type="text/css" media="screen, handheld, tv, projection">
        <link href="./Langage Python_files/impression.min.css" rel="stylesheet" type="text/css" media="print">


        

        

        <!--[if lt IE 8]>
            <link href="/css/ie_old.min.css?1299748133" rel="stylesheet" type="text/css" media="screen" />
        <![endif]-->

        
            <script type="text/javascript" async="" src="./Langage Python_files/ga.js"></script><script type="text/javascript">
                document.write('<style type="text/css">');
                document.write('.spoiler3{visibility: hidden;}');           // cache le contenu
                document.write('.spoiler3_hidden{display: none;}');         // ferme le cadre "secret"

                document.write('.spoiler_hidden a{visibility: visible;}');  // montre le lien pour afficher le contenu
                document.write('.spoiler a{visibility: visible;');          // montre le lien pour afficher le contenu
                document.write('</style>');
            </script><style type="text/css">.spoiler3{visibility: hidden;}.spoiler3_hidden{display: none;}.spoiler_hidden a{visibility: visible;}.spoiler a{visibility: visible;</style>
        
        <!--
        
            <style type="text/css">
                .spoiler3
                {
                        visibility: hidden;
                }
                .spoiler3_hidden
                {
                        display: none;
                }
            </style>
        
        -->
        
        <script type="text/javascript" src="./Langage Python_files/jquery.min.js"></script>
        <script type="text/javascript" src="./Langage Python_files/jqueryui.min.js"></script>
    </head>

    <body><div style="visibility: hidden; height: 1px; width: 1px; position: absolute; z-index: 100000; " id="_atssh"><iframe id="_atssh602" style="height: 1px; width: 1px; position: absolute; z-index: 100000; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; left: 0px; top: 0px; " src="./Langage Python_files/sh33.htm"></iframe></div>
		
            <div id="acces_rapide">
                <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#menu">Aller au menu</a> - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#corps">Aller au contenu</a>
            </div>

            <div id="top">
                <ul class="intersites">
                    
                    <li class="selected"><a href="http://www.siteduzero.com/">Informatique</a></li>
                    <li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" id="bientot_lien">Bientôt...</a></li>
                </ul>

		<ul class="stats_sites">
                    
                    <li class="last_items"><a href="http://www.siteduzero.com/connectes.html">3 261 Zéros connectés</a> - </li>
                    <li class="last_items"><a href="http://www.siteduzero.com/membres-292.html">231 101 Membres inscrits</a></li>
		</ul>
            </div>

            <div id="header">
                <div class="header_gauche">
                    <a href="http://www.siteduzero.com/"><img src="./Langage Python_files/logo_sdz_fr.png" alt=""></a>
                </div>

                <div class="header_droit">
                    <div class="fr">
                        <div id="logbox">
                            
                                <div class="bloc_inscription">
                                    <a href="http://www.siteduzero.com/membres-315.html">
                                        <strong class="liens_invites">Inscription</strong><br>
                                        Inscription rapide en 2 minutes
                                    </a>
                                </div>
                                <div class="bloc_connexion">
                                    <a href="http://www.siteduzero.com/connexion.html">
                                        <strong class="liens_invites">Connexion</strong><br>
                                        Utilisez votre compte
                                    </a>
                                    <a class="rpxnow" onclick="return false;" href="https://site-du-zero.rpxnow.com/openid/v2/signin?token_url=http%3A%2F%2Fwww.siteduzero.com%2Fmembres-348-1.html%3Freferer%3Dtutoriel-3-278227-langage-python.html%3Fall%3D1"><img src="./Langage Python_files/rpx_icons.png" alt="connexion_rpx"></a>
                                    <script type="text/javascript">
                                        var rpxJsHost = (("https:" == document.location.protocol) ? "https://" : "http://static.");
                                        document.write(unescape("%3Cscript src='" + rpxJsHost +
                                        "rpxnow.com/js/lib/rpx.js' type='text/javascript'%3E%3C/script%3E"));
                                    </script><script src="./Langage Python_files/rpx.js" type="text/javascript"></script>
                                    <script type="text/javascript">
                                        RPXNOW.overlay = true;
                                        RPXNOW.language_preference = 'fr';
                                    </script>
                                </div>
                            
                        </div>

                        
                    </div>

                    <div id="publicite_header">
                        <div id="publicite_banniere" class="publicite">
                            <script type="text/javascript">
                                <!--
                                ord=Math.random();
                                ord=ord*10000000000000000000;
                                document.write('<scr'+'ipt type="text/javascript" src="pub.js.php?cb='+ord+'&amp;l=468&amp;h=60&amp;age=0&amp;pays=0&amp;cid=196"><\/scr'+'ipt>');
                                -->
                            </script><script type="text/javascript" src="./Langage Python_files/pub.js.php"></script>
                        </div>

                    </div>
                    </div>
                </div>

                    <div id="speedbarre">
                            <ul class="smenu">
                                <li id="speed_accueil" class="home">
                                    <a href="http://www.siteduzero.com/" accesskey="1" class="">
                                        <span title="Accueil">Accueil</span>
                                    </a>
                                </li>
                                
                                <li id="speed_cours" class="">
                                    <a href="http://www.siteduzero.com/tutoriel.html" class="">
                                        <span>Cours</span>
                                    </a>
                                    <span class="speedbarre_arrow"></span>
                                </li>
                                <li id="speed_forum" class="">
                                    <a href="http://www.siteduzero.com/forum.html" class="">
                                        <span>Forums</span>
                                    </a>
                                    <span class="speedbarre_arrow"></span>
                                </li>
                                
                                    <li id="speed_concours" class="">
                                        <a href="http://www.siteduzero.com/participez.html" class="">
                                            <span>Participez</span>
                                        </a>
                                        <span class="speedbarre_arrow"></span>
                                    </li>
                                    <li id="speed_etudes" class="">
                                        <a href="http://www.siteduzero.com/etudes.html" class="last_item">
                                            <span>Études</span>
                                        </a>
                                        <span class="speedbarre_arrow"></span>
                                    </li>
                                    <li id="speed_job" class="">
                                        <a href="http://www.siteduzero.com/emploi.html" class="last_item">
                                            <span>Emploi</span>
                                        </a>
                                        <span class="speedbarre_arrow"></span>
                                    </li>

                                    <li id="speed_boutique" class="">
                                    <a href="http://www.siteduzero.com/boutique.html" class="last_item">
                                            <span>Boutique</span>
                                        </a>
                                        <span class="speedbarre_arrow"></span>
                                    </li>
                                
                            </ul>

                            <div id="speedbar_expand" class="menuh" style="display: none; ">
                                <div class="menuh_content">
                                    <div id="menuh_tutorials" style="display: none; ">
                                        

                                        <div id="menu_tutorials">
                                            <div class="menu_prim">
                                                <h5>Les cours phares</h5>
                                                <div class="menuh_list_category">
                                                    <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-67-site-web.html"><img src="./Langage Python_files/67.png" alt=""></a></div>
                                                    <h6><a href="http://www.siteduzero.com/tutoriel-1-67-site-web.html"><strong>Site Web</strong></a></h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-13666-apprenez-a-creer-votre-site-web.html"><span style="display:block">XHTML / CSS</span></a></li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-309961-dynamisez-vos-sites-web-avec-javascript.html">Javascript</a></li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-14668-concevez-votre-site-web-avec-php-et-mysql.html">PHP / MySQL</a>
                                                            <a href="http://www.siteduzero.com/boutique-614-107-concevez-votre-site-web-avec-php-et-mysql.html">
                                                                <span class="in_book"><img src="./Langage Python_files/ico_livre.png" alt=""></span>
                                                                <span style="display:none">Ce cours existe en livre :<br>Concevez votre site web avec PHP et MySQL</span>
                                                            </a>
                                                        </li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-112219-apprenez-a-creer-des-applications-web-dynamiques-avec-jee.html">Java EE (J2EE)</a></li>
                                                    </ul>
                                                </div>

                                                <div class="menuh_list_category">
                                                    <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html"><img src="./Langage Python_files/57.png" alt=""></a></div>
                                                    <h6><a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html"><strong>Programmation</strong></a></h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-14189-apprenez-a-programmer-en-c.html">Langage C</a>
                                                            <a href="http://www.siteduzero.com/boutique-614-65-apprenez-a-programmer-en-c.html">
                                                                <span class="in_book"><img src="./Langage Python_files/ico_livre.png" alt=""></span>
                                                                <span style="display:none">Ce cours existe en livre :<br>Apprenez à programmer en C</span>
                                                            </a>
                                                        </li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-11406-apprenez-a-programmer-en-c.html">Langage C++</a></li>
                                                        <li>
                                                            <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html">
                                                                Java
                                                            </a>
                                                            <a href="http://server1.evonia.fr/tracking/ads_stats2-32325f35385f323533__77c00fc1a6__2748__2-0/http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html">
                                                                <span class="in_book"><img src="./Langage Python_files/ico_livre_preco.png" alt=""></span>
                                                                <span style="display:none">Ce livre est en précommande :<br>Apprenez à programmer en Java</span>
                                                            </a>
                                                        </li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-119239-programmation-en-java-api.html">Java (API)</a></li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-223267-apprendre-python.html">Python</a></li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-134798-visual_basic_net.html">VB .NET </a></li>
                                                    </ul>
                                                </div>


                                                <div class="menuh_list_category">
                                                    <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-60-systemes-d-exploitation.html"><img src="./Langage Python_files/60.png" alt=""></a></div>
                                                    <h6><a href="http://www.siteduzero.com/tutoriel-1-60-systemes-d-exploitation.html"><strong>Systèmes d'exploitation</strong></a></h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-12827-reprenez-le-controle-a-l-aide-de-linux.html">Linux</a>
                                                            <a href="http://www.siteduzero.com/boutique-614-171-reprenez-le-controle-a-l-aide-de-linux.html">
                                                                <span class="in_book"><img src="./Langage Python_files/ico_livre.png" alt=""></span>
                                                                <span style="display:none">Ce cours existe en livre :<br>Reprenez le contrôle a l'aide de Linux</span>
                                                            </a>
                                                        </li>                                                    
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-273305-freebsd-et-l-envers-du-decor.html">FreeBSD</a></li>
                                                    </ul>
                                                </div>

                                                <div class="menuh_list_category">
                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-56-graphisme.html"><img src="./Langage Python_files/56.png" alt=""></a></div>
                                                    <h6><a href="http://www.siteduzero.com/tutoriel-1-56-graphisme.html"><strong>Graphisme</strong></a></h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-351765-debuter-sur-adobe-photoshop.html">Photoshop</a></li>
                                                    </ul>
                                                </div>

                                                <div class="menuh_list_category">
                                                    <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-58-infographie-3d.html"><img src="./Langage Python_files/58.png" alt=""></a></div>
                                                    <h6><a href="http://www.siteduzero.com/tutoriel-1-58-infographie-3d.html"><strong>Infographie 3D</strong></a></h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-11714-debutez-dans-la-3d-avec-blender.html">Blender</a></li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-228998-apprenez-a-modeliser-en-3d-avec-autodesk-maya.html">Maya </a></li>
                                                    </ul>
                                                </div>

                                                <div class="menuh_list_category">
                                                    <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-55-bureautique.html"><img src="./Langage Python_files/55.png" alt=""></a></div>
                                                    <h6><a href="http://www.siteduzero.com/tutoriel-1-55-bureautique.html"><strong>Bureautique</strong></a></h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-258577-redigez-des-documents-de-qualite-professionnelle-avec-latex.html">LaTeX</a>
                                                            <a href="http://www.siteduzero.com/boutique-614-207-redigez-des-documents-de-qualite-professionnelle-avec-latex.html">
                                                                <span class="in_book"><img src="./Langage Python_files/ico_livre.png" alt=""></span>
                                                                <span style="display:none">Ce cours existe en livre :<br>Rédigez des documents de qualité avec LaTeX</span>
                                                            </a>
                                                        </li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-417000-redigez-facilement-des-documents-avec-word.html">Word<img style="margin-left: 10px;" alt="" src="./Langage Python_files/iconouveau.png"></a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                            
                                            <div class="menu_princi menuhcattuto ">
                                                <h5>Tous les cours par catégories</h5>
                                                <div class="menuh_princi_col">
                                                    
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-67-site-web.html"><img src="./Langage Python_files/67.png" alt=""></a></div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-67-site-web.html">Site Web <span style="font-weight:normal;">(206 Cours)</span></a></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-69-xhtml-css.html">XHTML / CSS</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-1-210-php.html">PHP</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-71-divers.html">Divers</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-73-forums.html">Forums</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-77-hebergement.html">Hébergement</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-70-javascript.html">Javascript</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-74-serveur.html">Serveur</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-309-ide.html">IDE</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-60-systemes-d-exploitation.html"><img src="./Langage Python_files/60.png" alt=""></a></div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-60-systemes-d-exploitation.html">Systèmes d'exploitation <span style="font-weight:normal;">(96 Cours)</span></a></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-96-linux.html">Linux</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-147-macos.html">MacOS</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-1-97-windows.html">Windows</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-408-bsd.html">BSD</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-54-mapping.html"><img src="./Langage Python_files/54.png" alt=""></a></div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-54-mapping.html">Mapping <span style="font-weight:normal;">(31 Cours)</span></a></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-63-half-life.html">Half-Life</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-66-half-life.html">Half-Life²</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-173-warcraft.html">Warcraft</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-188-autres.html">Autres</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-55-bureautique.html"><img src="./Langage Python_files/55.png" alt=""></a></div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-55-bureautique.html">Bureautique <span style="font-weight:normal;">(29 Cours)</span></a></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-1-290-microsoft-office.html">Microsoft Office</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-1-291-openoffice-org.html">OpenOffice.org</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-87-firefox.html">Firefox</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-195-irc.html">IRC</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-192-divers.html">Divers</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-59-jeux-video.html"><img src="./Langage Python_files/59.png" alt=""></a></div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-59-jeux-video.html">Jeux Vidéo <span style="font-weight:normal;">(22 Cours)</span></a></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-102-hl-ses-mods.html">HL &amp; ses mods</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-185-autres-jeux.html">Autres jeux</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-61-materiel.html"><img src="./Langage Python_files/61.png" alt=""></a></div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-61-materiel.html">Matériel <span style="font-weight:normal;">(11 Cours)</span></a></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-101-general.html">Général</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        

                                                    <div class="menuh_list_category">
                                                        <div class="ico"><img src="./Langage Python_files/tuto_cat_thb.png" alt=""></div>
                                                        <h6>Autres</h6>
                                                        <ul>
                                                            
                                                                <li>
                                                                    <a style="display:block" href="http://www.siteduzero.com/tutoriel-2-404-bases-de-donnees.html">Bases de données</a>
                                                                </li>
                                                            
                                                                <li>
                                                                    <a style="display:block" href="http://www.siteduzero.com/tutoriel-2-403-mobiles.html">Mobiles</a>
                                                                </li>
                                                            
                                                                <li>
                                                                    <a style="display:block" href="http://www.siteduzero.com/tutoriel-2-141-site-du-zero.html">Site du Zéro</a>
                                                                </li>
                                                            
                                                        </ul>
                                                    </div>
                                                </div>

                                                <div class="menuh_princi_col">
                                                    
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html">
                                                                    <img src="./Langage Python_files/57.png" alt=""></a>
                                                                </div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html">Programmation</a> <span style="font-weight:normal;">(244 Cours)</span></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-91-as-flash-flex.html">AS / Flash / Flex</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-217-algorithmique.html">Algorithmique</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-254-basic-et-derives.html">Basic et dérivés</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-1-344-bibliotheques.html">Bibliothèques</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-262-c.html">C</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-261-c.html">C++</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-201-c-net.html">C# / .NET</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-1-258-calculatrices.html">Calculatrices</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-242-ide.html">IDE</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-336-erlang.html">Erlang</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-227-general.html">Général</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-178-java.html">Java</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-93-mirc.html">mIRC</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-196-python.html">Python</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-355-caml-ocaml.html">Caml / OCaml</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-386-cocoa-objective-c.html">Cocoa / Objective-C</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-253-autres-langages.html">Autres langages</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-56-graphisme.html">
                                                                    <img src="./Langage Python_files/56.png" alt=""></a>
                                                                </div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-56-graphisme.html">Graphisme</a> <span style="font-weight:normal;">(27 Cours)</span></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-176-dessin.html">Dessin</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-177-divers.html">Divers</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-79-flash.html">Flash</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-157-gimp.html">Gimp</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-153-dessin-vectoriel.html">Dessin vectoriel</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-190-photofiltre.html">PhotoFiltre</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-78-photoshop.html">Photoshop</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-197-pov-ray.html">POV-Ray</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-58-infographie-3d.html">
                                                                    <img src="./Langage Python_files/58.png" alt=""></a>
                                                                </div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-58-infographie-3d.html">Infographie 3D</a> <span style="font-weight:normal;">(25 Cours)</span></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-95-3d-studio-max.html">3D Studio Max</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-152-blender.html">Blender</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-296-maya.html">Maya</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-62-multimedia.html">
                                                                    <img src="./Langage Python_files/62.png" alt=""></a>
                                                                </div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-62-multimedia.html">Multimédia</a> <span style="font-weight:normal;">(24 Cours)</span></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-99-audio.html">Audio</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-100-video.html">Vidéo</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-382-after-effects.html">After Effects</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-182-reseaux.html">
                                                                    <img src="./Langage Python_files/182.png" alt=""></a>
                                                                </div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-182-reseaux.html">Réseaux</a> <span style="font-weight:normal;">(18 Cours)</span></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-183-general.html">Général</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-189-securite.html">Sécurité</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        

                                                    <div class="menuh_list_category">
                                                        <div id="create_tutorials_button">
                                                            
                                                                <div><a href="http://www.siteduzero.com/connexion.html"><img src="./Langage Python_files/redigercours.png" alt=""></a></div>
                                                            
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clear"></div>
                                            </div>
                                            <div class="clear"></div>
                                        </div>
                                    </div>
                                    
                                    <div id="menuh_forum" style="display: none; ">
                                        <div class="menu_princi">
                                            <a class="button_all_forums" href="http://www.siteduzero.com/forum.html">Accueil des forums</a>
                                            <div class="menuh_princi_col">
                                                
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-121-site-web.html"><img src="./Langage Python_files/121.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-121-site-web.html">Site Web</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-122-xhtml-css.html">XHTML / CSS</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-338-javascript.html">Javascript</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-123-php.html">PHP</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-128-mapping.html"><img src="./Langage Python_files/128.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-128-mapping.html">Mapping</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-129-goldsource-hl1.html">GoldSource (HL1)</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-130-source-hl2.html">Source (HL2)</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-24-communaute-des-zeros.html"><img src="./Langage Python_files/24.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-24-communaute-des-zeros.html">Communauté des zéros</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-28-discussions-generales.html">Discussions générales</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-278-vos-etudes.html">Vos études</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-239-presentation-de-vos-projets.html">Présentation de vos projets</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-200-recrutements-pour-vos-projets.html">Recrutements pour vos projets</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-440-sciences.html"><img src="./Langage Python_files/440.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-440-sciences.html">Sciences</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-441-mathematiques.html">Mathématiques</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-442-physique-chimie.html">Physique - Chimie</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-443-biologie-et-geologie.html">Biologie et Géologie</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-444-autres-sciences.html">Autres sciences</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                            </div>

                                            <div class="menuh_princi_col">
                                                
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-125-programmation.html"><img src="./Langage Python_files/125.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-125-programmation.html">Programmation</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-126-langage-c.html">Langage C</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-237-langage-c.html">Langage C++</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-305-langage-java.html">Langage Java</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-407-langage-python.html">Langage Python</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-406-bases-de-donnees.html">Bases de données</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-127-autres-langages-outils-et-approches.html">Autres langages, outils et approches</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-219-materiel-et-logiciels.html"><img src="./Langage Python_files/219.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-219-materiel-et-logiciels.html">Matériel et logiciels</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-339-discussions-informatiques.html">Discussions informatiques</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-220-linux-mac-et-bsd.html">Linux, Mac et *BSD</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-221-windows.html">Windows</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-116-jeux-video.html">Jeux vidéo</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-117-graphisme.html">Graphisme</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-223-materiel.html">Matériel</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-310-concours.html"><img src="./Langage Python_files/310.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-310-concours.html">Concours</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-435-innov-game-2011-a-la-gloire-de.html">Innov'Game 2011 : A la gloire de</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-447-atelier-de-noel-faites-votre-jeu.html">Atelier de noël : "Faites votre jeu"</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-143-le-site-du-zero.html"><img src="./Langage Python_files/143.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-143-le-site-du-zero.html">Le Site du Zéro</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-144-suggestions-et-commentaires.html">Suggestions et Commentaires</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-145-designs-du-site-du-zero.html">Designs du Site du Zéro</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-429-tutoriels-du-site-du-zero.html">Tutoriels du Site du Zéro</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                            </div>
                                        </div>

                                        
                                    <div class="clear"></div>
                                    </div>
                                    <div id="menuh_collaborate" style="display: none; ">
                                        <div class="menuh_list_category">
                                            
                                                <div class="ico"><a href="http://www.siteduzero.com/membres-315.html"><img src="./Langage Python_files/tuto_cat_thb.png" alt=""></a></div>
                                                <h6><a href="http://www.siteduzero.com/membres-315.html">Cours</a></h6>
                                                <ul>
                                                    <li style="font-style:italic;">Pour rédiger et participer à la rédaction d'un tutoriel, <a style="display:inline; font-style:normal" href="http://www.siteduzero.com/membres-315.html">rejoignez-nous !</a></li>
                                                </ul>
                                            
                                        </div>

                                        <div class="menuh_list_category">
                                            
                                                <div class="ico"><a href="http://www.siteduzero.com/membres-315.html"><img src="./Langage Python_files/defaut_thb.png" alt=""></a></div>
                                                <h6><a href="http://www.siteduzero.com/membres-315.html">News</a></h6>
                                                <ul>
                                                    <li style="font-style:italic;">Pour partager ou participer à la rédaction d'une news, <a style="display:inline; font-style:normal" href="http://www.siteduzero.com/membres-315.html"> rejoignez-nous !</a></li>
                                                </ul>
                                            
                                        </div>

                                        <div class="menuh_list_category">
                                            <div class="ico"><a href="http://www.siteduzero.com/concours.html"><img src="./Langage Python_files/cup_thb.png" alt=""></a></div>
                                            <h6><a href="http://www.siteduzero.com/concours.html">Concours</a></h6>
                                            <ul>
                                                
                                                        <li><a href="http://www.siteduzero.com/concours-654-122-innov-game-2011-a-la-gloire-de.html">Innov'Game 2011 : A la gloire de</a></li>
                                                    
                                            </ul>
                                        </div>
                                        <div class="clear"></div>
                                    </div>


                                    <div id="menuh_job" style="display: none; ">
                                        <div class="menu_princi">
                                            <div class="menuh_princi_col">
                                                <div class="menuh_list_category">
                                                    <h6>Dernières annonces</h6>
                                                    <div class="menuh_list_category_job">
                                                        
                                                            <a title="Consulter le poste : Développeur C/C++ (H/F)" href="http://www.siteduzero.com/emploi/78/developpeur-c-c" class="corpsmenu">
                                                                <span class="last_jobs">
                                                                    <span title="CDD" class="job_type jobtypes2">CDD</span>
                                                                </span>
                                                                <span>
                                                                    <span class="job_title">Développeur C/C++ (H/F)</span>
                                                                    <span style="color:#000000;">AYOTLE</span>
                                                                </span>
                                                            </a>
                                                        
                                                            <a title="Consulter le poste : Développeur web asp.net/aja…" href="http://www.siteduzero.com/emploi/77/developpeur-web-asp-net-ajax-xhtml" class="corpsmenu">
                                                                <span class="last_jobs">
                                                                    <span title="Stage" class="job_type jobtypes3">Stage</span>
                                                                </span>
                                                                <span>
                                                                    <span class="job_title">Développeur web asp.net/aja…</span>
                                                                    <span style="color:#000000;">Citizenside.com</span>
                                                                </span>
                                                            </a>
                                                        
                                                            <a title="Consulter le poste : Ingénieur logiciel C++ (H/F…" href="http://www.siteduzero.com/emploi/3/ingenieur-logiciel-c" class="corpsmenu">
                                                                <span class="last_jobs">
                                                                    <span title="Stage" class="job_type jobtypes3">Stage</span> <span title="CDI" class="job_type jobtypes1">CDI</span>
                                                                </span>
                                                                <span>
                                                                    <span class="job_title">Ingénieur logiciel C++ (H/F…</span>
                                                                    <span style="color:#000000;">FACTSET JCF</span>
                                                                </span>
                                                            </a>
                                                        
                                                    </div>
                                                </div>
                                            </div>
                                                
                                                <div class="menuh_princi_col">
                                                    
                                                        <div class="menuh_list_category">
                                                            <h6>Annonces à la une</h6>
                                                            <div class="menuh_list_category_job">
                                                                
                                                                    <a title="Consulter le poste : 5 Développeurs Java (H/F)" href="http://www.siteduzero.com/emploi/63/5-developpeurs-java" class="corpsmenu">

                                                                        <span class="last_jobs">
                                                                            <span title="CDI" class="job_type jobtypes1">CDI</span>
                                                                        </span>
                                                                        <span>
                                                                            <span class="job_title">5 Développeurs Java (H/F)</span>
                                                                            <span style="color:#000000;">Small iz beautiful pour AIRP…</span>
                                                                        </span>
                                                                    </a>
                                                                
                                                                    <a title="Consulter le poste : Développeur PHP Symfony (H/…" href="http://www.siteduzero.com/emploi/58/developpeur-php-symfony" class="corpsmenu">

                                                                        <span class="last_jobs">
                                                                            <span title="CDI" class="job_type jobtypes1">CDI</span>
                                                                        </span>
                                                                        <span>
                                                                            <span class="job_title">Développeur PHP Symfony (H/…</span>
                                                                            <span style="color:#000000;">Externis Resourcing</span>
                                                                        </span>
                                                                    </a>
                                                                
                                                            </div>
                                                        </div>
                                                      
                                                    <div class="menuh_list_category">
                                                        <div>
                                                            <div><a href="http://www.siteduzero.com/emploi.html"><img src="./Langage Python_files/speed_barre_btn_recherche_emploi.png" alt=""></a></div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="menuh_more2">
                                                        <a href="http://www.siteduzero.com/emploi/liste.html">Toutes les annonces<img src="./Langage Python_files/fleche_droite.png" alt="►"></a>
                                                </div>
                                            </div>
                                        <div class="clear"></div>
                                    </div>

                                    <div id="menuh_study" style="padding-left: 15px; display: none; ">
                                        <div class="menu_princi">
                                            <div class="ico_study"><img src="./Langage Python_files/ico_etude.png" width="50" alt="icon etude"></div>
                                            <div class="menuh_princi_col">
                                                <div class="menuh_list_category">
                                                    <h6>Recrutement à Bac / Bac +1</h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-280-bts.html">BTS</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-269-ecoles-d-ing%C3%A9nieurs-en-informatique.html">Ecoles d'ingénieurs en informatique</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-274-ecoles-d-ing%C3%A9nieurs-generalistes.html">Ecoles d'ingénieurs généralistes</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-283-iut.html">IUT</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-300-universites.html">Universités</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-287-autre-formation-diplomantes.html">Autres formations diplômantes</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-448-cpge.html">CPGE</a></li>
                                                    </ul>
                                                </div>

                                                <div class="menuh_list_category">
                                                    <h6>Recrutement à Bac +2</h6>
                                                    <ul>
                                                       <li><a href="http://www.siteduzero.com/etudes-550-270-ecoles-d-ing%C3%A9nieurs-en-informatique.html">Ecoles d'ingénieurs en informatique</a></li>
                                                       <li><a href="http://www.siteduzero.com/etudes-550-273-ecoles-d-ing%C3%A9nieurs-generalistes.html">Ecoles d'ingénieurs généralistes</a></li>
                                                       <li><a href="http://www.siteduzero.com/etudes-550-289-autre-formation-diplomantes.html">Autres formations diplômantes</a></li>
                                                    </ul>
                                                </div>
                                            </div>

                                            <div class="menuh_princi_col">
                                                <div class="menuh_list_category">
                                                    <h6>Recrutement à Bac +3 / Bac +4</h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-388-ecoles-d-ing%C3%A9nieurs-en-informatique.html">Ecoles d'ingénieurs en informatique</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-389-ecoles-d-ing%C3%A9nieurs-generalistes.html">Ecoles d'ingénieurs généralistes</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-390-autre-formation-diplomantes.html">Autres formations diplômantes</a></li>
                                                    </ul>
                                                </div>

                                                <div class="menuh_list_category">
                                                    <h6>Recrutement à Bac +5</h6>
                                                    <ul>
                                                       <li><a href="http://www.siteduzero.com/etudes-550-299-doctorats.html">Doctorats</a></li>
                                                       <li><a href="http://www.siteduzero.com/etudes-550-391-autre-formation-diplomantes.html">Autres formations diplômantes</a></li>
                                                    </ul>
                                                    <div class="menuh_list_category">
                                                        <div id="find_training">
                                                            <div><a href="http://www.siteduzero.com/etudes.html"><img src="./Langage Python_files/ico_recherche_cours.png" alt=""><strong>Trouvez une formation</strong></a></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="clear"></div>
                                    </div>

                                    <div id="menuh_shop" style="display: none; ">
                                        <div class="flagship_products headband_preorder">
                                            <a style="display:block;height:144px;" href="http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html"><img src="./Langage Python_files/livre_cours_java_2d.png" alt="Apprenez à programmer en Java"></a>
                                            <h5>Apprenez à programmer en Java</h5>
                                            <div class="price" style="margin-top : 16px;">
                                                <span class="min_price">Prix de précommande</span><br>
                                                25 €
                                            </div>
                                            <span><a class="bouton_action fl" href="http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html">Acheter</a></span>
                                        </div>
                                        <div class="flagship_products">
                                            <a href="http://www.siteduzero.com/boutique-614-188-cle-usb-du-site-du-zero-8-go.html"><img src="./Langage Python_files/image_usb_speedbarre.jpg" alt="cle usb"></a>
                                            <h5>Clé USB du site du Zéro</h5>
                                            <a href="http://www.siteduzero.com/boutique-614-184-cle-usb-du-site-du-zero-4-go.html">4 Go</a>
                                            - <a href="http://www.siteduzero.com/boutique-614-188-cle-usb-du-site-du-zero-8-go.html">8 Go</a>
                                            - <a href="http://www.siteduzero.com/boutique-614-191-cle-usb-du-site-du-zero-16-go.html">16 Go</a><br>
                                            <div class="price">
                                                <span class="min_price">À partir de</span><br>
                                                15,20 €
                                            </div>
                                            <span><a class="bouton_action fl" href="http://www.siteduzero.com/boutique-614-188-cle-usb-du-site-du-zero-8-go.html">Acheter</a></span>
                                        </div>

                                    <div class="other_products">
                                        <span>Concevez votre site web avec PHP et MySQL<br>
                                        <a href="http://www.siteduzero.com/boutique-614-107-concevez-votre-site-web-avec-php-et-mysql.html">En savoir plus ►</a></span>
                                        <a href="http://www.siteduzero.com/boutique-614-107-concevez-votre-site-web-avec-php-et-mysql.html">
                                        <img style="margin:13px 0 0 22px" alt="Concevez votre site web avec php et mysql" src="./Langage Python_files/livre_cours_php_2d.png"></a>
                                    </div>

                                    <div class="other_products">
                                        <span>Apprenez à programmer en C <br>
                                        <a href="http://www.siteduzero.com/boutique-614-65-apprenez-a-programmer-en-c.html">En savoir plus ►</a></span>
                                        <a href="http://www.siteduzero.com/boutique-614-65-apprenez-a-programmer-en-c.html">
                                        <img style="margin:13px 0 0 22px" alt="Apprenez à programmer en C" src="./Langage Python_files/livre_cours_c_2d.png"></a>
                                    </div>
                                    <div class="other_products">
                                        <span>Reprenez le contrôle à l'aide de Linux <br>
                                        <a href="http://www.siteduzero.com/boutique-614-171-reprenez-le-controle-a-l-aide-de-linux.html">En savoir plus ►</a></span>
                                        <a href="http://www.siteduzero.com/boutique-614-171-reprenez-le-controle-a-l-aide-de-linux.html">
                                        <img style="margin:13px 0 0 22px" alt="Reprenez le contrôle à l&#39;aide de Linux" src="./Langage Python_files/livre_cours_linux_2d.png"></a>
                                    </div>

                                    <div class="other_products">
                                        <span>Rédigez des documents de qualité avec LaTeX<br>
                                        <a href="http://www.siteduzero.com/boutique-614-207-redigez-des-documents-de-qualite-avec-latex.html">En savoir plus ►</a></span>
                                        <a href="http://www.siteduzero.com/boutique-614-207-redigez-des-documents-de-qualite-avec-latex.html">
                                        <img style="margin:13px 0 0 22px" alt="Rédigez des documents de qualité avec LaTeX" src="./Langage Python_files/livre_cours_latex_2d.png"></a>
                                    </div>
                                      
                                    <div class="menuh_more">
                                        <a href="http://www.siteduzero.com/boutique.html">Tous les produits <img src="./Langage Python_files/fleche_droite(1).png" alt="►"></a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="search_bar">
                        <div class="ard"></div>
                        <form method="get" action="http://www.siteduzero.com/recherche.html" id="recherche">
                            <p>
                                <input type="text" name="src" id="champ_recherche" accesskey="4" value="Rechercher">
                                <select name="c" id="section_recherche">
                                    <option value="3" selected="selected">Cours</option>
                                    <option value="6">Forums</option>
                                    <option value="4">News</option>
                                    <option value="mbr">Membres</option>
                                    <option value="formation">Études</option>
                                    <option value="codeweb">Code web</option>
                                    <option value="mp">MP</option>
                                </select>
                                <input class="button_go_search" value="Go" type="submit">
                                <a class="button_more_search" href="http://www.siteduzero.com/recherche.html">+</a>
                            </p>
                        </form>
                        </div>

                    </div>

<script type="text/javascript">

    
        //On Hover

    var keyCodeEscape = 27;
    $(document).keyup(function(f) {
        if (f.keyCode == keyCodeEscape)
        {
            hideBlocMenu();
        }
    });


    /* Var for speedbar*/
    showDelay = 300;
    hiddenDelay = 367;
    fadeInDelay = 100
    fadeOutDelay = 100
    timer = null;
    hideTimeOut = null
    // speedbar function
    function speedShowDelay(){
        if($('.menuh_content > div').is(':visible'))
        {
            showDelay = null;
        }
        else
        {
            showDelay = 300;
        }
    }
    
    $("body").mouseleave(function(){
        $('.menuh_content > div').hide();
        $('#speedbarre .smenu>li a').removeClass("smenu_hover");
    });
    
    function showMenu(id, id2){

        $(id2).click(function(){
            clearInterval(timer);
            hideBlocMenu();
            return;
        });

        speedShowDelay();

        $("body").unbind('click');

        clearInterval(timer);
        if(!$(id).is(':visible'))
        {
            $('.menuh_content > div').hide();

            $('#speedbarre .smenu>li a').removeClass("smenu_hover");
            $('#speedbarre .smenu > li > .speedbarre_arrow').hide();

            timer=setInterval(function(){
                $(id+' ,#speedbar_expand').fadeIn(fadeInDelay);
                $(id2+' a').addClass('smenu_hover')
                clearInterval(timer);

                },showDelay);
        }
    }

    function hideMenu(id, id2){

        clearInterval(timer);
        clearTimeout(hideTimeOut);

        $("body").bind('click',function(){
            hideBlocMenu();
        });

        timer=setInterval(function(){
            $(id).fadeOut(fadeOutDelay,function(){
                $('#speedbar_expand').hide();
                $(id2+' a').removeClass("smenu_hover");
            });
            clearInterval(timer);
        },hiddenDelay)
    }

    function hideBlocMenu(){
        $('.menuh_content > div').fadeOut(fadeOutDelay, function(){
            $('#speedbar_expand').hide();
            $('#speedbarre .smenu>li a').removeClass("smenu_hover");})
    }

        /* speedbar */


    $("#speed_cours").addClass('hideOnLoad');
    $("#speed_forum").addClass('hideOnLoad');
    $("#speed_concours").addClass('hideOnLoad');
    $("#speed_job").addClass('hideOnLoad');
    $("#speed_etudes").addClass('hideOnLoad');
    $("#speed_boutique").addClass('hideOnLoad');



    $(document).mousemove(function(){
        $("#speed_cours").removeClass('hideOnLoad');
        $("#speed_forum").removeClass('hideOnLoad');
        $("#speed_concours").removeClass('hideOnLoad');
        $("#speed_job").removeClass('hideOnLoad');
        $("#speed_etudes").removeClass('hideOnLoad');
        $("#speed_boutique").removeClass('hideOnLoad');
    })


    //TUTORIALS
    $("#speed_cours, #menuh_tutorials").hover(function(){
        clearTimeout(hideTimeOut);
        id = '#menuh_tutorials';
        id2 = '#speed_cours';
        if(!$(id2).hasClass('hideOnLoad'))
        {
            hideTimeOut = setTimeout(function(){
                showMenu(id, id2);
            },100);
        }

    ;},function(){

        id = '#menuh_tutorials';
        id2 = '#speed_cours';
        hideMenu(id, id2);
    });
    //FORUMS
    $("#speed_forum, #menuh_forum").hover(function(){
        clearTimeout(hideTimeOut);
        id = '#menuh_forum';
        id2 = '#speed_forum';

        if(!$(id2).hasClass('hideOnLoad'))
        {
            hideTimeOut = setTimeout(function(){
                showMenu(id, id2);
            },100);
        }

    ;},function(){

        id = '#menuh_forum';
        id2 = '#speed_forum';
        hideMenu(id, id2);
    });

    //COLLABORATE
    $("#speed_concours, #menuh_collaborate").hover(function(){
        clearTimeout(hideTimeOut);
        id = '#menuh_collaborate';
        id2 = '#speed_concours';
        if(!$(id2).hasClass('hideOnLoad'))
        {
            hideTimeOut = setTimeout(function(){
                showMenu(id, id2);
            },100);
        }

    ;},function(){

        id = '#menuh_collaborate';
        id2 = '#speed_concours';
        hideMenu(id, id2);
    });

    //JOB
    $("#speed_job, #menuh_job").hover(function(){
        clearTimeout(hideTimeOut);
        id = '#menuh_job';
        id2 = '#speed_job';
        if(!$(id2).hasClass('hideOnLoad'))
        {
            hideTimeOut = setTimeout(function(){
                showMenu(id, id2);
            },100);
        }

    ;},function(){

        id = '#menuh_job';
        id2 = '#speed_job';
        hideMenu(id, id2);
    });

    //STUDY
    $("#speed_etudes, #menuh_study").hover(function(){
        clearTimeout(hideTimeOut);
        id = '#menuh_study';
        id2 = '#speed_etudes';
        if(!$(id2).hasClass('hideOnLoad'))
        {
            hideTimeOut = setTimeout(function(){
                showMenu(id, id2);
            },100);
        }

    ;},function(){

        id = '#menuh_study';
        id2 = '#speed_etudes';
        hideMenu(id, id2);
    });

    //SHOP
    $("#speed_boutique, #menuh_shop").hover(function(){
        clearTimeout(hideTimeOut);
        id = '#menuh_shop';
        id2 = '#speed_boutique';
        if(!$(id2).hasClass('hideOnLoad'))
        {
            hideTimeOut = setTimeout(function(){
                showMenu(id, id2);
            },100);
        }

    ;},function(){

        id = '#menuh_shop';
        id2 = '#speed_boutique';
        hideMenu(id, id2);
    });

    

</script>
            
            <div class="contenu">
                <div id="menu">
                    

                    <div class="box_menu">
                        <h5>Cours</h5>

                        <div class="corpsmenu">
                            <ul>
                                
                                    <li style="border-bottom: 0 none; padding: 0 0 2px 0; background-color: #e2f0ff">
                                        <a href="http://www.siteduzero.com/tutoriel-3-361996-par-ou-commencer.html"><img style="padding-left:5px;" src="./Langage Python_files/compass.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu" style="margin-left: 43px;">
                                            <a href="http://www.siteduzero.com/tutoriel-3-361996-par-ou-commencer.html"><strong class="menu_cours_section">Nouveau ?</strong></a>
                                            <ul>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-361996-par-ou-commencer.html">Suivez le guide !</a></li>
                                            </ul>
                                        </div>
                                    </li>
                                    <li>
                                        <a href="http://www.siteduzero.com/tutoriel-1-67-site-web.html"><img src="./Langage Python_files/67.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu">
                                            <a href="http://www.siteduzero.com/tutoriel-1-67-site-web.html"><strong class="menu_cours_section">Site Web</strong></a>
                                            <ul>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-13666-apprenez-a-creer-votre-site-web.html">XHTML / CSS</a></li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-309961-dynamisez-vos-sites-web-avec-javascript.html">Javascript</a></li>
                                                <li>
                                                    <a href="http://www.siteduzero.com/tutoriel-3-14668-concevez-votre-site-web-avec-php-et-mysql.html">
                                                        PHP / MySQL
                                                    </a>
                                                    <a href="http://www.siteduzero.com/boutique-614-107-concevez-votre-site-web-avec-php-et-mysql.html">
                                                        <span class="in_book"><img src="./Langage Python_files/ico_livre.png" alt=""></span>
                                                        <span style="display:none">Ce cours existe en livre :<br>Concevez votre site web avec PHP et MySQL</span>
                                                    </a>
                                                </li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-112219-apprenez-a-creer-des-applications-web-dynamiques-avec-jee.html">Java EE (J2EE)</a></li>
                                            </ul>
                                        </div>
                                    </li>
                                    <li>
                                        <a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html"><img src="./Langage Python_files/57.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu">
                                            <a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html"><strong class="menu_cours_section">Programmation</strong></a>
                                            <ul>
                                                <li>
                                                    <a href="http://www.siteduzero.com/tutoriel-3-14189-apprenez-a-programmer-en-c.html">
                                                        Langage C
                                                    </a>
                                                    <a href="http://www.siteduzero.com/boutique-614-65-apprenez-a-programmer-en-c.html">
                                                        <span class="in_book"><img src="./Langage Python_files/ico_livre.png" alt=""></span>
                                                        <span style="display:none">Ce cours existe en livre :<br>Apprenez à programmer en C</span>
                                                    </a>
                                                </li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-11406-apprenez-a-programmer-en-c.html">Langage C++</a></li>
                                                <li>
                                                    <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-Java.html">
                                                        Java
                                                    </a>
                                                        <a href="http://server1.evonia.fr/tracking/ads_stats2-32325f35385f323533__77c00fc1a6__2748__2-0/http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html">
                                                        <span class="in_book"><img src="./Langage Python_files/ico_livre_preco.png" alt=""></span>
                                                        <span style="display:none">Ce livre est en précommande :<br>Apprenez à programmer en Java</span>
                                                    </a>
                                                </li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-119239-programmation-en-java-api.html">Java (API)</a></li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-223267-apprendre-python.html">Python </a></li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-134798-visual_basic_net.html">VB .NET</a></li>
                                            </ul>
                                        </div>
                                    </li>
                                    <li>                                        
                                        <a href="http://www.siteduzero.com/tutoriel-1-60-systemes-d-exploitation.html"><img src="./Langage Python_files/60.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu">
                                            <a href="http://www.siteduzero.com/tutoriel-1-60-systemes-d-exploitation.html"><strong class="menu_cours_section">Systèmes d'exploitation</strong></a>
                                            <ul>
                                                <li>
                                                    <a href="http://www.siteduzero.com/tutoriel-3-12827-reprenez-le-controle-a-l-aide-de-linux.html">
                                                        Linux
                                                    </a>
                                                    <a href="http://www.siteduzero.com/boutique-614-171-reprenez-le-controle-a-l-aide-de-linux.html">
                                                        <span class="in_book"><img src="./Langage Python_files/ico_livre.png" alt=""></span>
                                                        <span style="display:none">Ce cours existe en livre :<br>Reprenez le contrôle a l'aide de Linux</span>
                                                    </a>
                                                </li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-273305-freebsd-et-l-envers-du-decor.html">FreeBSD</a></li>
                                            </ul>
                                        </div>
                                    </li>
                                    <li>
                                        <a href="http://www.siteduzero.com/tutoriel-1-56-graphisme.html"><img src="./Langage Python_files/56.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu">
                                            <a href="http://www.siteduzero.com/tutoriel-1-56-graphisme.html"><strong class="menu_cours_section">Graphisme</strong></a>
                                            <ul>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-351765-debuter-sur-adobe-photoshop.html">Photoshop</a></li>
                                            </ul>
                                        </div>
                                    </li>
                                    <li>
                                        <a href="http://www.siteduzero.com/tutoriel-1-58-infographie-3d.html"><img src="./Langage Python_files/58.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu">
                                            <a href="http://www.siteduzero.com/tutoriel-1-58-infographie-3d.html"><strong class="menu_cours_section">Infographie 3D</strong></a>
                                            <ul>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-11714-debutez-dans-la-3d-avec-blender.html">Blender</a></li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-228998-apprenez-a-modeliser-en-3d-avec-autodesk-maya.html">Maya</a></li>
                                            </ul>
                                        </div>
                                    </li>

                                    <li>
                                        <a href="http://www.siteduzero.com/tutoriel-1-55-bureautique.html"><img src="./Langage Python_files/55.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu">
                                            <a href="http://www.siteduzero.com/tutoriel-1-55-bureautique.html"><strong class="menu_cours_section">Bureautique</strong></a>
                                            <ul>
                                                <li>
                                                    <a href="http://www.siteduzero.com/tutoriel-3-258577-redigez-des-documents-de-qualite-professionnelle-avec-latex.html">
                                                        LaTeX
                                                    </a>
                                                    <a href="http://www.siteduzero.com/boutique-614-207-redigez-des-documents-de-qualite-professionnelle-avec-latex.html">
                                                        <span class="in_book"><img src="./Langage Python_files/ico_livre.png" alt=""></span>
                                                        <span style="display:none">Ce cours existe en livre :<br>Rédigez des documents de qualité avec LaTeX</span>
                                                    </a>
                                                </li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-417000-redigez-facilement-des-documents-avec-word.html">Word<img style="margin-left: 10px;" alt="" src="./Langage Python_files/iconouveau.png"></a></li>
                                            </ul>
                                        </div>
                                    </li>
                                    
                                    
                                    <li>
                                        <img src="./Langage Python_files/die.png" class="fl" alt="">
                                        <div class="liste_cours_menu">
                                            <strong class="menu_cours_section">Tutoriel du jour</strong><br>
                                            <ul>
                                                <li>
                                                    <a href="http://www.siteduzero.com/tutoriel-3-33156-faire-un-menu-similaire-a-celui-du-design-popup.html">Faire un menu similaire à celui du design PopUp</a>
                                                </li>
                                            </ul>
                                        </div>
                                    </li>
                                
                                <li class="last_idem_liste">
                                    <div id="menu_ajout_cours">
                                        <ul>
                                            <li>
                                                
                                                    <a href="http://www.siteduzero.com/tutoriel-3-256867-devenez-auteur-de-cours-sur-le-site-du-zero-et-le-livre-du-zero.html">
                                                
                                                Rédigez un cours <img src="./Langage Python_files/add.png" alt="">&nbsp;</a>
                                             </li>
                                             <li>
                                                 <a href="http://www.siteduzero.com/tutoriel.html" title="Tous les cours">Tous les cours  <img src="./Langage Python_files/fleche_droite.png" alt="">&nbsp;</a>
                                             </li>
                                         </ul>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>

                <div id="corps">
                    <div id="zozor_position">
                        <div id="zozor">
                            <div class="centre"><img src="./Langage Python_files/zozor6.png" alt=" Zozor" title=" Zozor"></div>
                       </div>
                    </div>

                    <div id="container_bulle_zozor">
                        
                    </div>

                    <div id="arbre">
                        
			&gt;  <a href="http://www.siteduzero.com/">Le Site du Zéro</a>
		
			&gt;  <a href="http://www.siteduzero.com/tutoriel.html">Cours</a>
			 &gt;  <a href="http://www.siteduzero.com/tutoriel-1-352-tutoriels.html">Tutoriels</a>
		 &gt;  <a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html">Programmation</a>
		 &gt;  <a href="http://www.siteduzero.com/tutoriel-2-196-python.html">Python</a>
		&gt;  <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html">Langage Python</a> 

&gt; Lecture du tutoriel

                    </div>

                    


<h1>Langage Python</h1>


<div id="onglets_tutos" class="onglets_tutos">
  <ul>
    
      <li class="selected">
      <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html">Tutoriel</a></li>
    
      <li>
      <a href="http://www.siteduzero.com/tutoriel-50-278227-p2-langage-python.html#r70993">32 commentaires</a></li>
    
      <li>
      <a href="http://www.siteduzero.com/tutoriel-21-278227-langage-python.html">Historique</a></li>
    
  </ul>
</div>
<hr class="bas_onglets">





<div class="cadre_auteur_date">
  <form action="http://www.siteduzero.com/tutoriel-54-278227.html" method="post">
    <div class="dnone"><input type="hidden" value="7297721f270eb1023794efafd96f8c66acb25dcd" name="challenge"></div>

    <div class="infobox">
<h3 class="special">Informations sur le tutoriel</h3>
<div class="conteneur_infobox">
<table>
  <tbody><tr>
    <td>
    <div class="boite_avatar_100px">
      <img src="./Langage Python_files/156102.gif" style="width:75px; height:100px; display: block;" alt="Avatar" class="avatar" id="avatar159712">  
     </div>
    </td>
    <td>
     
      <strong>Auteur</strong> :
      
    
	    <a class="auteur_tut" href="http://www.siteduzero.com/membres-294-159712.html">Suzy</a>
    
      <br>
    
      
		  <strong>Difficulté</strong> :
		  
			<img src="./Langage Python_files/niveau_1.png" alt="Facile">
		  
		  <br>
	  <strong>Licence</strong> : <a href="http://creativecommons.org/licenses/by-nc-nd/2.0/fr/"><img src="./Langage Python_files/4.png" alt="Creative Commons BY-NC-ND" title="Creative Commons BY-NC-ND"></a><br><br>
      <br>
      <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#tuto_details" onclick="return false;" id="tuto_details_plus">Plus d'informations <img src="./Langage Python_files/fleche_bas.png" alt="Plus d&#39;informations" title="Plus d&#39;informations" id="image_detail"></a>
      <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#onglets_tutos" onclick="return false;" id="tuto_details_moins" style="display : none;">Moins d'informations <img src="./Langage Python_files/fleche_haut.png" alt="Plus d&#39;informations" title="Plus d&#39;informations" id="image_detail_moins"></a>
      <script type="text/javascript">
          var lien_plus = document.getElementById('tuto_details_plus');
          var lien_moins = document.getElementById('tuto_details_moins');

          var toggleDetails = function()
          {
              toggle('infos_detaillees');
              toggle('tuto_details_plus');
              toggle('tuto_details_moins');
              return false;
          };

          if(lien_plus.addEventListener)
          {
              lien_plus.addEventListener('click', toggleDetails , false);
          } else
          {
              lien_plus.attachEvent('onclick', toggleDetails);
          }

          if(lien_moins.addEventListener)
          {
              lien_moins.addEventListener('click', toggleDetails , false);
          } else
          {
              lien_moins.attachEvent('onclick', toggleDetails);
          }
          
      </script>

      <div style="display: none;" id="infos_detaillees">
	<br>			
<strong>Créé</strong> : Le 26/06/2010 à 19:21:02<br>
<strong>Modifié</strong> : Le 22/07/2010 à 21:14:47<br>

<strong>Avancement</strong> : 10%<br>

<br>


<a href="http://www.siteduzero.com/tutoriel-50-278227-70993-langage-python.html#r70993">32 commentaires</a><br>

  <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html">Revenir au sommaire du tutoriel</a><br>


      </div>

    </td>
  </tr>
</tbody></table>
</div>
</div>


    <div class="infobox">
        <h3 class="special">Popularité</h3>
        <div class="conteneur_infobox">
            <strong>Visualisations</strong> : 11&nbsp;512<br><br>
            <div style="padding-top: 1px; float: left;"><strong>Appréciation<br>des lecteurs</strong> : </div>
            <div class="tut_appreciation">
                <div class="tut_appreciation_smiley" id="smiley-1-14563--601963" style="background-position: -19px 50%;"><img src="./Langage Python_files/empty.gif" alt=""></div>
                <span id="eval_nb-1">5</span>
            </div>
            <div class="tut_appreciation">
                <div class="tut_appreciation_smiley" id="smiley-2-14563--601963" style="background-position: -57px 50%;"><img src="./Langage Python_files/empty.gif" alt=""></div>
                <span id="eval_nb-2">2</span>
            </div>
            <div class="tut_appreciation">
                <div class="tut_appreciation_smiley" id="smiley-3-14563--601963" style="background-position: -95px 50%;"><img src="./Langage Python_files/empty.gif" alt=""></div>
                <span id="eval_nb-3">17</span>
            </div>
            <div class="tut_appreciation">
                <div class="tut_appreciation_smiley eval_always_color" id="smiley-4-14563--601963" style="background-position: -114px 50%;"><img src="./Langage Python_files/empty.gif" alt=""></div>
                <span id="eval_nb-4">50</span>
            </div>
            
            <div style="clear: both;"></div>
                
                    <p id="tut_vot_ldz" style="text-align:center;"><img src="./Langage Python_files/thb_livre_cours_c.png" id="tut_vot_ldz_img" alt="">
                    
                                <b>24 personnes</b> souhaitent voir ce tutoriel publié en livre ! <br> <a href="http://www.siteduzero.com/vote/ldz/14563.html" id="tut_vot_ldz_link">Vous aussi ?</a>
                            
            </p>
        </div>
    </div>


<div class="infobox" id="pave_pub_tuto" style="display: block; ">
<h3 class="special">Publicité</h3>
<div class="conteneur_infobox">
<table style="width: 100%;">
  <tbody><tr>
    <td colspan="2" id="menu_pub_tuto">


        
            <script type="text/javascript">
                <!--
                ord=Math.random();
                ord=ord*10000000000000000000;
                var test = true;
                document.write('<scr'+'ipt type="text/javascript" src="pub.js.php?cb='+ord+'&amp;l=300&amp;h=250&amp;age=0&amp;afficher_bloc_pub=pave_pub_tuto&amp;cid=196&amp;pays=0"><\/scr'+'ipt>');
                -->
            </script><script type="text/javascript" src="./Langage Python_files/pub.js(1).php"></script><iframe src="./Langage Python_files/cm.htm" marginwidth="0" marginheight="0" width="300" height="250" border="0" frameborder="0" style="border:none;" scrolling="no"></iframe>
        
    </td>
  </tr>
</tbody></table>
</div>
</div>

    
	<div class="infobox">
		<h3 class="special">Historique des mises à jour</h3>
		<div class="conteneur_infobox">
			<ul>
				
					<li>
						<em>Le 28/02/2011 à 20:42:03</em><br>
						Correction mineur d'un bug dans un exemple.
					</li>
			  
					<li>
						<em>Le 27/07/2010 à 16:38:37</em><br>
						Correction diverses
					</li>
			  
					<li>
						<em>Le 22/07/2010 à 21:14:56</em><br>
						Toujours plus d'objets !
					</li>
			  
			</ul>
		</div>
	</div>


    
  </form>
</div>

<div id="btuto_intro">
	Bienvenue sur le tutoriel Python !<br>
<br>
Le Python est un animal qui peut s'avérer dangereux mais aussi le nom d'un langage de programmation très puissant qui est de plus en plus utilisé pour développer des applications rapidement qui soient tout de même efficaces ! Il est très utilisé dans le monde scientifique pour sa syntaxe aérée et une vitesse d'exécution correcte. Ce langage est aussi excellent pour la création de prototypes car sa simplicité permet d'implémenter un projet aussi vite que l'on y réfléchit ! Il est aussi utilisé en modélisation 3D dans des programmes comme Blender par exemple. Bref, c'est un langage de plus en plus utilisé et vous en deviendrez très certainement fan rapidement !<br>
<br>
Les principales caractéristiques du langage Python sont :<br>
<ul>
<li>C'est un <strong>langage interprété</strong>, c'est-à-dire que le code ne nécessite pas d'être compilé pour être exécuté (nous verrons ça plus tard, ne vous en faites pas !)</li>
<li>Il est <strong>multiplateforme</strong> et il est d'ailleurs natif sur tous les systèmes Unix (Mac OS, Linux) et ne nécessite pas d'y être installé ! </li>
<li>Il peut être utilisé en tant que<strong> langage de script</strong> pour exécuter une suite simple de commande mais c'est aussi un <strong>langage objet</strong> qui permet de développer des applications solidement construites ! </li>
<li>Sa syntaxe est très simple et aérée et permet de se libérer de tous les caractères de démarquation des blocs de code.</li>
</ul><br>
<div class="rmq erreur">Hein ?! Qu'est-ce qu'il dit le monsieur ?!  <img src="./Langage Python_files/blink.gif" alt="o_O"> </div><br>
Vous n'avez pas tout compris aux caractéristiques du langage Python écrites ci-dessus ? Ce n'est pas un problème, ce cours est là pour tout vous expliquer de zéro ! Allez, c'est parti !<br>
<br>
<div class="rmq attention">Il existe différentes versions de Python avec notamment quelques différences syntaxiques en Python 2 et Python 3. J'essayerai au maximum de présenter les scripts dans les deux versions afin que chacun puisse y trouver son compte. Faites donc bien attention de regarder dans quelle version chaque portion de code est écrite.</div><br>
N'hésitez surtout pas à descendre dans les tréfonds du tutoriel pour y trouver des exercices et des annexes ! 
</div>

<hr>



<div id="pre_liste_parties">
	Ce cours est composé des parties suivantes :
</div>

<ul id="liste_parties">
	
		<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#part_278226">Bases et programmation impérative</a></li>
	
		<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#part_278240">Bases et programmation fonctionnelle</a></li>
	
		<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#part_284395">Programmation Orientée Objet</a></li>
	
		<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#part_278268">Annexes</a></li>
	
</ul>
		<ul class="liste_parties_btut">
		
		<li>
		<hr class="separateur_parties">
		<h2 id="part_278226">Partie 1 : Bases et programmation impérative</h2>
		<div>
			Alors, nous allons y aller doucement pour ne pas rebuter les néophytes. Dans cette partie, vous apprendrez à commencer à programmer en Python avec tout d'abord son installation, l'utilisation du shell et l'écriture des premiers scripts ! Vous ne ferez que de la programmation impérative, c'est-à-dire que vous n'écrirez que des suites d'instructions s'exécutant les unes à la suite des autres.
		</div>
			
				<ul class="liste_chapitres_btut">
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278224">1) Bien commencer</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/266376.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278263">Programmer</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278223">Installer Python</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278231">Utiliser le shell</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278219">2) Premier programme</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/266380.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278275">Hello World</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278280">Créer un script</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278230">Lancer un script</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278214">3) Les variables</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/266777.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278247">Une variable, c'est quoi ?</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278255">Déclarer une variable</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278220">Utiliser des variables</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278274">4) Contrôle du flux (1/2)</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/266792.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278236">Si ça... alors ça...</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278279">Les blocs de code</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278278">Un peu de logique</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278257">Résumé</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278261">5) Contrôle du flux (2/2)</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/266813.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278216">Tant que ...</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278241">Les séquences</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278251">Pour chaque ... dans ...</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278235">6) TP 1 : Le Juste Prix</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/266821.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278248">Poser le problème</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278245">Débugger</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278217">Corrigé et amélioration</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
				</ul>
				<div>
					<br>
					Maintenant que vous connaissez les bases pour écrire du code Python, passons à la suite avec un peu de structuration du code avec les fonctions. Vous allez voir, c'est coriace, mais vous ne pourrez plus vous en passer !
				</div>
			
		</li>
		
		<li>
		<hr class="separateur_parties">
		<h2 id="part_278240">Partie 2 : Bases et programmation fonctionnelle</h2>
		<div>
			Vous avez réussi à faire de vous-mêmes un petit jeu. Mais finalement, il vous reste énormément de choses à voir ! Dans cette partie, vous apprendrez les bases avancées du langages Python avec la gestion des fonctions et quelques concepts qui me semblent importants. Cette partie se consacre donc à la programmation dite fonctionnelle. Vous créerez vos propres fonctions et y ferez appel.
		</div>
			
				<ul class="liste_chapitres_btut">
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278246">1) Préludes aux fonctions</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/266862.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278234">Qu'est-ce qu'une fonction ?</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278233">Fonction intégrées et importées</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278272">Exemple : manipuler des fichiers</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278242">2) Les chaînes de caractères</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/271816.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278276">Rappel</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278229">Fonctions sur les chaînes</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278218">Exemple : créer une syntaxe</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278266">3) Les listes</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/266837.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278221">Rappels</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278253">Opérations de base</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278270">Manipuler les listes</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278225">4) Les dictionnaires</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/266847.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278244">Qu'est-ce que c'est ?</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278264">Opérations de base</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278238">A quoi ça sert ?</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278232">5) Les fonctions (1/2)</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/266872.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278249">Ecrire des fonctions</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278269">Espace mémoire</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278243">Paramètres des fonctions</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278222">6) Les fonctions (2/2)</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/273112.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278237">Créer des modules</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278215">Fonction lambda</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278277">Récursivité</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278267">7) Gérer les exceptions</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/268858.gif" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278250">Les exceptions</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278256">Lever une exception</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278265">Les assertions</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278254">8) TP 2 : Jeu de la Vie</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/273689.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278258">Présentation du sujet</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278271">Quelques idées</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278260">Corrigé</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
				</ul>
				<div>
					<br>
					Vous voilà prêt pour passer à la programmation par objet. Avant d'y passer, assurez-vous de bien maîtriser les fonctions, car vous en aurez besoin à tour de bras !
				</div>
			
		</li>
		
		<li>
		<hr class="separateur_parties">
		<h2 id="part_284395">Partie 3 : Programmation Orientée Objet</h2>
		<div>
			Ca fait peur comme nom hein ? En fait, vous allez voir qu'une fois que vous y aurez goûté, vous ne pourrez plus vous en passer ! La programmation orientée objet, c'est le must de l'intuitif pour la structuration d'un code et ça permet de simplifier et de rendre réutilisables des pans entiers de code ! Alors, ne perdons pas de temps et commençons !
		</div>
			
				<ul class="liste_chapitres_btut">
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_284396">1) Un objet, c'est quoi ?</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/281768.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_284398">Mmh, vous avez dit objet ?</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_284397">Principe d'encapsulation</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_284394">C'est la classe !</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_284399">2) Créer des objets (1/2)</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/281793.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_284391">Définir une classe</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_284392">Constructeur et attributs</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_284393">Méthodes d'instance</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_285270">3) Créer des objets (2/2)</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/281802.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_285267">Composition</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_285269">Attributs et méthodes de classe</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_285265">Surcharge des opérateurs</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
				</ul>
				<div>
					<br>
					<div class="rmq attention">Partie en chantier !</div><br>
<br>
La programmation orientée objet n'a maintenant plus de secrets pour vous ! Mais avec une interface graphique, c'est pas mieux ? Si, et c'est pour ça que la prochaine partie va vous les introduire (je vous y prends bande de petits cochons  <img src="./Langage Python_files/langue.png" alt=":p"> ) !
				</div>
			
		</li>
		
		<li>
		<hr class="separateur_parties">
		<h2 id="part_278268">Partie 4 : Annexes</h2>
		<div>
			
		</div>
			
				<ul class="liste_chapitres_btut">
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278262">1) Des bonnes pratiques</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/266395.jpg" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278259">Nommer</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278281">Documenter</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#chap_278228">2) Références</a>
						<div class="icone_chap">
							
								<img src="./Langage Python_files/266398.jpg" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278239">Livres</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278252">Ressources web</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#ss_part_278273">Quelques idées d'application</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
				</ul>
				<div>
					<br>
					
				</div>
			
		</li>
		
		</ul>

<hr>
<h2>Partie 1 : Bases et programmation impérative</h2>
<div>
Alors, nous allons y aller doucement pour ne pas rebuter les néophytes. Dans cette partie, vous apprendrez à commencer à programmer en Python avec tout d'abord son installation, l'utilisation du shell et l'écriture des premiers scripts ! Vous ne ferez que de la programmation impérative, c'est-à-dire que vous n'écrirez que des suites d'instructions s'exécutant les unes à la suite des autres.
</div>
	
	<hr>
	<h1 id="chap_278224">Bien commencer</h1>
	<div id="chap_intro">
	Vous êtes venu ici pour apprendre à programmer mais seulement, savez-vous ce que cela veut dire ? Et savez-vous à quoi cela sert ? C'est ce que nous allons voir, alors au travail ! Mais avant de pouvoir se mettre réellement au travail, il va d'abord falloir installer ce qu'il faut pour travailler ! Et pour pouvoir programmer en Python, un éditeur de texte suffit. Seulement, pour exécuter du code, vous aurez besoin d'un interpréteur. <br>
<br>
<div class="rmq question">Qu'est-ce qu'un interpréteur ? Et à quoi ça sert ?</div><br>
L'interpréteur est le programme qui va "interpréter" votre code, c'est à dire qu'il va traduire ce que vous avez écrit en code machine, c'est-à-dire une suite de 0 et de 1 que votre ordinateur peut comprendre. C'est lui qui va vous permettre de lancer vos programmes.<br>
Dans cette section, nous allons voir :<br>
<ul>
<li>A quoi ça sert de programmer ?</li>
<li>Comment installer Python</li>
<li>Comment utiliser le shell Python</li>
</ul><br>
Les programmeurs en herbe qui travaillent sous Mac OS ou Linux seront ravis d'apprendre que, pour la plupart, ils n'auront pas besoin d'installer Python sur leur ordinateur car les programmes développés en Python pourront y être exécuté sans installer quoi que ce soit ! Mais nous verrons tout de même comment accéder au shell et surtout à quoi ça sert ! Commençons avant que vous demandiez ce qu'est un shell... Nous le verrons d'ici la fin du chapitre.
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278263">Programmer</h2>
		<div class="ss_part_texte">
		Lorsque vous utilisez un ordinateur, vous pouvez faire plein de choses ! Chacune des actions que vous effectuez avec votre ordinateur a été programmée ! En effet, tout ce qui rend une machine utilisable est un programme, une suite d'instructions qui ont été écrites par quelqu'un (ou quelque chose, mais ce n'est pas encore de votre niveau... <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"> ) et qui s'exécutent. Les ordinateurs, et plus particulièrement les processeurs qui sont en quelque sorte le cerveau, ne sont capables de comprendre qu'une suite de 0 et 1 qui n'ont pas de sens pour un humain normal...<br>
<br>
<div class="rmq question">Ça veut dire que tout ce que je fais sur mon ordinateur n'est qu'une suite de 0 et de 1 ?! <img src="./Langage Python_files/blink.gif" alt="o_O" class="smilies"> <br>
Mais alors, comment ça se fait que je peux lire quelque chose sur mon ordinateur, écouter de la musique, et jouer à des jeux débiles sur internet ?!</div><br>
Et bien, c'est là tout le sens du mot informatique : c'est la science de l'information. Tous les composants de votre ordinateur ont été créés pour être capables de reconnaître des suites de 0 et 1 et de les transformer en quelque chose de compréhensible pour vous. Une suite de 0 et 1 sera interprétée par votre écran comme un ensemble de couleurs à faire afficher à chacun des pixels qui le composent par exemple. Votre carte son transformera ça en signal électrique qui ira faire vibrer vos enceintes pour que vous puissiez écouter votre musique préférée.<br>
<br>
<div class="rmq question">Il y a des gens qui écrivent des 0 et des 1 toute la journée que l'on puisse écouter de la musique et faire n'importe quoi avec notre ordinateur ?!</div><br>
Cela a existé à une époque, au début de l'informatique, lorsque l'on faisait une calculatrice pour collège avec un ordinateur de la taille d'un immeuble... Mais aujourd'hui, les programmes que l'on utilise sont très complexes et permettent de faire bien des choses ! Et c'est là que la programmation, celle avec un langage de programmation intervient ! Un langage de programmation, c'est en fait un langage spécifique, assez simple et intelligible par des humains composé d'une syntaxe particulière (ensemble de mots clés), qui sera ensuite traduit en une suite gigantesque de 0 et de 1 pour que la machine puisse à son tour le comprendre et surtout l'exécuter. C'est donc une manière beaucoup plus simple pour nous de faire faire quelque chose à un ordinateur. L'inconvénient est qu'il n'est pas possible d'optimiser au maximum les opérations que nous allons lui demander de faire. Il y a toujours une déformation due à la traduction. Les machines se faisant de plus en plus puissantes, cela ne pose plus de gros problèmes aujourd'hui. En résumé, ce que vous faites lorsque vous programmez peut ressembler à ça :<br>
<br>
<div class="centre"><img src="./Langage Python_files/241786.png" alt="Traduction"></div><br>
<br>
Des centaines de langages si ce n'est des milliers ont été créés depuis les débuts de l'informatique. Le site <a href="http://www.99-bottles-of-beer.net/">99 bottles of beer</a> en répertorie un assez grand nombre. Python est loin d'être le seul langage mais dans ce cours, nous ne verrons que celui-ci ! Maintenant que vous savez à quoi cela peut bien servir de programmer, vous aimeriez sans doute savoir comment il est possible de le faire ! Mais pas si vite, comme tout travailleur qui se respecte, il faut avoir les bons outils ! Et cela commence par le traducteur entre vous et la machine : <strong>l'interpréteur</strong>.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278223">Installer Python</h2>
		<div class="ss_part_texte">
		<h3>Sous Windows</h3><br>
Pour les utilisateurs de Windows (dont je fais partie), le langage Python ne peut pas être reconnu sans l'installation d'un programme tiers appelé <strong>interpréteur</strong>. Pour vous procurer un tel programme, il suffit d'aller sur <a href="http://www.python.org/">le site officiel de Python</a>. Pour les non anglophones (mais il va falloir vous y mettre !), il faut aller ensuite sur la page appelée "downloads" (téléchargements). De là, il suffit de télécharger la version qui vous convient (pour ma part, j'utiliserai la version 3.1) dans les fichiers proposés pour Windows.<br>
<br>
Une fois le bon fichier téléchargé, il suffit de l'exécuter pour avoir l'installateur ! Vous devez d'abord choisir l'emplacement où l'installer sur votre ordinateur. Personnellement je laisse l'adresse par défaut, ça ne prend pas beaucoup d'espace et au moins c'est bien rangé. Vous aurez ensuite le choix d'installer ou non certaines parties de Python. Voici ce que vous devez avoir sous les yeux (hormis mon tutoriel <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"> ) :<br>
<br>
<div class="centre"><img src="./Langage Python_files/241781.png" alt="Qu&#39;est-ce que j&#39;installe ?"></div><br>
<br>
Ici, vous avez donc le choix d'installer Python mais aussi quelques modules complémentaires. Alors qu'allons nous retrouver une fois tout ça installé ?<br>
<ul>
<li><strong>Python</strong> : bah oui, à la base, c'est ce que nous voulions installer...</li>
<li><strong>Tcl/Tk</strong> : c'est un module qui vous permettra de faire des interfaces graphiques pour vos programmes</li>
<li><strong>La documentation</strong> : nous verrons plus tard comment l'utiliser correctement et à quoi cela peut servir, mais sachez que cela pourra vous permettre de programmer sans connexion internet !</li>
<li><strong>IDLE</strong> : c'est un programme qui vous permettra d'éditer vos fichiers Python et de lancer vos programmes. C'est un peu basique mais largement suffisant pour un début !</li>
</ul><br>
Bon, maintenant cliquez sur "next" (suivant) et rien de plus compliqué ne devrait vous être demandé. Python est maintenant installé sur votre ordinateur !<br>
<br>
<br>
<h3>Sous Mac OS ou Linux</h3><br>
L'interpréteur Python est fourni sur la plupart des distributions Mac OS et Linux. Il vous permettra donc d'exécuter les scripts Python sans rien y installer. Cependant, si vous voulez vérifier qu'il est bien présent sur votre machine, vous pouvez taper ceci en console :<br>
<br>
<span class="code">Code : Console - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 console"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre></pre></td><td class="code"><div class="syntax"><pre>python</pre></div></td></tr></tbody></table></div><br>
Si cette commande n'est pas reconnue, je vous conseille vivement de faire un tour sur <a href="http://www.python.org/download/">le site officiel</a> pour télécharger la dernière version de Python. Pour les autres, vérifiez le numéro de version qu'il vous affiche. Si vous n'avez pas la version 2.7 ou la version 3.1 de Python, je vous conseille alors de mettre à jour votre version soit en allant sur la même page que pour les windowsiens (voir ci-dessus) si vous êtes sur Mac OS et sinon, il suffit de récupérer les paquets via internet si vous êtes sous Linux. Pour ceux qui travaillent sur Mac, le fait d'installer ou de mettre à jour votre version de Python vous permettra d'être sûr de posséder le petit environnement de développement fourni avec : IDLE. Il vous permettra d'écrire vos programmes mais aussi de les lancer pour les tester.<br>
<br>
<h3>Sous autre chose</h3><br>
Python est réellement multiplateforme et en plus d'être disponible pour les systèmes sous Windows, Mac OS et Linux, il peut aussi être utilisé pour programmer sur votre PSP, vos iPod et bien d'autres ! Si cela vous intéresse, leur site propose les liens vers les sites officiels des versions existants pour divers OS à cette adresse : <a href="http://www.python.org/download/other/">http://www.python.org/download/other/</a><br>
<br>
Bien, maintenant que vous avez les outils de base pour travailler, nous allons voir comment utiliser Python.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278231">Utiliser le shell</h2>
		<div class="ss_part_texte">
		Python est un langage interprété, c'est-à-dire que vous n'avez pas besoin de traduire votre code en langage machine, vous avez un traducteur pour ça, l'interpréteur, qui transformera à la volée le code que vous donnerez à manger à votre ordinateur ! De ce fait, Python propose un outil sympathique appelé <strong>shell</strong>.<br>
<br>
<div class="rmq question">Hein quoi ? Un shell ? C'est quoi ? Ca se mange ?  <img src="./Langage Python_files/unsure.gif" alt=":euh:"> </div><br>
Meuh non ! Un shell, c'est en fait une console spécifique dans laquelle vous pourrez taper directement du code Python qui sera immédiatement reconnu. Pour accéder au shell, il faut :<br>
<ul>
<li><strong>Sous Windows ou Mac OS</strong> : lancer IDLE (installé avec Python)</li>
<li><strong>Sous Mac OS ou Linux</strong> : taper "python" dans une console</li>
</ul><br>
Vous devriez obtenir une console qui ressemble à cela :<br>
<br>
<div class="centre"><img src="./Langage Python_files/241666.png" alt="Shell Python"></div><br>
<br>
On peut voir ici que ma version de Python y est écrite. Elle m'indique donc que je suis sur un système sous WIndows 32bits avec une version 3.1.1 de Python.<br>
<br>
<div class="rmq erreur">Okay, j'ai le shell, mais j'en fais quoi moi de ça ?! Je vois pas en quoi je programme ici !</div><br>
Eh bien maintenant que le shell est lancé, vous pouvez y taper tout ce que vous voulez du moment que c'est en python ! Nous allons faire quelques tests...<br>
<br>
<h3>Taper n'importe quoi</h3><br>
Commençons par faire les animaux intrigués face à cet objet étrange qu'est le shell. Essayer de taper n'importe quoi. Vous devriez obtenir quelque chose dans le genre...<br>
<br>
<div class="centre"><img src="./Langage Python_files/241667.png" alt="Shell Pyhton - Erreur"></div><br>
<br>
Comme je lui ai littéralement tapé "n'importe quoi", l'interpréteur me signale par une belle couleur rouge et un petit texte en anglais qu'il ne comprend pas ce que je lui demande de faire. C'est bon signe ! Ainsi, ici, il me dit qu'une ligne s'est terminée (<span class="italique">EOL : end of line</span>) prématurément alors qu'il essayait de comprendre (<span class="italique">while scanning</span>) une chaîne de caractères (<span class="italique">string</span>). <br>
<br>
<div class="rmq erreur">Wohohoh ! Tu veux dire que ce truc ne parle que anglais ?! <img src="./Langage Python_files/blink.gif" alt="o_O"></div><br>
Et oui... Je vous avait dit plus haut qu'il allait falloir vous mettre à l'anglais... Tous les langages de programmation sont en fait une sorte d'anglais simplifié... Et tous les compilateurs et interpréteurs que vous pourrez utiliser vous écriront en anglais lorsqu'ils n'aimeront pas ce que vous leur demandez de traduire... Enfin, je vous rassure, des fois, même en parlant anglais, il arrive que ce qui dérange l'interpréteur soit complètement incompréhensible... Mais ça, vous apprendrez à reconnaître vos erreurs avec l'expérience ! Pour ce qui est de l'erreur, vous comprendrez plus tard...<br>
<br>
<h3>Une grosse calculette</h3><br>
Maintenant que l'on s'est bien amusé à taper n'importe quoi dans notre shell, il va peut-être falloir se mettre au travail un peu plus sérieusement ! Pour ça, nous allons voir que Python peut servir de grosse calculatrice ! Essayer par exemple de lui donner à faire un gros calcul avec les quatre opérations de base (+, -, *, /) du style :<br>
<br>
<span class="code">Code : Console - Shell Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 console"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre></pre></td><td class="code"><div class="syntax"><pre>&gt;&gt;&gt;&nbsp;18*4*34*99&nbsp;+&nbsp;23455669992&nbsp;-&nbsp;23993002
23431919342</pre></div></td></tr></tbody></table></div><br>
<br>
Je lui ai donné à faire ici un gros calcul et comme il est de bonne humeur, il m'affiche le résultat. Vous voyez donc que l'on peut travailler avec des nombres, c'est d'ailleurs la base de tout ce que l'on fera ! Les opérateurs que vous pouvez utiliser pour les nombres sont les suivants :<br>
<br>
<table class="tab_user">								








<thead><tr><th>Symbole</th><th>Effet</th><th>Exemple</th></tr></thead><tbody><tr>		
<td>+</td>		
<td>Addition</td>		
<td>2 + 2 = 4</td>	
</tr><tr>		
<td>-</td>		
<td>Soustraction</td>		
<td>2 - 2 = 0</td>	
</tr><tr>		
<td>*</td>		
<td>Multiplication</td>		
<td>3 * 2 = 6</td>	
</tr><tr>		
<td>/</td>		
<td>Division</td>		
<td>5 / 2 = 2.5</td>	
</tr><tr>		
<td>**</td>		
<td>Puissance</td>		
<td>3 ** 3 = 27</td>	
</tr><tr>		
<td>//</td>		
<td>Division entière (Euclidienne)</td>		
<td>5 // 2 = 2</td>	
</tr><tr>
<td>%</td>
<td>Modulo (reste de la division)</td>
<td>5 % 2 = 1</td>
</tr></tbody></table><br>
<br>
<div class="rmq attention">Dans certains langages et même suivant la version de Python (avant la version 3) que vous utiliserez, les opérations '/' et '//' donneront le même résultat ! En effet, la conversion automatique en nombre à virgule lorsque cela est utile est très récent !</div><br>
Si vous n'êtes pas familiers avec les opérations de division entière (ou dite Euclidienne) et le modulo, je vous conseille d'apprendre à vous en servir. Ce sont des opérations pratiques et qui, contrairement à ce que l'on peut penser initialement, sont utilisées régulièrement. Des exercices seront proposés pour mettre en évidence toute l'utilité de ces opérations dans la suite du cours....<br>

		</div>
		<hr>
		
	<div id="chap_conclusion">
	Très bien, maintenant que Python est installé sur votre ordinateur et que vous avez eu un premier contact avec le shell qui vous servira pour tous vos petits tests rapides, on va pouvoir attaquer la suite ! Mais ne vous inquiétez pas, nous allons y aller en douceur.
	</div>
	
	<hr>
	<h1 id="chap_278219">Premier programme</h1>
	<div id="chap_intro">
	Vous vous êtes bien amusé ? Nous allons attaquer notre premier programme ! Ca fait peur, hein ? Ne vous inquiétez surtout pas, nous allons commencer par quelque chose de très simple.<br>
<br>
Pour rester dans le classique, on va se contenter de faire le programme <a href="http://fr.wikipedia.org/wiki/Hello_world">Hello World</a>. Pour ceux qui ne sont pas familiers avec la programmation, ce programme est le premier que tous ceux qui ont eu à apprendre un langage de programmation ont fait ! C'est un programme relativement simple qui consiste à écrire "Hello world !" dans la console...<br>
<br>
Ce n'est donc pas encore ici que vous deviendrez des pros de la programmation mais vous pourrez apprendre différentes choses :<br>
<ul>
<li>Afficher quelque chose dans la console.</li>
<li>Créer un script exécutable.</li>
<li>Lancer un programme Python.</li>
</ul><br>
Ce sera la base donc pour toute la suite du cours ! Ce n'est clairement pas dur à maîtriser mais si vous n'êtes pas capable de faire ça, alors vous ne pourrez pas faire grand chose...<br>
<br>
Ne tardons pas et commençons !<br>
<br>
<div class="rmq attention">A partir de maintenant, lorsque du code sera donné, il le sera si possible en Python v3 ET en Python v2.6 ! Essayez de faire attention à la version que vous avez !</div>
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278275">Hello World</h2>
		<div class="ss_part_texte">
		Je ne vais pas passer par quatre chemins pour vous montrer la tête de notre premier programme et je vais vous le donner directement :<br>
<br>
<span class="code">Code : Python - Shell Python v3 - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">"Hello world!"</span><span class="p">)</span>
<span class="n">Hello</span> <span class="n">world</span>!
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="code">Code : Python - Shell Python v2.6 - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span> <span class="s">"Hello world!"</span>
<span class="n">Hello</span> <span class="n">world</span>!
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq erreur">Quoi ?! C'est tout ?! C'est quoi ça ?! C'est nul ! </div><br>
Hola hola ! Essayez de taper la même chose dans votre shell pour commencer et vérifiez que cela fonctionne bien ! Maintenant, je vous explique un petit peu ce que l'on a fait là :<br>
<ul>
<li><strong>print()</strong> : ceci est une fonction qui permet d'afficher dans la console ce que vous lui donner entre les parenthèses.</li>
<li><strong>"Hello World!"</strong> : ceci est une chaîne de caractères</li>
</ul><br>
Ici, on utilise donc la fonction <span class="italique">print()</span> qui permet d'afficher quelque chose pour demander d'afficher la chaîne de caractères <span class="italique">Hello World!</span> dans la console. Les fonctions seront vu plus en détail dans la suite du cours. Ce qu'il faut retenir maitenant, c'est que si vous voulez afficher quelque chose dans la console, il suffit d'utiliser cette ligne de code en remplaçant "Hello World!" par ce qui vous chante.<br>
<br>
<div class="rmq attention">En Python v2.6, <span class="italique">print</span> est un mot clé et non pas une fonction. C'est une aberration corrigée dans la version 3 du langage... L'utilisation est cependant exactement la même, la différence est purement conceptuelle ! <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"></div><br>
Si vous voulez vous amuser, vous pouvez essayer d'afficher toute sorte de chose dans la console.<br>
<span class="souligne">Astuce 1 :</span> Pour afficher plusieurs choses sur la même ligne, vous pouvez séparer ce que vous voulez afficher par des virgules.<br>
<span class="souligne">Astuce 2 :</span> Pour afficher quelque chose sur plusieurs lignes, utiliser plusieurs fois l'instruction <span class="italique">print ou utilisez le caractère spécial '\n' dans vos chaînes de caractères.</span>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278280">Créer un script</h2>
		<div class="ss_part_texte">
		Un script est un fichier contenant un ensemble d'instructions. Dans notre cas, les instructions seront écrites en langage Python et lues par l'interpréteur pour les exécuter. Pour créer un script Python, vous pouvez utiliser n'importe quel éditeur de texte. Seulement, pour vous faciliter la tâche, il vaut mieux en utiliser un qui mette en couleur les mots clés (coloration syntaxique) utilisés par Python. Pour cela, vous avez le choix :<br>
<ul> 
<li><strong>IDLE</strong> : il vous propose un éditeur de texte avec la coloration syntaxique assez efficace et vous pourrez directement lancer vos scripts avec les raccourcis claviers</li>
<li><strong>notepad++</strong> : c'est un éditeur de texte particulièrement efficace qui gère la coloration syntaxique pour ce nombreux langages, il vous permet aussi de réduire les blocs de code pour vous permettre de travailler plus facilement (c'est mon chouchou <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"> )</li>
<li><strong>nedit</strong> : simple mais efficace, il gère aussi la coloration syntaxique pour de nombreux langages</li>
<li><strong>PyPe</strong> : c'est un environnement de développement qui vous permettra tout comme IDLE de lancer vos scripts. Il est muni d'un éditeur de texte à onglets, il gère la coloration syntaxique et propose aussi un shell.</li>
<li>Et bien d'autres encore...</li>
</ul>Tous ces éditeurs sont gratuits et peuvent être trouvés facilement sur Internet. Lorsque vous aurez acquis plus de compétences en programmation, vous pourrez trouver utile d'utiliser un environnement de développement (IDE) qui vous permet de travailler de façon très claire avec de nombreux fichiers, d'exécuter directement vos programmes et propose aussi le plus souvent un débugger qui permet de repérer facilement les problèmes dans votre code.<br>
<br>
Si vous désirez maintenant écrire un fichier qui puisse être exécuté par l'interpréteur Python, celui-ci doit se terminer par l'extension <strong>.py</strong> qui indique que c'est un fichier de code Python.<br>
<br>
<div class="rmq attention">Il vous arrivera peut-être de tomber sur des fichiers ayant pour extension .pyc. Il s'agit de fichier Python précompilés, vous ne pouvez donc plus voir le code source mais il sont exécutables.</div><br>
Essayez de créer un fichier .py et d'y écrire du code Python en vous aidant du programme Hello World par exemple.<br>
Vous devriez obtenir quelque chose qui ressemble à ça :<br>
<br>
<div class="centre"><img src="./Langage Python_files/241790.png" alt="Premier fichier"></div><br>
Vous pouvez voir ici, le code qui se colorie en fonction de ce que j'écris, ce qui indique que mon fichier Coucou.py a bien été reconnu comme un fichier de code Python :<br>
<ul>
<li><span class="rouge">En rouge</span> : les commentaires. Tout ce qui se trouve après le caractère # ne sera pas considéré par l'interpréteur, ce sont des commentaires pour vous et ceux qui liront le code. Il est très important de bien commenter son code afin qu'il soit lisible et facilement compréhensible.</li>
<li><span class="rose">En violet</span> : les mots clés du langages Python. Tous les mots clés que vous utiliserez seront mis dans cette couleur, ainsi vous vous rendrez compte tout de suite si votre code est bien reconnu.</li>
<li><span class="vertc">En vert</span> : les chaînes de caractères. Tout ce qui se trouvera être entre deux " sera donc écrit en vert et ne sera pas considéré comme étant du code à exécuter mais quelque chose à afficher dans notre exemple.</li>
</ul><br>
<div class="rmq attention">La coloration syntaxique dépend de l'éditeur de texte que vous avez choisi et les couleurs peuvent donc être différentes suivant l'éditeur que vous utilisez. Ces couleurs ne sont là que pour vous faciliter la lecture de votre code et n'ont pas de valeur en elles-mêmes. Elles ne sont pas intrinsèques au langage Python. Vous verrez d'ailleurs que le site du zéro utilise son propre jeu de couleur pour la coloration syntaxique de Python.</div><br>
En en-tête du fichier se trouvent des commentaires très particuliers. Les deux lignes suivantes :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="c">#!/usr/bin/python</span>
<span class="c"># -*- coding: latin-1 -*-</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ces deux lignes sont des commentaires avec une utilité particulière. La première permet de dire que c'est un fichier Python et cela rendra vos scripts exécutable par un simple double clic dessus par exemple. La seconde ligne précise l'encodage utilisé dans le fichier. Ici, l'encodage est <span class="italique">latin-1</span> qui m'autorisera à écrire les accents notamment pour les commentaires. Si vous ne précisez pas l'encodage, il se peut que vous ne puissiez utiliser que les caractères de base (aucun accent, pas de caractères spéciaux).<br>
<br>
<div class="rmq information">Depuis Python v3, l'encodage par défaut est UTF-8 qui vous permet donc d'utiliser à peu près tout ce que vous voulez !</div>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278230">Lancer un script</h2>
		<div class="ss_part_texte">
		Maintenant que vous avez écrit votre premier script, il va falloir l'exécuter ! Il est possible de le faire de différentes manières.<br>
<br>
<h3>Fichier exécutable</h3><br>
J'appelle le lancement direct le fait d'aller chercher directement le fichier que vous venez d'écrire dans votre navigateur et de le lancer en cliquant dessus comme vous lanceriez une application. Avec notre exemple, vous devriez voir apparaître et disparaître quasiment instantanément une console. En fait, c'est que votre programme s'est bien lancé et terminé.<br>
<br>
<h3>Lancer en console</h3><br>
Si vous voulez voir un petit peu mieux ce que donne votre programme, vous devrez lancer une console (taper <span class="italique">cmd</span> dans le champ <span class="italique">Executer</span> sous Windows mais ce n'est pas le plus simple sous Windows...) et en vous plaçant dans le bon répertoire (celui qui contient votre fichier), vous pouvez taper :<br>
<br>
<span class="code">Code : Console - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 console"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre></pre></td><td class="code"><div class="syntax"><pre>python&nbsp;Coucou.py</pre></div></td></tr></tbody></table></div><br>
<br>
<div class="rmq information"><strong>Sous Windows</strong>, vous n'avez pas besoin de taper python. Seul le nom du script à exécuter est nécessaire.<br>
<strong>Sous Linux</strong>, vous n'aurez pas non plus besoin de taper python si vous avez écrit <span class="italique">#!/usr/bin/python en en-tête de votre script.</span><br>
</div> <br>
En faisant cela, le résultat de votre programme devrait alors s'afficher .<br>
<br>
<h3>Lancer avec IDLE</h3><br>
Si vous voulez lancer votre script avec IDLE, il faut aller dans le menu Run et faire Run module (raccourci : F5). Votre programme se lancera alors tout seul dans le un shell IDLE. C'est la solution la plus simple pour un début !
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Vous savez maintenant comment écrire quelque chose dans la console et comment lancer un programme Python... Vous êtes maintenant prêt à apprendre à programmer. Dans le prochain chapitre, vous apprendrez à stocker de l'information à l'aide de variables.
	</div>
	
	<hr>
	<h1 id="chap_278214">Les variables</h1>
	<div id="chap_intro">
	Vous savez lancer un programme Python mais vous ne savez pas encore programmer. L'informatique, comme je l'ai expliqué un peu avant, c'est la science de l'information. Le but va donc être maintenant de travailler avec de l'information et de la stocker en mémoire.<br>
<br>
C'est donc ce que nous allons apprendre à faire dans cette partie ! Ici, nous verrons :<br>
<ul>
<li>A quoi servent les variables</li>
<li>Comment les utiliser</li>
<li>Les différents types de données utilisables</li>
<li>Les principaux mots clés de Python</li>
</ul>Ne perdons pas de temps en bavardage et apprenons à programmer tout de suite !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278247">Une variable, c'est quoi ?</h2>
		<div class="ss_part_texte">
		Une variable, c'est un nom, une référence, qui pointe vers des données en mémoire. C'est aussi simple que ça. Et c'est donc à l'aide de nombreuses variables que vous pourrez stocker tout ce dont vous avez besoin pour vos programmes.<br>
<br>
Ce qui consterne toujours un peu les jeunes programmeurs, c'est la quantité assez limitée de types de variables qui existent. En Python, les données que l'on peut utiliser sont des types suivants :<br>
<ul>
<li><strong>Les nombres entiers</strong> (<span class="italique">integer</span> ou <span class="italique">long</span> en anglais suivant leur longueur)</li>
<li><strong>Les nombres à virgule flottante </strong>(<span class="italique">float</span>) : ce sont les nombres décimaux que l'on apprend à partir du CM1 si mes souvenirs sont bons !</li>
<li><strong>Les chaînes de caractères</strong> (<span class="italique">string</span>, celui qui rigole au fond de la classe, tu sors ! <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"> )</li>
<li><strong>Les booléens</strong> (<span class="italique">boolean</span>) : qui vaudront forcément vrai (<span class="italique">true</span>) ou faux (<span class="italique">false</span>)</li>
</ul><div class="rmq erreur">Il n'existe pas d'autres types de données que l'on peut utiliser ?! Mais je vais rien faire avec ça ! Comment je fais un programme avec des entiers et des chaînes de caractères ?!</div><br>
Vous voyez, vous aussi vous êtes conterné... En effet, tous les programmes que vous utilisez sur votre ordinateur ne sont composés que de ces types de données ! Mais chaque programme peut en utiliser des milliers pour que vous puissiez apprécier votre musique préférée ou tout simplement lire ce tutoriel ! Tout ce que vous utiliserez sera composé de données de ces types, et rien d'autre ! Ne vous plaignez pas, il y a déjà plus choix qu'entre 0 et 1 !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278255">Déclarer une variable</h2>
		<div class="ss_part_texte">
		Maintenant que vous savez ce qu'est une variable, passons à la pratique ! On s'y met tout de suite avec la déclaration d'une variable :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">peuh</span> <span class="o">=</span> <span class="mi">12</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, je déclare une variable appelée <span class="italique">peuh</span> et je lui affecte (signe =) la valeur 12. Vous voyez, c'est simple ! J'ai maintenant la valeur 12 qui est stockée en mémoire et je peux y faire appel à l'aide du nom <span class="italique">peuh</span>. Mais attention, il y a certaines règles à connaître lorsque l'on déclare une variable. La première est que la casse est prise en compte, ce qui veut dire que <span class="italique">peuh, Peuh, pEUh</span> et <span class="italique">PEUH</span> sont des variables différentes ! Vous ne pouvez pas non plus utiliser pour nom de variable les mots clés du langage Python. Ces mots ont tous une fonction bien particulière spécifique à la syntaxe du langage. En Python, les mots clés sont les suivants :<br>
<br>
<div class="centre"><img src="./Langage Python_files/245286.png" alt="Mots clés"></div><br>
<br>
Faites un essai dans le shell par exemple en y déclarant une variable et en tapant ensuite le nom de cette variable. Il devrait vous afficher la valeur de cette variable comme ceci :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">peuh</span> <span class="o">=</span> <span class="mi">12</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">peuh</span>
<span class="mi">12</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, ma variable <span class="italique">peuh</span> est un entier (<span class="italique">integer</span>). En Python, le typage est dit dynamique. C'est-à-dire que le type des variables que vous déclarez sera donné automatiquement en fonction de la valeur que vous lui donnerez. Faisons un petit test dans le shell :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">peuh</span> <span class="o">=</span> <span class="mi">12</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">peuh</span>
<span class="mi">12</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">peuh</span> <span class="o">=</span> <span class="s">'Peuh !'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">peuh</span>
<span class="s">'Peuh !'</span>
</pre></div>
</td></tr></tbody></table></div><br>
Je déclare ma variable en lui affectant la valeur 12. Si je l'affiche, alors c'est bien en entier de la valeur 12. Je lui affecte ensuite la valeur 'Peuh !' qui est une chaîne de caractères et lorsque je l'affiche, ma variable <span class="italique">peuh</span> est effectivement une chaîne de caractères, son type a été modifié automatiquement.<br>
<br>
Les différents types des variables sont donnés par :<br>
<ul>
<li><strong>Les données numériques</strong> qui seront du type <span class="italique">integer</span>, <span class="italique">long</span> ou <span class="italique">float</span> suivant le nombre que vous utiliserez</li>
<li><strong>Les chaînes de caractères</strong> délimitées par " " ou ' ' ou """ """ ou ''' '''</li>
<li><strong>Les booléens</strong> qui vaudront True ou False</li>
</ul><div class="rmq information">Dans la suite du cours, vous verrez qu'il est possible d'utiliser des agrégats de données appelés liste et dictionnaire. Vous apprendrez un peu plus tard à les utiliser. En programmation par objet, vous apprendrez aussi à créer vos propres types de données, mais vous n'y êtes pas encore !</div><br>
Si vous voulez rendre votre code lisible et compréhensible (car bientôt vous utiliserez des dizaines voire des centaines de lignes de code !), essayez d'utiliser des noms de variable explicites. J'utilise la normalisation suivante pour les noms de mes variables :<br>
<ul>
<li>Tous les noms de variables commencent par une lettre minuscule</li>
<li>Les noms de variables ne sont composés que de lettres et de chifffres</li>
<li>Chaque mot au sein d'un nom prend une majuscule (sauf le premier)</li>
</ul>La norme à utiliser est libre mais doit être constante pour rendre le code plus lisible et facilement compréhensible.<br>
<br>
<span class="souligne">Astuce :</span> vous pouvez déclarer plusieurs variables en une seule ligne de code. Pour cela, regardez cet exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="s">'Peuh !'</span><span class="p">,</span> <span class="bp">True</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, sont déclarées quatre variables <span class="italique">a, b, c</span> et <span class="italique">d</span> avec respectivement les valeurs 3, 23, 'Peuh !' et <span class="italique">True</span>. Remarquez que les variables ainsi déclarées peuvent être de types tout à fait différents, cela ne pose aucun problème.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278220">Utiliser des variables</h2>
		<div class="ss_part_texte">
		Avoir des variables, c'est bien mais les utiliser, c'est mieux ! Regardons ce que l'on peut en faire avec un petit essai dans le shell.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mf">5.78</span><span class="p">,</span> <span class="mf">34e2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
<span class="mi">26</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span>
<span class="mf">5.78</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span>
<span class="mi">26</span>
</pre></div>
</td></tr></tbody></table></div><br>
Voyons dans l'ordre ce que je fais :<br>
<ul>
<li>Je déclare quatre variables a, b, c et d et leur affecte les valeurs 3, 23, 5.78 et 34e2 (ceci est une notation scientifique qui signifie 34*10^2)</li>
<li>Je demande de calculer le résultat de a + b : il me donne 26, ce qui est correct !</li>
<li>Je lui demande d'afficher la valeur de c</li>
<li>J'affecte la valeur a + b à la variable c</li>
<li>J'affiche c et constate que sa valeur est bien devenue celle de a + b</li>
</ul>Avec tout ceci, je m'aperçois donc que je peux utiliser mes variables dans des calculs ! Je peux donc faire des gros calculs en plusieurs fois en stockant des variables. Mais je peux aussi faire des opérations avec les chaînes de caractères (<span class="italique">string</span>) :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">peuh</span> <span class="o">=</span> <span class="s">"Peuh ! "</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">peuh</span> <span class="o">*</span> <span class="mi">4</span>
<span class="s">'Peuh ! Peuh ! Peuh ! Peuh ! '</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ainsi, je vous "peuhte" quatre fois en disant que je veux quatre fois ma chaîne de caractères !<br>
<br>
Il existe aussi d'autres moyens d'affecter une valeur en effectuant une opération par la même occasion. Pour faire cela, vous pouvez utiliser les symboles suivants :<br>
<table class="tab_user">								








<thead><tr><th>Symbole</th><th>Equivalent</th></tr></thead><tbody><tr>
<td>a += 2</td>
<td>a = a + 2</td>
</tr><tr>
<td>a -= 2</td>
<td>a = a - 2</td>
</tr><tr>
<td>a *= 2</td>
<td>a = a * 2</td>
</tr><tr>
<td>a /= 2</td>
<td>a = a / 2</td>
</tr><tr>
<td>a **= 2</td>
<td>a = a ** 2</td>
</tr><tr>
<td>a //= 2</td>
<td>a = a // 2</td>
</tr><tr>
<td>a %= 2</td>
<td>a = a % 2</td>
</tr></tbody></table><br>
Avec ces opérations, vous pouvez ainsi vous éviter la répétition du nom de certaines variables ! Avant de passer à la suite, entraînez-vous à déclarer des variables et à faire des opérations en les utilisant. Vous pouvez aussi essayer de les afficher dans la console avec ce que l'on a vu dans le programme Hello World.
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Bien, maintenant que vous savez déclarer des variables et les utiliser dans des calculs et l'affichage, on va passer à une partie un peu plus coriace où l'on va apprendre à contrôler le flux d'instructions. Ne paniquez pas, vous verrez, c'est simple !
	</div>
	
	<hr>
	<h1 id="chap_278274">Contrôle du flux (1/2)</h1>
	<div id="chap_intro">
	Vous savez créer des variables et faire des calculs. C'est bien mais ça ne nous avance pas beaucoup ! Vous pouvez utiliser Python comme une grosse calculatrice mais c'est à peu près tout pour le moment. Dans cette partie, vous allez apprendre à contrôler le flux d'instructions. Nous allons donc voir ici :<br>
<ul>
<li>Les conditions : pour faire quelque chose ou pas selon la situation</li>
<li>Les boucles : pour répéter des instructions</li>
</ul>Cela paraît court dit comme ça, mais cette partie sera assez longue car c'est une des plus importantes de ce cours ! Et vous devrez maîtriser parfaitement tout ce qui se trouve dans cette partie car ce sera la base de tous vos programmes ! Au boulot !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278236">Si ça... alors ça...</h2>
		<div class="ss_part_texte">
		La première chose qui va vous permettre de gérer le flux d'instructions, ce sont les structures conditionnelles. Comment fait-on une structure conditionnelle ? Et bien voici un petit exemple qui va vous permettre de voir comment cela fonctionne :<br>
<br>
<span class="code">Code : Python - v3 - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">print</span><span class="p">(</span><span class="s">"Coucou !"</span><span class="p">)</span>
<span class="n">unNombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Donnez moi un nombre : "</span><span class="p">)</span>
<span class="k">if</span> <span class="n">unNombre</span> <span class="o">&lt;</span> <span class="s">"50"</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Votre nombre est plus petit que 50."</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">unNombre</span> <span class="o">==</span> <span class="s">"50"</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Votre nombre est exactement 50"</span><span class="p">)</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Votre nombre est plus grand que 50."</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="code">Code : Python - v2.7 - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">print</span> <span class="s">"Coucou !"</span>
<span class="n">unNombre</span> <span class="o">=</span> <span class="nb">raw_input</span><span class="p">(</span><span class="s">"Donnez moi un nombre : "</span><span class="p">)</span>
<span class="k">if</span> <span class="n">unNombre</span> <span class="o">&lt;</span> <span class="s">"50"</span> <span class="p">:</span>
    <span class="k">print</span> <span class="s">"Votre nombre est plus petit que 50."</span>
<span class="k">elif</span> <span class="n">unNombre</span> <span class="o">==</span> <span class="s">"50"</span> <span class="p">:</span>
    <span class="k">print</span> <span class="s">"Votre nombre est exactement 50"</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="k">print</span> <span class="s">"Votre nombre est plus grand que 50."</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq attention">N'essayez pas d'entrer autre chose qu'un nombre pour le moment. Nous gèrerons les erreurs plus tard dans le cours.</div><br>
Alors, que faisons-nous ici ? Voyons ligne par ligne les nouveautés.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">unNombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Donnez moi un nombre : "</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, j'utilise la fonction <span class="italique">input</span> (tout comme <span class="italique">print</span>) qui permet à l'utilisateur d'interagir avec le programme. Cette ligne déclare donc une variable <span class="italique">unNombre</span>, écrit dans la console "Donnez moi un nombre : " et attend que l'utilisateur entre quelque chose dans la console pour donner une valeur à <span class="italique">unNombre</span>.<br>
<br>
<span class="code">Code : Python - v3 - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">if</span> <span class="n">unNombre</span> <span class="o">&lt;</span> <span class="mi">50</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Votre nombre est plus petit que 50."</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">unNombre</span> <span class="o">==</span> <span class="mi">50</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Votre nombre est exactement 50"</span><span class="p">)</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Votre nombre est plus grand que 50."</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, c'est la structure conditionnelle. Pour les non anglophones, je traduis les mots clés : si (<span class="italique">if</span>), autre si (<span class="italique">elif</span>, contraction de <span class="italique">else if</span>) et sinon/autre (<span class="italique">else</span>). Voyons plus en détail comment cette structure est construire. La première ligne :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">if</span> <span class="n">unNombre</span> <span class="o">&lt;</span> <span class="s">"50"</span> <span class="p">:</span>
</pre></div>
</td></tr></tbody></table></div><br>
est composé de trois choses :<br>
<ul>
<li><strong>if</strong> : cela marque le début de la structure conditionnelle</li>
<li><strong>unNombre &lt; 50</strong> : ici, on effectue la comparaison de la variable <span class="italique">unNombre</span> avec le nombre 50. Le résultat de cette opération sera un booléen qui vaudra donc soit <span class="italique">True</span> (vrai) soit <span class="italique">False</span> (faux)</li>
<li><strong>':'</strong> : qui est le caractère qui marque la fin de la condition. </li>
</ul>Notre ligne revient donc à dire "Si ma variable <span class="italique">unNombre</span> est inférieure à 50 alors...". Mais alors quoi me demanderez-vous ! La structure n'est pas terminée, il faut maintenant lui dire quoi faire si cette condition se vérifie. C'est ce que va faire la ligne suivante :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">print</span><span class="p">(</span><span class="s">"Votre nombre est plus petit que 50."</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Si la condition est vérifiée, alors je lui demande d'écrire quelque chose dans la console. Remarquez bien que cette ligne est indentée, c'est-à-dire qu'une marge marquée par un caractère tabulation (ou un nombre fixe d'espaces) va indiquer que cette ligne ne doit être exécutée uniquement si la condition a été vérifiée ! Cette ligne est appelée <strong>un bloc de code</strong> et pourrait en fait être composée d'autant de lignes de code que vous le souhaitez. Ca y est ! Vous contrôlez le flux d'instructions ! La suite :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">elif</span> <span class="n">unNombre</span> <span class="o">==</span> <span class="s">"50"</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Votre nombre est exactement 50"</span><span class="p">)</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Votre nombre est plus grand que 50."</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
est parfaitement facultative. Elle permet de compléter la condition en indiquant d'autres actions possibles si la première condition ne se vérifie pas. Ainsi, si le nombre n'est pas plus petit que 50, alors nous vérifions s'il est égale ou non à 50. Si oui, le bloc de code correspondant est exécuté. Le dernier cas marqué par <span class="italique">else</span> s'exécutera à chaque fois qu'aucune des conditions au dessus n'a été vérifiée.<br>
En résumé, notre code en langage naturel donnerait :<br>
<br>
<span class="code">Code : Autre - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
</pre></td><td class="code"><div class="syntax"><pre>Ecrire&nbsp;"Coucou&nbsp;!"
Demander&nbsp;d'écrire&nbsp;un&nbsp;nombre.
Si&nbsp;ce&nbsp;nombre&nbsp;est&nbsp;plus&nbsp;petit&nbsp;que&nbsp;50,&nbsp;écrire&nbsp;"Votre&nbsp;nombre&nbsp;est&nbsp;plus&nbsp;petit&nbsp;que&nbsp;50."
Si&nbsp;ce&nbsp;nombre&nbsp;vaut&nbsp;50,&nbsp;écrire&nbsp;"Votre&nbsp;nombre&nbsp;vaut&nbsp;exactement&nbsp;50".
Si&nbsp;ce&nbsp;nombre&nbsp;ne&nbsp;correspond&nbsp;à&nbsp;aucune&nbsp;des&nbsp;conditions&nbsp;ci-dessus,&nbsp;écrire&nbsp;"Votre&nbsp;nombre&nbsp;est&nbsp;plus&nbsp;grand&nbsp;que&nbsp;50".</pre></div></td></tr></tbody></table></div>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278279">Les blocs de code</h2>
		<div class="ss_part_texte">
		Petite parenthèse, voyons un peu comment fonctionnent les blocs de code en Python tant que c'est encore nouveau pour vous ! Rappelons déjà ce qu'est un bloc de code. Un bloc de code, de façon générale, c'est un ensemble d'instructions. En Python, il sera caractérisé par son indentation, c'est-à-dire le nombre de tabulations ou d'espaces en début de chacune des lignes qui le composent.<br>
<br>
Il est possible d'imbriquer des blocs de code les uns dans les autres. On peut donc avoir quelque chose de la forme :<br>
<div class="centre"><img src="./Langage Python_files/242086.png" alt="Blocs de code imbriqués"></div><br>
Ainsi, on peut effectuer des instructions dans un bloc, créer un nouveau bloc puis reprendre notre premier bloc. Si l'on convertit le schéma ci-dessus en exemple, on pourrait avoir quelque chose de la forme :<br>
<br>
<span class="code">Code : Python - v3 - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">print</span><span class="p">(</span><span class="s">"Bloc de code principal !"</span><span class="p">)</span>
<span class="k">if</span> <span class="n">trucMuche</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Premier bloc de code !"</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">machinTruc</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Second bloc de code !"</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">biduleChouette</span> <span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">"Troisième bloc de code !"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Retour dans le second bloc de code !"</span><span class="p">)</span>
     <span class="k">print</span><span class="p">(</span><span class="s">"Retour dans le premier bloc de code !"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Retour dans le bloc de code principal !"</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, <span class="italique">trucMuche, machinTruc</span> et <span class="italique">biduleChouette</span> sont des variables de type booléen. On peut donc chaîner les blocs de code sans aucun problème ! C'est ce qui va vous permettre de contrôler votre flux d'instructions.<br>
<br>
Maintenant, revenons en aux structures conditionnelles avec un petit cours de logique !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278278">Un peu de logique</h2>
		<div class="ss_part_texte">
		Revenons en à nos booléens et à nos si ! Un petit rappel de ce dont vous avez besoin pour faire une structure conditionnelle :<br>
<ul>
<li>Le mot clé <span class="italique">if</span></li>
<li>Un booléen</li>
<li>Un caractère ':'</li>
</ul><div class="rmq question">Euh, je fais comment des booléens déjà ? Et c'est quoi ?!  <img src="./Langage Python_files/huh.png" alt=":o" class="smilies"> </div><br>
Alors un booléen, c'est une variable qui vaut soit <span class="italique">True</span> (vrai), soit <span class="italique">False</span> (faux). C'est un peu une sorte d'interrupteur si vous voulez, il est soit ouvert soit fermé. Et comme il existe des opérations pour créer des nombres, il existe des opérations pour créer des booléens qui donneront <span class="italique">True</span> si c'est vérifié et <span class="italique">False</span> sinon :<br>
<br>
<table class="tab_user">







<thead><tr><th>Symbole</th><th>Signification</th></tr></thead><tbody><tr>
<td>==</td>
<td>égalité</td>
</tr><tr>
<td>!=</td>
<td>inégalité</td>
</tr><tr>
<td>&gt;</td>
<td>supériorité stricte</td>
</tr><tr>
<td>&gt;=</td>
<td>supériorité</td>
</tr><tr>
<td>&lt;</td>
<td>infériorité stricte</td>
</tr><tr>
<td>&lt;=</td>
<td>infériorité</td>
</tr></tbody></table><br>
Avec toutes ces opérations, vous pouvez donc comparer des données numériques (comme vous avez sûrement appris quand vous étiez à l'école primaire <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"> ).<br>
<br>
<div class="rmq attention">Il ne faut surtout pas confondre les opérations = et ==. Dans un cas, cela affecte une valeur à une variable, dans un autre, les valeurs de deux variables sont comparées !</div><br>
<div class="rmq information">Les opérateurs de supériorité ou d'infériorité fonctionnent aussi sur les chaînes de caractères en considérant l'ordre alphabétique.</div><br>
Il existe ensuite trois opérateurs (sous forme de mots clés) pour modifier ou combiner des booléens :<br>
<ul>
<li><strong>and</strong> (et) qui permet de multiplier les booléens.</li>
<li><strong>or</strong> (ou) qui permet d'additionner les booléens.</li>
<li><strong>not</strong> (non) qui permet d'inverser les booléens.</li>
</ul>Pour mieux comprendre comment fonctionnent les booléens, considérez qu'ils prennent pour valeur 0 ou 1 (d'ailleurs, dans certains langages, les booléens n'existent pas et sont en fait représentés par 0 ou 1).<br>
Pour ceux qui ne sont pas familiers avec l'utilisation des booléens, nous allons voir comment fonctionnent ces opérations. Ici, nous allons considérer que 0 est faux et que tout autre nombre est vrai (et c'est le cas en Python, si vous utilisez des nombres directement comme booléen, vous constaterez que seul 0 vaut <span class="italique">False</span>, tout le reste vaut <span class="italique">True</span>). Vous allez voir, tout cela a du sens.<br>
On va traduire les opérations suivantes :<br>
<ul>
<li><span class="italique">bool1</span> <strong>and</strong> <span class="italique">bool2</span> : <span class="italique">bool1</span> * <span class="italique">bool2</span></li>
<li><span class="italique">bool1</span> <strong>or</strong> <span class="italique">bool2</span> : <span class="italique">bool1</span> + <span class="italique">bool2</span></li>
</ul> Maintenant, considérons les quatre cas possibles pour chacune de ces opérations :<br>
<table class="tab_user">



<thead><tr><th>Opération and/*</th><th>bool1 = 0</th><th>bool1 = 1</th></tr></thead><tbody><tr>
<td>bool2 = 0</td>
<td>0 / False</td>
<td>0 / False</td>
</tr><tr>
<td>bool2 = 1</td>
<td>0 / False</td>
<td>1 / True</td>
</tr></tbody></table><br>
<br>
<table class="tab_user">



<thead><tr><th>Opération or/+</th><th>bool1 = 0</th><th>bool1 = 1</th></tr></thead><tbody><tr>
<td>bool2 = 0</td>
<td>0 / False</td>
<td>1 / True</td>
</tr><tr>
<td>bool2 = 1</td>
<td>1 / True</td>
<td>2 / True</td>
</tr></tbody></table><br>
Ces petits tableaux (aussi appelés tables de vérité) permettent de mieux comprendre dans quel cas ces opérations donneront un résultat vrai et dans quels cas elles donneront un résultat faux.<br>
<br>
<div class="rmq information">La priorité des opérations <strong>and</strong> et <strong>or</strong> sont respectivement les mêmes que pour * et + (*/and est prioritaire donc). L'opérateur <strong>not</strong> ne s'appliquera qu'au booléen devant lequel il est placé et uniquement à celui-ci.</div><br>
Avec ceci, vous êtes donc capable de faire de belles conditions pour vos programmes. Entraînez vous un petit peu en essayant les opérations sur des petites opérations simples.<br>
<br>
<span class="souligne">Astuce :</span> On pense souvent une phrase logique lorsque l'on réfléchit à un problème mais des fois, c'est l'inverse que l'on veut tester... Et bien il existe deux petites formules appelées loi de Morgan qui sont très simples :<br>
<ul>
<li>not (bool1 and bool2) est équivalent à : not bool1 or not bool2</li>
<li>not (bool1 or bool2) est équivalent à : not bool1 and not bool2</li>
</ul>Si vous n'en êtes pas convaincu, essayez de faire les tables de vérités pour en vérifier le résultat et voir que cela donne bien le même tableau.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278257">Résumé</h2>
		<div class="ss_part_texte">
		Cette partie était un peu longue et vous avez certainement appris beaucoup de choses. Je vous propose donc un petit résumé de comment construire les structures conditionnelles en Python avec de petits exemples des différents formes qu'elle peut prendre :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">if</span> <span class="n">monBooleen</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
</pre></div>
</td></tr></tbody></table></div><br>
<strong><span class="tgros">OU</span></strong><br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">if</span> <span class="n">monBooleen</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
</pre></div>
</td></tr></tbody></table></div><br>
<strong><span class="tgros">OU</span></strong><br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">if</span> <span class="n">monBooleen</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
<span class="k">elif</span> <span class="n">unAutreBooleen</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
</pre></div>
</td></tr></tbody></table></div><br>
<strong><span class="tgros">OU</span></strong><br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">if</span> <span class="n">monBooleen</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
<span class="k">elif</span> <span class="n">unAutreBooleen1</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
<span class="k">elif</span> <span class="n">unAutreBooleen2</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
 <span class="o">.</span>
 <span class="o">.</span>
 <span class="o">.</span>

<span class="k">elif</span> <span class="n">unAutreBooleenN</span><span class="o">-</span><span class="mi">1</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
<span class="k">elif</span> <span class="n">unAutreBooleenN</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
</pre></div>
</td></tr></tbody></table></div>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Vous devez être incollable sur les problèmes de logique maintenant ! <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"><br>
<br>
Dans la deuxième partie consacrée au contrôle du flux d'instructions, vous apprendrez à répéter un ensemble d'instructions. Allez, hop hop hop, on avance !
	</div>
	
	<hr>
	<h1 id="chap_278261">Contrôle du flux (2/2)</h1>
	<div id="chap_intro">
	En programmant, vous verrez que vous serez souvent amené à répéter une suite d'instructions. Seulement, qui aurait envie de recopier du code encore et encore dans le but de répéter cette suite d'instructions ? Dans la plupart des langages de programmation, il existe ce que l'on appelle des structures itératives ou boucles. Ce sont des instructions et plus particulièrement des structures qui permettent alors de répéter des actions selon certaines conditions. Ici, nous allons voir comment créer des boucles. Nous verrons les différents types de boucles qui existent en Python et leur utilité :<br>
<ul>
<li>Les boucles <span class="italique">while</span></li>
<li>Les boucles <span class="italique">for</span></li>
</ul>Ce chapitre ne sera pas de tout repos alors accrochez-vous bien et surtout lisez bien ce qui va suivre !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278216">Tant que ...</h2>
		<div class="ss_part_texte">
		Souvent en programmation, on veut effectuer une suite d'instructions tant que certaines conditions sont respectées. On peut le faire avec la structure conditionnelle vue au chapitre précédent. Seulement, des fois, il peut être utile de répéter cette suite d'instructions et de les "faire tant que" les conditions sont respectées. C'est exactement ce que fait la boucle <span class="italique">while</span> (tant que). Elle se construit de la sorte :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">while</span> <span class="n">monBooleen</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
</pre></div>
</td></tr></tbody></table></div><br>
Nous avons donc ici une structure, c'est donc l'indentation qui permettra de déterminer les instructions à exécuter dans cette boucle. Si vous n'avez pas bien saisi ce qu'est l'indentation et son utilité, je vous conseille de relire le chapitre précédant.<br>
<br>
Que va faire cette boucle ? Et bien, elle va exécuter les instructions qui la suivent tant que <span class="italique">monBooleen</span> sera à la valeur <span class="italique">True</span>. Ainsi, si vous lancez ce code d'exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">while</span> <span class="bp">True</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Je suis une boucle infinie !"</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous devriez lancer ce que l'on appelle une boucle infinie et votre console devrait se remplir de la phrase "Je suis une boucle infinie !". C'est-à-dire que la suite d'instructions ne pourra jamais se terminer...<br>
<br>
<div class="rmq attention">Pour arrêter ce programme, souvenez-vous du raccourci clavier : <strong>ctrl+C</strong> !</div> <br>
Pour vous éviter ce genre de problèmes, il faut donc toujours s'assurer de pouvoir sortir d'une boucle (sauf si bien sûr, on ne souhaite pas en sortir, cela peut arriver !). Pour cela, on peut faire quelque chose de la forme :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">unNombre</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="n">unNombre</span> <span class="o">&lt;</span> <span class="mi">50</span> <span class="p">:</span>
    <span class="n">unNombre</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"J'apprends à compter :"</span><span class="p">,</span><span class="n">unNombre</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Essayez ce code afin de vous assurez qu'il incrémentera (ajoutera 1) <span class="italique">unNombre</span> tant que celui-ci sera inférieur à 50. De cette façon, on peut compter facilement un nombre d'opérations ou répéter une opération un nombre de fois voulu.<br>
<br>
Mais dans la pratique, vous verrez que la boucle <span class="italique">while</span> s'utilise particulièrement lorsque l'on veut exécuter un nombre de fois inconnu à l'avance une instruction. Par exemple, si vous demandez à un utilisateur de vous entrer des données mais que vous ne savez pas quand il souhaite s'arrêter à l'avance mais uniquement lorsqu'il l'indique. Prenons un petit exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">print</span><span class="p">(</span><span class="s">"Entrez des données. (Entrée vide pour arrêter)."</span><span class="p">)</span>
<span class="n">boucler</span> <span class="o">=</span> <span class="bp">True</span>
<span class="k">while</span> <span class="n">boucler</span> <span class="p">:</span>
    <span class="n">entree</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">entree</span> <span class="o">==</span> <span class="s">""</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Nous avons terminé !"</span><span class="p">)</span>
        <span class="n">boucler</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Vous avez entré :"</span><span class="p">,</span><span class="n">entree</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans ce petit programme, on ne sait pas combien de données l'utilisateur souhaite entrer. Seulement, il faut pouvoir s'arrêter. J'ai alors défini une condition d'arrêt de la boucle en insérant une structure conditionnelle imbriquée dans la boucle. Ainsi, lorsque l'entrée est vide, le programme sort de la boucle et peut se terminer.<br>
<br>
<h3>Mots clés : break et continue</h3><br>
Pour gérer les instructions au sein de vos boucles, il existe deux mots clés particulièrement utiles qui sont <span class="italique">break</span> (casser) qui arrête la boucle où qu'elle en soit et <span class="italique">continue</span> (continuer) qui passe à l'itération/pas de boucle suivant. On peut donc s'éviter l'utilisation d'un booléen pour marquer une sortie de boucle par exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">print</span><span class="p">(</span><span class="s">"Entrez des données. (Entrée vide pour arrêter)."</span><span class="p">)</span>
<span class="k">while</span> <span class="bp">True</span> <span class="p">:</span>
    <span class="n">entree</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">entree</span> <span class="o">==</span> <span class="s">""</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Nous avons terminé !"</span><span class="p">)</span>
        <span class="k">break</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Vous avez entré :"</span><span class="p">,</span><span class="n">entree</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, dès que l'utilisateur fera une entrée vide, la boucle sera "cassée" et le programme en sortira. Le fait d'utiliser ici l'instruction <span class="italique">break</span> exactement le même résultat que précédemment. Seulement, il vaut mieux éviter de l'utiliser car en plus du fait qu'il peut rendre le code moins facilement compréhensible, cela n'est pas très bon pour la performance de vos programmes ! A connaître mais à éviter donc.<br>
<br>
<br>
Le mot clé <span class="italique">continue</span>, lui, permet de passer directement à l'itération suivante sans exécuter la suite du bloc de code situé dans la boucle ! Par exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">unNombre</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="n">unNombre</span> <span class="o">&lt;</span> <span class="mi">50</span> <span class="p">:</span>
     <span class="n">unNombre</span> <span class="o">+=</span> <span class="mi">1</span>
     <span class="k">if</span> <span class="n">unNombre</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
          <span class="k">continue</span>
     <span class="k">print</span><span class="p">(</span><span class="s">"unNombre ="</span><span class="p">,</span><span class="n">unNombre</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, le code n'affichera<span class="italique"> unNombre</span> que lorsque celui-ci sera pair (unNombre%2 = 0), lorsque celui-ci est impair, il passe au pas de boucle suivant.<br>
<br>
Vous savez maintenant répéter une suite d'instructions. Nous allons voir qu'il existe un autre type de boucle qui s'applique aux objets itérables. Donc avant de voir cet autre type de boucle, définissons ce qu'est un objet itérable et voyons à quoi ils servent.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278241">Les séquences</h2>
		<div class="ss_part_texte">
		Tout d'abord commençons par la définition d'un objet itérable. C'est une séquence de données auxquelles il est possible d'accéder à l'aide d'un indice. Voyons ça avec l'aide d'un petit schéma d'une séquence de <span class="italique">N</span> éléments :<br>
<div class="centre"><img src="./Langage Python_files/242797.png" alt="Séquence"></div><br>
Une séquence est une suite de données placées en mémoire dans un ordre bien précis. Dans le schéma ci-dessus, on peut voir l'indice associé à chaque donnée dans la séquence.<br>
<br>
<div class="rmq attention">Les indices commencent à 0 ! Ainsi, les indices d'une séquence de longueur N iront de 0 à N-1 !</div><br>
Python est un des rares langages de programmation qui vous permet d'accéder aux éléments d'une séquence à l'aide d'indice négatif. Ainsi, -1 est associé au dernier élément de la séquence et -N au premier élément de la séquence. Mais alors, comment utilise-t-on les séquences en Python ? Il existe différents objets pour représenter des séquences, et il en existe un que vous connaissez déjà : les chaînes de caractères. En effet, ce sont des séquences ordonnées de caractères individuels. Et d'ailleurs, vous pouvez accéder aux caractères en particulier dans les chaînes de caractères via leur indice. Regardons un petit exemple dans le shell pour faire quelques essais :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">uneChaineDeCaracteres</span> <span class="o">=</span> <span class="s">"Peuh !"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">uneChaineDeCaracteres</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="s">'P'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">uneChaineDeCaracteres</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<span class="s">'!'</span>
</pre></div>
</td></tr></tbody></table></div><br>
On voit ici que je déclare une variable <span class="italique">uneChaineDeCaracteres</span> et je demande ensuite le premier élément puis le dernier. Vous constaterez que le résultat semble plutôt correct ! Aussi, pour accéder à un élément d'une séquence, la syntaxe est la suivante :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">sequence</span><span class="p">[</span><span class="n">indiceDeLElement</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq erreur">Si vous cherchez à atteindre un élément avec un indice plus grand que la taille de votre séquence, vous aurez une erreur typique : <span class="italique">index out of range</span>. Cela vous indique que l'indice que vous utilisez est trop grand !</div><br>
Maintenant que vous savez qu'une chaîne de caractères est une séquence, voyons un autre type de séquence très utile en Python : les listes. Vous en apprendrez bien plus sur ces séquences dans le chapitre qui y est consacré mais voyons déjà comment cela se déclare :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">uneListe</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Peuh !'</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="mf">28.2</span><span class="p">,</span> <span class="s">'Pouet !'</span><span class="p">,</span> <span class="bp">False</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, je déclare donc <span class="italique">uneListe</span> et lui affecte une suite de données. Ces données ne sont pas forcément toutes du même type ! Et maintenant, je peux obtenir ces données à l'aide de leur indice associé :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">uneListe</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Peuh !'</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="mf">28.2</span><span class="p">,</span> <span class="s">'Pouet !'</span><span class="p">,</span> <span class="bp">False</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">uneListe</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="mi">23</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">uneListe</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
<span class="bp">True</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous savez maintenant qu'il existe des objets dit itérables, sur lesquels on peut donc effectuer des procédés itératifs (des boules) et c'est ce que nous allons voir tout de suite avec la boucle <span class="italique">for</span>.<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278251">Pour chaque ... dans ...</h2>
		<div class="ss_part_texte">
		Maintenant que vous commencez à connaître les séquences, une question doit vous venir à l'esprit : comment peut-on parcourir ces séquences ? Et bien c'est en cela qu'est utile la boucle <span class="italique">for</span>. Elle va vous permettre de répéter une suite d'instructions pour chaque élément de votre séquence. Voyons tout de suite un exemple de code :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">uneSequence</span> <span class="o">=</span> <span class="s">"Peuh !"</span>
<span class="k">for</span> <span class="n">lettre</span> <span class="ow">in</span> <span class="n">uneSequence</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"uneSequence contient la lettre :"</span><span class="p">,</span><span class="n">lettre</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
En langage naturel, on peut traduire ce petit code par :<br>
<br>
<span class="code">Code : Autre - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
</pre></td><td class="code"><div class="syntax"><pre>Je&nbsp;déclare&nbsp;une&nbsp;chaîne&nbsp;de&nbsp;caractères.
Pour&nbsp;chaque&nbsp;lettre&nbsp;dans&nbsp;cette&nbsp;séquence&nbsp;:
Ecrire&nbsp;"uneSequence&nbsp;contient&nbsp;la&nbsp;lettre&nbsp;:"&nbsp;et&nbsp;la&nbsp;lettre&nbsp;en&nbsp;question.</pre></div></td></tr></tbody></table></div><br>
Ainsi, vous avez parcouru votre séquence et récupéré chaque élément de cette séquence dans la variable appelée <span class="italique">lettre</span>. La boucle for s'utilise donc de cette façon :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">for</span> <span class="n">variableDeRecuperation</span> <span class="ow">in</span> <span class="n">sequence</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous définissez donc une variable dans laquelle sera stockée à chaque pas de la boucle la valeur d'une donnée dans la séquence. C'est simple non ? Vous verrez, c'est particulièrement pratique lorsque l'on travaille avec des ensembles de données !<br>
<br>
Nous avons vu un peu plus avant comment répéter une suite d'instructions un nombre de fois limité. Ici, si vous connaissez à l'avance le nombre de fois que vous devez répéter vos instructions, vous pouvez utiliser aussi les boucles <span class="italique">for</span>. Pour cela, il vous suffit par exemple, de créer une liste avec une suite de nombres. Seulement, vous n'allez pas le faire à la main ! Les concepteurs de Python, comme tous les programmeurs, sont fainéants. Ainsi, ils ont créé une fonction, au même titre que <span class="italique">print</span> et <span class="italique">input</span>, qui permet de créer une liste correspondant à une suite de nombres : <span class="italique">range</span>(). Voyons un peu ce que fait cette fonction. Pour l'appeler c'est simple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">sequence</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Cette exemple créera alors une séquence équivalente à la liste : [0,1,2,3,4,5,6,7,8,9]. <br>
<br>
<div class="rmq attention">En version 3 de Python, cette fonction ne retourne pas une liste. Cette fonction crée un objet itérable organisé de type <span class="italique">range</span>, donc une séquence à ne pas confondre avec une liste qui est un type particulier de séquence !</div><br>
Mais vous pouvez aussi l'utiliser directement dans la déclaration d'une boucle &lt;/attention&gt;<span class="italique">for</span> comme ceci :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"i ="</span><span class="p">,</span><span class="n">i</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous voyez alors que <span class="italique">i</span> prend successivement les valeurs de 0 à 9. <br>
<br>
<div class="rmq information">En mathématique, on utilise souvent i, j, k ou l comme indice. Les noms explicites sont donc de rigueur en programmation mais lorsque l'on boucle sur des indices, ces petites lettres sont parfaitement compréhensibles. Ne soyez donc pas surpris de rencontrer ces notations !</div><br>
Essayez donc de vous entraîner à utiliser les boucles avant de passer à la suite, mais si vous êtes impatient, le TP sera un excellent entraînement !
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Bien, maintenant que vous connaissez les premières bases de la programmation, vous êtes fin prêt à faire de vous-même un programme. Ne vous inquiétez pas, je vais vous guider ! Il est donc temps de passer aux travaux pratiques !
	</div>
	
	<hr>
	<h1 id="chap_278235">TP 1 : Le Juste Prix</h1>
	<div id="chap_intro">
	Vous y voilà, votre premier TP ! Ici, vous apprendrez à penser comme un programmeur et à vous débrouiller (pas trop quand même) pour faire votre premier programme tout seul !<br>
Dans cette partie, nous verrons donc :<br>
<ul>
<li>Comment réfléchir à un problème</li>
<li>Comment débugger un programme</li>
<li>Un corrigé détaillé de l'exercice</li>
</ul>Commençons sans plus attendre avec un jeu que tout le monde connaît : le jeu du Juste Prix !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278248">Poser le problème</h2>
		<div class="ss_part_texte">
		Le premier travail du programmeur est de bien poser le problème. Il est impossible de créer des programmes performants et/ou complexes si l'on ne réfléchit pas à comment on va le faire ! Et d'ailleurs, c'est une discipline à part entière appelée algorithmique. C'est la science des algorithmes.<br>
<br>
Je n'ai pas la prétention ici de vous faire un cours d'algorithmique mais nous allons voir comment l'on peut réfléchir et construire notre programme avant même d'écrire du code ! Commençons par le commencement.<br>
<br>
<h3>Enoncé du TP</h3><br>
Vous connaissez certainement ce jeu international appelé Juste Prix ! Et bien, dans ce jeu, lors de la grande finale, un candidat doit deviner la valeur d'un ensemble de cadeaux et s'il y arrive, il gagne le tout ! Alors, ce que nous voulons faire ici, c'est un petit jeu en console qui soit similaire. Les caractéristiques du programme sont donc :<br>
<ul>
<li>L'ordinateur doit générer un nombre aléatoire et nous proposer de deviner le montant.</li>
<li>A chaque essai, l'ordinateur doit dire si c'est plus ou moins.</li>
<li>Une fois le montant trouvé, il doit indiquer le nombre d'essais qu'il a fallu au joueur pour trouver la bonne réponse.</li>
</ul>Ce n'est pas très compliqué. Mais vous verrez, vous deviendrez vite fan de ce jeu ! Si vous souhaitez un petit exemple de ce que cela peut donner en console, voici ce que j'obtiens avec mon programme :<br>
<br>
<span class="code">Code : Autre - Juste Prix - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="code"><div class="syntax"><pre>-----------------
|&nbsp;Le&nbsp;Juste&nbsp;Prix&nbsp;|
-----------------
Choix&nbsp;de&nbsp;la&nbsp;difficulté&nbsp;:
1&nbsp;-&nbsp;Entre&nbsp;0&nbsp;et&nbsp;100
2&nbsp;-&nbsp;Entre&nbsp;0&nbsp;et&nbsp;1000
3&nbsp;-&nbsp;Entre&nbsp;0&nbsp;et&nbsp;10000
4&nbsp;-&nbsp;Entre&nbsp;0&nbsp;et&nbsp;100000
4
Le&nbsp;jeu&nbsp;commence,&nbsp;alors&nbsp;combien&nbsp;?
50000
C'est&nbsp;plus&nbsp;!
75000
C'est&nbsp;plus&nbsp;!
87000
C'est&nbsp;moins&nbsp;!
81000
C'est&nbsp;moins&nbsp;!
78000
C'est&nbsp;moins&nbsp;!
76500
C'est&nbsp;moins&nbsp;!
75750
C'est&nbsp;moins&nbsp;!
75375
C'est&nbsp;plus&nbsp;!
75500
C'est&nbsp;plus&nbsp;!
75625
C'est&nbsp;plus&nbsp;!
75700
Bravo,&nbsp;vous&nbsp;avez&nbsp;trouvé&nbsp;la&nbsp;bonne&nbsp;réponse&nbsp;après&nbsp;11&nbsp;essais</pre></div></td></tr></tbody></table></div><br>
<div class="rmq information">Dans cet exemple d'interface, vous pouvez voir que je trouve la réponse assez vite. Hormis un coup de chance assez remarquable, j'utilise un algorithme appelé dichotomie qui permet de trouver une information dans une grande liste très rapidement. Pour l'appliquer, c'est simple, il suffit de couper l'intervalle des valeurs possibles en deux. Ainsi, je divise par deux les possibilités à chacune de mes réponses !</div><br>
<h3>Penser l'algorithme</h3><br>
Bien, maintenant que nous avons l'énoncé de l'exercice, voyons ce que cet énoncé nous permet de définir sur notre algorithme et réfléchissons sur ce que nous utiliserons pour l'implémenter.<br>
<ul>
<li>On doit afficher quelque chose dans la console : nous utiliserons la fonction <span class="italique">print</span>.</li>
<li>On doit générer un nombre aléatoire : vous ne pouvez pas le deviner puisque vous ne l'avez jamais vu, mais il existe une fonction et même plusieurs pour générer des nombres pseudo-aléatoires. Alors je vous donne les deux lignes qui vous seront utiles. La première est à placer au début de votre code et permet de pouvoir utiliser la fonction qui génère des nombres aléatoires (pour plus d'informations sur les nombres aléatoires en informatique, je vous conseille la lecture de <a href="http://www.siteduzero.com/tutoriel-3-38766-l-aleatoire-en-c-et-c-se-servir-de-rand.html">l'excellent tutoriel de Natim et Sebsheep</a> à ce sujet !).<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">randint</span>
</pre></div>
</td></tr></tbody></table></div><br>
La deuxième est celle qui permet de générer le nombre aléatoire :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">nombreAleatoire</span> <span class="o">=</span> <span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Cette fonction génèrera un nombre entier aléatoire compris entre 0 et 100. Si vous voulez changer les bornes, il vous suffit de changer les valeurs entrées en paramètres dans la fonction.</li>
<li>On veut pouvoir intéragir avec l'utilisateur, nous utiliserons donc la fonction <span class="italique">input</span>.</li>
<li>La fonction <span class="italique">input</span> vous renverra une chaîne de caractères, il sera donc utile de la convertir en entier et Python est capable de le faire assez facilement. Dans les deux lignes qui suivent, il est demandé à l'utilisateur d'entrer quelque chose et la variable ainsi affectée est ensuite convertie en nombre à l'aide de la fonction <span class="italique">eval</span> (contraction de <span class="italique">evaluate</span>).<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">reponse</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>
<span class="n">reponse</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="n">reponse</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq attention">Pour ceux qui codent en Python v2.7, la fonction <span class="italique">input</span> existe aussi mais elle ne fait pas exactement la même chose. En effet, si l'utilisateur entre un nombre, elle donera alors directement un nombre... L'équivalent de la fonction <span class="italique">input</span> de la version 3 en Python v2.7 est<span class="italique"> raw_input</span>. Dans la pratique, seule cette dernière fonction est utilisée, c'est pour cela qu'elle a été supprimée dans la version 3.</div><br>
</li>
<li>Le nombre d'essais effectués par l'utilisateur est, <span class="italique">a priori</span>, inconnu. Il faudra donc répéter une suite d'instructions un nombre de fois indeterminé. C'est donc une boucle <span class="italique">while</span> qui semble être la réponse à ce genre de problème.</li>
<li>L'ordinateur doit indiquer au joueur si le montant à deviner est plus grand ou plus petit que la réponse donnée, c'est donc une structure conditionnelle qui sera utilisée.</li>
</ul>Vous voyez ? Un énoncé très court nous a donné une quantité d'informations très importante ! Nous avons ici tous les éléments qui vont composer notre programme. Donc à vous de jouer ! Allez, hop hop hop, au travail !<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278245">Débugger</h2>
		<div class="ss_part_texte">
		Lorsque vous commencerez à programmer et même quand vous aurez atteint un niveau d'expert, vous n'écrirez certainement jamais un code parfait ! C'est parfaitement humain de faire des erreurs de syntaxes ou de réflexions. Ainsi, il va falloir corriger votre code et retirer tous les bugs qui s'y trouvent. Heureusement, des outils et un peu de méthode permettent de trouver facilement vos erreurs.<br>
<br>
Pour toutes les erreurs de syntaxe, c'est-à-dire une erreur d'écriture d'une structure ou d'une affectation de variable, etc... l'interpréteur vous écrira toujours une erreur dans la console ! Il est là pour ça ! Et comme il est sympathique, il vous indique même où se trouve l'erreur dans votre code.<br>
Une erreur dans la console est composée de :<br>
<ul>
<li>La ligne qui n'est pas bonne.</li>
<li>Le numéro de la ligne et le nom du fichier dans lequel elle se trouve.</li>
<li>Le type d'erreur (fin de ligne inattendue, caractère non reconnu, etc...)</li>
</ul>Vous verrez plus tard d'ailleurs qu'il peut même afficher la suite d'instructions qui ne fonctionne pas pour vous permettre de mieux cibler l'erreur.<br>
Les erreurs les plus courantes que vous commettrez sûrement par inadvertance sont les suivantes :<br>
<ul>
<li>Oubli du caractère ':' dans la définition d'une structure.</li>
<li>Mauvaise indentation</li>
<li>Utilisation de '=' à la place de '==' et inversement.</li>
</ul><div class="rmq attention">En cas d'oubli du caractère ':', il se peut que l'interpréteur ne vous indique par la bonne ligne et vous dise qu'une instruction n'est pas correcte. Pensez donc bien à vérifier que vous n'avez rien oublié dans la définition de vos structures si la ligne que vous voyez dans l'erreur vous semble parfaitement correcte.</div><br>
Ces erreurs sont facilement évitables en relisant votre code mais aussi avec l'expérience. La syntaxe deviendra naturelle avec la pratique et vous ferez de moins en moins de fautes d'étourderie.<br>
<br>
L'autre type d'erreur est là entièrement votre faute et correspond à un problème de raisonnement. Les erreurs les plus courantes sont :<br>
<ul>
<li>Un indice trop grand dans une liste (<span class="italique">index out of range</span>) : faites attention à ne pas utiliser un indice plus grand que la taille de votre liste lorsque vous voulez accéder à un élément...</li>
<li>Une boucle infinie : la condition de sortie de la boucle n'est jamais vérifiée... Cela se passe le plus souvent lorsque que votre programme semble tourner dans le vide... Il n'y a qu'une seule solution à ça : <strong>ctrl + C</strong>. Cette commande "tuera" votre programme et vous permettra de le relancer sans faire souffrir inutilement votre ordinateur. Pensez donc bien à pouvoir sortir de vos boucles (<span class="italique">while</span>).</li>
<li>Une condition qui ne se vérifie pas : essayez de poser votre problème logique en langage naturel. Traduisez ensuite vos phrases logiques en opérations. Et n'oubliez pas les lois de Morgan (cf chapitre Contrôle du flux (1/2)).</li>
</ul>Voilà les principales erreurs que vous rencontrerez. Il n'y en a pas tant que ça mais vous verrez que le débuggage est en réalité la partie la plus longue du travail du programmeur !<br>
<br>
<span class="souligne">Astuce :</span> Un bon moyen de débugger est de regarder la valeur de vos différentes variables et de suivre le flux d'instructions. Pour cela, des outils appelés débuggers existent pour la plupart des langages. Malheureusement, ces outils sont souvent difficiles à utiliser et demandent une certaine expérience. C'est pourquoi, vous pouvez utiliser la méthode primitive qui a fait ses preuves : utiliser <span class="italique">print</span> ! Ainsi, vous pouvez vous mettre des marqueurs en indiquant dans la console quelle partie du code est en train d'être exécutée mais aussi la valeur de certaines variables qui vous intéressent. C'est un peu sale mais rapide et efficace ! Bien sûr, pensez à retirer tous ces <span class="italique">print</span> de votre code une fois le débuggage terminé !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278217">Corrigé et amélioration</h2>
		<div class="ss_part_texte">
		Bon, j'espère que vous avez réussi à faire quelque chose de potable sans avoir trop d'erreurs ! Maintenant, essayez tout de même de voir mon corrigé, peut-être verrez vous des choses intéressantes. Je vais essayer de l'expliquer en détail. <br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code"><a href="http://www.siteduzero.com/v3">Code : Python</a> - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># -*- coding: latin-1 -*-</span>
<span class="c">#########################</span>
<span class="c"># Juste Prix            #</span>
<span class="c"># --------------------- #</span>
<span class="c"># Créé : le 29/06/2010  #</span>
<span class="c"># Auteur : Suzy         #</span>
<span class="c">#########################</span>

<span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">randint</span>

<span class="c">#Afficher l'interface :</span>
<span class="k">print</span><span class="p">(</span><span class="s">"-----------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
      <span class="s">"| Le Juste Prix |</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
      <span class="s">"-----------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
      <span class="s">"Choix de la difficulté :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
      <span class="s">"1 - Entre 0 et 100</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
      <span class="s">"2 - Entre 0 et 1000</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
      <span class="s">"3 - Entre 0 et 10000</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
      <span class="s">"4 - Entre 0 et 100000"</span><span class="p">)</span>

<span class="c">#Laisser le choix de la difficulté à l'utilisateur :</span>
<span class="n">difficulte</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>
<span class="k">while</span> <span class="p">(</span><span class="n">difficulte</span> <span class="o">!=</span> <span class="s">"1"</span> <span class="ow">and</span> <span class="n">difficulte</span> <span class="o">!=</span> <span class="s">"2"</span> <span class="ow">and</span>
       <span class="n">difficulte</span> <span class="o">!=</span> <span class="s">"3"</span> <span class="ow">and</span> <span class="n">difficulte</span> <span class="o">!=</span> <span class="s">"4"</span><span class="p">)</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Veuillez entrer quelque chose de correct !"</span><span class="p">)</span>
    <span class="n">difficulte</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>

<span class="c">#Initialiser les variables :</span>
<span class="n">nbEssais</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">reponse</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
<span class="c">#Générer un nombre aléatoire :</span>
<span class="k">if</span> <span class="n">difficulte</span> <span class="o">==</span> <span class="s">"1"</span> <span class="p">:</span>
    <span class="n">aDeviner</span> <span class="o">=</span> <span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">difficulte</span> <span class="o">==</span> <span class="s">"2"</span> <span class="p">:</span>
    <span class="n">aDeviner</span> <span class="o">=</span> <span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1000</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">difficulte</span> <span class="o">==</span> <span class="s">"3"</span> <span class="p">:</span>
    <span class="n">aDeviner</span> <span class="o">=</span> <span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10000</span><span class="p">)</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="n">aDeviner</span> <span class="o">=</span> <span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100000</span><span class="p">)</span>

<span class="c">#Indiquer que le jeu à commencé :</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Le jeu commence, alors combien ?"</span><span class="p">)</span>

<span class="c">#Boucle principale :</span>
<span class="k">while</span> <span class="n">reponse</span> <span class="o">!=</span> <span class="n">aDeviner</span> <span class="p">:</span>
    <span class="n">nbEssais</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="c">#Vérifier qu'un nombre est bien donné :</span>
    <span class="n">reponseEstUnNombre</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="k">while</span> <span class="ow">not</span> <span class="n">reponseEstUnNombre</span> <span class="p">:</span>
        <span class="n">reponse</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>
        <span class="k">try</span> <span class="p">:</span>
            <span class="n">reponse</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="n">reponse</span><span class="p">)</span>
            <span class="n">reponseEstUnNombre</span> <span class="o">=</span> <span class="bp">True</span>
        <span class="k">except</span> <span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">"Vous devriez donner un nombre..."</span><span class="p">)</span>
    <span class="c">#Dire si c'est plus ou moins :</span>
    <span class="k">if</span> <span class="n">reponse</span> <span class="o">&lt;</span> <span class="n">aDeviner</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"C'est plus !"</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">reponse</span> <span class="o">&gt;</span> <span class="n">aDeviner</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"C'est moins !"</span><span class="p">)</span>

<span class="c">#Terminer le jeu :</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Bravo, vous avez trouvé la bonne réponse après"</span><span class="p">,</span><span class="n">nbEssais</span><span class="p">,</span> <span class="s">"essais !"</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
<div class="rmq information">Il n'existe jamais qu'une solution en programmation. La version que je propose n'est pas parfaite et n'est qu'une solution parmi d'autres. Sur un programme comme celui-ci, la performance générale n'est pas perceptible et la seule chose qui compte est ce que l'utilisateur, lui, perçoit ! Ne soyez donc pas découragé si votre programme n'est pas identique à mon corrigé !</div><br>
Alors, voyons les choses dans l'ordre :<br>
<ul>
<li><strong>Lignes 1 à 7</strong> : Je précise l'encodage de mon fichier (je peux donc utiliser les accents dans mes commentaires sans aucun problème par exemple) puis je documente mon script en précisant son nom, sa date de création et son auteur, moi <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"> )</li>
<li><strong>Ligne 9</strong> : J'importe la fonction qui permet de générer des entiers aléatoires.</li>
<li><strong>Lignes 12 à 19</strong> : J'affiche une petite interface textuelle dans la console avec un choix à faire pour l'utilisateur. Notez ici que je n'utilise qu'une seule fois <span class="italique">print</span> ! Je ne vous l'ai pas dit mais il existe un caractère spécial qui indique un retour à la ligne, c'est le <span class="italique">\n</span> que vous voyez. En utilisant ce caractère, je fais donc l'équivalent de plusieurs <span class="italique">print</span>. De même, tant que je suis à l'intérieur d'une parenthèse, les espaces ou tabulations ne sont pas considérés comme des indentations délimitant des blocs de code. Je suis donc libre d'aligner mon code à ma guise pour le rendre plus lisible.</li>
<li><strong>Lignes 22 à 26</strong> : Je demande à l'utilisateur de choisir une difficulté à l'aide de la fonction <span class="italique">input()</span>. Afin que l'utilisateur ne fasse pas bugger mon programme par simple cruauté envers sa machine, je décide de vérifier que sa réponse est correcte. Comme je ne connais pas le degré de stupidité et/ou de sadisme de l'utilisateur, j'utilise une boucle <span class="italique">while</span> qui me permet de gérer sa bêtise à l'infini ! S'il ne donne pas une réponse correspondant à l'un des choix que je lui laisse, je lui indique qu'il n'a pas répondu quelque chose de correct et je lui redemande son choix.</li>
<li><strong>Lignes 29 à 39</strong> : Je déclare des variables pour stocker le nombre d'essais que l'utilisateur à fait, la réponse qu'il donne (que j'initialise à -1 afin d'être sûr qu'elle ne sera pas égale par inadvertance au nombre à deviner) et enfin, en fonction de la difficulté choisie, je génère un nombre entier aléatoire.</li>
<li><strong>Ligne 42</strong> : J'indique que le jeu a commencé.</li>
<li><strong>Ligne 45</strong> : Je commence ma boucle principale. Elle doit continuer tant que l'utilisateur n'a pas trouvé la bonne réponse.</li>
<li><strong>Ligne 46</strong> : J'incrémente le nombre d'essais du joueur.</li>
<li><strong>Lignes 48 à 55 </strong>: Je crée ici une boucle pour gérer une entrée qui ne serait pas un nombre correct. Ainsi, si l'utilisateur rentre n'importe quoi, je ne pourrai pas effectuer la comparaison de sa réponse avec le nombre à deviner. Pour ne pas que cela arrive, j'utilise le bloc de code <span class="italique">try</span> qui me permet d'essayer de faire quelque chose et que ça puisse ne pas fonctionner sans que mon programme plante ! Vous verrez comment utiliser ce type de bloc de code dans le chapitre consacré aux exceptions.</li>
<li><strong>Lignes 57 à 60 </strong>: Je dis au joueur si le nombre à deviner est plus grand ou plus petit que celui qu'il a donné. Attention, ici, il ne faut pas oublier que l'on sort de la boucle principale s'il donne la bonne réponse, il n'est pas nécessaire en toute logique de tester le cas d'égalité !</li>
<li><strong>Ligne 63</strong> : Je suis sorti de la boucle principale, le joueur a donc trouvé la bonne réponse. Je lui affiche alors en combien d'essais il l'a trouvée.</li>
</ul><br>
Pour ceux d'entre vous qui coderaient en Python v2.7, voici un corrigé :<br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code">Code : Python - v2.7 - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># -*- coding: latin-1 -*-</span>
<span class="c">#########################</span>
<span class="c"># Juste Prix            #</span>
<span class="c"># --------------------- #</span>
<span class="c"># Créé : le 29/06/2010  #</span>
<span class="c"># Auteur : Suzy         #</span>
<span class="c">#########################</span>

<span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">randint</span>

<span class="c">#Afficher l'interface :</span>
<span class="k">print</span> <span class="s">"-----------------</span><span class="se">\n</span><span class="s">"</span>
<span class="k">print</span> <span class="s">"| Le Juste Prix |</span><span class="se">\n</span><span class="s">"</span>
<span class="k">print</span> <span class="s">"-----------------</span><span class="se">\n</span><span class="s">"</span>
<span class="k">print</span> <span class="s">"Choix de la difficulté :</span><span class="se">\n</span><span class="s">"</span>
<span class="k">print</span> <span class="s">"1 - Entre 0 et 100</span><span class="se">\n</span><span class="s">"</span>
<span class="k">print</span> <span class="s">"2 - Entre 0 et 1000</span><span class="se">\n</span><span class="s">"</span>
<span class="k">print</span> <span class="s">"3 - Entre 0 et 10000</span><span class="se">\n</span><span class="s">"</span>
<span class="k">print</span> <span class="s">"4 - Entre 0 et 100000"</span>

<span class="c">#Laisser le choix de la difficulté à l'utilisateur :</span>
<span class="n">difficulte</span> <span class="o">=</span> <span class="nb">raw_input</span><span class="p">()</span>
<span class="k">while</span> <span class="p">(</span><span class="n">difficulte</span> <span class="o">!=</span> <span class="s">"1"</span> <span class="ow">and</span> <span class="n">difficulte</span> <span class="o">!=</span> <span class="s">"2"</span> <span class="ow">and</span>
       <span class="n">difficulte</span> <span class="o">!=</span> <span class="s">"3"</span> <span class="ow">and</span> <span class="n">difficulte</span> <span class="o">!=</span> <span class="s">"4"</span><span class="p">)</span> <span class="p">:</span>
    <span class="k">print</span> <span class="s">"Veuillez entrer quelque chose de correct !"</span>
    <span class="n">difficulte</span> <span class="o">=</span> <span class="nb">raw_input</span><span class="p">()</span>

<span class="c">#Initialiser les variables :</span>
<span class="n">nbEssais</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">reponse</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
<span class="c">#Générer un nombre aléatoire :</span>
<span class="k">if</span> <span class="n">difficulte</span> <span class="o">==</span> <span class="s">"1"</span> <span class="p">:</span>
    <span class="n">aDeviner</span> <span class="o">=</span> <span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">difficulte</span> <span class="o">==</span> <span class="s">"2"</span> <span class="p">:</span>
    <span class="n">aDeviner</span> <span class="o">=</span> <span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1000</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">difficulte</span> <span class="o">==</span> <span class="s">"3"</span> <span class="p">:</span>
    <span class="n">aDeviner</span> <span class="o">=</span> <span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10000</span><span class="p">)</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="n">aDeviner</span> <span class="o">=</span> <span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100000</span><span class="p">)</span>

<span class="c">#Indiquer que le jeu à commencé :</span>
<span class="k">print</span> <span class="s">"Le jeu commence, alors combien ?"</span>

<span class="c">#Boucle principale :</span>
<span class="k">while</span> <span class="n">reponse</span> <span class="o">!=</span> <span class="n">aDeviner</span> <span class="p">:</span>
    <span class="n">nbEssais</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="c">#Vérifier qu'un nombre est bien donné :</span>
    <span class="n">reponseEstUnNombre</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="k">while</span> <span class="ow">not</span> <span class="n">reponseEstUnNombre</span> <span class="p">:</span>
        <span class="n">reponse</span> <span class="o">=</span> <span class="nb">raw_input</span><span class="p">()</span>
        <span class="k">try</span> <span class="p">:</span>
            <span class="n">reponse</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="n">reponse</span><span class="p">)</span>
            <span class="n">reponseEstUnNombre</span> <span class="o">=</span> <span class="bp">True</span>
        <span class="k">except</span> <span class="p">:</span>
            <span class="k">print</span> <span class="s">"Vous devriez donner un nombre..."</span>
    <span class="c">#Dire si c'est plus ou moins :</span>
    <span class="k">if</span> <span class="n">reponse</span> <span class="o">&lt;</span> <span class="n">aDeviner</span> <span class="p">:</span>
        <span class="k">print</span> <span class="s">"C'est plus !"</span>
    <span class="k">elif</span> <span class="n">reponse</span> <span class="o">&gt;</span> <span class="n">aDeviner</span> <span class="p">:</span>
        <span class="k">print</span> <span class="s">"C'est moins !"</span>

<span class="c">#Terminer le jeu :</span>
<span class="k">print</span> <span class="s">"Bravo, vous avez trouvé la bonne réponse après"</span><span class="p">,</span><span class="n">nbEssais</span><span class="p">,</span> <span class="s">"essais !"</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
Les codes sont relativement similaires, les deux seules différences étant la fonction <span class="italique">print</span> et la fonction <span class="italique">input</span>...<br>
<br>
Je vous ai promis quelques petites idées d'améliorations alors chose promise, chose due ! Voici une petite liste d'améliorations que vous pouvez apporter à votre programme :<br>
<ul>
<li>Proposer de rejouer à l'utilisateur.</li>
<li>Afficher les statistiques du joueur sur ses parties (combien de parties, dans quelle difficulté, moyenne d'essais, etc...)</li>
<li>Faire que ce soit vous qui donniez un nombre et à l'ordinateur de le trouver !</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Bravo ! Vous avez passé le premier cap et vous êtes maintenant un programmeur néophyte officiel ! Ah bah oui... Vous n'êtes pas encore amateur, vous avez encore tant de choses à apprendre !
	</div>
	
<div>
<br>
Maintenant que vous connaissez les bases pour écrire du code Python, passons à la suite avec un peu de structuration du code avec les fonctions. Vous allez voir, c'est coriace, mais vous ne pourrez plus vous en passer !
</div>

<hr>
<h2>Partie 2 : Bases et programmation fonctionnelle</h2>
<div>
Vous avez réussi à faire de vous-mêmes un petit jeu. Mais finalement, il vous reste énormément de choses à voir ! Dans cette partie, vous apprendrez les bases avancées du langages Python avec la gestion des fonctions et quelques concepts qui me semblent importants. Cette partie se consacre donc à la programmation dite fonctionnelle. Vous créerez vos propres fonctions et y ferez appel.
</div>
	
	<hr>
	<h1 id="chap_278246">Préludes aux fonctions</h1>
	<div id="chap_intro">
	Vous y êtes presque avec les bases de Python ! Dans cette partie, vous allez en apprendre un peu plus sur ce qu'est une fonction et à quoi cela peut bien servir.<br>
Vous verrez aussi qu'il existe de nombreuses fonctions prédéfinies qui peuvent être particulièrement utiles pour toute sorte d'applications !<br>
<br>
Encore une fois, ne perdons pas trop de temps en bavardage et mettons nous au travail !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278234">Qu'est-ce qu'une fonction ?</h2>
		<div class="ss_part_texte">
		Commençons par définir ce que l'on appelle une fonction en programmation. Vous en avez déjà utilisé jusqu'à maintenant et vous savez certainement que c'est un morceau de code que l'on appelle et qui va effectuer une suite d'actions. Les choses importantes qui vont composer une fonction sont :<br>
<ul>
<li><strong>Son nom</strong> : cela vous permettra de l'appeler.</li>
<li><strong>Ses entrées</strong> : ce sont des données/variables que vous lui passerez qui sont appelées paramètres ou arguments. En python, ces arguments sont placés entre parenthèses.</li>
<li><strong>Sa sortie</strong> : ce que la fonction vous retournera comme résultat qui pourra être stocké dans une variable.</li>
</ul> Pour appeler une fonction, on a alors un code du type :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">variablePourStockerLaSortie</span> <span class="o">=</span> <span class="n">nomDeLaFonction</span><span class="p">(</span><span class="n">argument1</span><span class="p">,</span> <span class="n">argument2</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Finalement, une fonction, c'est un peu une boîte noire. Tout ce qui vous importe c'est ce que vous lui donnez en entrée et ce qu'il en ressort. Les moyens mis en oeuvre à l'intérieur de celle-ci n'ont pas besoin d'être connus. Si l'on prend l'exemple de <span class="italique">print</span>, vous savez que vous lui passez en argument des données à écrire et que cela vous les écrit. Mais vous n'avez pas besoin de savoir comment cela se fait ! Cette fonction ne vous retourne d'ailleurs aucun résultat.<br>
<br>
De même si l'on étudie la fonction <span class="italique">input</span>. On voit que l'on connaît son nom, <span class="italique">input</span>. On peut aussi choisir de lui passer en argument une chaîne de caractères ou une suite de données à afficher. Le résultat est que cela sera affiché, que l'utilisateur devra entrer quelque chose et que cette entrée sera retournée pour être stockée dans une variable comme dans le code suivant :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">variable</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Je suis un argument à écrire en console !"</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous verrez au fur et à mesure du cours que les fonctions peuvent accepter des arguments facultatifs, c'est-à-dire que vous n'êtes pas obligé de leur donner une valeur. De même, une partie de ces arguments facultatifs peut être appelée dans le désordre du moment que vous spécifier le nom des arguments. Schématiquement, cela donne :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">variable</span> <span class="o">=</span> <span class="n">fonction</span><span class="p">(</span><span class="n">argument1</span><span class="p">,</span> <span class="n">argument2</span><span class="p">,</span> <span class="n">nomArgument</span> <span class="o">=</span> <span class="n">valeur</span><span class="p">,</span> <span class="n">nomArgument2</span> <span class="o">=</span> <span class="n">valeur2</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous allez voir qu'il existe en Python de nombreuses fonctions intégrées que vous serez amené à utiliser régulièrement.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278233">Fonction intégrées et importées</h2>
		<div class="ss_part_texte">
		Les fonctions intégrées sont des fonctions que vous pouvez appeler dans n'importe quel code Python et qui seront toujours parfaitement définies. Vous en avez déjà utilisé. <span class="italique">print, input</span> et <span class="italique">eval</span> sont des fonctions intégrées (<span class="italique">built-in functions</span> en anglais). Mais vous allez voir que vous pouvez aussi importer des fonctions existantes utiles pour toute sorte d'applications.<br>
<br>
<h3>Fonctions intégrées</h3><br>
Une liste non exhaustive de fonctions intégrées :<br>
<ul>
<li><strong>print</strong> : permet d'écrire dans la console.</li>
<li><strong>input</strong> : permet de récupérer des entrées au clavier.</li>
<li><strong>eval</strong> : évalue la valeur numérique d'une chaîne de caractères correspondant à un nombre ou une suite d'opérations mathématiques.</li>
<li><strong>range</strong> : retourne une séquence de nombres entiers compris entre 0 et le nombre passé en argument.</li>
<li><strong>min/max</strong> : retourne le minimum/maximum dans les élements de la séquence passée en argument.</li>
<li><strong>len</strong> : retourne la longueur d'une séquence passée en paramètre.</li>
<li>Et bien d'autres...</li>
</ul>Pour trouver la liste complète des fonctions intégrées au langages Python, vous pouvez aller lire la documentation au lien suivant :<br>
<br>
<div class="centre"><span class="gros"><a href="http://docs.python.org/py3k/library/functions.html">http://docs.python.org/py3k/library/functions.html</a></span></div><br>
<div class="rmq attention">Quelque soit le langage de programmation que vous utiliserez, la documentation sera en anglais. Je vous avais dit que vous deviez vous y mettre, il est temps de vraiment commencer !</div><br>
Sur cette page, vous trouverez absolument toutes les fonctions intégrées au langage. Pour chacune d'elle, vous avez son nom et entre parenthèses les arguments qu'elle peut accepter. Le tout est accompagné d'un petit texte explicatif avec quelques fois des exemples lorsque la fonction est un peu complexe. <br>
<br>
<div class="rmq information">Si ce genre de page vous rebute, vous n'irez pas très loin en programmation car c'est souvent sur ce type de page que vous passerez votre temps afin de comprendre comment utiliser telle ou telle fonction ! Il n'y a pas de méthode particulière pour lire la documentation... Il suffit de lire, de tester par soi-même pour bien saisir le fonctionnement de ce que l'on utilise et c'est tout. Les forums de développeurs pourront aussi vous apporter des quantités d'informations utiles. Il est rare que vous ayez un problème que personne n'ait jamais rencontré !</div><br>
<h3>Importer des fonctions</h3><br>
Sur la page de documentation que je vous ai donnée, vous ne trouverez que les fonctions intégrées directement à Python. Mais il en existe bien d'autres ! Des milliers d'autres ! Et vous pouvez toutes y avoir accès sans rien installer de plus sur votre ordinateur ! Pour cela, il suffit de les importer. Souvenez-vous, dans les travaux pratiques sur le Juste Prix, je vous avait donné deux lignes de codes à utiliser pour générer des nombres pseudo-aléatoires. La première d'entre elles était :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">randint</span>
</pre></div>
</td></tr></tbody></table></div><br>
Cette ligne importe la fonction <span class="italique">randint</span> afin de la rendre utilisable dans notre code. On y trouve le mot clé <span class="italique">from</span> suivi du nom du module <span class="italique">random</span>. Le mot clé <span class="italique">from</span> permet d'indiquer un nom de module dont on veut importer les fonctions. Le mot clé <span class="italique">import</span> permet quand à lui d'importer des fonctions particulières, ici <span class="italique">randint</span>. Littéralement, la ligne ci-dessus pourrait se traduire par : Du module <span class="italique">random</span>, importer la fonction <span class="italique">randint</span>.<br>
<br>
Pour importer des fonctions, on peut alors utiliser la forme suivante :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">from</span> <span class="nn">nomDuModule</span> <span class="kn">import</span> <span class="n">nomDeLafonction1</span><span class="p">,</span> <span class="n">nomDeLafonction2</span><span class="p">,</span> <span class="o">...</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ainsi, vous pouvez importer en une seule ligne plusieurs fonctions provenant d'un même module en séparant les noms de fonction par des virgules. Si vous faites ainsi, vous pouvez utilisez directement les fonctions importées en utilisant leur nom au même titre que <span class="italique">print</span> ou <span class="italique">input</span>.<br>
<br>
<div class="rmq information">Vous pouvez importer toutes les fonctions d'un module d'un seul coup en remplaçant les noms de fonction par un symbole *. Ainsi, vous n'aurez pas besoin de connaître le nom de toutes les fonctions que vous désirez importer ni de les taper... Exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">from</span> <span class="nn">nomDuModule</span> <span class="kn">import</span> <span class="o">*</span>
</pre></div>
</td></tr></tbody></table></div></div><br>
Il existe une autre manière d'importer des fonctions :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">nomDuModule</span>
</pre></div>
</td></tr></tbody></table></div><br>
En effectuant une telle importation, vous importez en réalité un module dans son ensemble et vous ne pourrez pas faire appel aux fonctions simplement avec leur nom. Pour y faire appel, vous devrez préciser le module auxquelles elles appartiennent. Pour appeler une fonction du module que vous avez importer, vous devrez alors taper quelque chose de la forme suivante :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">sortie</span> <span class="o">=</span> <span class="n">nomDuModule</span><span class="o">.</span><span class="n">nomDeLaFonction</span><span class="p">(</span><span class="n">arguments</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Cela est particulièrement utile lorsque plusieurs modules que vous importez possèdent des fonctions du même nom. Cela peut arriver plus souvent qu'on ne le pense. De cette manière, vous levez toutes les ambiguïtés qu'il pourrait y avoir et vous vous éviterez quelques crises de nerfs !<br>
<br>
Si vous voulez savoir ce qu'il vous est possible de faire avec les modules de base en Python, un chapitre y est consacré dans la suite du cours. Sinon, si vous vous sentez l'âme d'un aventurier anglophone, vous pouvez toujours vous lancer directement dans la documentation officielle complète :<br>
<br>
<div class="centre">Python v3 :<br>
<span class="gros"><a href="http://docs.python.org/py3k/">http://docs.python.org/py3k/</a></span><br>
Python v2 :<br>
<span class="gros"><a href="http://docs.python.org/">http://docs.python.org/</a></span></div>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278272">Exemple : manipuler des fichiers</h2>
		<div class="ss_part_texte">
		Maintenant que vous avez mieux compris ce qu'est une fonction, nous allons voir un bel exemple de fonctions intégrées qui permettent de manipuler des fichiers ! Vous en aurez besoin pour lire des fichiers mais aussi pour enregistrer des données par exemple.<br>
<br>
<h3>Ouvrir un fichier</h3><br>
Pour pouvoir manipuler un fichier, il faut d'abord en ouvrir un ! Pour cela, une fonction intégrée, <span class="italique">open</span>, permet d'ouvrir un fichier. Elle demande deux arguments : le nom du fichier (ou le chemin vers ce fichier) à ouvrir et le mode de lecture. On a donc quelque chose de cette forme :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">nomDuFichier</span><span class="p">,</span> <span class="n">modeDeLecture</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Cette fonction retourne un objet de type fichier auquel on pourra appliquer des fonctions que nous allons voir. Il est ouvert dans le mode de lecture spécifié. Mais qu'est-ce qu'un mode de lecture ? C'est simple ! Cela indique si vous voulez lire et/ou écrire le fichier. Les principaux modes de lectures sont les suivants :<br>
<ul>
<li><strong>"r"</strong> comme <span class="italique">read</span> (lire) : ouverture en lecture uniquement (le fichier doit exister !)</li>
<li><strong>"w"</strong> comme <span class="italique">write </span>(écrire) : ouverture en écriture uniquement (crée le fichier, l'efface préalablement s'il existe déjà)</li>
<li><strong>"a"</strong> comme <span class="italique">append</span> (ajouter) : ouverture en mise à jour (crée le fichier, écrit à partir de la fin du fichier s'il existe déjà)</li>
<li><strong>"r+"</strong> : ouverture en lecture et écriture</li>
<li><strong>"w+"</strong> : ouverture en lecture et écriture (a le même effet que 'w')</li>
<li><strong>"a+"</strong> : ouverture en lecture et écriture (a le même effet que 'a')</li>
</ul>Vous voyez donc qu'il est possible de lire et/ou d'écrire un fichier suivant ce que l'on veut en faire. Le mode de lecture seule vous évite notamment de modifier un fichier par inadvertance...<br>
<br>
<div class="rmq information">Par défaut, si vous ne précisez pas de mode de lecture, le fichier sera ouvert en lecture uniquement.</div><br>
Le chemin spécifié pour le fichier prend sa racine dans le dossier d'exécution du programme. Si vous voulez charger un fichier dans un sous dossier, il faut donc le préciser. Par exemple, si vous avez un dossier "textes" dans lequel vous voulez lire un fichier appelé "Peuh.txt", pour l'ouvrir il faudra utiliser le code suivant : <br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"textes/Peuh.txt"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans un soucis de compréhension, même si vous ne souhaitez que lire le fichier, essayez de toujours spécifier le mode de lecture. Cela permet d'éviter les ambiguïtés !<br>
<br>
<div class="rmq information">"../" remontera dans le dossier parent. Ces deux points peuvent être utilisés n'importe où dans le chemin d'accès à un fichier et constitue le nom générique pour désigner le dossier parent.</div><br>
<h3>Ecrire un fichier</h3><br>
Maintenant que vous savez comment ouvrir un fichier, nous allons voir comment écrire dans un fichier. C'est la fonction <span class="italique">write</span> appliquée à un fichier qui va permettre de faire ça. Mais aussi, lorsque l'on ne veut plus rien faire avec un fichier, il faut penser à le fermer à l'aide de la fonction <span class="italique">close</span>. Pour écrire dans un fichier, nous utiliserons donc quelque chose dans ce style :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"test.txt"</span><span class="p">,</span><span class="s">"w"</span><span class="p">)</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">"Peuh ! J'essaye d'écrire dans un fichier !"</span><span class="p">)</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Remarquez ici que les fonctions <span class="italique">write</span> et <span class="italique">close</span> sont directement appliquées à la variable fichier. Cela indique donc que les opérations que l'on demande d'effectuer doivent se faire dans ce fichier là et pas un autre.<br>
<br>
<div class="rmq attention">Si vous oubliez de fermer votre fichier avant la fin de votre programme, il se peut que celui-ci ne soit pas sauvegardé ! Vous ne pourrez donc pas y trouver ce que vous vouliez y écrire !</div><br>
Vous pouvez appliquer plusieurs fois la fonction <span class="italique">write</span> à un même fichier. Dans une boucle par exemple, pour écrire une suite de données calculées ou issues d'une séquence. Par exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"test.txt"</span><span class="p">,</span><span class="s">"w"</span><span class="p">)</span>
<span class="k">for</span> <span class="n">indice</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span> <span class="p">:</span>
    <span class="n">fichier</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">"Je suis la ligne "</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">indice</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="s">" !</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Si vous regardez le fichier qui résulte de l'exécution de ce programme, vous verrez 30 lignes écrites. J'utilise ici une fonction intégrée que vous ne connaissez pas : <span class="italique">str</span>. Cette fonction permet de changer le type d'une variable pour la transformer en chaîne de caractères. Il en existe pour tous les types de bases :<br>
<ul>
<li><span class="italique">int</span> : convertit en <span class="italique">integer</span> (entier)</li>
<li><span class="italique">float</span> : convertit en <span class="italique">float</span> (nombre décimal, à virgule flottante) </li>
<li><span class="italique">bool</span> : convertit en <span class="italique">boolean</span> (booléen)</li>
<li><span class="italique">str</span> : convertit en <span class="italique">string</span> (chaîne de caractères)</li>
</ul><div class="rmq attention">Si vous utilisez ces fonctions, vous devez vous assurer que la conversion est effectivement possible. En outre, seule la conversion des types de base en chaîne de caractères est toujours possible !</div><br>
<div class="rmq information">Dans le chapitre suivant consacré aux chaînes de caractères, vous apprendrez à formater les chaînes de caractères. Cela vous évitera d'utiliser les fonctions de conversion de type qui peut rendre le code assez vite illisible...</div><br>
Pour écrire dans un fichier, il existe aussi la fonction appelée <span class="italique">writelines</span> (écrire lignes) qui permet d'écrire tous les éléments d'une liste dans un fichier. Le code suivant :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">liste</span> <span class="o">=</span> <span class="p">[</span><span class="s">"Peuh !</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="s">"Alors, heureux ?!</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="s">"Allez, cassos !</span><span class="se">\n</span><span class="s">"</span><span class="p">]</span>
<span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"test.txt"</span><span class="p">,</span><span class="s">"w"</span><span class="p">)</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">writelines</span><span class="p">(</span><span class="n">liste</span><span class="p">)</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Malheureusement, contrairement à ce que pourrait laisser penser le nom de la fonction, <span class="italique">writelines</span> n'écrit pas les éléments de la liste passée en paramètre sur plusieurs lignes. C'est pourquoi je rajoute ici le caractère de fin de ligne à la fin de chacune des chaînes de caractères dans ma liste.<br>
<br>
<h3>Lire un fichier</h3><br>
Pour lire un fichier, vous devez d'abord l'ouvrir, et ensuite la méthode <span class="italique">readline</span> (lire ligne) retournera tout d'abord la première ligne. Puis si vous la rappelez, la seconde et ainsi de suite jusqu'à la fin du fichier. Par exemple, si l'on reprend le fichier précédemment créé et qu'on exécute ce code :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"text.txt"</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">fichier</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">fichier</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Il devrait s'afficher :<br>
<br>
<span class="code">Code : Console - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 console"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre></pre></td><td class="code"><div class="syntax"><pre>Peuh&nbsp;!
Alors,&nbsp;heureux&nbsp;?!</pre></div></td></tr></tbody></table></div><br>
dans la console. Mais un fichier est en fait une séquence, c'est-à-dire un objet itérable ! Vous pouvez donc facilement boucler sur de tels objets pour en lire toutes les lignes. Par exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"text.txt"</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">fichier</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Si vous exécuter ce code, vous pouvez d'ailleurs remarquer que le fichier de fin de ligne "\n" est aussi lu lors de la lecture du fichier ! Il ne faut pas l'oublier si vous voulez travailler sur ce qui a été lu.<br>
<br>
Enfin, si vous ne voulez pas boucler directement sur le fichier, il est possible de récupérer l'ensemble de son contenu dans une liste à l'aide de la fonction <span class="italique">readlines</span> (lire lignes) qui retourne l'ensemble des lignes du fichier sous forme de liste.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"text.txt"</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="n">liste</span> <span class="o">=</span> <span class="n">fichier</span><span class="o">.</span><span class="n">readlines</span><span class="p">()</span>
<span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="n">liste</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ce code fait exactement la même chose que le précédent. Seulement, si vous vouliez travailler sur la liste des lignes avant, il est ici possible de le faire.<br>
<br>
<h3>Se déplacer dans un fichier</h3><br>
Vous vous êtes peut-être posé la question de savoir comment le programme fait pour savoir où l'on en est dans le fichier lorsqu'on lui demande d'appliquer la fonction <span class="italique">readline</span>... Et bien la réponse est simple : la position actuelle dans le fichier est enregistrée ! Cette position est accessible via la fonction <span class="italique">tell</span> (dire) qui retourne la position actuelle du programme dans le fichier. Il est ensuite possible de déplacer le curseur de lecture du fichier à l'aide de la fonction <span class="italique">seek</span> (chercher). Et enfin, la fonction <span class="italique">readline</span> peut prendre en argument un nombre d'octets à lire. Cela vous permet donc de cibler parfaitement un endroit de votre fichier à lire. Par exemple, si l'on veut lire, dans notre fichier précédent, uniquement le mot "heureux", il suffit de faire :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"text.txt"</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="c">#Je place mon curseur où il faut :</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="c">#Je ne lis que le mot heureux :</span>
<span class="n">mot</span> <span class="o">=</span> <span class="n">fichier</span><span class="o">.</span><span class="n">readline</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">mot</span><span class="p">)</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
La fonction <span class="italique">seek</span> accepte deux arguments. Le premier indique le nombre d'octet dont on souhaite se déplacer. Le second indique la position à partir de laquelle on souhaite se déplacer (0 pour commencer du début du fichier, 1 pour la position courante ou 2 pour la fin du fichier).<br>
<br>
Vous avez maintenant une petite idée de ce qu'il est possible de faire avec des fichiers. Prenez le temps de vous entraîner à écrire et à lire des fichiers. Vous en aurez certainement besoin un jour ! <br>
<br>
<div class="rmq information">Pour ceux que cela intéresse, il est aussi possible d'ouvrir les fichiers en mode binaire (suite de 0 et de 1). Cela se fait en rajoutant un 'b' dans le mode de lecture passé en paramètre de la fonction <span class="italique">open</span>. Ce mode de lecture et d'écriture de fichier n'est pas le plus utile ni le plus courant, c'est pourquoi je ne le présente pas ici, mais sachez que cela existe.</div>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Vous savez maintenant ce qu'est une fonction. Si vous avez déjà en tête des idées de programmes qui vous intéressent, n'hésitez pas à consulter la documentation pour voir comment le faire ! Car tout est toujours faisable ! Il suffit juste de savoir quelle fonction permet de le faire... Maintenant, nous allons revenir sur les chaînes de caractères et voir quelques exemples de fonctions très utiles que l'on peut leur appliquer.
	</div>
	
	<hr>
	<h1 id="chap_278242">Les chaînes de caractères</h1>
	<div id="chap_intro">
	Nous avons déjà travaillé avec des chaînes de caractères et pour cause, jusqu'à maintenant, nous nous contentons d'écrire des programmes qui fonctionnent en console. Vous allez voir que l'on peut faire plein de choses intéressantes sur les chaînes de caractères !<br>
<br>
Dans cette partie, nous allons donc voir :<br>
<ul>
<li>Un rappel sur les chaînes de caractères</li>
<li>Quelques fonctions bien pratiques</li>
<li>Un exemple avec la création d'une syntaxe</li>
</ul>Vous verrez que vous ne pourrez plus vous passez des chaînes de caractères après ce chapitre ! Bien les maîtriser vous permettra d'écrire et de lire des fichiers facilement par exemple, et ça, vous en aurez certainement besoin un jour ou l'autre ! Alors, au boulot !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278276">Rappel</h2>
		<div class="ss_part_texte">
		Nous avons utilisé des chaînes de caractères dans la plupart des chapitres précédents mais nous n'avons rien fait de très spécial jusqu'à maintenant ! Nous avons vu que ce sont des séquences, c'est-à-dire des suites ordonnées de caractères. Voyons en quelques essais dans le shell ce que nous avons vu jusqu'à maintenant :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span> <span class="o">=</span> <span class="s">"""Peuh !"""</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="s">'P'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span> <span class="o">*</span> <span class="mi">3</span>
<span class="s">'Peuh !Peuh !Peuh !'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">str</span><span class="p">(</span><span class="mi">218</span><span class="p">)</span>
<span class="s">'218'</span>
</pre></div>
</td></tr></tbody></table></div><br>
Et c'est à peu près tout ce que l'on a vu jusqu'à maintenant... Effectivement, c'est le strict nécessaire pour réussir à écrire quelque chose en console ! Il existe d'autres petites opérations bien pratiques pour la manipulation des séquences en générales qui s'appliquent donc aux chaînes de caractères. La première est le découpage qui vous permet d'accéder à une sous partie de votre séquence et la deuxième est le test d'appartenance d'un élément à une séquence. Voyons ce que cela donne en shell :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span> <span class="o">=</span> <span class="s">"Peuh ! Je suis une chaine !"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span><span class="p">[</span><span class="mi">3</span><span class="p">:]</span>
<span class="s">'h ! Je suis une chaine !'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span><span class="p">[:</span><span class="mi">5</span><span class="p">]</span>
<span class="s">'Peuh '</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span><span class="p">[</span><span class="mi">3</span><span class="p">:</span><span class="mi">5</span><span class="p">]</span>
<span class="s">'h '</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"uh"</span> <span class="ow">in</span> <span class="n">chaine</span>
<span class="bp">True</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"Je"</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">chaine</span>
<span class="bp">False</span>
</pre></div>
</td></tr></tbody></table></div><br>
Alors, le découpage se fait un peu de la même manière que l'accès à un élément d'une séquence par son indice. Ainsi, vous mettez entre crochets ([]) les indices auxquels vous voulez accédez et il vous retourne une chaîne de caractères tronquée comme vous le souhaitez. Remarquez que si aucun indice de départ ou de fin n'est spécifié, par défaut, ils seront définis au premier et au dernier indice de votre séquence.<br>
Les opérateurs <span class="italique">in</span> (dans) et <span class="italique">not in</span> (pas dedans) vous permette de tester la présence d'un élément dans votre séquence. Ainsi, vous pouvez constater que 'uh' et 'Je' font effectivement partie de la séquence <span class="italique">chaine</span>. Ces opérateurs peuvent être utilisés pour créer des booléens dans la définition des structures conditionnelles ou dans les boucles <span class="italique">while</span> sans aucun problème. En général, leur lecture est simple car on compose presque une phrase en langage naturel (pour peu que l'on parle anglais...) !<br>
<br>
Nous allons voir maintenant, que comme pour les fichiers, il est possible d'appliquer des fonctions aux chaînes de caractères.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278229">Fonctions sur les chaînes</h2>
		<div class="ss_part_texte">
		La première chose à faire lorsque l'on souhaite en connaître un peu plus sur ce que l'on peut faire avec certains objets, c'est de consulter la documentation ! Je vous donne donc déjà le lien de la documentation des types intégrées avec les fonctions que vous pourrez appliquer à vos chaines de caractères (<span class="italique">str</span>) :<br>
<br>
<div class="centre"><span class="gros"><a href="http://docs.python.org/py3k/library/stdtypes.html">http://docs.python.org/py3k/library/stdtypes.html</a></span></div><br>
Voyons maintenant ensemble quelques opérations plus ou moins utiles sur les chaînes de caractères. Pour cela, nous effectuerons quelques tests dans le shell. Nous allons commencer par les fonctions qui s'appliquent aux séquences en général et leurs effets sur les chaînes de caractères.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span> <span class="o">=</span> <span class="s">'Peuh !'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">chaine</span><span class="p">)</span>
<span class="mi">6</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">min</span><span class="p">(</span><span class="n">chaine</span><span class="p">)</span>
<span class="s">' '</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">max</span><span class="p">(</span><span class="n">chaine</span><span class="p">)</span>
<span class="s">'u'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine2</span> <span class="o">=</span> <span class="s">'Pouet!'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">zip</span><span class="p">(</span><span class="n">chaine</span><span class="p">,</span> <span class="n">chaine2</span><span class="p">)</span>
<span class="o">&lt;</span><span class="nb">zip</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x01F9C120</span><span class="o">&gt;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">chaine</span><span class="p">,</span> <span class="n">chaine2</span><span class="p">)</span> <span class="p">:</span>
	<span class="k">print</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>

<span class="p">(</span><span class="s">'P'</span><span class="p">,</span> <span class="s">'P'</span><span class="p">)</span>
<span class="p">(</span><span class="s">'e'</span><span class="p">,</span> <span class="s">'o'</span><span class="p">)</span>
<span class="p">(</span><span class="s">'u'</span><span class="p">,</span> <span class="s">'u'</span><span class="p">)</span>
<span class="p">(</span><span class="s">'h'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">)</span>
<span class="p">(</span><span class="s">' '</span><span class="p">,</span> <span class="s">'t'</span><span class="p">)</span>
<span class="p">(</span><span class="s">'!'</span><span class="p">,</span> <span class="s">'!'</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Quelques explications sur ces fonctions s'imposent :<br>
<ul>
<li><strong>len</strong> : diminutif de <span class="italique">length</span> (longueur), retourne la longueur de la séquence, c'est-à-dire le nombre d'éléments qui la composent.</li>
<li><strong>min</strong> : diminutif de minimum, retourne le plus petit élément de la séquence (dans notre cas, c'est l'ordre alphabétique qui est considéré)</li>
<li><strong>max</strong> : diminutif de maximum, retourne le plus grand élément de la séquence (considère aussi l'ordre alphabétique)</li>
<li><strong>zip</strong> : crée les couples d'éléments de même indice des séquences passées en argument. On remarque d'ailleurs ici que c'est un type d'objet <span class="italique">zip</span> qui est créé. Cet objet est itérable et j'utilise alors une boucle <span class="italique">for</span> pour en afficher le contenu.</li>
</ul>Ces fonctions peuvent s'appliquer à toutes les séquences et ne sont pas spécifiques aux chaînes de caractères. <br>
<br>
Nous allons tester des fonctions qui s'appliquent, elles, uniquement aux chaînes de caractères et dont on doit spécifier à quelle chaîne elle s'applique.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span> <span class="o">=</span> <span class="s">"peuh !"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span><span class="o">.</span><span class="n">capitalize</span><span class="p">()</span>
<span class="s">'Peuh !'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span><span class="o">.</span><span class="n">center</span><span class="p">(</span><span class="mi">18</span><span class="p">)</span>
<span class="s">'      peuh !      '</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s">"peu"</span><span class="p">)</span>
<span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s">'uh'</span><span class="p">)</span>
<span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"p"</span><span class="p">,</span><span class="s">"f"</span><span class="p">)</span>
<span class="s">'feuh !'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
<span class="p">[</span><span class="s">'peuh'</span><span class="p">,</span> <span class="s">'!'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">"h"</span><span class="p">)</span>
<span class="p">[</span><span class="s">'peu'</span><span class="p">,</span> <span class="s">' !'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span>
<span class="s">'PEUH !'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">chaine</span>
<span class="s">'peuh !'</span>
</pre></div>
</td></tr></tbody></table></div><br>
Il n'y a ici qu'un petit échantillon des fonctions que vous pouvez utilisez sur les chaînes de caractères. Si vous désirez une liste exhaustive, il faudra vous référer à la documentation ! Mais voyons tout de même ce que j'ai fait ici :<br>
<ul>
<li><strong>capitalize</strong> ("majusculer") : retourne la même chaine mais avec une majuscule pour la première lettre.</li>
<li><strong>center</strong> (centrer) : retourne la chaîne entourée d'espaces et centrée dans un ensemble dont la taille est donnée en paramètre. Ici, ma chaîne fait 6 caractères et je demande de centrer sur 18, la fonction rajoute alors 6 espaces de chaque côté de ma chaîne.</li>
<li><strong>count</strong> (compter) : retourne le nombre d'occurrences de la chaîne passée en argument présentes dans la chaîne à laquelle la fonction est appliquée.</li>
<li><strong>find</strong> (trouver) : retourne l'indice de la première occurrence de la chaîne cherchée passée en argument.</li>
<li><strong>replace</strong> (remplacer) : retourne la chaîne de caractères avec toutes les occurrences de la première chaîne passée en argument remplacée par la deuxième chaîne passée en argument.</li>
<li><strong>split</strong> (séparer) : retourne une liste de chaînes de caractères correspondant aux différentes parties de la chaîne initiale coupée par la chaîne passée en argument. Par défaut, c'est le caractères ' ' (espace) qui est utilisé.</li>
<li><strong>lower/upper</strong> (plus petit/plus grand) : retourne la chaîne tout en minuscule/majuscule.</li>
</ul><div class="rmq attention">Ces fonctions ne modifient en rien la chaîne de départ. Elles se contentent de retourner un résultat qu'il faudra stocker dans une variable si vous désirez vous en servir plus tard ! J'ai d'ailleurs fait afficher la valeur de ma chaîne à la fin pour que vous en soyez convaincu !</div><br>
Vous voyez donc que l'on peut faire de nombreuses opérations sur nos chaînes de caractères. Nous allons maintenant voir par un exemple, à quoi peuvent servir ces fonctions.<br>
<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278218">Exemple : créer une syntaxe</h2>
		<div class="ss_part_texte">
		Maintenant que nous avons vu quelques opérations de bases sur la manipulation des chaînes de caractères, nous allons voir un exemple concret avec la création d'une syntaxe pour la lecture et l'écriture de fichiers (afin d'utiliser aussi un peu ce que vous avez appris dans les chapitres précédents ! <img src="./Langage Python_files/langue.png" alt=":p"> ).<br>
<br>
Tout d'abord, qu'appelle-t-on une syntaxe ? Et bien, c'est une sorte de mini langage structuré dont on va reconnaître certaines formes. Lorsque vous écrivez du code Python, vous utilisez une syntaxe spécifique qui est reconnue par l'interpréteur pour être transformée en code machine.<br>
<br>
<div class="rmq erreur">Quoi ?! Nous allons voir comment créer un langage de programmation ?! Mais je ne sais pas faire ça moi !  <img src="./Langage Python_files/blink.gif" alt="o_O"> </div><br>
Ne vous inquiétez pas, nous allons nous contenter ici de créer une syntaxe très simple mais si vous voulez un jour créer votre propre langage de programmation, vous aurez déjà une petite idée de comment cela peut fonctionner !<br>
<br>
<h3>Définition du problème</h3><br>
Commençons par définir notre problème et ce que l'on veut faire. Imaginons par exemple que l'on veuille à partir d'un fichier que l'on va écrire à la main, générer plein de fichiers remplis avec des tables de calculs. En gros, je veux donner des opérations à effectuer puis des nombres sur lesquels effectuer ces opérations. Cela pourrait donner un fichier d'entrée de la forme :<br>
<br>
<span class="code">Code : Autre - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
</pre></td><td class="code"><div class="syntax"><pre>+,-,*,/,%
12&nbsp;38&nbsp;42.3&nbsp;98.345&nbsp;375.32&nbsp;23
[0,198,3]</pre></div></td></tr></tbody></table></div><br>
Par exemple, avec ce fichier, je veux écrire pour chacune des opérations données à la première ligne et pour chacun des nombres de la deuxième, le résultat de l'opération du premier nombre considéré avec chacun des nombres de la troisième ligne. En clair, je veux la table d'addition de 12 avec les nombres de 0 à 198 par pas de 3, pareil avec les autres opérations et avec les autres nombres. Je veux aussi pouvoir mettre des commentaires dans mon fichier en utilisant un caractère spécifique. Pour ne pas être original, nous choisirons le caractère utilisé en Python : #.<br>
<br>
L'utilisateur du programme doit pouvoir donner un nom de fichier à utiliser, ainsi qu'un nom de projet qui sera un repère pour les fichiers créés.<br>
<br>
<h3>Ecrire un fichier de test</h3><br>
Cette partie est la plus simple ! Nous allons nous contenter d'écrire un fichier de test qui nous servira à lancer notre programme et voir si le résultat généré est correct. Vous devriez donc créer un fichier texte du nom que vous voulez (je l'appellerai <span class="italique">test.txt</span>) contenant :<br>
<br>
<span class="code">Code : Autre - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
</pre></td><td class="code"><div class="syntax"><pre>#Je&nbsp;suis&nbsp;un&nbsp;fichier&nbsp;de&nbsp;test&nbsp;:
+,-,*,/,%,tr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#Je&nbsp;donne&nbsp;des&nbsp;opérations
12&nbsp;38&nbsp;42.3&nbsp;98.345&nbsp;375.32&nbsp;23&nbsp;&nbsp;#Puis&nbsp;des&nbsp;nombres
[0,198,3]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#Puis&nbsp;d'autres&nbsp;nombres</pre></div></td></tr></tbody></table></div><br>
L'opération 'tr' ne correspond à rien, cela va nous permettre de vérifier que les opérations qui n'existent pas ne seront effectivement pas prises en compte.<br>
<br>
<h3>Ecrire le programme</h3><br>
Nous allons écrire le programme ensemble au fur et à mesure. Alors tout d'abord, je commence par un petit en-tête pour indiquer l'encodage de mon fichier mais aussi les quelques commentaires habituels tels que l'auteur du script et sa date de création :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># -*- coding: latin-1 -*-</span>
<span class="c">##########################</span>
<span class="c"># Création d'une syntaxe #</span>
<span class="c"># ---------------------- #</span>
<span class="c"># Auteur : Suzy          #</span>
<span class="c"># Crée le : 02/07/2010   #</span>
<span class="c">##########################</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ensuite, l'utilisateur devra me donner un nom de fichier et j'espère bien que celui-ci existe. Il existe une fonction dans le module <span class="italique">os</span> de Python qui permet de vérifier l'existence d'un dossier ou d'un fichier. Je vais donc importer le module <span class="italique">os</span>.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># Utile pour vérifier l'existence d'un fichier :</span>
<span class="kn">import</span> <span class="nn">os</span>
</pre></div>
</td></tr></tbody></table></div><br>
J'affiche ensuite une petite interface simple juste pour marquer le début de mon programme de façon claire dans la console :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># Petite interface textuelle :</span>
<span class="k">print</span><span class="p">(</span><span class="s">"*******************************</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
      <span class="s">"* Exemple de syntaxe simple : *</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
      <span class="s">"*******************************"</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Afin de facilité la recherche des fichiers créés, nous allons demander un nom de projet à l'utilisateur :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># Demander le nom du projet :</span>
<span class="n">nomProjet</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Donnez un nom à votre projet : "</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Je veux maintenant récupérer le nom du fichier d'entrée que je devrais utiliser en vérifiant que celui-ci existe bien.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># Demander le nom du fichier à utiliser :</span>
<span class="n">nomFichier</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Quel fichier voulez-vous utiliser ? "</span><span class="p">)</span>
<span class="k">while</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">nomFichier</span><span class="p">)</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Ce fichier n'existe pas !"</span><span class="p">)</span>
    <span class="n">nomFichier</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Quel fichier voulez-vous utiliser ? "</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
La condition de la boucle <span class="italique">while</span> est assez explicite si vous parlez un peu anglais. Elle dit "Tant que le chemin <span class="italique">nomFichier</span> n'existe pas fait :". Ceci est un excellent exemple de la simplicité du langage Python ! Le code est parfaitement lisible et compréhensible par n'importe qui !<br>
<br>
<div class="rmq information">La fonction <span class="italique">exists</span> du module <span class="italique">os.path</span> retourne <span class="italique">True</span> si le fichier/chemin existe et <span class="italique">False</span> sinon.</div><br>
Maintenant que nous avons un nom de fichier correct, nous allons l'ouvrir et le lire ! Nous savons que seules trois lignes nous seront utiles. Nous allons donc compter les lignes afin d'identifier sur quelle ligne nous travaillons.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># Ouvrir le fichier :</span>
<span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">nomFichier</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="n">numeroLigne</span> <span class="o">=</span> <span class="mi">1</span>
<span class="c"># Lire le fichier :</span>
<span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">fichier</span> <span class="p">:</span>
    <span class="n">instructions</span><span class="o">...</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, on n'ouvre le fichier qu'en lecture car on ne veut pas le modifier. Maintenant va commencer l'analyse syntaxique. C'est-à-dire que nous allons traiter chacune des lignes du fichier pour en retirer les informations qui nous intéressent. Pour cela, on commence par nettoyer en jetant ce qui ne nous intéresse pas :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># Lire le fichier :</span>
<span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">fichier</span> <span class="p">:</span>
    <span class="c"># On retire le caractère de fin de ligne :</span>
    <span class="n">ligne</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="s">""</span><span class="p">)</span>
    <span class="c">#On retire les commentaires de la lignes :</span>
    <span class="n">ligne</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">"#"</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
    <span class="c"># On ne considère pas les lignes vides :</span>
    <span class="k">if</span> <span class="n">ligne</span> <span class="o">!=</span> <span class="s">""</span> <span class="p">:</span>
        <span class="n">instructions</span><span class="o">...</span>
</pre></div>
</td></tr></tbody></table></div><br>
Le caractère de fin de ligne ne nous intéresse jamais, il vaut mieux le retirer tout de suite. Ensuite, les commentaires ne nous intéressent pas non plus. On retire donc tout ce qui se trouve après le caractère '#'. Enfin, si la ligne est vide après ces traitements, c'est qu'elle ne contient rien d'intéressant, sinon, c'est que c'est une des lignes qui nous intéressent. Une fois que l'on a potentiellement quelque chose qui nous intéresse, on va lire la ligne et surtout lire la syntaxe que nous avons créée :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># On ne considère pas les lignes vides :</span>
    <span class="k">if</span> <span class="n">ligne</span> <span class="o">!=</span> <span class="s">""</span> <span class="p">:</span>
        <span class="k">if</span> <span class="n">numeroLigne</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">:</span>
            <span class="c"># On retire tous les espaces :</span>
            <span class="n">ligne</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">' '</span><span class="p">,</span><span class="s">''</span><span class="p">)</span>
            <span class="c"># On sépare les opérations :</span>
            <span class="n">operations</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)</span>
            <span class="k">print</span><span class="p">(</span><span class="n">operations</span><span class="p">)</span>
        <span class="k">elif</span> <span class="n">numeroLigne</span> <span class="o">==</span> <span class="mi">2</span> <span class="p">:</span>
            <span class="c"># On sépare les nombres :</span>
            <span class="n">premiersNombres</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">' '</span><span class="p">)</span>
            <span class="c"># On retire tous les espaces de trop :</span>
            <span class="k">while</span> <span class="s">''</span> <span class="ow">in</span> <span class="n">premiersNombres</span> <span class="p">:</span>
                <span class="n">premiersNombres</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s">''</span><span class="p">)</span>
            <span class="k">print</span><span class="p">(</span><span class="n">premiersNombres</span><span class="p">)</span>
        <span class="k">elif</span> <span class="n">numeroLigne</span> <span class="o">==</span> <span class="mi">3</span> <span class="p">:</span>
            <span class="c"># On retire les crochets et les espaces et on sépare les nombres : </span>
            <span class="n">deuxiemesNombres</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">' '</span><span class="p">,</span><span class="s">''</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"["</span><span class="p">,</span><span class="s">""</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"]"</span><span class="p">,</span><span class="s">""</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)</span>
            <span class="k">print</span><span class="p">(</span><span class="n">deuxiemesNombres</span><span class="p">)</span>
        <span class="n">numeroLigne</span> <span class="o">+=</span> <span class="mi">1</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq attention">Dans l'exemple que je donne, une mauvaise écriture du fichier d'entrée entraînera des erreurs ! Nous ne gèrerons pas ici les erreurs de syntaxe dans le fichier d'entrée, mais vous serez parfaitement capable de le faire après le chapitre consacré aux exceptions.</div><br>
Vous remarquerez ici que l'on peut utiliser les fonctions sur les chaînes de caractères soit séparément soit en les chaînant. En effet, le résultat de chacune de ces fonctions étant aussi une chaîne de caractères, on peut leur appliquer directement des fonctions ! Ce qui fait que dans l'analyse de la troisième ligne, le traitement ne tient qu'en une seule ligne ! <br>
<br>
<div class="rmq information">Les <span class="italique">print</span> ne sont ici que pour vous écrire ce qui sort exactement de cette première partie du programme. Cela vous permet de vérifier notamment que l'analyse syntaxique est bonne !</div><br>
Maintenant que l'on a récupéré les données qui nous intéressent dans notre fichier, il faut bien penser à le fermer :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="c">#Fermer le fichier :</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Notre fichier d'entrée ne nous intéresse maintenant plus et nous allons nous attaquer à l'écriture des fichiers de sorties. On veut donc un fichier différent pour chacune des opérations et chacune des valeurs de la première liste. Ensuite, il faudra remplir les fichiers avec l'ensemble des opérations. On va donc avoir la chose suivante :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># Pour chaque opération :</span>
<span class="k">for</span> <span class="n">operation</span> <span class="ow">in</span> <span class="n">operations</span> <span class="p">:</span>
    <span class="c"># Associer un nom à chaque opération et ne pas faire la suite</span>
    <span class="c"># si l'opération n'existe pas :</span>
    <span class="k">if</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'+'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'addition'</span>
    <span class="k">elif</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'-'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'soustraction'</span>
    <span class="k">elif</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'*'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'multiplication'</span>
    <span class="k">elif</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'/'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'division'</span>
    <span class="k">elif</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'%'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'modulo'</span>
    <span class="k">elif</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'**'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'puissance'</span>
    <span class="k">elif</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'//'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'divisionEntiere'</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"L'opération </span><span class="si">%s</span><span class="s"> n'est pas reconnue !"</span> <span class="o">%</span> <span class="p">(</span><span class="n">operation</span><span class="p">))</span>
        <span class="k">continue</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ceci va permettre de ne considérer que les opérations qui existent effectivement ! L'utilisateur sera donc libre de taper n'importe quoi pour les opérations, il verra bien si cela ne fonctionne pas ! J'utilise ici pour la première fois l'outil de formatage des chaînes de caractères à la ligne :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">print</span><span class="p">(</span><span class="s">"L'opération </span><span class="si">%s</span><span class="s"> n'est pas reconnue !"</span> <span class="o">%</span> <span class="p">(</span><span class="n">operation</span><span class="p">))</span>
</pre></div>
</td></tr></tbody></table></div><br>
L'opérateur % permet de remplacer les éléments marqués par % par ceux données entre parenthèses par la suite. Le formatage des chaînes se fait via différents indicateurs, les principaux étant :<br>
<ul>
<li><strong>%s</strong> : conversion en chaîne via <span class="italique">str</span>() avant formatage.</li>
<li><strong>%i</strong> : nombre entier (<span class="italique">integer</span>).</li>
<li><strong>%e / %E</strong> : notation exponentielle (scientifique) d'un nombre.</li>
<li><strong>%f / %F</strong> : nombre réel (à virgule flottante).</li>
<li><strong>%%</strong> : le caractère % en lui-même !</li>
</ul>De cette façon, il est possible de formater facilement une chaîne de caractère en y insérant les valeurs de variables par exemple. C'est ce nous ferons dans la suite pour nommer correctement les fichiers que nous allons créer. Créons donc nos fichiers :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># Pour chacune des valeurs :</span>
    <span class="k">for</span> <span class="n">valeur</span> <span class="ow">in</span> <span class="n">premiersNombres</span> <span class="p">:</span>
        <span class="c"># Création du fichier :  </span>
        <span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'</span><span class="si">%s</span><span class="s">-</span><span class="si">%s</span><span class="s">-</span><span class="si">%s</span><span class="s">.txt'</span> <span class="o">%</span> <span class="p">(</span><span class="n">nomProjet</span><span class="p">,</span><span class="n">nomOperation</span><span class="p">,</span><span class="n">valeur</span><span class="p">),</span> <span class="s">'w'</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
On va maintenant écrire les résultats de nos opérations dans les fichiers. Bien entendu, il faut faire attention à considérer les opérations impossibles à réaliser telles que la division ou le modulo par 0. On obtient alors :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># Ecrire dans le fichier :</span>
        <span class="k">for</span> <span class="n">nombre</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">eval</span><span class="p">(</span><span class="n">deuxiemesNombres</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nb">eval</span><span class="p">(</span><span class="n">deuxiemesNombres</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nb">eval</span><span class="p">(</span><span class="n">deuxiemesNombres</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span> <span class="p">:</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">operation</span> <span class="o">==</span> <span class="s">'/'</span> <span class="ow">or</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'//'</span> <span class="ow">or</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'%'</span><span class="p">)</span> <span class="ow">and</span> <span class="n">nombre</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">:</span>
                <span class="n">fichier</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">"</span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s"> = impossible !</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">valeur</span><span class="o">.</span><span class="n">center</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span> <span class="n">operation</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span><span class="o">.</span><span class="n">center</span><span class="p">(</span><span class="mi">10</span><span class="p">)))</span> 
            <span class="k">else</span> <span class="p">:</span>
                <span class="n">fichier</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">"</span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s"> = </span><span class="si">%f</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">valeur</span><span class="o">.</span><span class="n">center</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span> <span class="n">operation</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span><span class="o">.</span><span class="n">center</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span> \
                                                                      <span class="nb">eval</span><span class="p">(</span><span class="n">valeur</span><span class="o">+</span><span class="n">operation</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">nombre</span><span class="p">))))</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq information">Pour la première fois ici, j'écris une instruction Python sur plusieurs lignes. Pour cela, j'utilise le caractère '\' qui indique que l'instruction se poursuit à la ligne suivante. Du moment que vous utilisez ce caractère à chacune de vos lignes, il est possible d'écrire une instruction sur autant de lignes que vous le désirez.</div><br>
Remarquez ici que j'utilise la spécificité de la fonction <span class="italique">eval</span> qui peut évaluer le résultat d'opérations écrites dans une chaîne de caractères ! J'évite ainsi plusieurs conversions inutiles de mes variables. Ensuite, j'utilise la fonction <span class="italique">center</span> pour aligner correctement mes résultats et obtenir des fichiers un peu plus lisibles. Enfin, il ne faut pas oublier de fermer le fichier que l'on vient d'ouvrir à chaque pas de boucle afin de s'assurer que celui-ci se sauvegarde bien.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># Fermer le fichier :</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq attention">En Python, vous ne pouvez pas ouvrir plus de 50 fichiers simultanément ! N'oubliez donc jamais de fermer les fichiers que vous ouvrez, surtout si vous en ouvrez dans une boucle comme c'est le cas ici ! Si vous ne le faites pas, votre programme a de fortes chances de planter !</div><br>
Voilà, maintenant notre programme est terminé ! Je vous donne quand même la version complète pour que vous puissiez vous assurez de l'exécuter correctement ! Vous devriez obtenir tout un tas de fichiers textes très moches mais qui correspondent bien à ce que vous vouliez ! Vous avez donc réussi à analyser des lignes de texte et à en exploiter les données pour créer d'autres fichiers selon un format que vous avez créé !<br>
<br>
<span class="code">Code : Python - v3 - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># -*- coding: latin-1 -*-</span>
<span class="c">##########################</span>
<span class="c"># Création d'une syntaxe #</span>
<span class="c"># ---------------------- #</span>
<span class="c"># Auteur : Suzy          #</span>
<span class="c"># Crée le : 02/07/2010   #</span>
<span class="c">##########################</span>

<span class="c"># Utile pour vérifier l'existence d'un fichier :</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="c"># Petite interface textuelle :</span>
<span class="k">print</span><span class="p">(</span><span class="s">"*******************************</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
      <span class="s">"* Exemple de syntaxe simple : *</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
      <span class="s">"*******************************"</span><span class="p">)</span>

<span class="c"># Demander le nom du projet :</span>
<span class="n">nomProjet</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Donnez un nom à votre projet : "</span><span class="p">)</span>

<span class="c"># Demander le nom du fichier à utiliser :</span>
<span class="n">nomFichier</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Quel fichier voulez-vous utiliser ? "</span><span class="p">)</span>
<span class="k">while</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">nomFichier</span><span class="p">)</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Ce fichier n'existe pas !"</span><span class="p">)</span>
    <span class="n">nomFichier</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Quel fichier voulez-vous utiliser ? "</span><span class="p">)</span>

<span class="c"># Ouvrir le fichier :</span>
<span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">nomFichier</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="n">numeroLigne</span> <span class="o">=</span> <span class="mi">1</span>
<span class="c"># Lire le fichier :</span>
<span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">fichier</span> <span class="p">:</span>
    <span class="c"># On retire le caractère de fin de ligne :</span>
    <span class="n">ligne</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="s">""</span><span class="p">)</span>
    <span class="c">#On retire les commentaires de la lignes :</span>
    <span class="n">ligne</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">"#"</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
    <span class="c"># On ne considère pas les lignes vides :</span>
    <span class="k">if</span> <span class="n">ligne</span> <span class="o">!=</span> <span class="s">""</span> <span class="p">:</span>
        <span class="k">if</span> <span class="n">numeroLigne</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">:</span>
            <span class="c"># On retire tous les espaces :</span>
            <span class="n">ligne</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">' '</span><span class="p">,</span><span class="s">''</span><span class="p">)</span>
            <span class="c"># On sépare les opérations :</span>
            <span class="n">operations</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)</span>
        <span class="k">elif</span> <span class="n">numeroLigne</span> <span class="o">==</span> <span class="mi">2</span> <span class="p">:</span>
            <span class="c"># On sépare les nombres :</span>
            <span class="n">premiersNombres</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">' '</span><span class="p">)</span>
            <span class="c"># On retire tous les espaces de trop :</span>
            <span class="k">while</span> <span class="s">''</span> <span class="ow">in</span> <span class="n">premiersNombres</span> <span class="p">:</span>
                <span class="n">premiersNombres</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s">''</span><span class="p">)</span>
        <span class="k">elif</span> <span class="n">numeroLigne</span> <span class="o">==</span> <span class="mi">3</span> <span class="p">:</span>
            <span class="c"># On retire les crochets et les espaces et on sépare les nombres : </span>
            <span class="n">deuxiemesNombres</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">' '</span><span class="p">,</span><span class="s">''</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"["</span><span class="p">,</span><span class="s">""</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"]"</span><span class="p">,</span><span class="s">""</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)</span>
        <span class="n">numeroLigne</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="c">#Fermer le fichier :</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>

<span class="c"># Pour chaque opération :</span>
<span class="k">for</span> <span class="n">operation</span> <span class="ow">in</span> <span class="n">operations</span> <span class="p">:</span>
    <span class="c"># Associer un nom à chaque opération et ne pas faire la suite</span>
    <span class="c"># si l'opération n'existe pas :</span>
    <span class="k">if</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'+'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'addition'</span>
    <span class="k">elif</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'-'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'soustraction'</span>
    <span class="k">elif</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'*'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'multiplication'</span>
    <span class="k">elif</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'/'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'division'</span>
    <span class="k">elif</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'%'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'modulo'</span>
    <span class="k">elif</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'**'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'puissance'</span>
    <span class="k">elif</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'//'</span> <span class="p">:</span>
        <span class="n">nomOperation</span> <span class="o">=</span> <span class="s">'divisionEntiere'</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"L'opération </span><span class="si">%s</span><span class="s"> n'est pas reconnue : les fichiers ne seront pas générés !"</span> <span class="o">%</span> <span class="p">(</span><span class="n">operation</span><span class="p">))</span>
        <span class="k">continue</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Génération des fichiers pour l'opération </span><span class="si">%s</span><span class="s">."</span> <span class="o">%</span> <span class="p">(</span><span class="n">operation</span><span class="p">))</span>
    <span class="c"># Pour chacune des valeurs :</span>
    <span class="k">for</span> <span class="n">valeur</span> <span class="ow">in</span> <span class="n">premiersNombres</span> <span class="p">:</span>
        <span class="c"># Création du fichier :  </span>
        <span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'</span><span class="si">%s</span><span class="s">-</span><span class="si">%s</span><span class="s">-</span><span class="si">%s</span><span class="s">.txt'</span> <span class="o">%</span> <span class="p">(</span><span class="n">nomProjet</span><span class="p">,</span><span class="n">nomOperation</span><span class="p">,</span><span class="n">valeur</span><span class="p">),</span> <span class="s">'w'</span><span class="p">)</span>
        <span class="c"># Ecrire dans le fichier :</span>
        <span class="k">for</span> <span class="n">nombre</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">eval</span><span class="p">(</span><span class="n">deuxiemesNombres</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nb">eval</span><span class="p">(</span><span class="n">deuxiemesNombres</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nb">eval</span><span class="p">(</span><span class="n">deuxiemesNombres</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span> <span class="p">:</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">operation</span> <span class="o">==</span> <span class="s">'/'</span> <span class="ow">or</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'//'</span> <span class="ow">or</span> <span class="n">operation</span> <span class="o">==</span> <span class="s">'%'</span><span class="p">)</span> <span class="ow">and</span> <span class="n">nombre</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">:</span>
                <span class="n">fichier</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">"</span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s"> = impossible !</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">valeur</span><span class="o">.</span><span class="n">center</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span> <span class="n">operation</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span><span class="o">.</span><span class="n">center</span><span class="p">(</span><span class="mi">10</span><span class="p">)))</span> 
            <span class="k">else</span> <span class="p">:</span>
                <span class="n">fichier</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">"</span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s"> = </span><span class="si">%f</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">valeur</span><span class="o">.</span><span class="n">center</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span> <span class="n">operation</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span><span class="o">.</span><span class="n">center</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span> \
                                                                      <span class="nb">eval</span><span class="p">(</span><span class="n">valeur</span><span class="o">+</span><span class="n">operation</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">nombre</span><span class="p">))))</span>                
        <span class="c"># Fermer le fichier :</span>
        <span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq information">Dans cette version, j'ai modifié légèrement l'affichage pour indiquer quelle opération est en cours de traitement.</div><br>
<div class="rmq attention">Pour ceux qui travailleraient en Python v2.7, la seuls différence est encore une fois dans la fonction <span class="italique">print</span> qui ne nécessite pas de parenthèses et la fonction <span class="italique">input</span> qui doit être remplacée par la fonction <span class="italique">raw_input</span>.</div><br>
Un bon entraînement serait de faire un programme qui fait exactement l'inverse ! En étudiant un ensemble de fichiers remplis de calculs, il pourrait générer un fichier d'entrée pour notre programme ci-dessus ! Enfin, si vous vous sentez le courage de le faire, le principe est le même !
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Bien, vous maîtrisez maintenant un peu mieux les chaînes de caractères. N'hésitez surtout pas à vous exercer. Je suis sûr que vous trouverez de vous-mêmes des idées pour vous entraîner ! Si vous vous sentez prêt à continuer, nous allons étudier les listes dans le prochain chapitre.
	</div>
	
	<hr>
	<h1 id="chap_278266">Les listes</h1>
	<div id="chap_intro">
	Nous avançons de plus en plus dans le langage Python. Nous avons vu beaucoup de choses mais nous ne nous sommes pas encore arrêtés sur les listes. Pourtant, vous les avez déjà utilisées jusqu'à maintenant sans trop savoir les manipuler. Nous allons donc voir dans cette partie :<br>
<ul>
<li>Quelques rappels sur les séquences et les listes</li>
<li>Comment utiliser des listes</li>
<li>Ce que l'on peut en faire</li>
</ul>Après cette partie, les listes ne devraient plus avoir de secrets pour vous !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278221">Rappels</h2>
		<div class="ss_part_texte">
		Les listes sont des séquences ordonnées de données auxquelles on peut accéder à l'aide de leur indice associé. Faisons un rappel de ce que l'on a fait avec jusqu'à maintenant en effectuant quelques petits tests dans le shell :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Peuh !'</span><span class="p">,</span> <span class="mi">42</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="s">"Pouet !"</span><span class="p">,</span> <span class="s">"..."</span><span class="p">,</span> <span class="mf">90.2</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
<span class="bp">True</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<span class="mf">90.2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="p">[</span><span class="mi">2</span><span class="p">:]</span>
<span class="p">[</span><span class="bp">True</span><span class="p">,</span> <span class="s">'Pouet !'</span><span class="p">,</span> <span class="s">'...'</span><span class="p">,</span> <span class="mf">90.2</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span>
<span class="p">[</span><span class="s">'Peuh !'</span><span class="p">,</span> <span class="mi">42</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">4</span><span class="p">]</span>
<span class="p">[</span><span class="bp">True</span><span class="p">,</span> <span class="s">'Pouet !'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">liste</span><span class="p">)</span>
<span class="mi">6</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="n">liste</span> <span class="p">:</span>
	<span class="k">print</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>

	
<span class="n">Peuh</span> !
<span class="mi">42</span>
<span class="bp">True</span>
<span class="n">Pouet</span> !
<span class="o">...</span>
<span class="mf">90.2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">liste</span><span class="p">,</span> <span class="s">"123456"</span><span class="p">)</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>
 
<span class="p">(</span><span class="s">'Peuh !'</span><span class="p">,</span> <span class="s">'1'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">42</span><span class="p">,</span> <span class="s">'2'</span><span class="p">)</span>
<span class="p">(</span><span class="bp">True</span><span class="p">,</span> <span class="s">'3'</span><span class="p">)</span>
<span class="p">(</span><span class="s">'Pouet !'</span><span class="p">,</span> <span class="s">'4'</span><span class="p">)</span>
<span class="p">(</span><span class="s">'...'</span><span class="p">,</span> <span class="s">'5'</span><span class="p">)</span>
<span class="p">(</span><span class="mf">90.200000000000003</span><span class="p">,</span> <span class="s">'6'</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
On a donc vu comment créer une liste et comment accéder à ses éléments à l'aide des indices ou d'une boucle <span class="italique">for</span>. Comme pour les chaînes de caractères, vous pouvez utiliser les fonctions intégrées qui s'appliquent à toutes les séquences :<br>
<ul>
<li><strong>len</strong> : diminutif de <span class="italique">length</span> (longueur), retourne la longueur de la séquence, c'est-à-dire le nombre d'éléments qui la composent.</li>
<li><strong>min</strong> : diminutif de minimum, retourne le plus petit élément de la séquence (dans notre cas, c'est l'ordre alphabétique qui est considéré)</li>
<li><strong>max</strong> : diminutif de maximum, reoturne le plus grand élément de la séquence (considère aussi l'ordre alphabétique)</li>
<li><strong>zip</strong> : crée les couples d'éléments de même indice des séquences passées en argument. On remarque d'ailleurs ici que c'est un type d'objet <span class="italique">zip</span> qui est créé. Cet objet est itérable et j'utilise alors une boucle <span class="italique">for</span> pour en afficher le contenu.</li>
</ul>Voilà ce que l'on sait des listes jusqu'à maintenant alors essayons d'aller plus loin.<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278253">Opérations de base</h2>
		<div class="ss_part_texte">
		<h3>Créer une liste</h3><br>
Commençons par le commencement et voyons comment créer une liste ! Vous avez déjà vu que l'on peut créer une liste en la déclarant et en lui affectant directement une liste de données :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">liste</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Peuh !'</span><span class="p">,</span> <span class="mi">42</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="s">"Pouet !"</span><span class="p">,</span> <span class="s">"..."</span><span class="p">,</span> <span class="mf">90.2</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
Mais à vrai dire, vous n'êtes pas obligé de lui attribuer tout de suite des données et il est parfaitement possible de déclarer une liste vide :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">liste</span> <span class="o">=</span> <span class="p">[]</span>
</pre></div>
</td></tr></tbody></table></div><br>
Je ne pourrais bien entendu pas faire grand chose de cette liste vide hormis lui rajouter des éléments. Nous verrons comment faire juste après. Un autre moyen de créer une liste, est d'utiliser la fonction intégrée <span class="italique">list</span> qui permet de créer soit un liste vide si vous ne lui donnez aucun argument soit de créer une liste à partir d'un objet itérable que vous lui passez en argument :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">()</span>
<span class="p">[]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">(</span><span class="s">"Hahaha !"</span><span class="p">)</span>
<span class="p">[</span><span class="s">'H'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">'h'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">'h'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">' '</span><span class="p">,</span> <span class="s">'!'</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
A l'aide de cette fonction, il est donc possible de transformer n'importe quel objet itérable en liste ! Il est aussi possible de créer une liste avec des conditions. Je m'explique. Par exemple, vous avez une première liste de nombres. Vous pouvez en créer une deuxième en une seule ligne en vous basant sur une condition :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">100</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">sousliste</span> <span class="o">=</span> <span class="p">[</span><span class="n">nombre</span> <span class="k">for</span> <span class="n">nombre</span> <span class="ow">in</span> <span class="n">liste</span> <span class="k">if</span> <span class="n">nombre</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">sousliste</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">17</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">19</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, je crée une première liste de nombres de 0 à 99. Je déclare ensuite une variable <span class="italique">sousliste</span> que je veux remplir avec tous les éléments de <span class="italique">liste</span> inférieurs à 20. J'écris donc une phrase logique "Pour tout nombre dans liste inférieur à 20". Cette forme n'est pas des plus simples à maîtriser mais vous vous y ferez. et si vous ne voulez pas l'utiliser, vous pouvez toujours le faire en quelques lignes avec une boucle <span class="italique">for</span> qui ne soit pas intégrée directement dans la déclaration de la liste !<br>
<br>
<h4>Les tuples</h4><br>
En Python, il existe un autre type de liste : les tuples. Les tuples se manipulent exactement comme les listes, à une différence près, leurs éléments ne peuvent être modifiés. Si vous avez donc une liste de constantes à définir, il vaudra mieux utiliser un tuple pour ne pas prendre le risque de les modifier au cours de votre programme. Il sera toujours possible au cours de votre programme d'ajouter des données dans un tuple à l'aide d'une addition de tuple par exemple.<br>
<br>
<div class="rmq information">Bien que 'tuple' soit un mot anglais prononcé 'teupeule', c'est aussi un mot bien français de la même famille que quintuple, sextuple, etc... La seule différence est qu'il désigne un ensemble d'objets sans en préciser la quantité. On ne pourra donc pas vous reprocher d'utiliser un anglicisme !</div><br>
Les tuples se déclarent comme les listes mais sont délimités par des parenthèses '()' et non pas par des crochets '[]'. Ainsi, pour déclarer un tuple, il suffit de faire :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;</span> <span class="n">unTuple</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="s">"Peuh !"</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">unTuple</span>
<span class="p">(</span><span class="s">'P'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">,</span> <span class="s">'u'</span><span class="p">,</span> <span class="s">'h'</span><span class="p">,</span> <span class="s">' '</span><span class="p">,</span> <span class="s">'!'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">unTuple</span> <span class="o">=</span> <span class="p">(</span><span class="s">'Peuh !'</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">unTuple</span>
<span class="p">(</span><span class="s">'Peuh !'</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span><span class="o">&gt;</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous voyez donc qu'il existe une fonction <span class="italique">tuple</span> qui s'utilise de façon équivalente à la fonction <span class="italique">list</span>. Vous pouvez accéder aux données contenues dans un tuple exactement de la même manière que pour une liste en utilisant les indices ou les fonctions associées.<br>
<br>
Maintenant que vous savez créer des listes, nous allons voir comment les modifier.<br>
<br>
<h3>Modifier une liste</h3><br>
Il existe bien des manières de modifier une liste... Vous pouvez la modifier dans son intégralité en lui affectant une nouvelle valeur, par exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span> <span class="o">=</span> <span class="p">[</span><span class="mi">23</span><span class="p">,</span><span class="mi">32</span><span class="p">,</span><span class="mi">43</span><span class="p">,</span><span class="mi">45</span><span class="p">,</span><span class="mi">56</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span> <span class="o">=</span> <span class="n">liste</span> <span class="o">*</span> <span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
<strong><span class="gros">OU</span></strong><br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span> <span class="o">=</span> <span class="p">[</span><span class="mi">23</span><span class="p">,</span><span class="mi">32</span><span class="p">,</span><span class="mi">43</span><span class="p">,</span><span class="mi">45</span><span class="p">,</span><span class="mi">56</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span> <span class="o">=</span> <span class="p">[</span><span class="s">"Peuh !"</span><span class="p">,</span> <span class="s">"Pouet !"</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="s">'Peuh !'</span><span class="p">,</span> <span class="s">'Pouet !'</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, j'ai créé une liste de nombres et j'ai décidé de la modifier en répétant deux fois la liste donnée initialement dans le premier cas et en lui affectant carrément une nouvelle liste dans le deuxième cas. Vous voyez qu'après cette opération, ma liste a effectivement été modifiée. Mais il est aussi possible de ne modifier qu'un seul élément dans la liste :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="mi">200</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
Si vous souhaitez modifier tous les éléments d'une liste un par un à l'aide d'une boucle <span class="italique">for</span>, vous devrez utiliser une fonction particulière. Vous allez tout de suite comprendre pourquoi, regardez cet exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="n">liste</span> <span class="p">:</span>
	<span class="n">element</span> <span class="o">+=</span> <span class="mi">100</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous pouvez constater qu'aucun élément n'a été modifié dans la liste et c'est normal ! Car ici, c'est la variable <span class="italique">element</span> qui a été modifiée et elle ne fait pas partie intégrante de la liste ! Pour pouvoir modifier la liste élément par élément, il vous faudra donc accéder aux indices au sein de la liste. Pour ça, vous avez plusieurs solutions :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">liste</span><span class="p">))</span> <span class="p">:</span>
	<span class="n">liste</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">100</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">123</span><span class="p">,</span> <span class="mi">132</span><span class="p">,</span> <span class="mi">300</span><span class="p">,</span> <span class="mi">145</span><span class="p">,</span> <span class="mi">156</span><span class="p">,</span> <span class="mi">123</span><span class="p">,</span> <span class="mi">132</span><span class="p">,</span> <span class="mi">143</span><span class="p">,</span> <span class="mi">145</span><span class="p">,</span> <span class="mi">156</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
<strong><span class="gros">OU</span></strong><br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">element</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">liste</span><span class="p">)</span> <span class="p">:</span>
	<span class="n">liste</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">100</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">123</span><span class="p">,</span> <span class="mi">132</span><span class="p">,</span> <span class="mi">143</span><span class="p">,</span> <span class="mi">145</span><span class="p">,</span> <span class="mi">156</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans le premier cas, vous utilisez les fonctions intégrées <span class="italique">len</span> pour obtenir la taille de la liste et la fonction <span class="italique">range</span> pour générer une liste des indices. Dans le second cas, la fonction intégrée <span class="italique">enumerate</span> (énumérer) vous retourne la liste des couples (indice, élément) de l'ensemble de votre liste. Ainsi, de cette manière, vous avez accès à la fois aux éléments de votre liste mais aussi à leur indice ! Nous avons vu ici comment modifier des éléments déjà présents dans une liste, mais il est possible d'ajouter et de retirer des éléments d'une liste ! Des fonctions appliquées aux listes permettent d'effectuer ce genre d'action :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span> <span class="o">=</span> <span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">67</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">78</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">67</span><span class="p">,</span> <span class="mi">78</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">109</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">109</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">67</span><span class="p">,</span> <span class="mi">78</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">67</span><span class="p">,</span> <span class="mi">78</span><span class="p">,</span> <span class="mi">109</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">reverse</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">109</span><span class="p">,</span> <span class="mi">78</span><span class="p">,</span> <span class="mi">67</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">23</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="o">.</span><span class="n">reverse</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">67</span><span class="p">,</span> <span class="mi">78</span><span class="p">,</span> <span class="mi">109</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="mi">78</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">67</span><span class="p">,</span> <span class="mi">109</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">del</span> <span class="n">liste</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"&lt;pyshell#104&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
    <span class="n">liste</span>
<span class="ne">NameError</span><span class="p">:</span> <span class="n">name</span> <span class="s">'liste'</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">defined</span>
</pre></div>
</td></tr></tbody></table></div><br>
J'applique ici des fonctions directement à ma liste. Remarquez que ces dernières la modifient directement. Ces fonctions sont donc :<br>
<ul>
<li><strong>append</strong> (ajouter) : ajoute l'élément passé en argument à la fin de la liste.</li>
<li><strong>insert</strong> (insérer) : insère dans la liste à l'indice donné en premier argument l'élément donné en deuxième argument.</li>
<li><strong>sort</strong> (trier) : range dans l'ordre croissant les éléments de la liste (l'ordre peut être décroissant si l'argument <span class="italique">reverse</span> est mis à <span class="italique">True</span>).</li>
<li><strong>reverse</strong> (inverser) : inverse l'ordre des éléments dans la liste.</li>
<li><strong>remove</strong> (retirer) : retire l'objet passé en argument de la liste. S'il y est présent plusieurs fois, seule la première occurrence sera retirée.</li>
</ul>Le mot clé <span class="italique">del</span> (diminutif de <span class="italique">delete</span> (supprimer)) suivi du nom de la liste la supprime carrément des variables déclarées ! Elle n'existe donc plus en mémoire après effacement avec <span class="italique">del</span>. C'est d'ailleurs pour cela qu'une erreur se produit puisque ma variable <span class="italique">liste</span> n'existe plus, je ne peux donc plus afficher sa valeur...<br>
<br>
Pour une liste exhaustive sur les fonctions applicables aux tuples et aux listes, je vous laisse consulter la documentation qui reste le document le plus complet que vous puissiez vous procurez !<br>
<br>
Nous allons voir maintenant comment manipuler les listes et ce que l'on peut en faire.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278270">Manipuler les listes</h2>
		<div class="ss_part_texte">
		Maintenant que l'on sait créer et modifier le contenu des listes, nous allons revoir comment les parcourir et rapidement à quoi cela peut servir. Voyons d'abord ce que l'on peut faire avec les fonctions intégrées :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span> <span class="o">=</span> <span class="p">[</span><span class="mi">23</span><span class="p">,</span><span class="mi">45</span><span class="p">,</span><span class="mi">56</span><span class="p">,</span><span class="mi">34</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">liste</span><span class="p">)</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">reversed</span><span class="p">(</span><span class="n">liste</span><span class="p">)</span>
<span class="o">&lt;</span><span class="n">list_reverseiterator</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x02064EB0</span><span class="o">&gt;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="nb">reversed</span><span class="p">(</span><span class="n">liste</span><span class="p">)</span> <span class="p">:</span>
	<span class="k">print</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>
<span class="mi">34</span>
<span class="mi">56</span>
<span class="mi">45</span>
<span class="mi">23</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">sum</span><span class="p">(</span><span class="n">liste</span><span class="p">)</span>
<span class="mi">158</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">liste</span><span class="p">)</span>
<span class="mi">4</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">min</span><span class="p">(</span><span class="n">liste</span><span class="p">)</span>
<span class="mi">23</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">max</span><span class="p">(</span><span class="n">liste</span><span class="p">)</span>
<span class="mi">56</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span>
<span class="p">[</span><span class="mi">23</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">34</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
J'utilise donc différentes fonctions intégrées qui ne modifient pas ma liste de départ :<br>
<ul>
<li><strong>sorted</strong> (rangé) : retourne la même liste mais avec les éléments rangés dans l'ordre croissant.</li>
<li><strong>reversed</strong> (inversé) : retourne la même liste mais avec les éléments dans l'ordre inverse.</li>
<li><strong>sum</strong> (somme) : retourne la somme de tous les éléments de la liste.</li>
<li><strong>len</strong> (longueur) : retourne le nombre d'éléments dans la liste.</li>
<li><strong>min/max</strong> (minimum/maximum) : retourne l'élément le plus petit/grand de la liste.</li>
</ul>Ces fonctions présentent l'avantage de ne pas modifier nos listes et n'altèrent donc pas les données stockées. <br>
<br>
Il est possible d'imbriquer des listes pour générer des tableaux ou matrices à plusieurs dimensions. Prenons un exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span> <span class="o">=</span> <span class="p">[]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="p">:</span>
	<span class="n">liste</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="n">liste</span> <span class="p">:</span>
	<span class="k">print</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
On voit donc ici que j'ai créé une liste de liste. Pour n'accéder qu'à un seul élément dans une de ces listes, il suffit alors de spécifier les indices de cette manière :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span>
<span class="mi">3</span>
</pre></div>
</td></tr></tbody></table></div><br>
Le deuxième élément de <span class="italique">liste</span> étant lui-même une liste, il est alors possible d'accéder à ses éléments à l'aide de leur indice et c'est ce que je fais ici. Pour parcourir une liste de liste, on peut alors imbriquer les boucles <span class="italique">for</span> :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">liste</span> <span class="p">:</span>
    <span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="n">ligne</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ce code vous affiche tous les éléments présents dans toutes les listes contenues dans la liste principale ! <br>
<br>
Les listes sont assez simples à manipuler et vous en utiliserez assez souvent... Leur maîtrise vient avec l'expérience et plus vous les utiliserez, plus leur utilisation sera instinctive.<br>
<br>
<div class="rmq information">Toutes les fonctions qui permettent de manipuler des listes sont aussi valables pour les tuples. Seules les fonctions altérant vos listes ne sont pas applicables aux tuples puisque leurs éléments ne peuvent être modifiés. N'hésitez pas à consulter la documentation à ce sujet !</div>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Bien, maintenant que vous en savez un peu plus sur ce qu'il y a à savoir sur les listes, passons à un autre outil de stockage de données bien pratique : les dictionnaires.
	</div>
	
	<hr>
	<h1 id="chap_278225">Les dictionnaires</h1>
	<div id="chap_intro">
	Après avoir étudié les séquences avec les chaînes, les listes et les tuples, nous allons nous intéresser à un autre type de données : les types associatifs. En Python, il n'existe qu'un seul type associatif appelé dictionnaire. Vous comprendrez assez vite pourquoi celui-ci s'appelle ainsi.<br>
<br>
Nous allons donc voir dans cette partie :<br>
<ul>
<li>Ce qu'est un type associatif</li>
<li>Comment créer et manipuler des dictionnaires</li>
<li>A quoi cela peut servir</li>
</ul> Ce sont des objets assez simples à utiliser mais ils sont souvent délaissés car on y pense trop peu souvent... Alors essayez d'en comprendre l'utilité !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278244">Qu'est-ce que c'est ?</h2>
		<div class="ss_part_texte">
		De quoi va-t-on parler exactement dans ce chapitre ? Et bien, nous allons apprendre à utiliser un type de donnée associatif : les dictionnaires. Le dictionnaire en Python permet de stocker un ensemble données au même titre qu'une liste ou un tuple. Seulement, les données n'y seront pas ordonnées...<br>
<br>
<div class="rmq erreur">Mais alors j'y accède comment aux données dans ce dictionnaire ?!  <img src="./Langage Python_files/unsure.gif" alt=":euh:"> </div><br>
C'est là qu'intervient toute la magie de l'associatif : vous pourrez accéder aux données à l'aide d'une clé (ou valeur de hachage). En fait, dans un dictionnaire, chaque fois que vous voudrez ajouter une donnée, vous devrez l'associer à une clé pour former le couple (clé, valeur). C'est cette clé qui vous permettra d'accéder aux données stockées au même titre que l'indice le permet dans les séquences. <br>
<br>
Pour une première approche, nous allons faire quelques essais dans le shell en créant un dictionnaire et en essayant d'accéder à ses éléments :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">dico</span> <span class="o">=</span> <span class="p">{</span><span class="s">"Peuh !"</span> <span class="p">:</span> <span class="s">"Bonjour !"</span><span class="p">,</span> <span class="s">"J'te déteste !"</span> <span class="p">:</span> <span class="s">"Je t'apprécie !"</span><span class="p">,</span> <span class="s">"J'espère ne jamais te revoir !"</span> <span class="p">:</span> <span class="s">"A bientot !"</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">dico</span><span class="p">[</span><span class="s">"Peuh !"</span><span class="p">]</span>
<span class="s">'Bonjour !'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">dico</span><span class="p">[</span><span class="s">"J'te déteste !"</span><span class="p">]</span>
<span class="s">"Je t'apprécie !"</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans cet exemple, je crée un dictionnaire contenant trois couples (clé, valeur). Le dictionnaire est marqué par les accolades '{}', chaque clé est associée à sa valeur par ':' et les couples sont séparés par des virgules. Afin de rendre l'exemple un peu plus parlant, je l'utilise comme un vrai dictionnaire. J'associe ici à chacune de mes phrases favorites sa réelle signification. Et vous pouvez voir que pour accéder à un élément, j'utilise bien les crochets '[]' comme pour accéder à un élément d'une séquence, mais ici l'indice est remplacé par une clé.<br>
<br>
L'important à savoir, c'est que n'importe quel type de donnée peut-être utilisé comme clé d'un dictionnaire ! Seulement, si cette donnée est modifiée, cela peut engendrer des erreurs. C'est pourquoi il vaut mieux utiliser des données dites immuables comme clé. Les données immuables sont des nombres, des chaînes de caractères et les tuples. Evitez donc d'utiliser des variables comme clé car si leur valeur change, alors elle ne correspondent plus à la clé définie initialement et ça risque de devenir très vite n'importe quoi ! Regardez :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">dico</span> <span class="o">=</span> <span class="p">{</span><span class="n">variable</span> <span class="p">:</span> <span class="s">"Hey !"</span><span class="p">,</span> <span class="n">variable2</span> <span class="p">:</span> <span class="s">"Salut !"</span><span class="p">,</span> <span class="n">variable3</span> <span class="p">:</span> <span class="s">"Peuh !"</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">dico</span><span class="p">[</span><span class="n">variable</span><span class="p">]</span>
<span class="s">'Hey !'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">variable</span> <span class="o">=</span> <span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">dico</span><span class="p">[</span><span class="n">variable</span><span class="p">]</span>
<span class="s">'Salut !'</span>
</pre></div>
</td></tr></tbody></table></div><br>
J'ai utilisé <span class="italique">variable</span> pour définir une clé, mais la clé n'est pas associé à la variable elle-même mais à sa valeur au moment de la déclaration du dictionnaire... En utilisant une variable comme clé, vous utilisez en réalité sa valeur actuelle comme clé et non pas la référence que représente la variable elle-même...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278264">Opérations de base</h2>
		<div class="ss_part_texte">
		Nous allons voir maintenant comment utiliser les dictionnaires et commençons par leur création.<br>
<br>
<h3>Créer un dictionnaire</h3><br>
Nous avons vu juste avant comment déclarer un dictionnaire en lui affectant directement des couples (clé, valeur) :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">dico</span> <span class="o">=</span> <span class="p">{</span><span class="n">cl</span>é<span class="mi">1</span> <span class="p">:</span> <span class="n">valeur1</span><span class="p">,</span> <span class="n">cl</span>é<span class="mi">2</span> <span class="p">:</span> <span class="n">valeur2</span><span class="p">,</span> <span class="o">...</span><span class="p">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous pouvez très bien déclarer un dictionnaire vide et lui rajouter des éléments par la suite. Cela se fait un peu comme pour les listes vides :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">dico</span> <span class="o">=</span> <span class="p">{}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<span class="gros"><strong>OU</strong></span><br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">dico</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
La fonction intégrée <span class="italique">dict</span> s'utilise un peu de la même manière que <span class="italique">list</span>. Vous pouvez l'utiliser sans argument pour créer un dictionnaire vide comme dans l'exemple ci-dessus ou en spécifiant un ou plusieurs arguments. Nous allons voir ce qu'il est possible de faire :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="nb">dict</span><span class="p">(</span><span class="nb">zip</span><span class="p">((</span><span class="s">'clé1'</span><span class="p">,</span> <span class="s">'clé2'</span><span class="p">,</span> <span class="s">'clé3'</span><span class="p">),</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)))</span>
<span class="p">{</span><span class="s">'clé2'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">'clé3'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">'clé1'</span><span class="p">:</span> <span class="mi">1</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">dict</span><span class="p">([[</span><span class="s">"clé1"</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="s">"clé2"</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="s">"clé3"</span><span class="p">,</span> <span class="mi">5</span><span class="p">]])</span>
<span class="p">{</span><span class="s">'clé2'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">'clé3'</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="s">'clé1'</span><span class="p">:</span> <span class="mi">1</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">dict</span><span class="p">([(</span><span class="s">'abcdef'</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">)])</span>
<span class="p">{</span><span class="s">'a'</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s">'c'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">'b'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'e'</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">'d'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">'f'</span><span class="p">:</span> <span class="mi">5</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">dict</span><span class="p">(</span><span class="n">a</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">b</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">c</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">d</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>
<span class="p">{</span><span class="s">'a'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'c'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">'b'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">'d'</span><span class="p">:</span> <span class="mi">4</span><span class="p">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Il existe donc bien des manières de créer un dictionnaire ! Etudions les un peu plus en détail :<br>
<ul>
<li><strong>1er cas</strong> : nous avons vu plus tôt dans le cours que la fonction <span class="italique">zip</span> crée une liste de couples correspondant aux éléments de deux séquences passées en arguments. Ici, on passe donc l'équivalent d'une liste de couple en argument à la fonction <span class="italique">dict</span>().</li>
<li><strong>2ème cas</strong> : on passe ici une liste de listes de taille 2 qui correspondent aux couples (clé, valeur).</li>
<li><strong>3ème cas</strong> : on crée une liste de tuples de tailles 2 à l'aide d'une boucle <span class="italique">for</span>. Ces tuples correspondent aux couples (clé, valeur) du dictionnaire.</li>
<li><strong>4ème cas</strong> : on associe des valeurs à des clés directement à l'aide du signe =. Remarquez que les clés sont automatiquement converties en chaînes de caractères afin de les rendre immuables.</li>
</ul>Vous savez maintenant comment créer un dictionnaire. Nous allons donc voir maintenant comment les modifier.<br>
<br>
<h3>Modifier un dictionnaire</h3><br>
Pour rajouter une donnée dans un dictionnaire, il n'y a pas besoin de faire appel à une fonction comme pour les listes. Il suffit de déclarer un couple (clé, valeur) de la façon suivante :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">dico</span> <span class="o">=</span> <span class="p">{}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">dico</span><span class="p">[</span><span class="s">'clé'</span><span class="p">]</span> <span class="o">=</span> <span class="mi">18</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">dico</span>
<span class="p">{</span><span class="s">'clé'</span><span class="p">:</span> <span class="mi">18</span><span class="p">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous pouvez constater que la clé 'clé' n'était pas associé à la moindre valeur et pourtant je peux modifier la valeur qui y est associée ! Cela rajoute donc automatiquement le couple ('clé', 18) dans mon dictionnaire. Si vous travaillez avec plusieurs dictionnaires, vous pouvez aussi vous servir de l'un pour remplir l'autre à l'aide de la fonction <span class="italique">update</span> :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">dico1</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">([(</span><span class="s">'abcdef'</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">)])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">dico2</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="nb">zip</span><span class="p">((</span><span class="s">'clé1'</span><span class="p">,</span> <span class="s">'clé2'</span><span class="p">,</span> <span class="s">'clé3'</span><span class="p">),</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">dico1</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">dico2</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">dico1</span>
<span class="p">{</span><span class="s">'a'</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s">'c'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">'b'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'e'</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">'d'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">'f'</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="s">'clé1'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'clé2'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">'clé3'</span><span class="p">:</span> <span class="mi">3</span><span class="p">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Cette fonction rajoute au dictionnaire auquel elle est appliquée tous les couples (clé, valeur) du dictionnaire passé en argument. Il existe aussi des fonctions qui permettent d'effacer vos dictionnaires :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">dico1</span><span class="o">.</span><span class="n">clear</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">dico1</span>
<span class="p">{}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">del</span> <span class="n">dico1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">dico1</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"&lt;pyshell#31&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
    <span class="n">dico1</span>
<span class="ne">NameError</span><span class="p">:</span> <span class="n">name</span> <span class="s">'dico1'</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">defined</span>
</pre></div>
</td></tr></tbody></table></div><br>
La fonction <span class="italique">clear</span> efface tous les couples (clé, valeur) du dictionnaire auquel elle est appliquée tandis que le mot clé <span class="italique">del</span> désalloue la mémoire du dictionnaire et le retire donc des variables déclarées ! Bien sûr, vous n'êtes pas obligé d'être aussi radical et vous pouvez décider de ne retirer qu'une seule valeur de votre dictionnaire. Pour cela, vous allez encore utiliser le mot clé <span class="italique">del</span> mais en spécifiant un élément en particulier dans le dictionnaire :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">dico1</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">([(</span><span class="s">'abcdef'</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">)])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">del</span> <span class="n">dico1</span><span class="p">[</span><span class="s">'a'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">dico1</span>
<span class="p">{</span><span class="s">'c'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">'b'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'e'</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">'d'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">'f'</span><span class="p">:</span> <span class="mi">5</span><span class="p">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h3>Récupérer des données</h3><br>
La partie la plus intéressante dans les dictionnaires est de récupérer les données qui y sont contenues ! En général, les dictionnaires ne sont pas beaucoup modifiés après leur création et resteront assez constants. Toute leur utilité viendra alors de notre capacité à en faire quelque chose. Nous avons déjà vu qu'il est possible d'accéder à une valeur dans un dictionnaire de la même manière que lors de l'accès direct à un élément dans une séquence en remplaçant l'indice par une clé.<br>
<br>
Mais qu'en est-il si l'on veut pouvoir boucler entièrement sur un dictionnaire par exemple ? Et bien, ce n'est pas si compliqué ! Des fonctions vont vous permettre de faire ça :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">dico1</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">([(</span><span class="s">'abcdef'</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">)])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">cle</span> <span class="ow">in</span> <span class="n">dico1</span> <span class="p">:</span>
	<span class="k">print</span><span class="p">(</span><span class="n">cle</span><span class="p">)</span>	
<span class="n">a</span>
<span class="n">c</span>
<span class="n">b</span>
<span class="n">e</span>
<span class="n">d</span>
<span class="n">f</span>
</pre></div>
</td></tr></tbody></table></div><br>
<strong><span class="gros">OU</span></strong><br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">dico1</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">([(</span><span class="s">'abcdef'</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">)])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">cle</span><span class="p">,</span> <span class="n">valeur</span> <span class="ow">in</span> <span class="n">dico1</span><span class="o">.</span><span class="n">items</span><span class="p">()</span> <span class="p">:</span>
	<span class="k">print</span><span class="p">(</span><span class="n">cle</span><span class="p">,</span> <span class="n">valeur</span><span class="p">)</span>
<span class="n">a</span> <span class="mi">0</span>
<span class="n">c</span> <span class="mi">2</span>
<span class="n">b</span> <span class="mi">1</span>
<span class="n">e</span> <span class="mi">4</span>
<span class="n">d</span> <span class="mi">3</span>
<span class="n">f</span> <span class="mi">5</span>
</pre></div>
</td></tr></tbody></table></div><br>
La fonction <span class="italique">items</span> vous permet de récupérer les couples alors que si vous itérez directement sur le dictionnaire, vous ne récupérez que les clés.<br>
<br>
De même, si vous voulez savoir si une clé se trouve dans un dictionnaire, vous pouvez utiliser les opérateurs <span class="italique">in</span> et <span class="italique">not in</span> :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">dico1</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">([(</span><span class="s">'abcdef'</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">)])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'a'</span> <span class="ow">in</span> <span class="n">dico1</span>
<span class="bp">True</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'t'</span> <span class="ow">in</span> <span class="n">dico1</span>
<span class="bp">False</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'t'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">dico1</span>
<span class="bp">True</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'b'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">dico1</span>
<span class="bp">False</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous avez donc un opérateur qui vous permet de tester facilement si une clé est présente ou non dans votre dictionnaire.<br>
<br>
Si vous désirez une liste exhaustive des fonctions applicables aux dictionnaires, la documentation est comme toujours un excellent endroit où chercher !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278238">A quoi ça sert ?</h2>
		<div class="ss_part_texte">
		Après vous avoir présenté comment créer et modifier un dictionnaire, je vous propose d'en voir une petite application. Celle-ci peut paraître un peu sale et inutile mais je suis sûr que vous saurez l'apprécier en allant plus loin dans le cours ! Dès le chapitre suivant, je suis sûr que vous en verrez l'utilité !<br>
<br>
Nous allons utiliser notre dictionnaire pour contrôler le flux d'instructions ! Et oui ! Vous allez voir que l'on peut remplacer une suite de <span class="italique">if/elif/else</span> en utilisant simplement un dictionnaire. Prenons par exemple un petit programme qui demande une information à l'utilisateur et qui exécute une fonction différente en fonction de l'entrée de l'utilisateur :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">nombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Entrez un nombre : "</span><span class="p">)</span>

<span class="k">if</span> <span class="n">nombre</span> <span class="o">==</span> <span class="s">'0'</span> <span class="p">:</span>
    <span class="n">fonction0</span><span class="p">()</span>
<span class="k">elif</span> <span class="n">nombre</span> <span class="o">==</span> <span class="s">'1'</span> <span class="p">:</span>
    <span class="n">fonction1</span><span class="p">()</span>
<span class="k">elif</span> <span class="n">nombre</span> <span class="o">==</span> <span class="s">'2'</span> <span class="p">:</span>
    <span class="n">fonction2</span><span class="p">()</span>
<span class="o">...</span>
<span class="o">...</span>
<span class="o">...</span>
</pre></div>
</td></tr></tbody></table></div><br>
C'est particulièrement lourd à écrire et ce n'est pas terrible à lire pour celui qui regardera votre code... Et bien, sachez que les dictionnaires ne sont pas obligé de contenir des données de types alphanumériques, des listes, des tuples ou tout ça. Les dictionnaires peuvent aussi contenir des noms de fonction ! De ce fait, on peut remplacer le code précédent par :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">nombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Entrez un nombre : "</span><span class="p">)</span>

<span class="n">dico</span> <span class="o">=</span> <span class="p">{</span><span class="s">'0'</span><span class="p">:</span><span class="n">fonction0</span><span class="p">,</span><span class="s">'1'</span><span class="p">:</span><span class="n">fonction1</span><span class="p">,</span> <span class="s">'2'</span><span class="p">:</span><span class="n">fonction2</span><span class="p">,</span><span class="o">...</span><span class="p">}</span>
<span class="n">dico</span><span class="p">[</span><span class="n">nombre</span><span class="p">]()</span>
</pre></div>
</td></tr></tbody></table></div><br>
En faisant cela, l'interpréteur Python transformera la ligne <span class="italique">dico[nombre]</span> par le nom de la fonction stocké dans le dictionnaire. Et pour appeler une fonction, on écrit son nom que l'on fait suivre de parenthèses. Cela fera donc appel à la fonction que vous vouliez ! C'est un peu ça la magie du Python ! <img src="./Langage Python_files/langue.png" alt=":p" class="smilies">
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Vous avez presque fini d'acquérir les bases de Python ! Vous serez bientôt capable de devenir un programmeur aguerri capable de développer de vrais projets professionnels. En attendant, je vous propose de continuer sur les fonctions en apprenant à les écrire vous-mêmes !
	</div>
	
	<hr>
	<h1 id="chap_278232">Les fonctions (1/2)</h1>
	<div id="chap_intro">
	Bien, dans cette partie, nous allons voir comment créer nos propres fonctions ! Cela passera par :<br>
<ul>
<li>Les différentes parties d'une fonction</li>
<li>Comment ça marche</li>
<li>Comment bien écrire une fonction</li>
<li>Comment fonctionne l'espace mémoire</li>
<li>Comment utiliser les valeurs par défaut</li>
</ul>Il y a pas mal de choses à voir sur les fonctions et vous ne verrez que les bases dans cette partie. Vous en verrez un peu plus dans la partie de cours qui suit.
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278249">Ecrire des fonctions</h2>
		<div class="ss_part_texte">
		Nous avons utilisé pas mal de fonctions jusqu'à maintenant pour effectuer tout un tas d'opérations sur les chaînes de caractères, les listes, les dictionnaires, afficher du texte dans la console, etc... Mais vous ne savez toujours pas en écrire par vous-même ! Commençons par quelques petits rappels sur ce qui définit une fonction.<br>
<br>
<h3>Rappel</h3><br>
Nous avons vu qu'une fonction est composée de trois grandes parties :<br>
<ul>
<li><strong>Son nom</strong> qui permet d'y faire appel.</li>
<li><strong>Ses arguments</strong> qui permet de spécifier des données à lui transmettre.</li>
<li><strong>Sa sortie</strong>, c'est-à-dire ce qu'elle retourne comme résultat.</li>
</ul>son nom et ses arguments forment ce que l'on appelle la signature d'une fonction. Deux fonctions seront différenciées par l'interpréteur à partir du moment où elles ne possèdent pas la même signature. Faites donc attention à ne pas appeler vos fonctions de façon identique si elles possèdent les mêmes arguments, l'interpréteur ne pourra pas les différencier ! Comme nous n'en sommes qu'à la définition d'un peu de vocabulaire, il existe deux types de fonctions :<br>
<ul>
<li><strong>Les fonctions </strong>qui effectuent des instructions et retournent un résultat.</li>
<li><strong>Les procédures</strong> qui effectuent des instructions mais ne retournent rien du tout.</li>
</ul>Dans la pratique, les fonctions et les procédures s'appellent exactement de la même manière ! La seule différence réside effectivement dans le fait que les procédures ne renvoient pas de résultats et ne servent donc qu'à effectuer une suite d'instructions. Ensuite, nous avons vu que pour faire appel à une fonction, il faut écrire quelque chose du genre :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">variable</span> <span class="o">=</span> <span class="n">fonction</span><span class="p">(</span><span class="n">argument1</span><span class="p">,</span> <span class="n">argument2</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
<strong><span class="gros">OU</span></strong><br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">variable</span> <span class="o">=</span> <span class="n">objet</span><span class="o">.</span><span class="n">fonction</span><span class="p">(</span><span class="n">argument1</span><span class="p">,</span> <span class="n">argument2</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Il est donc possible d'appeler des fonctions, comme les fonctions intégrées, par exemple <span class="italique">print</span> ou <span class="italique">input</span>, ou d'appliquer des fonctions sur des objets comme les séquences, les fichiers ou les dictionnaires. Bien sûr, dans la pratique, vous n'êtes pas obligé de stocker la valeur retournée dans une variable. Pour les procédures, cela ne présente même aucun intérêt. Cependant, lorsque vous appelez une fonction, le plus souvent, c'est pour en obtenir le résultat !<br>
<br>
<h3>Définition d'une fonction</h3><br>
Pour définir une fonction, vous avez besoin du mot clé <span class="italique">def</span>. La définition de fonction fonctionne alors comme l'écriture d'une structure. Définissons notre première fonction. Pour plus de commodité, nous ne travaillerons plus dans le shell mais dans des fichiers. Si vous n'y êtes pas encore habitué, revoyez les premiers chapitres !<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">maPremiereProcedure</span><span class="p">()</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"J'ai fait appel à ma première procédure !"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Je suis vraiment content !"</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Nous avons défini ici une première procédure mais il serait intéressant de voir comment y faire appel. Et bien comme une fonction habituelle :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">maPremiereProcedure</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Si vous insérez ces deux morceaux de code dans un fichier .py et que vous l'exécutez, vous devriez voir la magie opérer ! Vous remarquerez d'ailleurs que le code au sein des fonctions n'est exécuté que si l'on y fait appel. Vous pouvez donc y écrire ce que vous voulez sans que cela ne soit exécuter avant d'appeler explicitement les fonctions !<br>
<br>
<div class="rmq attention">Les fonctions et les procédures doivent toujours être définies avant d'y faire appel comme pour les variables ! Autrement, l'interpréteur vous fera remarquer que la fonction que vous essayez d'appeler n'est pas définie.</div><br>
Vous pouvez maintenant créer autant de procédures que vous voulez ! Voyons comment y ajouter des paramètres :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">maDeuxiemeProcedure</span><span class="p">(</span><span class="n">aEcrire</span><span class="p">,</span> <span class="n">peuh</span><span class="p">)</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">aEcrire</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">peuh</span><span class="p">)</span>

<span class="n">maDeuxiemeProcedure</span><span class="p">(</span><span class="s">"HAHAHA !"</span><span class="p">,</span> <span class="mi">34</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
La deuxième procédure est maintenant capable de prendre en compte deux arguments. J'ai donc maintenant deux variables que je peux utiliser dans ma procédure. Voyons maintenant comment créer une fonction qui retournera un résultat. La déclaration est identique mais pour retourner un résultat, vous devrez utiliser le mot clé <span class="italique">return</span> (retourner) suivi de ce que vous voulez retourner.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">puissance</span><span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="n">puissance</span><span class="p">)</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Je calcule </span><span class="si">%f</span><span class="s"> à la puissance </span><span class="si">%f</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="n">puissance</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">nombre</span><span class="o">**</span><span class="n">puissance</span>

<span class="k">print</span><span class="p">(</span><span class="n">puissance</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">12</span><span class="p">))</span>
</pre></div>
</td></tr></tbody></table></div><br>
La fonction puissance affiche alors ce qu'elle va calculer et retourne le résultat escompté.<br>
<br>
<div class="rmq attention">Le mot clé <span class="italique">return</span> marque la fin de la fonction et aucune instruction ne sera exécutée dans la fonction après avoir retourné quelque chose.</div><br>
Il est possible de retourner n'importe quel type de résultat ! Vous pouvez donc retourner des listes, des dictionnaires, des nombres, des chaînes de caractères et ce qu'il vous importe ! Une des grandes spécificités de Python est qu'il est possible de retourner plusieurs résultats ! L'ensemble des résultats sera alors mis sous forme de tuple immuable. Vous pouvez donc faire quelque chose de ce type :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">operations</span><span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="n">facteur</span><span class="p">)</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"J'aime les opérations !"</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">nombre</span><span class="o">+</span><span class="n">facteur</span><span class="p">,</span> <span class="n">nombre</span><span class="o">-</span><span class="n">facteur</span><span class="p">,</span> <span class="n">nombre</span><span class="o">/</span><span class="n">facteur</span><span class="p">,</span> <span class="n">nombre</span><span class="o">*</span><span class="n">facteur</span>

<span class="k">print</span><span class="p">(</span><span class="n">operations</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">12</span><span class="p">))</span>
</pre></div>
</td></tr></tbody></table></div> <br>
Vous avez sûrement remarqué jusqu'à maintenant qu'aucun type n'est précisé pour les arguments des fonctions... Le typage dynamique autorise donc n'importe quel type de donnée comme argument de vos fonctions. Seulement, cela posera certainement problème si les arguments ne sont pas du type attendu. C'est pourquoi, il faut absolument bien documenter ses fonctions afin de s'assurer de leur bonne utilisation ! Nous allons donc voir tout de suite comment documenter nos fonctions.<br>
<br>
<h3>Documenter une fonction</h3><br>
Une dernière chose très importante lorsque vous définissez une fonction, c'est sa documentation ! Vous allez commencer à documenter votre code pour le rendre plus compréhensible et exploitable par d'autres personnes que vous. Pour cela, c'est très simple, il suffit de placer immédiatement sous la ligne de définition de votre fonction, une chaîne de caractères entre triple 'quote' (""" ou ''') qui sera considérée un commentaire.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">fonction</span><span class="p">(</span><span class="n">arg1</span><span class="p">,</span> <span class="n">arg2</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Je documente ma fonction. J'explique rapidement à quoi sert cette fonction.</span>
<span class="sd">    arg1 : J'écris à quoi correspond cet argument.</span>
<span class="sd">    arg2 : J'écris à quoi correspond cet argument.</span>
<span class="sd">    return : J'indique ce que retourne la fonction</span>
<span class="sd">    """</span>
    <span class="k">pass</span>
</pre></div>
</td></tr></tbody></table></div><br>
Voici un exemple d'une manière simple de documenter clairement vos fonctions. Il faut au minimum expliquer ce que fait la fonction. Une documentation complète détaille aussi le sens de chacun des arguments et ce que retourne la fonction. Avec une bonne documentation, personne ne doit avoir besoin de lire le code pour comprendre à quoi sert la fonction et ce qu'elle fait. Cela permet de la conserver en tant que boîte noire qui ne regarde que celui qui l'a implémentée.<br>
<br>
<div class="rmq information">Le mot clé <span class="italique">pass</span> vous permet de sortir d'une structure. Il peut être utile par exemple lorsque vous développez un projet. Une bonne technique de développement étant de définir les fonctions puis l'algorithme principal et enfin d'implémenter les fonctions. Ce mot clé vous permet donc d'avoir toutes vos fonctions définies sans avoir à les implémenter à l'avance.</div><br>
Nous avons donc vu comment déclarer et appeler une fonction mais maintenant, nous allons voir comment est géré l'espace mémoire avec les fonctions.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278269">Espace mémoire</h2>
		<div class="ss_part_texte">
		L'espace mémoire en Python est géré de façon particulière. Les variables que vous définissez dans vos fonctions ne sont définies qu'au sein de ses fonctions par défaut. Tout ce qui est défini à l'extérieur de vos fonctions est défini dans l'espace mémoire général du programme. On a donc le schéma suivant :<br>
<div class="centre"><img src="./Langage Python_files/243332.png" alt="Espace mémoire"></div>Dans ce schéma, vous voyez des variables définies dans l'espace général et des variables définies dans les fonctions. Les variables que vous utilisez au sein des fonctions peuvent d'ailleurs toutes avoir le même nom d'une fonction à l'autre, cela n'engendrera absolument aucune erreur et les fonctions n'interagiront pas les unes avec les autres par inadvertance !<br>
<br>
Vous pouvez faire le test :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">fonction1</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""Fonction de test 1"""</span>
    <span class="n">variable</span> <span class="o">=</span> <span class="mi">10</span>
    <span class="n">variable</span> <span class="o">**=</span> <span class="mi">2</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Variable = </span><span class="si">%f</span><span class="s">"</span> <span class="o">%</span> <span class="n">variable</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">fonction2</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""Fonction qui ne devrait pas pouvoir fonctionner !"""</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Variable = </span><span class="si">%f</span><span class="s">"</span> <span class="o">%</span> <span class="n">variable</span><span class="p">)</span>

<span class="n">fonction1</span><span class="p">()</span>
<span class="n">fonction2</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Cela doit vous donner une belle erreur qui vous indique que <span class="italique">variable</span> n'est pas défini.<br>
<br>
<span class="code">Code : Console - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 console"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre></pre></td><td class="code"><div class="syntax"><pre>Variable&nbsp;=&nbsp;100.000000
Traceback&nbsp;(most&nbsp;recent&nbsp;call&nbsp;last):
&nbsp;&nbsp;File&nbsp;"G:/Travail/Site&nbsp;du&nbsp;zÃ©ro/Langage&nbsp;Python/Exemples/Memoire.py",&nbsp;line&nbsp;10,&nbsp;in&nbsp;&lt;module&gt;
&nbsp;&nbsp;File&nbsp;"G:/Travail/Site&nbsp;du&nbsp;zÃ©ro/Langage&nbsp;Python/Exemples/Memoire.py",&nbsp;line&nbsp;7,&nbsp;in&nbsp;fonction2
NameError:&nbsp;global&nbsp;name&nbsp;'variable'&nbsp;is&nbsp;not&nbsp;defined</pre></div></td></tr></tbody></table></div><br>
Vous voyez d'ailleurs qu'il est indiqué que l'erreur s'est produite à la ligne 10, puis à la ligne 7. Cela vous permet notamment de cibler l'erreur de façon plus précise ! Avec cette erreur, vous pouvez donc constater par vous-même que chaque fonction possède son propre espace mémoire et ne peux pas accéder directement à l'espace mémoire général. Pour permettre cela, il existe un mot clé : <span class="italique">global</span>. Il permet de préciser qu'une variable appartient à l'espace mémoire général. Il doit être utilisé au début d'une fonction et permet de préciser quelles variables sont globales et surtout lesquelles sont accessibles par la fonction.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">fonction1</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""Fonction de test 1"""</span>
    <span class="k">global</span> <span class="n">variable</span>
    <span class="n">variable</span> <span class="o">=</span> <span class="mi">10</span>
    <span class="n">variable</span> <span class="o">**=</span> <span class="mi">2</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Variable = </span><span class="si">%f</span><span class="s">"</span> <span class="o">%</span> <span class="n">variable</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">fonction2</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""Fonction qui devrait maintenant fonctionner."""</span>
    <span class="k">global</span> <span class="n">variable</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Variable = </span><span class="si">%f</span><span class="s">"</span> <span class="o">%</span> <span class="n">variable</span><span class="p">)</span>

<span class="n">fonction1</span><span class="p">()</span>
<span class="n">fonction2</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ce code devrait maintenant fonctionner. En effet, le mot clé <span class="italique">global</span> permet aux fonctions de reconnaître <span class="italique">variable</span>. Cependant, ce genre de pratique n'est pas très recommandée ! En effet, le fait que chaque fonction possède son espace mémoire évite d'affecter des variables sans le vouloir. Il vaut donc mieux créer des fonctions qui retournent un résultat plutôt que des procédures qui modifient directement la valeur de nos variables.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278243">Paramètres des fonctions</h2>
		<div class="ss_part_texte">
		Nous avons vu comment définir une fonction et en définir les arguments assez rapidement. Mais la déclaration de fonctions offrent quelques spécificités intéressantes. C'est ce que nous allons voir tout de suite !<br>
<br>
<h3>Valeurs par défaut</h3><br>
En Python, il est possible de définir des valeurs par défaut aux arguments des fonctions. Et c'est d'ailleurs assez simple à faire, il suffit d'affecter une valeur aux arguments directement dans la déclaration de la fonction. Faisons un essai :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">puissance</span><span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="n">puissance</span> <span class="o">=</span> <span class="mi">2</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Fonction permettant de calculer la puissance d'un nombre.</span>
<span class="sd">    nombre : Le nombre dont on veut la puissance.</span>
<span class="sd">    puissance = 2 : La puissance à laquelle on souhaite passer nombre</span>
<span class="sd">    return : Retourne nombre ** puissance</span>
<span class="sd">    """</span>
    <span class="k">return</span> <span class="n">nombre</span> <span class="o">**</span> <span class="n">puissance</span>

<span class="k">print</span><span class="p">(</span><span class="n">puissance</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">puissance</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans le premier cas, nous appelons la fonction puissance en précisant les deux arguments, dans le second cas, la puissance n'est pas précisée et est automatiquement définie à la valeur 2 donnée dans la définition de la fonction. Le fait de définir des valeurs par défaut permet alors de ne pas donner tous les arguments possibles d'une fonction ! Bien entendu, tous les types de données peuvent être utilisés comme valeur <strong>par défaut et aucune restriction n'est faite ici. La seule contrainte réside dans le fait que les arguments possédant une valeur par défaut doivent nécessairement être déclarés après ceux qui n'en possèdent pas</strong> (arguments obligatoires) dans la déclaration de la fonction. Ainsi, vous avez une déclaration de fonction nécessairement de cette forme :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">fonction</span><span class="p">(</span><span class="n">arg1</span><span class="p">,</span> <span class="n">arg2</span><span class="p">,</span> <span class="n">arg3</span> <span class="o">=</span> <span class="n">valeur</span><span class="p">,</span> <span class="n">arg4</span> <span class="o">=</span> <span class="n">valeur2</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Documentation"""</span>
    <span class="n">instructions</span><span class="o">...</span>
</pre></div>
</td></tr></tbody></table></div><br>
<h3>Appel désordonné</h3><br>
Il peut arriver lorsque l'on programme de devenir un peu dérangé. <img src="./Langage Python_files/langue.png" alt=":p"> Heureusement, Python vous propose pour ça une fonctionnalité intéressante : l'appel aux fonctions avec des arguments désordonnés. Cela vous permet de donner les arguments d'une fonction dans n'importe quel ordre. Pour faire cela, il suffit de préciser le nom des arguments que l'on donne aux fonctions :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">puissance</span><span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="n">puissance</span> <span class="o">=</span> <span class="mi">2</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Fonction permettant de calculer la puissance d'un nombre.</span>
<span class="sd">    nombre : Le nombre dont on veut la puissance.</span>
<span class="sd">    puissance = 2 : La puissance à laquelle on souhaite passer nombre</span>
<span class="sd">    return : Retourne nombre ** puissance</span>
<span class="sd">    """</span>
    <span class="k">return</span> <span class="n">nombre</span> <span class="o">**</span> <span class="n">puissance</span>

<span class="k">print</span><span class="p">(</span><span class="n">puissance</span><span class="p">(</span><span class="n">puissance</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span> <span class="n">nombre</span> <span class="o">=</span> <span class="mi">3</span><span class="p">))</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous voyez ici que j'inverse l'ordre des arguments de la déclaration de ma fonction lorsque je l'appelle. Pour cela, je précise à quel argument j'affecte quelle valeur. Ce genre d'appel est possible avec un nombre indéterminé d'argument et permet quand même de ne pas préciser de valeur pour les paramètres facultatifs.<br>
<br>
Il est aussi possible de mélanger les deux types d'appels de fonction en donnant les premiers arguments de façon ordonnée puis de mélanger pour la suite mais les arguments ordonnés doivent impérativement être donnés en premier !<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">operations</span><span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="n">plus</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="n">moins</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="n">divise</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="n">multiplie</span> <span class="o">=</span> <span class="mi">5</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">""" Fonction stupide qui ne présente aucun intérêt.</span>
<span class="sd">    nombre : Un nombre sur lequel on veut effectuer des opérations.</span>
<span class="sd">    plus : Un nombre à additionner à nombre.</span>
<span class="sd">    divise : Un nombre pour diviser nombre.</span>
<span class="sd">    multiplie : Un nombre pour multiplier nombre.</span>
<span class="sd">    return : Un tuple (nombre+plus, nombre-moins, nombre/divise, nombre*multiplie)"""</span>
    <span class="k">return</span> <span class="n">nombre</span><span class="o">+</span><span class="n">plus</span><span class="p">,</span> <span class="n">nombre</span><span class="o">-</span><span class="n">moins</span><span class="p">,</span> <span class="n">nombre</span><span class="o">/</span><span class="n">divise</span><span class="p">,</span> <span class="n">nombre</span><span class="o">*</span><span class="n">multiplie</span>

<span class="k">print</span><span class="p">(</span><span class="n">operations</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span> <span class="n">divise</span> <span class="o">=</span> <span class="mi">6</span><span class="p">,</span> <span class="n">multiplie</span> <span class="o">=</span> <span class="mi">8</span><span class="p">))</span>
</pre></div>
</td></tr></tbody></table></div><br>
<h3>Nombre indéfini d'arguments</h3><br>
Il existe des fonctions qui acceptent un nombre indéterminé d'arguments, c'est le cas de la fonction <span class="italique">print</span> par exemple. Comment cela fonctionne-t-il ? Et bien, c'est assez simple. Pour cela, il est possible de le faire de deux manières : avec des arguments anonymes ou avec arguments associés à des clés. Nous allons donc voir les deux manières de créer des fonctions avec un nombre indéterminé de paramètres.<br>
<br>
<h4>Arguments anonymes</h4><br>
La syntaxe est particulièrement simple. En fait, vous allez préciser une séquence (liste, tuple ou chaîne de caractères) comme argument. Le fait que cet argument doive être une séquence se précise par l'utilisation de l'opérateur '*' juste avant le nom de l'argument :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">fonction</span><span class="p">(</span><span class="o">*</span><span class="n">arguments</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Test de fonction avec un nombre indéfini d'arguments.</span>
<span class="sd">    arguments : Une séquence à écrire en console."""</span>
    <span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="n">arguments</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>

<span class="n">fonction</span><span class="p">(</span><span class="mi">43</span><span class="p">,</span> <span class="mi">38</span><span class="p">,</span> <span class="s">"Peuh !"</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
De cette façon, il est donc possible d'appeler ma fonction avec un nombre indéfini d'arguments mais attention, cela est possible à une seule condition : la séquence d'arguments doit impérativement se situer en dernier argument de la fonction ! Les arguments s'écrivent donc dans l'ordre suivant dans la déclaration d'une fonction : <strong>les arguments obligatoires, les arguments avec valeur par défaut (facultatifs) et enfin des arguments supplémentaires si nécessaires.<br>
</strong><br>
Il est tout à fait possible de passer pour ce type d'argument une séquence, pour cela, il suffit de la faire précéder d'une étoile pour la convertir. <br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">fonction</span><span class="p">(</span><span class="o">*</span><span class="n">arguments</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Test de fonction avec un nombre indéfini d'arguments.</span>
<span class="sd">    arguments : Une séquence à écrire en console."""</span>
    <span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="n">arguments</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>

<span class="n">fonction</span><span class="p">(</span><span class="o">*</span><span class="s">'abcdef'</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Si vous n'utilisez pas l'opérateur '*', votre séquence sera alors considérée comme n'étant qu'un seul argument ! Cela est dû au typage dynamique. En effet, n'importe quel argument de votre fonction peut prendre n'importe quel type, il faut donc préciser ici que chaque élément de la séquence est un argument à part entière.<br>
<br>
<h4>Arguments avec clé</h4><br>
Si vous voulez associer une clé à chacun des arguments que vous donnez en supplément à une fonction, il va falloir utiliser un dictionnaire. Et ce coup-ci, c'est l'opérateur '**' qui sera utilisé.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">fonction</span><span class="p">(</span><span class="o">**</span><span class="n">arguments</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Test de fonction avec un nombre indéfini d'arguments.</span>
<span class="sd">    arguments : Un dictionnaire à écrire en console."""</span>
    <span class="k">for</span> <span class="n">cle</span> <span class="ow">in</span> <span class="n">arguments</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">cle</span><span class="p">,</span><span class="n">arguments</span><span class="p">[</span><span class="n">cle</span><span class="p">])</span>

<span class="n">fonction</span><span class="p">(</span><span class="n">arg1</span> <span class="o">=</span> <span class="s">'Peuh !'</span><span class="p">,</span> <span class="n">arg2</span> <span class="o">=</span> <span class="mi">38</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous verrez en exécutant ce code que l'on peut donc facilement créer des couples (clé,valeur) à passer en paramètre. La contrainte est la même que précédemment et le dictionnaire d'arguments doit être impérativement placé en dernier dans la liste d'arguments lors de la déclaration de la fonction. Encore une fois, pour convertir un dictionnaire non pas un seul argument mais en une suite d'arguments, il faut utiliser l'opérateur '**' devant le dictionnaire passé en argument.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">fonction</span><span class="p">(</span><span class="o">**</span><span class="n">arguments</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Test de fonction avec un nombre indéfini d'arguments.</span>
<span class="sd">    arguments : Un dictionnaire à écrire en console."""</span>
    <span class="k">for</span> <span class="n">cle</span> <span class="ow">in</span> <span class="n">arguments</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">cle</span><span class="p">,</span><span class="n">arguments</span><span class="p">[</span><span class="n">cle</span><span class="p">])</span>

<span class="n">fonction</span><span class="p">(</span><span class="o">**</span><span class="nb">dict</span><span class="p">(</span><span class="n">arg1</span> <span class="o">=</span> <span class="s">'Peuh !'</span><span class="p">,</span> <span class="n">arg2</span> <span class="o">=</span> <span class="mi">38</span><span class="p">))</span>
</pre></div>
</td></tr></tbody></table></div>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Vous savez créer des fonctions et y faire appel. Dans la prochaine partie, nous verrons comment créer ses propres modules pour organiser son code mais aussi un type de fonction très particulière en Python : les fonctions lambda. Enfin, vous pourrez voir une application assez pratique des fonctions avec la récursivité !
	</div>
	
	<hr>
	<h1 id="chap_278222">Les fonctions (2/2)</h1>
	<div id="chap_intro">
	Maintenant que vous avez vu comment définir et utiliser des fonctions, nous allons voir comment aller un peu plus loin dans les fonctions ! La programmation modulaire vous sera sûrement utile, il faut donc que vous appreniez à créer des modules que vous et vos amis pourrez importer dans tous vos programmes.<br>
<br>
Ensuite, nous verrons quelques pratiques spécifiques aux fonctions avec les fonctions lambda définies à la volée et les fonctions récursives qui vous permettront de jolis effets !<br>
<br>
Si vous n'êtes pas très à l'aise avec ce que nous avons vu jusqu'à maintenant, n'hésitez surtout pas à vous entraîner car ce chapitre ne sera pas parmi les plus simples. Au boulot !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278237">Créer des modules</h2>
		<div class="ss_part_texte">
		<h3>Rappel</h3><br>
Nous avons vu dans le prélude sur les fonctions qu'il en existe des milliers déjà implémentées dans Python que vous pouvez importer dans vos programme. Pour cela vous pouvez utiliser deux types de phrases :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">from</span> <span class="nn">nomDuModule</span> <span class="kn">import</span> <span class="n">nomDeLaFonction</span>
</pre></div>
</td></tr></tbody></table></div><br>
<span class="gros"><strong>OU</strong></span><br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">nomDuModule</span>
</pre></div>
</td></tr></tbody></table></div><br>
De cette manière vous pouvez accéder à de nombreuses fonctionnalités. Mais vous vous demandez certainement s'il est possible d'importer des modules que l'on aurait créés soi-même. Et bien oui ! L'importation se fait en fait exactement de la même manière, il suffit simplement de préciser pour nom de module le nom de votre fichier (sans l'extension .py) contenant les fonctions que vous voulez.<br>
<br>
<div class="rmq information">N'oubliez pas le caractère '*' qui veut dire 'tout' si vous voulez importer toutes les fonctions d'un module.</div><br>
<h3>Créer un module</h3><br>
Faisons un petit test. Nous allons créer un fichier monModule.py avec quelques fonctions :<br>
<br>
<span class="code">Code : Python - monModule.py - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">foo</span><span class="p">()</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"foo"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">bar</span><span class="p">()</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"bar"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">foobar</span><span class="p">()</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"foobar"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">barfoo</span><span class="p">()</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"barfoo"</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Je crée donc quatre fonctions totalement inutiles mais nous allons essayer de les importer.<br>
<br>
<div class="rmq information">Je vous avais épargné jusqu'à maintenant les exemples à coup de foo et de bar... Sachez qu'il est de tradition dans l'informatique d'utiliser ces deux noms ou une combinaison de ces noms. Ce sont des noms génériques ou <a href="http://fr.wikipedia.org/wiki/Variable_m%C3%A9tasyntaxique">variables métasyntaxiques</a>.</div><br>
Si nous voulons importer notre module, dans un autre fichier .py, essayez d'utiliser la même syntaxe que pour les modules intégrés dans Python.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">from</span> <span class="nn">monModule</span> <span class="kn">import</span> <span class="o">*</span>

<span class="n">foo</span><span class="p">()</span>
<span class="n">bar</span><span class="p">()</span>
<span class="n">foobar</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
<strong><span class="gros">OU</span></strong><br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">monModule</span>

<span class="n">monModule</span><span class="o">.</span><span class="n">foo</span><span class="p">()</span>
<span class="n">monModule</span><span class="o">.</span><span class="n">bar</span><span class="p">()</span>
<span class="n">monModule</span><span class="o">.</span><span class="n">foobar</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous devriez voir apparaître la même chose dans les deux cas. En effet, ces deux écritures sont équivalentes. La deuxième, plus lourde, évite les ambiguïtés notamment si plusieurs modules possèdent des fonctions avec le même nom. Cela peut arriver plus souvent que vous ne l'imaginez.<br>
<br>
La programmation modulaire vous permettra de créer des modules cohérents contenant des fonctions qui s'appliquent toutes dans un contexte particulier. Par exemple, si vous voulez créer un ensemble de fonctions qui effectuent des opérations mathématiques, il serait bon de toutes les regrouper dans un module spécifique. C'est ce que fait le module <span class="italique">math</span> intégré à Python par exemple. En consultant un peu la documentation, vous remarquerez très vite que chaque module correspond à un thème ou à un type d'application spécifique. Essayez donc de structurer vos programmes de la même façon. De plus, les modules que vous créerez ainsi pourront être réutilisés dans tous vos programmes si besoin est !<br>
<br>
<h3>Différencier le programme</h3><br>
Maintenant que vous savez que vous pouvez utiliser plusieurs fichiers pour écrire vos programmes en utilisant ce que l'on appelle la programmation modulaire, il faut que vous sachiez comment l'interpréteur différencie ces programmes. En effet, nous allons faire un petit test qui va vous paraître bête. Dans votre module, rajoutez les lignes :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">foo</span><span class="p">()</span>
<span class="n">bar</span><span class="p">()</span>
<span class="n">foobar</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
En console, vous devriez voir apparaître :<br>
<br>
<span class="code">Code : Console - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 console"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre></pre></td><td class="code"><div class="syntax"><pre>&gt;&gt;&gt;&nbsp;
foo
bar
foobar
foo
bar
foobar</pre></div></td></tr></tbody></table></div><br>
Mais que se passe-t-il ?! Le code présent dans votre module s'exécute au moment de l'importation ! Mais il est extrêmement rare que je veuille faire une telle chose ! En fait, lorsque vous importez un module dans votre code, l'interpréteur ne se crée qu'un seul fichier avec l'ensemble du code de vos différents modules dans un seul fichier. C'est ce fichier qu'il va interpréter... Seulement, vous pouvez développer des modules avec de nombreuses fonctions et du code de test de ces fonctions en fin de fichier par exemple. Et ce code n'a que pour seul intérêt de tester le bon fonctionnement de vos fonctions. Pour résoudre ce problème, il existe des variables qui existent toujours en Python. Celle qui va nous intéresser ici s'appelle <span class="italique">__name__</span>.<br>
<br>
<div class="rmq information">En Python, toutes les variables internes au langage lui-même et qui seront toujours présentes commencent et finissent toutes par un double 'underscore' (tiret bas). Il en existe des dizaines qui vous permettent d'accéder à certains informations, vous trouverez plus d'informations à propos de ces variables dans la documentation.</div><br>
Dans notre cas, nous allons vérifier que le module que l'on veut importer est le programme principal ou non. Pour cela, il faut faire un test sur la variable <span class="italique">__name__</span>.<br>
<br>
<span class="code">Code : Python - monModule.py - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">foo</span><span class="p">()</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"foo"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">bar</span><span class="p">()</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"bar"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">foobar</span><span class="p">()</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"foobar"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">barfoo</span><span class="p">()</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"barfoo"</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span> <span class="p">:</span>
    <span class="n">foo</span><span class="p">()</span>
    <span class="n">bar</span><span class="p">()</span>
    <span class="n">foobar</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Avec ce test, le code qui suit ne sera considéré par l'interpréteur que si le fichier monModule.py est le programme principal exécuté (<span class="italique">main</span>). Sinon, je ne fais rien. Essayez de lancer votre fichier monModule.py puis votre autre programme important monModule.py. Vous verrez alors que l'appel aux fonctions effectué dans monModule.py ne se fera que si c'est ce fichier qui est directement exécuté.<br>
<br>
Comme j'en parlais tout à l'heure, avec ce test vous pouvez alors créer des modules exécutables pour tester l'ensemble de leurs fonctions mais qui ne font rien lorsqu'on les importe !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278215">Fonction lambda</h2>
		<div class="ss_part_texte">
		Une des particularités de Python est les fonctions déclarées à la volée aussi appelées fonctions lambda. Ces fonctions seront en fait déclarées en plein milieu de votre code et seront anonymes. Pour les déclarer, le mot clé <span class="italique">def</span> ne sera pas nécessaire, vous devrez utiliser le mot clé <span class="italique">lambda</span>.<br>
<br>
<div class="rmq information">Ces fonctions portent le nom de lambda car c'est le nom générique pour désigner un anonyme. Vous avez certainement déjà entendu parler de l'individu lambda. Il ne représente personne en particulier !</div><br>
Nous allons voir tout de suite la syntaxe générale d'une fonction lambda :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">lambda</span> <span class="n">arg1</span><span class="p">,</span> <span class="n">arg2</span> <span class="o">...</span> <span class="p">:</span> <span class="n">instructions</span>
</pre></div>
</td></tr></tbody></table></div><br>
Pour déclarer une fonction lambda, il faut donc utiliser le mot clé lambda, le faire suivre d'arguments ou pas que la fonction prendra en compte et enfin des instructions à exécuter. Si vous voulez pouvoir appeler votre fonction lambda, il faut la stocker dans une variable qui pourra donc être appelée comme n'importe quelle autre fonction :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">aLArrache</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">nombre</span><span class="p">,</span> <span class="n">puissance</span> <span class="p">:</span> <span class="n">nombre</span><span class="o">**</span><span class="n">puissance</span>
<span class="k">print</span><span class="p">(</span><span class="n">aLArrache</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
</pre></div>
</td></tr></tbody></table></div><br>
Avec ce petit exemple, vous voyez qu'il est possible de déclarer une fonction à la volée et de l'appeler ensuite. <br>
<br>
<div class="rmq attention">Remarquez ici que le mot clé <span class="italique">return</span> n'est pas nécessaire dans les instructions d'une fonction lambda aussi simple. Les fonctions lambda seront d'ailleurs souvent extrêmement simple et ne serviront qu'à faire quelques opérations de bases.</div><br>
Bien sûr, vous devez vous demander à quoi ces fonctions peuvent bien servir... Et bien, vous pouvez faire des fonctions qui vous retourne des fonctions lambda générées en fonction de ce que vous passez en argument par exemple ! Mais nous allons voir qu'il existe des cas où les fonctions lambda sont très utiles !<br>
<br>
<h3>Utilité</h3><br>
En Python, il existe plusieurs fonctions intégrées qui s'appliquent aux fonctions. Et oui, il est possible d'appliquer des fonctions à d'autres fonctions comme si c'était de simples variables ! Les trois qui vont nous intéresser sont les suivantes :<br>
<ul>
<li><strong>filter</strong> (filtrer): s'applique aux fonctions booléennes (qui retournent <span class="italique">True</span> ou <span class="italique">False</span>). Applique une séquence d'arguments à la fonction ainsi testée et retourne la séquence d'arguments pour lesquels elle a retournée <span class="italique">True</span>.</li>
<li><strong>map</strong> (carte) : applique la fonction passée en argument à une ou plusieurs séquences passées en argument. Retourne un ensemble de tuples correspondant aux résultats des appels de la fonction.</li>
<li><strong>reduce</strong> (réduire) (cette fonction a été retirée en Python v3) : applique une fonction binaire (c'est-à-dire qui accepte deux arguments) aux éléments d'une séquence les uns à la suite des autres pour réduire le résultat à une seule valeur de retour. Une valeur initiale peut être spécifiée.</li>
</ul>Expliqué comme ça, ça ne vous parle certainement pas beaucoup. Nous allons donc voir quelques petits exemples avec des fonctions lambda.<br>
<br>
<h4>filter() :</h4><br>
Cette fonction a pour but de séparer les éléments d'une séquence qui retourneront <span class="italique">True</span> pour ne vous retourner que ces derniers. Vous avez par exemple une séquence de données sur lesquelles vous allez effectuer des tests pour savoir si elles sont utilisables ou non. Vous pouvez le faire en une seule ligne à l'aide d'une fonction lambda et de la fonction <span class="italique">filter</span>.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">randint</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">aleatoires</span> <span class="o">=</span> <span class="p">[]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span> <span class="p">:</span>
	<span class="n">aleatoires</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">100</span><span class="p">))</span>

<span class="o">&gt;&gt;&gt;</span> <span class="nb">filter</span><span class="p">(</span><span class="k">lambda</span> <span class="n">nombre</span> <span class="p">:</span> <span class="n">nombre</span><span class="o">%</span><span class="mi">3</span><span class="p">,</span> <span class="n">aleatoires</span><span class="p">)</span>
<span class="o">&lt;</span><span class="nb">filter</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x01F87490</span><span class="o">&gt;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">(</span><span class="nb">filter</span><span class="p">(</span><span class="k">lambda</span> <span class="n">nombre</span> <span class="p">:</span> <span class="n">nombre</span><span class="o">%</span><span class="mi">3</span><span class="p">,</span> <span class="n">aleatoires</span><span class="p">))</span>
<span class="p">[</span><span class="mi">52</span><span class="p">,</span> <span class="mi">97</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">86</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">98</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">65</span><span class="p">,</span> <span class="mi">86</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">38</span><span class="p">,</span> <span class="mi">74</span><span class="p">,</span> <span class="mi">88</span><span class="p">,</span> <span class="mi">46</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">95</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">68</span><span class="p">,</span> 
<span class="mi">5</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">97</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">47</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">65</span><span class="p">,</span> <span class="mi">85</span><span class="p">,</span> <span class="mi">47</span><span class="p">,</span> <span class="mi">38</span><span class="p">,</span> <span class="mi">91</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">88</span><span class="p">,</span> <span class="mi">35</span><span class="p">,</span> <span class="mi">61</span><span class="p">,</span> <span class="mi">83</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">49</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">88</span><span class="p">,</span> <span class="mi">83</span><span class="p">,</span> <span class="mi">46</span><span class="p">,</span> 
<span class="mi">89</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">92</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">49</span><span class="p">,</span> <span class="mi">44</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">77</span><span class="p">,</span> <span class="mi">61</span><span class="p">,</span> <span class="mi">53</span><span class="p">,</span> <span class="mi">52</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">98</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">86</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">58</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">61</span><span class="p">,</span> <span class="mi">86</span><span class="p">]</span>

<span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">(</span><span class="nb">filter</span><span class="p">(</span><span class="k">lambda</span> <span class="n">nombre</span> <span class="p">:</span> <span class="ow">not</span> <span class="n">nombre</span><span class="o">%</span><span class="mi">3</span><span class="p">,</span> <span class="n">aleatoires</span><span class="p">))</span>
<span class="p">[</span><span class="mi">45</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">39</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">93</span><span class="p">,</span> <span class="mi">96</span><span class="p">,</span> <span class="mi">87</span><span class="p">,</span> <span class="mi">75</span><span class="p">,</span> <span class="mi">87</span><span class="p">,</span> <span class="mi">99</span><span class="p">,</span> <span class="mi">96</span><span class="p">,</span> <span class="mi">69</span><span class="p">,</span> <span class="mi">93</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">51</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">39</span><span class="p">,</span> 
<span class="mi">57</span><span class="p">,</span> <span class="mi">36</span><span class="p">,</span> <span class="mi">87</span><span class="p">,</span> <span class="mi">78</span><span class="p">,</span> <span class="mi">87</span><span class="p">,</span> <span class="mi">84</span><span class="p">,</span> <span class="mi">36</span><span class="p">,</span> <span class="mi">51</span><span class="p">,</span> <span class="mi">72</span><span class="p">,</span> <span class="mi">24</span><span class="p">,</span> <span class="mi">90</span><span class="p">,</span> <span class="mi">96</span><span class="p">]</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans cet exemple, j'importe la fonction <span class="italique">randint</span> qui permet de générer des nombres entiers pseudo-aléatoires. Je crée ensuite une liste de 100 nombres aléatoires compris entre 0 et 100. Je souhaite ensuite appliquer un filtre sur ces nombres, c'est pourquoi j'utilise la fonction <span class="italique">filter</span>.<br>
<br>
J'applique un filtre qui doit me donner tous les nombres qui ne sont pas divisibles par 3. Souvenez vous que les booléens peuvent être remplacés par des nombres où 0 vaut <span class="italique">False</span> et tous les autres valent <span class="italique">True</span>. Remarquez que cette fonction renvoie un objet de type <span class="italique">filter</span> que je passe en argument de la fonction <span class="italique">list</span> uniquement pour l'afficher correctement (l'emplacement en mémoire indiqué en hexadécimal ne m'est pas d'une grand utilité <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"> ). Dans le deuxième cas, je cherche tous les nombres de la liste qui sont des multiples de 3. De façon générale, la fonction <span class="italique">filter</span> s'écrit :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="nb">filter</span><span class="p">(</span><span class="n">fonction</span><span class="p">,</span> <span class="n">sequence</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Je lui ai donc passé ici une fonction lambda en argument et ma séquence de nombre aléatoires. De cette façon, je génère donc rapidement des filtres sans avoir à déclarer de fonction qui ne sera certainement pas utile ailleurs que dans ce cas précis.<br>
<br>
<h4>map() :</h4><br>
La fonction <span class="italique">map</span> permet de créer littéralement la carte des résultats de la fonction passée en argument. Si vous lui passez plusieurs séquences en paramètres, cela vous retournera le résultat pour l'ensemble des couples ou n-uplés d'arguments, la correspondance se faisant à indices égaux. En clair, vous devez utiliser un nombre de séquences égal au nombre d'arguments que prend votre fonction passée en argument et cela vous retournera la liste des résultats de la taille de la plus petite séquence d'arguments donnée. Voyons un peu plus concrètement ce que cela donne :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">resultats</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="p">:</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="p">,</span> <span class="n">liste</span><span class="p">,</span> <span class="n">liste</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="n">resultats</span> <span class="p">:</span>
	<span class="k">print</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>
	
<span class="mi">0</span>
<span class="mi">2</span>
<span class="mi">4</span>
<span class="mi">6</span>
<span class="mi">8</span>
<span class="mi">10</span>
<span class="mi">12</span>
<span class="mi">14</span>
<span class="mi">16</span>
<span class="mi">18</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, je crée d'abord une liste des nombres de 0 à 9. Je cherche ensuite à effectuer la carte des résultats et je l'imprime. Vous voyez ici que les couples d'arguments formés sont (0,0), (1,1), ... , (9,9). Ceci explique ce que j'affiche. En utilisant les fonctions lambda pour définir une fonction directement dans <span class="italique">map</span>, je m'évite encore une fois une déclaration futile de fonction.<br>
<br>
<h4>reduce() (non valide en Python v3) :</h4><br>
La fonction reduce s'applique uniquement aux fonctions binaires, c'est-à-dire qui accepte deux arguments. Le principe est simple, vous appliquez la fonction passée en argument au résultat de celle-ci avec l'élément suivant dans la séquence passé en paramètre. Si ce n'est pas clair, voyons ça avec un exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">liste</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">reduce</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="p">:</span> <span class="n">x</span><span class="o">*</span><span class="n">y</span><span class="p">,</span> <span class="n">liste</span><span class="p">)</span>
<span class="mi">9332621544394415268169923885626670049071596826438162146859296389</span>
<span class="mi">5217599993229915608941463976156518286253697920827223758251185210</span>
<span class="mi">9168640000000000000000000000</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, ce que j'ai fait permet de calculer le factoriel d'un nombre.<br>
<br>
<div class="rmq information">Pour ceux d'entre vous qui ne connaissent pas l'opération factorielle, c'est une opération mathématique noté 'unNombre!' et qui consiste à calculer le produit de unNombre * (unNombre - 1) * (unNombre - 2) * ... * 3 * 2 * 1. C'est l'opération qui croit le plus vite, et comme vous pouvez le constater, 99! est particulièrement énorme !</div><br>
Dans cet exemple, j'applique donc la fonction multiplication aux deux arguments de ma fonction lambda et <span class="italique">reduce</span> permet de l'appliquer successivement à 1 * 2 puis au résultat de cette opération fois 3 et ainsi de suite. Malheureusement, cette manière de faire n'étant que partiellement lisible, la fonction <span class="italique">reduce</span> a été retirée du langage Python en version 3. En effet, il est possible d'effectuer la même chose avec une simple boucle <span class="italique">for</span> beaucoup plus facile à comprendre... <br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">factoriel</span> <span class="o">=</span> <span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">nombre</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">)</span> <span class="p">:</span>
	<span class="n">factoriel</span> <span class="o">*=</span> <span class="n">nombre</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">factoriel</span>
<span class="mi">9332621544394415268169923885626670049071596826438162146859296</span>
<span class="mi">3895217599993229915608941463976156518286253697920827223758251</span>
<span class="mi">1852109168640000000000000000000000</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ceci est bien entendu beaucoup plus lisible et plus simple à comprendre ! Vous comprendrez donc pourquoi cette fonction a été supprimée.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278277">Récursivité</h2>
		<div class="ss_part_texte">
		Une application très intéressante des fonctions est ce que l'on appelle la récursivité. Ce mot qui fait un peu peur exprime un concept en réalité assez simple : une fonction est dite récursive lorsqu'elle fait appel à elle-même.<br>
<br>
<div class="rmq erreur">Quoi ?! Une fonction qui s'appelle elle-même ?! Mais je vais faire une boucle infinie avec ça !  <img src="./Langage Python_files/huh.png" alt=":o" class="smilies"> </div><br>
Oui ! Si vous n'introduisez pas de condition d'arrêt ! Et c'est là toute la difficulté des fonctions récursives. Il faut réussir à exprimer le cas dit trivial, évident, celui qui ne nécessite pas un nouvel appel de la fonction. Mais si je ne vous donne pas un exemple, je suis certain que vous ne verrez pas du tout l'utilité d'une fonction récursive...<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">factoriel</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Cette fonction retourne le factoriel d'un nombre.</span>
<span class="sd">    nombre : Le nombre dont on veut le factoriel.</span>
<span class="sd">    return : nombre!</span>
<span class="sd">    """</span>
    <span class="k">if</span> <span class="n">nombre</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">or</span> <span class="n">nombre</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">:</span>
        <span class="k">return</span> <span class="mi">1</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="k">return</span> <span class="n">nombre</span> <span class="o">*</span> <span class="n">factoriel</span><span class="p">(</span><span class="n">nombre</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"2! = </span><span class="si">%i</span><span class="s">"</span> <span class="o">%</span> <span class="n">factoriel</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"3! = </span><span class="si">%i</span><span class="s">"</span> <span class="o">%</span> <span class="n">factoriel</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"4! = </span><span class="si">%i</span><span class="s">"</span> <span class="o">%</span> <span class="n">factoriel</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"5! = </span><span class="si">%i</span><span class="s">"</span> <span class="o">%</span> <span class="n">factoriel</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"6! = </span><span class="si">%i</span><span class="s">"</span> <span class="o">%</span> <span class="n">factoriel</span><span class="p">(</span><span class="mi">6</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"7! = </span><span class="si">%i</span><span class="s">"</span> <span class="o">%</span> <span class="n">factoriel</span><span class="p">(</span><span class="mi">7</span><span class="p">))</span>
</pre></div>
</td></tr></tbody></table></div><br>
La fonction factorielle est en effet par définition une fonction récursive. Comme nous l'avons vu plus haut, il est tout à fait possible de le calculer avec une simple boucle <span class="italique">for</span> mais le fait que <img src="./Langage Python_files/mimetex.cgi" alt="N! = N * (N-1)!"> nous donne ici une excellente occasion d'introduire les fonctions récursives. De plus, la condition d'arrêt, le cas trivial est donné par le fait que 1! = 0! = 1, cela fait partie de la définition mathématique de l'opération factorielle. Le cas trivial est donc bien défini pour arrêter l'appel récursif.<br>
<br>
<div class="rmq attention">Vous êtes limité dans le nombre de fonctions que vous pouvez appeler ! Si trop de fonctions sont appelées sans avoir été résolues (terminées), l'interpréteur vous fera une jolie erreur. L'interpréteur Python est même capable de vous signaler que vous demandez une récursion trop importante. Essayez donc de calculer le factoriel de 5000 avec la fonction précédente. Vous devriez obtenir une erreur de ce style :<br>
<span class="code">Code : Console - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 console"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre></pre></td><td class="code"><div class="syntax"><pre>File&nbsp;"G:\Travail\Site&nbsp;du&nbsp;zÃ©ro\Langage&nbsp;Python\Exemples\factoriel.py",&nbsp;line&nbsp;7,&nbsp;in&nbsp;factoriel
RuntimeError:&nbsp;maximum&nbsp;recursion&nbsp;depth&nbsp;exceeded&nbsp;in&nbsp;cmp</pre></div></td></tr></tbody></table></div></div><br>
Même si l'utilité de telles fonctions ne vous semble pas évident, vous serez certainement confronté à un problème y faisant appel par nature un jour ou l'autre. Souvenez vous simplement qu'il faut bien définir une condition d'arrêt à votre fonction.
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Vous êtes maintenant des pros des fonctions ! Vous savez structurer votre code, l'organiser et le rendre de plus en plus lisible. Il ne reste donc qu'un dernier point à voir avant de nous attaquer à de vrais projets concrets qui vous donneront du fil à retordre !
	</div>
	
	<hr>
	<h1 id="chap_278267">Gérer les exceptions</h1>
	<div id="chap_intro">
	Des fois, on voudrait pouvoir essayer de faire quelque chose dans un programme mais ça ne fonctionne pas. Et malheureusement, notre programme est interrompu et ce n'est pas du tout ce que l'on voulait ! Mais alors, est-il possible de gérer ce genre de problèmes ? Oui ! Ca s'appelle la gestion des exceptions !<br>
<br>
Ici, vous verrez ce qu'est une exception, comment les gérer et à quoi cela peut servir de les gérer !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278250">Les exceptions</h2>
		<div class="ss_part_texte">
		Qu'est-ce qu'une exception ? Une exception est ce qui se produit dans votre programme lorsque celui-ci sort du flux d'instructions habituel. Lorsque votre programme rencontre une erreur, il commence par planter, c'est-à-dire qu'il sort du flux d'instructions et ensuite il fait une exception, il va donc chercher d'où vient l'erreur.<br>
<br>
Les exceptions sont ce que vous affiche l'interpréteur lorsque vos programmes ne fonctionnent pas correctement. Il vous indique où se trouve l'erreur et pourquoi elle a lieu. En Python, il existe un moyen de gérer les exceptions pour que vos programmes ne plantent plus à chaque fois. Pour cela, il suffira de lui proposer une suite d'instructions à exécuter en cas d'erreur.<br>
<br>
Les exceptions les plus fréquentes que vous rencontrerez sont les suivantes :<br>
<ul>
<li><strong>NameError</strong> : cela apparaît lorsque vous essayez de manipuler une variable ou une fonction non déclarée.</li>
<li><strong>ZeroDivisionError</strong> : cela apparaît lorsque vous essayez de diviser par zéro (et oui, c'est impossible !).</li>
<li><strong>SyntaxError</strong> : cela apparaît lorsque vous avez mal écrit une structure ou que vos parenthèses ne sont pas correctes.</li>
<li><strong>IndexError</strong> : cela apparaît lorsque vous essayez d'accéder à un élément à un indice qui n'existe pas dans une séquence.</li>
<li><strong>KeyError</strong> : cela apparaît lorsque vous essayez d'accéder à un élément d'un dictionnaire avec une clé qui n'existe pas.</li>
<li><strong>IOError</strong> : cela apparaît lorsque vous manipulez mal un fichier comme essayer de lire un fichier qui n'existe pas ou d'écrire un fichier ouvert en lecture uniquement.</li>
<li><strong>TypeError </strong>: cela apparaît lorsque vous essayez d'effectuer des opérations entre des types incompatibles (ex : 12 + 'peuh !').</li>
</ul>Bien, assez parlé, passons à la suite voyons comment il est possible de gérer les exceptions.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278256">Lever une exception</h2>
		<div class="ss_part_texte">
		Il existe une structure spécifique en Python qui permet de lever des exceptions. Elle se construit à l'aide des mots clés <span class="italique">try </span>et <span class="italique">except</span>. Il existe d'autres manières de faire que nous allons aussi voir.<br>
<br>
<h3>Structure minimale</h3><br>
La structure minimale pour gérer les exceptions s'écrit de la façon suivante :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">try</span> <span class="p">:</span>
    <span class="n">instructions</span> à <span class="n">risque</span><span class="o">...</span>
<span class="k">except</span> <span class="p">:</span>
    à <span class="n">faire</span> <span class="n">en</span> <span class="n">cas</span> <span class="n">d</span><span class="s">'erreur...</span>
</pre></div>
</td></tr></tbody></table></div><br>
J'avais déjà utilisé cette structure dans le corrigé du TP sur le Juste Prix. Elle me permettait dans cette exemple de gérer une mauvaise entrée de l'utilisateur lorsque je lui demande d'écrire un nombre. Par exemple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">try</span> <span class="p">:</span>
    <span class="n">nombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Entrez un nombre : "</span><span class="p">)</span>
    <span class="n">nombre</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous avez bien tapé un nombre !"</span><span class="p">)</span>
<span class="k">except</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous auriez dû taper un nombre..."</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Si vous essayez ce code, vous pouvez vous apercevoir que la suite d'instructions dans la structure <span class="italique">try</span> est immédiatement interrompue lorsqu'une erreur se produit. Ceci entraîne que je n'écris pas "Vous avez bien tapé un nombre !" lorsque ce n'est pas le cas ! Vous avez donc ici la structure minimale de la gestion des exceptions.<br>
<br>
<h3>Des types d'erreurs</h3><br>
Il est tout à fait possible de provoquer un comportement différent en fonction de l'exception qui est levée. Pour cela, il suffit de le préciser après <span class="italique">except</span>. Et il est même possible de proposer plusieurs alternatives en fonction de l'erreur provoquée. Prenons un petit exemple simple :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">nombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Entrez un nombre : "</span><span class="p">)</span>
<span class="k">try</span> <span class="p">:</span>
    <span class="n">nombre</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous avez bien tapé un nombre !"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Essayons de diviser par ce nombre..."</span><span class="p">)</span>
    <span class="n">exemple</span> <span class="o">=</span> <span class="mi">10</span><span class="o">/</span><span class="n">nombre</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Nous obtenons : 10/</span><span class="si">%i</span><span class="s"> = </span><span class="si">%f</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="mi">10</span><span class="o">/</span><span class="n">nombre</span><span class="p">))</span>
<span class="k">except</span> <span class="ne">ValueError</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous auriez dû taper un nombre..."</span><span class="p">)</span>
<span class="k">except</span> <span class="ne">ZeroDivisionError</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous avez entré le nombre 0, il n'est pas possible de diviser par 0..."</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans cet exemple, deux types d'exceptions peuvent être levées et ne donneront pas le même résultat. J'ai décidé d'écrire dans la console un texte correspondant au type d'erreur !<br>
<br>
Il est aussi possible d'effectuer la même suite d'instructions pour différentes erreurs, pour cela, il vous suffit de les inclure dans un tuple à la suite d'<span class="italique">except</span> :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">nombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Entrez un nombre : "</span><span class="p">)</span>
<span class="k">try</span> <span class="p">:</span>
    <span class="n">nombre</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous avez bien tapé un nombre !"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Essayons de diviser par ce nombre..."</span><span class="p">)</span>
    <span class="n">exemple</span> <span class="o">=</span> <span class="mi">10</span><span class="o">/</span><span class="n">nombre</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Nous obtenons : 10/</span><span class="si">%i</span><span class="s"> = </span><span class="si">%f</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="mi">10</span><span class="o">/</span><span class="n">nombre</span><span class="p">))</span>
<span class="k">except</span> <span class="p">(</span><span class="ne">ValueError</span><span class="p">,</span> <span class="ne">ZeroDivisionError</span><span class="p">,</span> <span class="ne">TypeError</span><span class="p">)</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Une erreur est survenue..."</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Si vous n'avez aucune idée de toutes les exceptions qui peuvent intervenir dans votre portion de code ou si tout simplement vous ne souhaitez pas effectuer des instructions différentes pour toute une catégorie d'exceptions, vous pouvez vous contenter de ne préciser aucune exception en particulier à <span class="italique">except</span>.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">nombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Entrez un nombre : "</span><span class="p">)</span>
<span class="k">try</span> <span class="p">:</span>
    <span class="n">nombre</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous avez bien tapé un nombre !"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Essayons de diviser par ce nombre..."</span><span class="p">)</span>
    <span class="n">exemple</span> <span class="o">=</span> <span class="mi">10</span><span class="o">/</span><span class="n">nombre</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Nous obtenons : 10/</span><span class="si">%i</span><span class="s"> = </span><span class="si">%f</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="mi">10</span><span class="o">/</span><span class="n">nombre</span><span class="p">))</span>
<span class="k">except</span> <span class="ne">ValueError</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous n'avez pas entré un nombre..."</span><span class="p">)</span>
<span class="k">except</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Une erreur est survenue..."</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h3>Exécuter selon le cas</h3><br>
Lorsque l'on gère des exceptions, il arrive que l'on veuille exécuter des instructions selon certaines conditions de réussite ou non des instructions précédentes. Nous venons de voir que si une erreur se produit, alors les instructions dans la structure <span class="italique">try</span> sont interrompues et le flux d'instructions se dirige alors vers un bloc <span class="italique">except</span>. Seulement, il se peut qu'une fois nos actions dangereuses effectuées, plus rien qui puisse provoquer une erreur n'ait à être exécuté. Pour cela, il existe deux mots clés : <span class="italique">else</span> qui vous permettra ici d'exécuter des instructions si tout s'est bien déroulé et <span class="italique">finally</span> qui s'exécutera quoi qu'il arrive.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">nombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Entrez un nombre : "</span><span class="p">)</span>
<span class="k">try</span> <span class="p">:</span>
    <span class="n">nombre</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous avez bien tapé un nombre !"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Essayons de diviser par ce nombre..."</span><span class="p">)</span>
    <span class="n">exemple</span> <span class="o">=</span> <span class="mi">10</span><span class="o">/</span><span class="n">nombre</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Nous obtenons : 10/</span><span class="si">%i</span><span class="s"> = </span><span class="si">%f</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="mi">10</span><span class="o">/</span><span class="n">nombre</span><span class="p">))</span>
<span class="k">except</span> <span class="ne">ValueError</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous n'avez pas entré un nombre..."</span><span class="p">)</span>
<span class="k">except</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Une erreur est survenue..."</span><span class="p">)</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Tout s'est bien déroulé !"</span><span class="p">)</span>
<span class="k">finally</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Je suis le bloc de fin !"</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans cet exemple, la gestion des exceptions est complète. Ainsi, il est possible de gérer certains types d'exceptions. Vous pouvez vérifier que le bloc <span class="italique">else</span> ne s'exécute qu'en cas de bon déroulement du programme et le bloc <span class="italique">finally</span>, lui, s'exécute dans tous les cas, qu'il y ait une erreur ou non.<br>
<br>
<h3>Interrompre le programme</h3><br>
Vous savez gérer vos exceptions. Seulement, lorsque vous les gérez, il se peut que vous oubliez quelques cas et peut-être aimeriez-vous être au courant que votre programme n'a effectivement pas fonctionné correctement et pourquoi. Et bien, même en utilisant une structure <span class="italique">try-except</span>, il est tout à fait possible de lever une exception et d'interrompre le programme. Un mot clé vous permet d'effectuer cette action : <span class="italique">raise</span> (lever).<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">nombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Entrez un nombre : "</span><span class="p">)</span>
<span class="k">try</span> <span class="p">:</span>
    <span class="n">nombre</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous avez bien tapé un nombre !"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Essayons de diviser par ce nombre..."</span><span class="p">)</span>
    <span class="n">exemple</span> <span class="o">=</span> <span class="mi">10</span><span class="o">/</span><span class="n">nombre</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Nous obtenons : 10/</span><span class="si">%i</span><span class="s"> = </span><span class="si">%f</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="mi">10</span><span class="o">/</span><span class="n">nombre</span><span class="p">))</span>
<span class="k">except</span> <span class="ne">ValueError</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous n'avez pas entré un nombre..."</span><span class="p">)</span>
<span class="k">except</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Une erreur est survenue..."</span><span class="p">)</span>
    <span class="k">raise</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Tout s'est bien déroulé !"</span><span class="p">)</span>
<span class="k">finally</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Je suis le bloc de fin !"</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Par exemple, ici, je construis la structure complète mais ne gère réellement que les erreurs de type <span class="italique">ValueError</span>. Pour les autres, je me contentais d'écrire qu'une erreur était survenue. Mais si je veux en connaître un peu plus sur l'erreur, je dois lever une exception, et c'est ce que fait le mot clé <span class="italique">raise</span>. Ce mot clé interrompt le programme et écrit dans la console l'erreur qui est apparue.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278265">Les assertions</h2>
		<div class="ss_part_texte">
		Il existe une autre manière de lever des exceptions en Python à l'aide du mot clé <span class="italique">assert</span>. Cette structure se compose de ce mot clé suivi d'une expression qui renvoie un booléen. Si celui-ci est vrai, alors rien ne se passe, si celui-ci est faux, alors une exception du type<span class="italique"> AssertionError</span> est levée.<br>
<br>
Cette structure se construit donc de cette manière :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">assert</span> <span class="n">expressionLogique</span>
</pre></div>
</td></tr></tbody></table></div><br>
Par exemple, vous pouvez avoir quelque chose de la forme :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">assert</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">*</span> <span class="mi">2</span>
<span class="k">assert</span> <span class="nb">len</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span> <span class="o">&lt;=</span> <span class="mi">10</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans ces deux cas, aucune exception ne sera levée. Cette structure vous permet d'assurer que certaines conditions sont bien vérifiées et ont tout intérêt à être placées au sein de structures du type <span class="italique">try-except</span>.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">nombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Entrez un nombre : "</span><span class="p">)</span>
<span class="k">try</span> <span class="p">:</span>
    <span class="n">nombre</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous avez bien tapé un nombre !"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Essayons de diviser par ce nombre..."</span><span class="p">)</span>
    <span class="k">assert</span> <span class="n">nombre</span> <span class="o">!=</span> <span class="mi">0</span>
    <span class="n">exemple</span> <span class="o">=</span> <span class="mi">10</span><span class="o">/</span><span class="n">nombre</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Nous obtenons : 10/</span><span class="si">%i</span><span class="s"> = </span><span class="si">%f</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="mi">10</span><span class="o">/</span><span class="n">nombre</span><span class="p">))</span>
<span class="k">except</span> <span class="ne">ValueError</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Vous n'avez pas entré un nombre..."</span><span class="p">)</span>
<span class="k">except</span> <span class="ne">AssertionError</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Il est impossible de diviser par zéro..."</span><span class="p">)</span>
<span class="k">except</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Une erreur est survenue..."</span><span class="p">)</span>
    <span class="k">raise</span>
</pre></div>
</td></tr></tbody></table></div><br>
Je vérifie ici, avant d'essayer de faire un calcul dangereux, si le nombre entré par l'utilisateur n'est pas égale à 0. S'il vaut 0, alors une exception est levée. De cette manière, je gère de ma propre manière une erreur qui serait intervenue et l'empêche d'apparaître !
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Les erreurs doivent le plus souvent possible être gérées pour ne laisser aucun plantage face à l'utilisateur finale et permettre de diagnostiquer au mieux ce qui s'est mal passé. Vous devrez apprendre à faire avec pour propager correctement les erreurs d'une fonction à l'autre par exemple et à faire en sorte que votre programme soit capable de déterminer la provenance exacte de l'erreur. Bien entendu, la documentation des erreurs possiblement levées par vos différentes fonctions sera une première voie vers une bonne compréhension par les autres de ce que fait votre code !<br>
<br>
Maintenant que vous avez acquis les concepts de base de la programmation en Python et même de la programmation en général, il est temps de passer à la vitesse supérieure avec la programmation orientée objet. Vous verrez que c'est un concept qui n'est pas toujours évident à comprendre mais qui a prouvé son efficacité ! <br>
<br>
Mais avant, je vous propose de vous exercer un peu avec de petits projets qui pourront vous prendre plusieurs heures chacun à développer !
	</div>
	
	<hr>
	<h1 id="chap_278254">TP 2 : Jeu de la Vie</h1>
	<div id="chap_intro">
	Vous avez maintenant de bonnes bases théoriques sur la programmation fonctionnelles mais maintenant, vous allez devoir vous exercer ! Pour cela, je vous propose un petit TP qui vous prendra certainement quelques heures si vous le faites entièrement de vous-même.<br>
<br>
Ici, je vais essayer de faire un corrigé progressif qui vous permette de vous débloquer lorsque vous n'y arrivez pas ! Le but est donc que vous soyez laisser seul face à votre éditeur de texte dans un premier temps. Ensuite, vous pourrez utiliser le corrigé comme un guide lorsque vous être bloqué.<br>
<br>
Je sens que vous êtes impatients de connaître le sujet du TP alors ne perdons pas de temps !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278258">Présentation du sujet</h2>
		<div class="ss_part_texte">
		Le jeu de la vie, contrairement à son nom, n'est pas du tout un jeu ! C'est un programme de simulation de vie primitive qui se propage selon des règles précises. En fait, la simulation se déroule sur une grille. Chaque case peut être dans un état mort ou vivant. La simulation se fait de façon itérative, c'est-à-dire que l'on va effectuer des modifications de la grille avec des pas discrets (correspondant à un temps fixe arbitraire). Dans les règles de bases, d'un pas sur l'autre, chacune des cases (ou cellules) se transforment comme ceci :<br>
<ul>
<li>Si une cellule possède exactement trois voisines vivantes, elle est vivante à l'itération suivante.</li>
<li>Si une cellule possède exactement deux voisines vivantes, elle ne change pas d'état à l'itération suivante.</li>
<li>Dans les autres cas, elle est morte à l'itération suivante.</li>
</ul><br>
<br>
<div class="centre"><img src="./Langage Python_files/243600.gif" alt="Forme vivante"></div><br>
Le but de ce petit automate est de réussir à trouver des configurations persistantes qui vont créer un motif répété. L'animation ci-dessus en est un excellent exemple avec comme un tir de canon de petits avions... Vous pourrez trouver des informations à ce sujet dans <a href="http://fr.wikipedia.org/wiki/Jeu_de_la_vie">l'article wikipédia</a>.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278271">Quelques idées</h2>
		<div class="ss_part_texte">
		Le projet en lui-même n'est vraiment pas compliqué ! Cependant, si l'on veut s'amuser un peu, il est possible de proposer pas mal d'options différentes :<br>
<ul>
<li>Différentes tailles de grille</li>
<li>Différentes configuration initiale (forme d'animaux, etc...)</li>
<li>Chercher automatiquement des formes stables ou périodiques</li>
<li>Mesure de durée de vie d'un système</li>
<li>Statistiques sur des configurations</li>
<li>Proposer d'autres règles</li>
</ul>Ce sujet qui paraît simple au départ offre de nombreuses possibilités et suggère un travail d'étude intéressant une fois le projet implémenté. Le moteur de la simulation est simple mais les options que vous proposerez représenteront donc tout l'intérêt de votre programme.<br>
<br>
Pour ce qui est du résultat, je vous donne quelques petites "captures d'écran" de ce que j'obtiens.<br>
<br>
<span class="code">Code : Console - Menu principal - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 console"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre></pre></td><td class="code"><div class="syntax"><pre>.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JJJJ&nbsp;&nbsp;EEEEEE&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DDDDD&nbsp;&nbsp;&nbsp;&nbsp;EEEEEE&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JJJJ&nbsp;&nbsp;EEEEEE&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DDDDDD&nbsp;&nbsp;&nbsp;EEEEEE&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JJ&nbsp;&nbsp;&nbsp;EE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DD&nbsp;&nbsp;&nbsp;DD&nbsp;&nbsp;EE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JJ&nbsp;&nbsp;&nbsp;EE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DD&nbsp;&nbsp;&nbsp;DD&nbsp;&nbsp;EE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JJ&nbsp;&nbsp;&nbsp;EEEE&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DD&nbsp;&nbsp;&nbsp;DD&nbsp;&nbsp;EEEE&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;JJJJ&nbsp;JJ&nbsp;&nbsp;&nbsp;EEEE&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DD&nbsp;&nbsp;&nbsp;DD&nbsp;&nbsp;EEEE&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;JJJJ&nbsp;JJ&nbsp;&nbsp;&nbsp;EE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DD&nbsp;&nbsp;&nbsp;DD&nbsp;&nbsp;EE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;JJ&nbsp;&nbsp;JJ&nbsp;&nbsp;&nbsp;EE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DD&nbsp;&nbsp;&nbsp;DD&nbsp;&nbsp;EE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;JJJJJJ&nbsp;&nbsp;&nbsp;EEEEEE&nbsp;&nbsp;UUUUUUUUU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DDDDDD&nbsp;&nbsp;&nbsp;EEEEEE&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;JJJJ&nbsp;&nbsp;&nbsp;&nbsp;EEEEEE&nbsp;&nbsp;&nbsp;UUUUUUU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DDDDD&nbsp;&nbsp;&nbsp;&nbsp;EEEEEE&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;LL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AAAAAA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;IIIIII&nbsp;&nbsp;EEEEEE&nbsp;
&nbsp;LL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AAAAAAAA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;IIIIII&nbsp;&nbsp;EEEEEE&nbsp;
&nbsp;LL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AA&nbsp;&nbsp;&nbsp;&nbsp;AA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;II&nbsp;&nbsp;&nbsp;&nbsp;EE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;LL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AA&nbsp;&nbsp;&nbsp;&nbsp;AA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;II&nbsp;&nbsp;&nbsp;&nbsp;EE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;LL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AA&nbsp;&nbsp;&nbsp;&nbsp;AA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;II&nbsp;&nbsp;&nbsp;&nbsp;EEEE&nbsp;&nbsp;&nbsp;
&nbsp;LL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AAAAAAAA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;II&nbsp;&nbsp;&nbsp;&nbsp;EEEE&nbsp;&nbsp;&nbsp;
&nbsp;LL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AAAAAAAA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;II&nbsp;&nbsp;&nbsp;&nbsp;EE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;LL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AA&nbsp;&nbsp;&nbsp;&nbsp;AA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;II&nbsp;&nbsp;&nbsp;&nbsp;EE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;LLLLLL&nbsp;&nbsp;AA&nbsp;&nbsp;&nbsp;&nbsp;AA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VV&nbsp;VV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IIIIII&nbsp;&nbsp;EEEEEE&nbsp;
&nbsp;LLLLLL&nbsp;&nbsp;AA&nbsp;&nbsp;&nbsp;&nbsp;AA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VVV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IIIIII&nbsp;&nbsp;EEEEEE&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v1.0b&nbsp;by&nbsp;Suzy&nbsp;
-----------------------------------------------------
&nbsp;Avec&nbsp;ce&nbsp;programme,&nbsp;vous&nbsp;pourrez&nbsp;jouer&nbsp;à&nbsp;Dieu&nbsp;!&nbsp;Vous&nbsp;
&nbsp;créerez&nbsp;la&nbsp;vie&nbsp;et&nbsp;verrez&nbsp;comment&nbsp;elle&nbsp;se&nbsp;comporte&nbsp;&nbsp;&nbsp;
&nbsp;car&nbsp;vous&nbsp;ne&nbsp;pourrez&nbsp;ensuite&nbsp;que&nbsp;la&nbsp;regarder&nbsp;et&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;constater&nbsp;la&nbsp;prolifération,&nbsp;le&nbsp;déclin&nbsp;ou&nbsp;le&nbsp;parfait&nbsp;
&nbsp;équilibre&nbsp;de&nbsp;votre&nbsp;création...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-----------------------------------------------------
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MENU&nbsp;PRINCIPAL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-----------------------------------------------------
&nbsp;1&nbsp;-&nbsp;Simulation&nbsp;rapide&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;2&nbsp;-&nbsp;Simulation&nbsp;avancée&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;3&nbsp;-&nbsp;A&nbsp;propos&nbsp;du&nbsp;Jeu&nbsp;de&nbsp;la&nbsp;Vie&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;4&nbsp;-&nbsp;Crédits&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;5&nbsp;-&nbsp;Quitter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;Votre&nbsp;choix&nbsp;:&nbsp;1


-----------------------------------------------------
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Paramètres&nbsp;de&nbsp;la&nbsp;simulation&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-----------------------------------------------------
&nbsp;Forme&nbsp;du&nbsp;modèle&nbsp;:&nbsp;tore
&nbsp;Règle&nbsp;de&nbsp;vie&nbsp;:&nbsp;3&nbsp;cellules
&nbsp;Règle&nbsp;de&nbsp;neutralité&nbsp;:&nbsp;2&nbsp;cellules
&nbsp;Taille&nbsp;de&nbsp;la&nbsp;grille&nbsp;:&nbsp;20x20
&nbsp;Initialisation&nbsp;de&nbsp;la&nbsp;grille&nbsp;:&nbsp;Aléatoire
&nbsp;Probabilité&nbsp;d'être&nbsp;vivant&nbsp;:&nbsp;0.5

&nbsp;Voulez-vous&nbsp;continuer&nbsp;?&nbsp;o/n&nbsp;:&nbsp;o</pre></div></td></tr></tbody></table></div><br>
<br>
<span class="code">Code : Console - Un tour - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 console"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre></pre></td><td class="code"><div class="syntax"><pre>-----------------------------------------------------
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tour&nbsp;n°&nbsp;:&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-----------------------------------------------------

&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;O&nbsp;.&nbsp;O&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;O&nbsp;.&nbsp;O&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;
&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;O&nbsp;
&nbsp;O&nbsp;O&nbsp;O&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;.&nbsp;O&nbsp;.&nbsp;O&nbsp;.&nbsp;O&nbsp;O&nbsp;O&nbsp;
&nbsp;O&nbsp;O&nbsp;O&nbsp;O&nbsp;O&nbsp;O&nbsp;O&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;O&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;
&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;.&nbsp;O&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;
&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;
&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;O&nbsp;.&nbsp;.&nbsp;.&nbsp;O&nbsp;.&nbsp;O&nbsp;.&nbsp;.&nbsp;
&nbsp;
-----------------------------------------------------
&nbsp;1&nbsp;-&nbsp;Continuer...
&nbsp;2&nbsp;-&nbsp;Avancer&nbsp;de&nbsp;plusieurs&nbsp;pas...
&nbsp;3&nbsp;-&nbsp;Sauvegarder&nbsp;et&nbsp;continuer...
&nbsp;4&nbsp;-&nbsp;Sauvegarder&nbsp;et&nbsp;avancer&nbsp;de&nbsp;plusieurs&nbsp;pas...
&nbsp;5&nbsp;-&nbsp;Sauvegarder&nbsp;et&nbsp;arrêter
&nbsp;6&nbsp;-&nbsp;Arrêter
&nbsp;Votre&nbsp;choix&nbsp;:</pre></div></td></tr></tbody></table></div><br>
J'ai essayé de faire une petite interface claire bien que ce soit un programme en console ! C'est toujours marrant d'avoir des programmes très bien présentés en console, le plus souvent, les interfaces en ASCII sont baclées et c'est bien dommage ! <img src="./Langage Python_files/langue.png" alt=":p" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278260">Corrigé</h2>
		<div class="ss_part_texte">
		Ce corrigé ne sera certainement pas parfait et n'est que le reflet d'une manière de faire, la mienne. Ce n'est pas la meilleure manière de faire mais c'en est une que j'ai développée au fur et à mesure de mes années d'expérience de programmation notamment en Python. Ce corrigé est donc là uniquement pour donner une idée de comment il est possible de s'y prendre pour un tel projet et n'est en aucun cas un exemple à suivre à la lettre !<br>
<br>
<h3>Organiser son code</h3><br>
Lorsque l'on veut commencer à programmer un programme assez complet, il faut commencer par s'organiser. Ici, je sépare le projet en deux grandes parties :<br>
<ul>
<li>Le programme principal qui affiche l'interface et qui interagit avec l'utilisateur.</li>
<li>Le moteur de l'application qui va permettre de lancer les simulations.</li>
</ul>Je vais donc créer un fichier/module pour chacune de ces parties. Je sépare ainsi l'interface du moteur de l'application. En général, cela permet de refaire une interface sans avoir à modifier son application lorsque celle-ci ne nous plaît pas ou si l'on souhaite développer une interface graphique plus tard par exemple. Le moteur pourra être réutilisé indépendant de l'interface par la suite. Ainsi, je pourrais améliorer mon programme sans jamais avoir à refaire un moteur de simulation !<br>
J'ai donc créé les fichiers qu'il me faudra pour mon programme et je commence à organiser les fonctions qui me seront sûrement utiles. Cela me permet de prédécouper mon code et donc de mieux réfléchir à ce que je veux faire à petite échelle.<br>
<br>
<h4>Moteur.py</h4><br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110</pre></div></td><td class="code"><div class="syntax"><pre><span class="c">####################################</span>
<span class="c"># Jeu de la vie                    #</span>
<span class="c"># -------------------------------- #</span>
<span class="c"># Auteur : Suzy                    #</span>
<span class="c"># Créé le : 09/07/2010             #</span>
<span class="c"># -------------------------------- #</span>
<span class="c"># Ce petit programme de simulation #</span>
<span class="c"># permet de modéliser une forme de #</span>
<span class="c"># vie simplicime ! Vous pourrez y  #</span>
<span class="c"># voir apparaître des formes qui   #</span>
<span class="c"># se perpétuent dans le temps ou   #</span>
<span class="c"># qui restent constantes.          #</span>
<span class="c"># -------------------------------- # </span>
<span class="c"># Moteur du jeu de la vie :        #</span>
<span class="c"># Contient toutes les fonctions    #</span>
<span class="c"># qui permettent d'effectuer des   #</span>
<span class="c"># opérations sur la grille et      #</span>
<span class="c"># d'émuler la vie !                #</span>
<span class="c">####################################</span>

<span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">random</span>

<span class="c">#Constantes :</span>
<span class="n">FORMES_POSSIBLES</span> <span class="o">=</span> <span class="p">(</span><span class="s">"plan"</span><span class="p">,</span><span class="s">"cylindre"</span><span class="p">,</span><span class="s">"tore"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">creerGrille</span><span class="p">(</span><span class="n">lignes</span> <span class="o">=</span> <span class="mi">20</span><span class="p">,</span> <span class="n">colonnes</span> <span class="o">=</span> <span class="mi">20</span><span class="p">,</span> <span class="n">proba</span> <span class="o">=</span> <span class="mf">0.5</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet de créer une grille du nombre de lignes et de colonnes</span>
<span class="sd">    spécifiées. Les cellules seront vivantes selon la probabilité</span>
<span class="sd">    données en paramètre.</span>
<span class="sd">    lignes = 20 : Le nombre de lignes pour la grille.</span>
<span class="sd">    colonnes = 20 : La nombre de colonnes pour la grille.</span>
<span class="sd">    proba = 0.5 : La probabilité qu'une cellule créée soit vivante.</span>
<span class="sd">    Retourne : Retourne une grille de lignes x colonnes cellules</span>
<span class="sd">               aléatoirement vivantes.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>


<span class="k">def</span> <span class="nf">chargerGrille</span><span class="p">(</span><span class="n">nomFichier</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet de charger une grille à partir d'un fichier. Le fichier</span>
<span class="sd">    doit être composé de lignes de 0 (mort) et de 1 (vivant). Si</span>
<span class="sd">    elles ne sont pas toutes de la même taille, une exception sera</span>
<span class="sd">    levée.</span>
<span class="sd">    nomFichier : Le chemin vers le fichier à charger.</span>
<span class="sd">    Retourne : La grille chargée à partir du fichier.</span>
<span class="sd">    Exception : - IOError : Si le fichier n'existe pas.</span>
<span class="sd">                - ValueError : quelque chose n'est pas un nombre dans la grille.</span>
<span class="sd">                - AssertionError : un nombre différent de 0 ou 1.</span>
<span class="sd">                - AssertionError : lignes de différentes longueurs.</span>
<span class="sd">                - AssertionError : une seule ligne dans le fichier.</span>
<span class="sd">                - AssertionError : pas de cellule vivante.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>
    

<span class="k">def</span> <span class="nf">sauvegarderGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">nomFichier</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet d'enregistrer une grille dans un fichier qui pourra</span>
<span class="sd">    être chargé par la suite. Le fichier sera préalablement effacé</span>
<span class="sd">    s'il existe déjà.</span>
<span class="sd">    grille : La grille à sauvegarder.</span>
<span class="sd">    nomFichier : Le nom du fichier à utiliser pour la sauvegarde.</span>
<span class="sd">    Retourne : 0 si l'opération s'est bien passée, 1 sinon.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>


<span class="k">def</span> <span class="nf">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">forme</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet d'obtenir une liste des voisines d'une cellule aux coordonnées</span>
<span class="sd">    demandées dans une grille demandée. La forme du modèle est prise en compte.</span>
<span class="sd">    grille : La grille contenant la cellule à étudier.</span>
<span class="sd">    i : L'indice de la ligne de la cellule.</span>
<span class="sd">    j : L'indice de la colonne de la cellule.</span>
<span class="sd">    forme : La forme du modèle (plan, cylindre, tore).</span>
<span class="sd">    Retourne : La liste des voisines de la cellule demandée.</span>
<span class="sd">    Exception : - IndexError si i et/ou j sort de la grille.</span>
<span class="sd">                - AssertionError si la forme demandée n'est pas reconnue.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>


<span class="k">def</span> <span class="nf">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="n">regle2</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="n">forme</span> <span class="o">=</span> <span class="s">"tore"</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet de créer le tour suivant de la grille en fonction des</span>
<span class="sd">    règles en vigueur dans la source de vie que vous avez créée.</span>
<span class="sd">    grille : La grille de cellules à faire évoluer.</span>
<span class="sd">    regle1 = 3 : Le nombre de cellules à avoir pour qu'une cellule</span>
<span class="sd">                 soit vivante au prochain tour.</span>
<span class="sd">    regle2 = 2 : Le nombre de cellules à avoir pour qu'une cellule</span>
<span class="sd">                 reste dans le même état au tour suivant.</span>
<span class="sd">    forme = "plan" : Le modèle peut prendre différentes formes, soit</span>
<span class="sd">                     un plan fermé ("plan"), soit un cylindre ("cylindre"),</span>
<span class="sd">                     soit un tore ("tore").</span>
<span class="sd">                     Change les voisines aux bords du modèle.</span>
<span class="sd">    Retourne : Retourne la nouvelle grille après évolution.</span>
<span class="sd">    Exception : AssertionError : la forme donnée n'est pas reconnue.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>


<span class="k">def</span> <span class="nf">encoreDeLaVie</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet de savoir si la grille contient encore de la vie ou non.</span>
<span class="sd">    grille : La grille a tester.</span>
<span class="sd">    Retourne : Retourne True si la grille contient de la vie, False sinon.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>
</pre></div>
</td></tr></tbody></table></div><br>
</div></div><br>
<br>
<h4>JeuDeLaVie.py</h4><br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107</pre></div></td><td class="code"><div class="syntax"><pre><span class="c">####################################</span>
<span class="c"># Jeu de la vie                    #</span>
<span class="c"># -------------------------------- #</span>
<span class="c"># Auteur : Suzy                    #</span>
<span class="c"># Créé le : 09/07/2010             #</span>
<span class="c"># -------------------------------- #</span>
<span class="c"># Ce petit programme de simulation #</span>
<span class="c"># permet de modéliser une forme de #</span>
<span class="c"># vie simplicime ! Vous pourrez y  #</span>
<span class="c"># voir apparaître des formes qui   #</span>
<span class="c"># se perpétuent dans le temps ou   #</span>
<span class="c"># qui restent constantes.          #</span>
<span class="c"># -------------------------------- #</span>
<span class="c"># Programme principal :            #</span>
<span class="c">#  - Grille                        #</span>
<span class="c">#  - Interface                     #</span>
<span class="c">#  - Options                       #</span>
<span class="c">####################################</span>


<span class="c">#Importation de mes modules perso :</span>
<span class="kn">import</span> <span class="nn">Moteur</span>
<span class="c">#Importation des modules intégrés :</span>
<span class="kn">import</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">time</span><span class="o">,</span> <span class="nn">platform</span>


<span class="k">def</span> <span class="nf">nettoyerConsole</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet de nettoyer la console !</span>
<span class="sd">    """</span>
    <span class="k">pass</span>
        

<span class="k">def</span> <span class="nf">menuPrincipal</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Affiche le titre du programme avec un petit texte introductif.</span>
<span class="sd">    Affiche ensuite le menu principal et récupère le choix de l'utilisateur.</span>
<span class="sd">    Lance ensuite la ou les simulations en fonction du choix...</span>
<span class="sd">    """</span>
    <span class="k">pass</span>
    

<span class="k">def</span> <span class="nf">simuRapide</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Lance une simu rapide de 20x20 en forme de tore ou propose de revenir</span>
<span class="sd">    en arrière. </span>
<span class="sd">    """</span>
    <span class="k">pass</span>


<span class="k">def</span> <span class="nf">simuAvancee</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Propose de définir tout un tas de paramètres pour lancer une simulation</span>
<span class="sd">    ou de revenir en arrière.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>


<span class="k">def</span> <span class="nf">aPropos</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Affiche quelques infos à propos du jeu de la vie.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>


<span class="k">def</span> <span class="nf">mesCredits</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Affiche les crédits.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>
    

<span class="k">def</span> <span class="nf">lancerSimulation</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="n">regle2</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="n">forme</span> <span class="o">=</span> <span class="s">"tore"</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Lance une simulation avec les règles et les options demandées.</span>
<span class="sd">    grille : La grille initiale.</span>
<span class="sd">    regle1 = 3 : La règle de vie (combien de cellules vivantes pour naître)</span>
<span class="sd">    regle2 = 2 : La règle de neutralité (combien de cellules vivantes pour rester</span>
<span class="sd">             inchangé.</span>
<span class="sd">    forme = "tore" : La forme à considérer pour la grille.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>
                     

<span class="k">def</span> <span class="nf">lancerSimulationInfinie</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span><span class="p">,</span> <span class="n">regle2</span><span class="p">,</span> <span class="n">forme</span><span class="p">,</span> <span class="n">pasAvantSauvegarde</span><span class="p">,</span> <span class="n">nomFichier</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Lance une simulation infinie qui ne sera stoppée que si le modèle meurt ou si</span>
<span class="sd">    l'utilisateur la tue !</span>
<span class="sd">    grille : La grille initiale.</span>
<span class="sd">    regle1 : La règle de vie (combien de cellules vivantes pour naître)</span>
<span class="sd">    regle2 : La règle de neutralité (combien de cellules vivantes pour rester</span>
<span class="sd">             inchangé.</span>
<span class="sd">    forme : La forme à considérer pour la grille.</span>
<span class="sd">    pasAvantSauvegarde : Le nombre de pas entre deux sauvegarde (0 pour ne pas sauvegarder).</span>
<span class="sd">    nomFichier : Le nom du fichier de sauvegarde.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>


<span class="k">def</span> <span class="nf">afficherGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">tour</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Convertit une grille en chaîne de caractères pour l'afficher</span>
<span class="sd">    dans la console.</span>
<span class="sd">    grille : La grille a afficher.</span>
<span class="sd">    tour : Le numéro de tour.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
<br>
Vous avez ici, une première ébauche du code qui composera le coeur de notre application. Pour m'organiser, j'ai commencé à créer les fonctions que j'aurais à utiliser pour pouvoir créer des simulations et faire évoluer tout ce petit monde dans le module Moteur.py et tout ce qui va permettre d'interagir avec l'utilisateur et de lancer des simulations dans le module JeuDeLaVie.py La documentation est bien entendu aussi complète que possible afin d'exprimer en langage naturel ce que l'on souhaite faire en code lors de la phase d'implémentation. Elle doit vous permettre de savoir à quoi celle-ci servira par la suite !<br>
<br>
<div class="rmq information">Pour ceux qui n'auraient pas d'idées sur comment faire l'interface, aidez-vous de ce que j'ai donné en exemple plus haut. Et surtout, ne cherchez pas à faire compliquer, vous pouvez vous contenter d'une petite interface basique !</div><br>
<h3>Tester les fonctions</h3><br>
Une fois l'implémentation entamée, vous devrez tester votre code. Je vous conseille de toujours le tester au fur et à mesure afin de ne pas avoir à tout débugger d'un coup à la fin. Cela vous évitera de vous perdre dans les erreurs et vous pourrez ainsi les cibler beaucoup plus facilement si vous validez les fonctions les unes après les autres.<br>
<br>
Dans notre cas, le module JeuDeLaVie.py sera le programme principal, il se contentera d'afficher la simulation et d'interagir avec l'utilisateur. Il ne nécessite pas de test particulier puisque vous verrez tout de suite le résultat en lançant votre programme ! Par contre, votre moteur lui, demande à être testé car certaines fonctions ne seront pas directement visibles de l'utilisateur. Pour cela, nous allons rajouter un code exécutable à la fin du module Moteur.py qui fera appel aux fonctions dans des cas bien précis. Ceci vous permettra de contrôler que le moteur de votre application se comporte comme vous l'espériez.<br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code">Code : Python - A insérer dans Moteur.py - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># Tests des fonctions :</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"********************</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Test du moteur ! *</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"********************"</span><span class="p">)</span>
    
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">*****</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Création d'une grille vivante :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"*****"</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">creerGrille</span><span class="p">(</span><span class="n">proba</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">vivantes</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">cellule</span> <span class="ow">in</span> <span class="n">ligne</span> <span class="p">:</span>
            <span class="k">if</span> <span class="n">cellule</span> <span class="p">:</span>
                <span class="n">vivantes</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Nombre de cellules vivantes : </span><span class="si">%i</span><span class="s"> (normalement à 400)"</span> <span class="o">%</span> <span class="n">vivantes</span><span class="p">)</span>
    
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">*****</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Création d'une grille aléatoire :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"*****"</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">creerGrille</span><span class="p">()</span>
    <span class="n">vivantes</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">cellule</span> <span class="ow">in</span> <span class="n">ligne</span> <span class="p">:</span>
            <span class="k">if</span> <span class="n">cellule</span> <span class="p">:</span>
                <span class="n">vivantes</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Nombre de cellules vivantes : </span><span class="si">%i</span><span class="s"> (aux alentours de 200)"</span> <span class="o">%</span> <span class="n">vivantes</span><span class="p">)</span>
    
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">*****</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Sauvegarde de la grille aléatoire :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"*****"</span><span class="p">)</span>
    <span class="n">echec</span> <span class="o">=</span> <span class="n">sauvegarderGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="s">"Test/TestMoteur.txt"</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">echec</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"La grille n'a pas été sauvegardée..."</span><span class="p">)</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier TestMoteur.txt a bien été écrit !"</span><span class="p">)</span>
        
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">*****</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Chargement de la grille sauvegardée :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"*****"</span><span class="p">)</span>
    <span class="n">grille2</span> <span class="o">=</span> <span class="n">chargerGrille</span><span class="p">(</span><span class="s">"Test/TestMoteur.txt"</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">grille2</span> <span class="o">==</span> <span class="p">[]</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier TestMoteur.txt n'a pas été chargé correctement..."</span><span class="p">)</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier TestMoteur.txt a été correctement chargé !"</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille2</span> <span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">*****</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Chargement d'une grille incorrecte :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"*****"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Lignes pas de la même longueur :"</span><span class="p">)</span>
    <span class="k">try</span> <span class="p">:</span>
        <span class="n">grille3</span> <span class="o">=</span> <span class="n">chargerGrille</span><span class="p">(</span><span class="s">"Test/Longueur.txt"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"La grille a tout de même été chargée..."</span><span class="p">)</span>
    <span class="k">except</span> <span class="ne">AssertionError</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier existe mais est incorrect !"</span><span class="p">)</span>
    <span class="k">except</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier ne semble pas exister..."</span><span class="p">)</span>
        <span class="k">raise</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Autre chose que 0 ou 1 dans le fichier :"</span><span class="p">)</span>
    
    <span class="k">try</span> <span class="p">:</span>
        <span class="n">grille4</span> <span class="o">=</span> <span class="n">chargerGrille</span><span class="p">(</span><span class="s">"Test/PasBonNombre.txt"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"La grille a tout de même été chargée..."</span><span class="p">)</span>
    <span class="k">except</span> <span class="ne">AssertionError</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier existe mais est incorrect !"</span><span class="p">)</span>
    <span class="k">except</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier ne semble pas exister..."</span><span class="p">)</span>
        <span class="k">raise</span>
        
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">***********************</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Test des voisines : *</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"***********************</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">creerGrille</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test de la forme tore :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin haut gauche :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin haut droit :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin bas gauche :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin bas droit :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test au milieu (4,4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté haut (0, 4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté bas (19, 4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté gauche (4, 0) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté droit (4, 19) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">Test de la forme plan :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin haut gauche :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin haut droit :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin bas gauche :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin bas droit :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test au milieu (4,4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté haut (0, 4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté bas (19, 4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté gauche (4, 0) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté droit (4, 19) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">Test de la forme cylindre :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin haut gauche :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin haut droit :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin bas gauche :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin bas droit :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test au milieu (4,4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté haut (0, 4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté bas (19, 4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté gauche (4, 0) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté droit (4, 19) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"*****</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Test de quelques tours de simu :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"*****"</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">chargerGrille</span><span class="p">(</span><span class="s">"Test/PeriodiqueStable.txt"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Grille initiale :"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Grille après 1 tour :"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Grille après 2 tours :"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Grille après 3 tours :"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
Ce code va vous permettre de tester le bon fonctionnement des fonctions que vous aurez implémentées. Il n'est bien entendu en rien un test à 100% efficace mais il vous permettra de détecter la plupart des problèmes majeures et des erreurs que vous pourriez commettre dans le moteur de l'application.<br>
<br>
<div class="rmq attention">Ce morceau de code est écrit en Python v3. Si vous désirez le passer en v2.7, comme d'habitude, il faudra faire attention aux fonctions <span class="italique">print</span> et <span class="italique">input</span>.</div><br>
<div class="rmq information">Ce code n'est en aucun cas destiné à être bien écrit ou à être optimisé. Ce n'est qu'un code de test qui ne sera pas exécuté lors du lancement de l'application ! Ne vous prenez pas la tête sur la qualité du code de test...</div><br>
<br>
<h3>Implémenter</h3><br>
Si vous n'avez pas réussi jusqu'à maintenant à implémenter les fonctions que vous ai données, alors vous pouvez regarder cette partie pour vous aider. Essayez de faire par vous-même au moins une des deux parties, ne serait-ce qu'en utilisant le corrigé de celle que vous n'arrivez pas à implémenter...<br>
<br>
<h4>JeuDeLaVie.py</h4><br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># -*- coding: utf-8 -*-</span>
<span class="c">####################################</span>
<span class="c"># Jeu de la vie                    #</span>
<span class="c"># -------------------------------- #</span>
<span class="c"># Auteur : Suzy                    #</span>
<span class="c"># Créé le : 09/07/2010             #</span>
<span class="c"># -------------------------------- #</span>
<span class="c"># Ce petit programme de simulation #</span>
<span class="c"># permet de modéliser une forme de #</span>
<span class="c"># vie simplicime ! Vous pourrez y  #</span>
<span class="c"># voir apparaître des formes qui   #</span>
<span class="c"># se perpétuent dans le temps ou   #</span>
<span class="c"># qui restent constantes.          #</span>
<span class="c"># -------------------------------- #</span>
<span class="c"># Programme principal :            #</span>
<span class="c">#  - Grille                        #</span>
<span class="c">#  - Interface                     #</span>
<span class="c">#  - Options                       #</span>
<span class="c">####################################</span>


<span class="c">#Importation de mes modules perso :</span>
<span class="kn">import</span> <span class="nn">Moteur</span>
<span class="c">#Importation des modules intégrés :</span>
<span class="kn">import</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">time</span><span class="o">,</span> <span class="nn">platform</span>


<span class="k">def</span> <span class="nf">nettoyerConsole</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet de nettoyer la console !</span>
<span class="sd">    """</span>
    <span class="k">if</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span> <span class="o">==</span> <span class="s">"Windows"</span> <span class="p">:</span>
        <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">)</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s">"clear"</span><span class="p">)</span>
        

<span class="k">def</span> <span class="nf">menuPrincipal</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Affiche le titre du programme avec un petit texte introductif.</span>
<span class="sd">    Affiche ensuite le menu principal et récupère le choix de l'utilisateur.</span>
<span class="sd">    Lance ensuite la ou les simulations en fonction du choix...</span>
<span class="sd">    """</span>
    <span class="k">global</span> <span class="n">continuerProgramme</span>
    <span class="n">nettoyerConsole</span><span class="p">()</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"      JJJJ  EEEEEE  UU     UU      DDDDD    EEEEEE </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"      JJJJ  EEEEEE  UU     UU      DDDDDD   EEEEEE </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"       JJ   EE      UU     UU      DD   DD  EE     </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"       JJ   EE      UU     UU      DD   DD  EE     </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"       JJ   EEEE    UU     UU      DD   DD  EEEE   </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"  JJJJ JJ   EEEE    UU     UU      DD   DD  EEEE   </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"  JJJJ JJ   EE      UU     UU      DD   DD  EE     </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"   JJ  JJ   EE      UU     UU      DD   DD  EE     </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"   JJJJJJ   EEEEEE  UUUUUUUUU      DDDDDD   EEEEEE </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"    JJJJ    EEEEEE   UUUUUUU       DDDDD    EEEEEE </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"    </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"    </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" LL       AAAAAA       VV         VV  IIIIII  EEEEEE </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" LL      AAAAAAAA      VV         VV  IIIIII  EEEEEE </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" LL      AA    AA      VV         VV    II    EE     </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" LL      AA    AA      VV         VV    II    EE     </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" LL      AA    AA      VV         VV    II    EEEE   </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" LL      AAAAAAAA       VV       VV     II    EEEE   </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" LL      AAAAAAAA        VV     VV      II    EE     </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" LL      AA    AA         VV   VV       II    EE     </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" LLLLLL  AA    AA          VV VV      IIIIII  EEEEEE </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" LLLLLL  AA    AA           VVV       IIIIII  EEEEEE </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"                                       v1.0b by Suzy </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" Avec ce programme, vous pourrez jouer à Dieu ! Vous </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" créerez la vie et verrez comment elle se comporte   </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" car vous ne pourrez ensuite que la regarder et      </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" constater la prolifération, le déclin ou le parfait </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" équilibre de votre création...                      </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"                  MENU PRINCIPAL                     </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" 1 - Simulation rapide                               </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" 2 - Simulation avancée                              </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" 3 - A propos du Jeu de la Vie                       </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" 4 - Crédits                                         </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" 5 - Quitter                                         "</span><span class="p">)</span>

    <span class="n">choix</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Votre choix : "</span><span class="p">)</span>
    <span class="k">while</span> <span class="n">choix</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="s">"12345"</span><span class="p">)</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">" Raté ! Essayez encore !"</span><span class="p">)</span>
        <span class="n">choix</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Votre choix : "</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">choix</span> <span class="o">==</span> <span class="s">"1"</span> <span class="p">:</span>
        <span class="n">simuRapide</span><span class="p">()</span>
    <span class="k">elif</span> <span class="n">choix</span> <span class="o">==</span> <span class="s">"2"</span> <span class="p">:</span>
        <span class="n">simuAvancee</span><span class="p">()</span>
    <span class="k">elif</span> <span class="n">choix</span> <span class="o">==</span> <span class="s">"3"</span> <span class="p">:</span>
        <span class="n">aPropos</span><span class="p">()</span>
    <span class="k">elif</span> <span class="n">choix</span> <span class="o">==</span> <span class="s">"4"</span> <span class="p">:</span>
        <span class="n">mesCredits</span><span class="p">()</span>
    <span class="k">elif</span> <span class="n">choix</span> <span class="o">==</span> <span class="s">"5"</span> <span class="p">:</span>
        <span class="n">continuerProgramme</span> <span class="o">=</span> <span class="bp">False</span>
    

<span class="k">def</span> <span class="nf">simuRapide</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Lance une simu rapide de 20x20 en forme de tore ou propose de revenir</span>
<span class="sd">    en arrière. </span>
<span class="sd">    """</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"          Paramètres de la simulation :              </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" Forme du modèle : tore</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" Règle de vie : 3 cellules</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" Règle de neutralité : 2 cellules</span><span class="se">\n</span><span class="s">"</span>
          <span class="s">" Taille de la grille : 20x20</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" Initialisation de la grille : Aléatoire</span><span class="se">\n</span><span class="s">"</span>
          <span class="s">" Probabilité d'être vivant : 0.5</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>

    <span class="n">valider</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Voulez-vous continuer ? o/n : "</span><span class="p">)</span>
    <span class="k">while</span> <span class="n">valider</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">[</span><span class="s">"O"</span><span class="p">,</span> <span class="s">"OUI"</span><span class="p">,</span> <span class="s">"N"</span><span class="p">,</span> <span class="s">"NON"</span><span class="p">]</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">" Raté ! Essayez encore !"</span><span class="p">)</span>
        <span class="n">valider</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Voulez-vous continuer ? o/n : "</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">valider</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span> <span class="ow">in</span> <span class="p">[</span><span class="s">"O"</span><span class="p">,</span> <span class="s">"OUI"</span><span class="p">]</span> <span class="p">:</span>
        <span class="n">lancerSimulation</span><span class="p">(</span><span class="n">Moteur</span><span class="o">.</span><span class="n">creerGrille</span><span class="p">())</span>


<span class="k">def</span> <span class="nf">simuAvancee</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Propose de définir tout un tas de paramètres pour lancer une simulation</span>
<span class="sd">    ou de revenir en arrière.</span>
<span class="sd">    """</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"          Paramètres de la simulation :              </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------"</span><span class="p">)</span>
    <span class="c">#Simulation infinie ou contrôlée :</span>
    <span class="n">typeSimu</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Quel genre de simulation voulez-vous lancer ?</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                     <span class="s">" 1 - Simulation contrôlée</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                     <span class="s">" 2 - Simulation infinie</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                     <span class="s">" Votre choix : "</span><span class="p">)</span>
    <span class="k">while</span> <span class="n">typeSimu</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="s">"12"</span><span class="p">)</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">" Raté ! Essayez encore !"</span><span class="p">)</span>
        <span class="n">typeSimy</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Votre choix : "</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">typeSimu</span> <span class="o">==</span> <span class="s">"2"</span> <span class="p">:</span>
        <span class="n">pasAvantSauvegarde</span> <span class="o">=</span> <span class="n">obtenirNombre</span><span class="p">(</span><span class="s">" Nb de pas entre deux sauvegardes</span><span class="se">\n</span><span class="s"> (0 pour ne pas sauvegarder) : "</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">pasAvantSauvegarde</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">:</span>
            <span class="n">nomSauvegarde</span> <span class="o">=</span> <span class="s">"Pas de sauvegarde"</span>
        <span class="k">else</span> <span class="p">:</span>
            <span class="n">nomSauvegarde</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Nom du fichier de sauvegarde : "</span><span class="p">)</span>
    <span class="c">#Charger une grille ou non :</span>
    <span class="n">choixCreation</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="k">while</span> <span class="ow">not</span> <span class="n">choixCreation</span> <span class="p">:</span>
        <span class="n">creationGrille</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Vous préférez :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                               <span class="s">" 1 - Générer une grille aléatoire</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                               <span class="s">" 2 - Charger une grille à partir d'un fichier</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                               <span class="s">" Votre choix : "</span><span class="p">)</span>
        <span class="k">while</span> <span class="n">creationGrille</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="s">"12"</span><span class="p">)</span> <span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">" Raté ! Essayez encore !"</span><span class="p">)</span>
            <span class="n">creationGrille</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Votre choix : "</span><span class="p">)</span>
        <span class="c">#Si une grille aléatoire doit être générée :</span>
        <span class="k">if</span> <span class="n">creationGrille</span> <span class="o">==</span> <span class="s">"1"</span> <span class="p">:</span>
            <span class="n">lignes</span> <span class="o">=</span> <span class="n">obtenirNombre</span><span class="p">(</span><span class="s">" Nombre de lignes pour votre grille : "</span><span class="p">)</span>
            <span class="n">colonnes</span> <span class="o">=</span> <span class="n">obtenirNombre</span><span class="p">(</span><span class="s">" Nombre de colonnes pour votre grille : "</span><span class="p">)</span>
            <span class="n">proba</span> <span class="o">=</span> <span class="n">obtenirProba</span><span class="p">()</span>
            <span class="n">choixCreation</span> <span class="o">=</span> <span class="bp">True</span>
        <span class="k">else</span> <span class="p">:</span>
            <span class="n">reponseCorrecte</span> <span class="o">=</span> <span class="bp">False</span>
            <span class="k">while</span> <span class="ow">not</span> <span class="n">reponseCorrecte</span> <span class="p">:</span>
                <span class="n">nomFichier</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Nom du fichier à charger (tapez </span><span class="se">\n</span><span class="s">annuler pour revenir en arrière) : "</span><span class="p">)</span>
                <span class="k">while</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">nomFichier</span><span class="p">)</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">nomFichier</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span> <span class="o">==</span> <span class="s">"ANNULER"</span><span class="p">:</span>
                    <span class="k">print</span><span class="p">(</span><span class="s">" Ce fichier n'existe pas..."</span><span class="p">)</span>
                    <span class="n">nomFichier</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Nom du fichier à charger (annuler pour annuler) : "</span><span class="p">)</span>
                <span class="k">if</span> <span class="n">nomFichier</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span> <span class="o">!=</span> <span class="s">"ANNULER"</span> <span class="p">:</span>
                    <span class="k">try</span> <span class="p">:</span>
                        <span class="n">Moteur</span><span class="o">.</span><span class="n">chargerGrille</span><span class="p">(</span><span class="n">nomFichier</span><span class="p">)</span>
                        <span class="n">reponseCorrecte</span> <span class="o">=</span> <span class="bp">True</span>
                        <span class="n">choixCreation</span> <span class="o">=</span> <span class="bp">True</span>
                    <span class="k">except</span> <span class="p">:</span>
                        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier n'est pas correct..."</span><span class="p">)</span>
                <span class="k">else</span> <span class="p">:</span>
                    <span class="n">reponseCorrecte</span> <span class="o">=</span> <span class="bp">True</span>
                    <span class="n">choixCreation</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="c">#Forme du modèle :</span>
    <span class="n">forme</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Forme du modèle :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                  <span class="s">" 1 - Plan fermé</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                  <span class="s">" 2 - Cylindre</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                  <span class="s">" 3 - Tore</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                  <span class="s">" Votre choix : "</span><span class="p">)</span>
    <span class="k">while</span> <span class="n">forme</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="s">"123"</span><span class="p">)</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">" Raté ! Essayez encore !"</span><span class="p">)</span>
        <span class="n">forme</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Votre choix : "</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">forme</span> <span class="o">==</span> <span class="s">"1"</span> <span class="p">:</span>
        <span class="n">forme</span> <span class="o">=</span> <span class="s">"plan"</span>
    <span class="k">elif</span> <span class="n">forme</span> <span class="o">==</span> <span class="s">"2"</span> <span class="p">:</span>
        <span class="n">forme</span> <span class="o">=</span> <span class="s">"cylindre"</span>
    <span class="k">elif</span> <span class="n">forme</span> <span class="o">==</span> <span class="s">"3"</span> <span class="p">:</span>
        <span class="n">forme</span> <span class="o">=</span> <span class="s">"tore"</span>
    <span class="c">#Règles :</span>
    <span class="n">regle1</span> <span class="o">=</span> <span class="n">obtenirNombre</span><span class="p">(</span><span class="s">" Règle de vie (par défaut : 3) : "</span><span class="p">)</span>
    <span class="n">regle2</span> <span class="o">=</span> <span class="n">obtenirNombre</span><span class="p">(</span><span class="s">" Règle de neutralité (par défaut : 2) : "</span><span class="p">)</span>
    <span class="k">while</span> <span class="n">regle1</span> <span class="o">==</span> <span class="n">regle2</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Les deux règles ne peuvent prendre en compte le même nombre..."</span><span class="p">)</span>
        <span class="n">regle2</span> <span class="o">=</span> <span class="n">obtenirNombre</span><span class="p">(</span><span class="s">" Règle de neutralité (par défaut : 2) : "</span><span class="p">)</span>

    <span class="c">#Récapitulatif :</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"          Paramètres de la simulation :              </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------"</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">typeSimu</span> <span class="o">==</span> <span class="s">"1"</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">" Type simulation : contrôlée"</span><span class="p">)</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">" Type simulation : infinie</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
              <span class="s">" Fichier de sauvegarde : </span><span class="si">%s</span><span class="s">"</span> <span class="o">%</span> <span class="n">nomSauvegarde</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">" Forme du modèle : </span><span class="si">%s</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="n">forme</span> <span class="o">+</span>
          <span class="s">" Règle de vie : </span><span class="si">%i</span><span class="s"> cellules</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="n">regle1</span> <span class="o">+</span>
          <span class="s">" Règle de neutralité : </span><span class="si">%i</span><span class="s"> cellules"</span> <span class="o">%</span> <span class="n">regle2</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">creationGrille</span> <span class="o">==</span> <span class="s">"1"</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">" Taille de la grille : </span><span class="si">%i</span><span class="s">x</span><span class="si">%i</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">lignes</span><span class="p">,</span> <span class="n">colonnes</span><span class="p">)</span> <span class="o">+</span>
              <span class="s">" Initialisation de la grille : Aléatoire</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
              <span class="s">" Probabilité d'être vivant : </span><span class="si">%f</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="n">proba</span><span class="p">)</span>
        <span class="n">grille</span> <span class="o">=</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">creerGrille</span><span class="p">(</span><span class="n">lignes</span><span class="p">,</span> <span class="n">colonnes</span><span class="p">,</span> <span class="n">proba</span><span class="p">)</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="n">grille</span> <span class="o">=</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">chargerGrille</span><span class="p">(</span><span class="n">nomFichier</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">" Taille de la grille : </span><span class="si">%i</span><span class="s">x</span><span class="si">%i</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">grille</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">grille</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span> <span class="o">+</span>
              <span class="s">" Initialisation de la grille : Charger un fichier</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
              <span class="s">" Nom du fichier à charger : </span><span class="si">%s</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="n">nomFichier</span><span class="p">)</span>

    <span class="c">#Continuer ou pas :</span>
    <span class="n">valider</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Voulez-vous continuer ? o/n : "</span><span class="p">)</span>
    <span class="k">while</span> <span class="n">valider</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">[</span><span class="s">"O"</span><span class="p">,</span> <span class="s">"OUI"</span><span class="p">,</span> <span class="s">"N"</span><span class="p">,</span> <span class="s">"NON"</span><span class="p">]</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">" Raté ! Essayez encore !"</span><span class="p">)</span>
        <span class="n">valider</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Voulez-vous continuer ? o/n : "</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">valider</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span> <span class="ow">in</span> <span class="p">[</span><span class="s">"O"</span><span class="p">,</span> <span class="s">"OUI"</span><span class="p">]</span> <span class="p">:</span>
        <span class="k">if</span> <span class="n">typeSimu</span> <span class="o">==</span> <span class="s">"1"</span> <span class="p">:</span>
            <span class="n">lancerSimulation</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span><span class="p">,</span> <span class="n">regle2</span><span class="p">,</span> <span class="n">forme</span><span class="p">)</span>
        <span class="k">else</span> <span class="p">:</span>
            <span class="n">lancerSimulationInfinie</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span><span class="p">,</span> <span class="n">regle2</span><span class="p">,</span> <span class="n">forme</span><span class="p">,</span> <span class="n">pasAvantSauvegarde</span><span class="p">,</span> <span class="n">nomSauvegarde</span><span class="p">)</span>
    

<span class="k">def</span> <span class="nf">aPropos</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Affiche quelques infos à propos du jeu de la vie.</span>
<span class="sd">    """</span>
    <span class="n">nettoyerConsole</span><span class="p">()</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"                      A PROPOS                       </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" Le jeu de la vie est un automate cellulaire crée en </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" 1970 par John Horton Conway. Dans ce programme, la  </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" simulation se déroule en deux dimensions sur un     </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" plan fermé, un tore ou un cylindre.                 </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" Par défaut, les règles appliquées pour la vie ou la </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" mort des cellules sont les suivantes :              </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"  - Règle de vie : une cellule naît si elle est en-  </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"    d'exactement 3 cellules vivantes.                </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"  - Règle de neutralité : une cellule conserve son   </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"    état si elle est entourée par exactement 2 cel-  </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"    les vivantes.                                    </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"  - Dans tous les autres cas, elle meurt.            </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------"</span><span class="p">)</span>
    <span class="nb">input</span><span class="p">(</span><span class="s">" Appuyez sur entrée pour revenir au menu principal."</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">mesCredits</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Affiche les crédits.</span>
<span class="sd">    """</span>
    <span class="n">nettoyerConsole</span><span class="p">()</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"                      CREDITS                        </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" Ce programme a été développé par Suzy alias Bastien </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" Pietropaoli dans le cadre de la rédaction d'un tu-  </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" toriel sur le langage Python pour le Site du Zéro.  </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" Ce programme est entièrement libre et toute partie  </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" peut être utilisée sans aucune contrainte. Un petit </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" remerciement sera suffisant si une partie du code a </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" été utilisée.                                       </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------"</span><span class="p">)</span>
    <span class="nb">input</span><span class="p">(</span><span class="s">" Appuyez sur entrée pour revenir au menu principal."</span><span class="p">)</span>
    

<span class="k">def</span> <span class="nf">lancerSimulation</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="n">regle2</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="n">forme</span> <span class="o">=</span> <span class="s">"tore"</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Lance une simulation avec les règles et les options demandées.</span>
<span class="sd">    grille : La grille initiale.</span>
<span class="sd">    regle1 = 3 : La règle de vie (combien de cellules vivantes pour naître)</span>
<span class="sd">    regle2 = 2 : La règle de neutralité (combien de cellules vivantes pour rester</span>
<span class="sd">             inchangé.</span>
<span class="sd">    forme = "tore" : La forme à considérer pour la grille.</span>
<span class="sd">    """</span>
    <span class="c">#Variables :</span>
    <span class="n">tour</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">continuer</span> <span class="o">=</span> <span class="bp">True</span>
    <span class="c">#Faire les tours :</span>
    <span class="k">while</span> <span class="n">continuer</span> <span class="p">:</span>
        <span class="n">nettoyerConsole</span><span class="p">()</span>
        <span class="n">afficherGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span><span class="n">tour</span><span class="p">)</span>
        <span class="c">#Tant qu'il y a de la vie...</span>
        <span class="k">if</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">encoreDeLaVie</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span> <span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">" 1 - Continuer...</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                  <span class="s">" 2 - Avancer de plusieurs pas...</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                  <span class="s">" 3 - Sauvegarder et continuer...</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                  <span class="s">" 4 - Sauvegarder et avancer de plusieurs pas...</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                  <span class="s">" 5 - Sauvegarder et arrêter</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
                  <span class="s">" 6 - Arrêter"</span><span class="p">)</span>
            <span class="n">choix</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Votre choix : "</span><span class="p">)</span>
            <span class="k">while</span> <span class="n">choix</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="s">"123456"</span><span class="p">)</span> <span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="s">" Raté ! Essayez encore !"</span><span class="p">)</span>
                <span class="n">choix</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Votre choix : "</span><span class="p">)</span>
            <span class="c">#Une fois un choix correct obtenu :</span>
            <span class="k">if</span> <span class="n">choix</span> <span class="o">==</span> <span class="s">"1"</span> <span class="p">:</span>
                <span class="n">grille</span> <span class="o">=</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span><span class="p">,</span> <span class="n">regle2</span><span class="p">,</span> <span class="n">forme</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">choix</span> <span class="o">==</span> <span class="s">"2"</span> <span class="p">:</span>
                <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">obtenirNombre</span><span class="p">(</span><span class="s">" Nombre de pas à effectuer : "</span><span class="p">))</span> <span class="p">:</span>
                     <span class="n">grille</span> <span class="o">=</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span><span class="p">,</span> <span class="n">regle2</span><span class="p">,</span> <span class="n">forme</span><span class="p">)</span>
                     <span class="n">tour</span> <span class="o">+=</span> <span class="mi">1</span>
                     <span class="k">if</span> <span class="ow">not</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">encoreDeLaVie</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span> <span class="p">:</span>
                         <span class="n">desolation</span><span class="p">(</span><span class="n">tour</span><span class="p">)</span>
                         <span class="k">break</span>
                <span class="k">if</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">encoreDeLaVie</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span> <span class="p">:</span>
                     <span class="n">tour</span> <span class="o">-=</span> <span class="mi">1</span>
            <span class="k">elif</span> <span class="n">choix</span> <span class="o">==</span> <span class="s">"3"</span> <span class="p">:</span>
                <span class="n">sauvegarder</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span>
                <span class="n">grille</span> <span class="o">=</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span><span class="p">,</span> <span class="n">regle2</span><span class="p">,</span> <span class="n">forme</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">choix</span> <span class="o">==</span> <span class="s">"4"</span> <span class="p">:</span>
                <span class="n">sauvegarder</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span>
                <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">obtenirNombre</span><span class="p">(</span><span class="s">" Nombre de pas à effectuer : "</span><span class="p">))</span> <span class="p">:</span>
                     <span class="n">grille</span> <span class="o">=</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span><span class="p">,</span> <span class="n">regle2</span><span class="p">,</span> <span class="n">forme</span><span class="p">)</span>
                     <span class="n">tour</span> <span class="o">+=</span> <span class="mi">1</span>
                     <span class="k">if</span> <span class="ow">not</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">encoreDeLaVie</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span> <span class="p">:</span>
                         <span class="n">desolation</span><span class="p">(</span><span class="n">tour</span><span class="p">)</span>
                         <span class="k">break</span>
                <span class="k">if</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">encoreDeLaVie</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span> <span class="p">:</span>
                     <span class="n">tour</span> <span class="o">-=</span> <span class="mi">1</span>    
            <span class="k">elif</span> <span class="n">choix</span> <span class="o">==</span> <span class="s">"5"</span> <span class="p">:</span>
                <span class="n">sauvegarder</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span>
                <span class="n">continuer</span> <span class="o">=</span> <span class="bp">False</span>
            <span class="k">elif</span> <span class="n">choix</span> <span class="o">==</span> <span class="s">"6"</span> <span class="p">:</span>
                <span class="n">continuer</span> <span class="o">=</span> <span class="bp">False</span>
        <span class="c">#Si la grille n'est que désolation...</span>
        <span class="k">else</span> <span class="p">:</span>
            <span class="n">continuer</span> <span class="o">=</span> <span class="bp">False</span>
            <span class="n">desolation</span><span class="p">(</span><span class="n">tour</span><span class="p">)</span>
        <span class="c">#Tour suivant :</span>
        <span class="n">tour</span> <span class="o">+=</span> <span class="mi">1</span>
                     

<span class="k">def</span> <span class="nf">lancerSimulationInfinie</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span><span class="p">,</span> <span class="n">regle2</span><span class="p">,</span> <span class="n">forme</span><span class="p">,</span> <span class="n">pasAvantSauvegarde</span><span class="p">,</span> <span class="n">nomFichier</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Lance une simulation infinie qui ne sera stoppée que si le modèle meurt ou si</span>
<span class="sd">    l'utilisateur la tue !</span>
<span class="sd">    grille : La grille initiale.</span>
<span class="sd">    regle1 : La règle de vie (combien de cellules vivantes pour naître)</span>
<span class="sd">    regle2 : La règle de neutralité (combien de cellules vivantes pour rester</span>
<span class="sd">             inchangé.</span>
<span class="sd">    forme : La forme à considérer pour la grille.</span>
<span class="sd">    pasAvantSauvegarde : Le nombre de pas entre deux sauvegarde (0 pour ne pas sauvegarder).</span>
<span class="sd">    nomFichier : Le nom du fichier de sauvegarde.</span>
<span class="sd">    """</span>
    <span class="n">tour</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">try</span> <span class="p">:</span>
        <span class="k">while</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">encoreDeLaVie</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span> <span class="p">:</span>
            <span class="n">nettoyerConsole</span><span class="p">()</span>
            <span class="n">afficherGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span><span class="n">tour</span><span class="p">)</span>
            <span class="k">print</span><span class="p">(</span><span class="s">" Pressez Ctrl+C pour arrêter la simulation."</span><span class="p">)</span>
            <span class="n">grillePrecedente</span> <span class="o">=</span> <span class="n">grille</span>
            <span class="n">grille</span> <span class="o">=</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span><span class="p">,</span> <span class="n">regle2</span><span class="p">,</span> <span class="n">forme</span><span class="p">)</span>
            <span class="n">tour</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="c">#Attendre un peu :</span>
            <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.2</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">pasAvantSauvegarde</span> <span class="o">!=</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">tour</span><span class="o">%</span><span class="n">pasAvantSauvegarde</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">tour</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">:</span>
                <span class="n">Moteur</span><span class="o">.</span><span class="n">sauvegarderGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">nomFichier</span><span class="p">)</span>
            <span class="c">#Si la grille n'évolue plus :</span>
            <span class="k">if</span> <span class="n">grille</span> <span class="o">==</span> <span class="n">grillePrecedente</span> <span class="p">:</span>
                <span class="n">stabilite</span><span class="p">()</span>
                <span class="k">assert</span> <span class="bp">False</span>
        <span class="c">#Si l'on sort, c'est que la grille est morte :</span>
        <span class="n">nettoyerConsole</span><span class="p">()</span>
        <span class="n">afficherGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">tour</span><span class="p">)</span>
        <span class="n">desolation</span><span class="p">(</span><span class="n">tour</span><span class="p">)</span>
    <span class="k">except</span> <span class="p">:</span>
        <span class="n">nettoyerConsole</span><span class="p">()</span>
        <span class="n">afficherGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span><span class="n">tour</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">" La simulation a été interrompue :                   </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
              <span class="s">" 1 - Sauvegarder et revenir au menu principal        </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
              <span class="s">" 2 - Revenir au menu principal                       "</span><span class="p">)</span>
        <span class="n">choix</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Votre choix : "</span><span class="p">)</span>
        <span class="k">while</span> <span class="n">choix</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="s">"12"</span><span class="p">)</span> <span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">" Raté ! Essayez encore !"</span><span class="p">)</span>
            <span class="n">choix</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Votre choix : "</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">choix</span> <span class="o">==</span> <span class="s">"1"</span> <span class="p">:</span>
            <span class="n">sauvegarder</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">desolation</span><span class="p">(</span><span class="n">tour</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Affiche la fin de la simulation suite à la mort du modèle !</span>
<span class="sd">    tour : Tour de la mort.</span>
<span class="sd">    """</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"               DESOLATION ET DESESPOIR !             </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" Malheureusement, la vie que vous avez créé s'est    </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" éteinte après </span><span class="si">%i</span><span class="s"> tours... Vous ne semblez pas être  </span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="n">tour</span> <span class="o">+</span>
          <span class="s">" très doué... Mais vous pouvez retenter votre chance.</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------"</span><span class="p">)</span>
    <span class="nb">input</span><span class="p">(</span><span class="s">" Appuyez sur entrée pour continuer."</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">stabilite</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Affiche la fin de la simulation suite à sa stabilité !</span>
<span class="sd">    tour : Tour de la stabilité.</span>
<span class="sd">    """</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"                    VIE ETERNELLE !                  </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" La vie que vous avez créé a atteint la stabilité    </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" parfaite ! Elle continuera son chemin jusqu'à l'in- </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">" fini et au-delà. Elle n'a plus besoin de gardien !  </span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"-----------------------------------------------------"</span><span class="p">)</span>
    <span class="nb">input</span><span class="p">(</span><span class="s">" Appuyez sur entrée pour continuer."</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">sauvegarder</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet de sauvegarder la grille.</span>
<span class="sd">    grille : La grille à sauvegarder.</span>
<span class="sd">    """</span>
    <span class="n">nomFichier</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Nom du fichier de sauvegarde : "</span><span class="p">)</span>
    <span class="n">echec</span> <span class="o">=</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">sauvegarderGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">nomFichier</span><span class="p">)</span>
    <span class="k">while</span> <span class="n">echec</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">" La sauvegarde n'a pas pu se faire..."</span><span class="p">)</span>
        <span class="n">nomFichier</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Nom du fichier de sauvegarde : "</span><span class="p">)</span>
        <span class="n">echec</span> <span class="o">=</span> <span class="n">Moteur</span><span class="o">.</span><span class="n">sauvegarderGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">nomFichier</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">obtenirNombre</span><span class="p">(</span><span class="n">aEcrire</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet d'obtenir un nombre entier de l'utilisateur.</span>
<span class="sd">    aEcrire : La phrase à écrire pour demander le nombre.</span>
<span class="sd">    Retourne : Le nombre demandé.</span>
<span class="sd">    """</span>
    <span class="n">reponseEstUnNombre</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="k">while</span> <span class="ow">not</span> <span class="n">reponseEstUnNombre</span> <span class="p">:</span>
        <span class="n">nombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="n">aEcrire</span><span class="p">)</span>
        <span class="k">try</span> <span class="p">:</span>
            <span class="n">nombre</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span>
            <span class="n">reponseEstUnNombre</span> <span class="o">=</span> <span class="bp">True</span>
        <span class="k">except</span> <span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">" Vous devriez donner un nombre..."</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">nombre</span>


<span class="k">def</span> <span class="nf">obtenirProba</span><span class="p">()</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet d'obtenir un nombre à virgule flottante de l'utilisateur</span>
<span class="sd">    compris entre 0 et 1.</span>
<span class="sd">    Retourne : Le nombre demandé.</span>
<span class="sd">    """</span>
    <span class="n">reponseEstUnNombre</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="k">while</span> <span class="ow">not</span> <span class="n">reponseEstUnNombre</span> <span class="p">:</span>
        <span class="n">nombre</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">" Probabilité pour une cellule d'être vivante au départ : "</span><span class="p">)</span>
        <span class="k">try</span> <span class="p">:</span>
            <span class="n">nombre</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span>
            <span class="k">if</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">nombre</span> <span class="o">&lt;=</span> <span class="mi">1</span> <span class="p">:</span>
                <span class="n">reponseEstUnNombre</span> <span class="o">=</span> <span class="bp">True</span>
            <span class="k">else</span> <span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="s">" La probabilité doit être comprise entre 0 et 1..."</span><span class="p">)</span>
        <span class="k">except</span> <span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">" Vous devriez donner un nombre..."</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">nombre</span>


<span class="k">def</span> <span class="nf">afficherGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">tour</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Convertit une grille en chaîne de caractères pour l'afficher</span>
<span class="sd">    dans la console.</span>
<span class="sd">    grille : La grille a afficher.</span>
<span class="sd">    tour : Le numéro de tour.</span>
<span class="sd">    """</span>
    <span class="n">aEcrire</span> <span class="o">=</span> <span class="s">"</span><span class="se">\n\n</span><span class="s">"</span> <span class="o">+</span> \
              <span class="s">"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span> \
              <span class="s">"                   Tour n° : </span><span class="si">%i</span><span class="s">                      </span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="n">tour</span> <span class="o">+</span> \
              <span class="s">"-----------------------------------------------------</span><span class="se">\n\n</span><span class="s"> "</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">for</span> <span class="n">cellule</span> <span class="ow">in</span> <span class="n">ligne</span> <span class="p">:</span>
            <span class="k">if</span> <span class="n">cellule</span> <span class="p">:</span>
                <span class="n">aEcrire</span> <span class="o">+=</span> <span class="s">"O "</span>
            <span class="k">else</span> <span class="p">:</span>
                <span class="n">aEcrire</span> <span class="o">+=</span> <span class="s">". "</span>
        <span class="n">aEcrire</span> <span class="o">+=</span> <span class="s">"</span><span class="se">\n</span><span class="s"> "</span>
    <span class="n">aEcrire</span> <span class="o">+=</span> <span class="s">"</span><span class="se">\n</span><span class="s">-----------------------------------------------------"</span>
    <span class="k">print</span><span class="p">(</span><span class="n">aEcrire</span><span class="p">)</span>
    

<span class="c"># Programme principal :</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span> <span class="p">:</span>
    <span class="n">continuerProgramme</span> <span class="o">=</span> <span class="bp">True</span>
    <span class="k">while</span> <span class="n">continuerProgramme</span> <span class="p">:</span>
        <span class="n">menuPrincipal</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
<h4>Moteur.py</h4><br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361</pre></div></td><td class="code"><div class="syntax"><pre><span class="c"># -*- coding: utf-8 -*-</span>
<span class="c">####################################</span>
<span class="c"># Jeu de la vie                    #</span>
<span class="c"># -------------------------------- #</span>
<span class="c"># Auteur : Suzy                    #</span>
<span class="c"># Créé le : 09/07/2010             #</span>
<span class="c"># -------------------------------- #</span>
<span class="c"># Ce petit programme de simulation #</span>
<span class="c"># permet de modéliser une forme de #</span>
<span class="c"># vie simplicime ! Vous pourrez y  #</span>
<span class="c"># voir apparaître des formes qui   #</span>
<span class="c"># se perpétuent dans le temps ou   #</span>
<span class="c"># qui restent constantes.          #</span>
<span class="c"># -------------------------------- # </span>
<span class="c"># Moteur du jeu de la vie :        #</span>
<span class="c"># Contient toutes les fonctions    #</span>
<span class="c"># qui permettent d'effectuer des   #</span>
<span class="c"># opérations sur la grille et      #</span>
<span class="c"># d'émuler la vie !                #</span>
<span class="c">####################################</span>

<span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">random</span>

<span class="c">#Constantes :</span>
<span class="n">FORMES_POSSIBLES</span> <span class="o">=</span> <span class="p">(</span><span class="s">"plan"</span><span class="p">,</span><span class="s">"cylindre"</span><span class="p">,</span><span class="s">"tore"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">creerGrille</span><span class="p">(</span><span class="n">lignes</span> <span class="o">=</span> <span class="mi">20</span><span class="p">,</span> <span class="n">colonnes</span> <span class="o">=</span> <span class="mi">20</span><span class="p">,</span> <span class="n">proba</span> <span class="o">=</span> <span class="mf">0.5</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet de créer une grille du nombre de lignes et de colonnes</span>
<span class="sd">    spécifiées. Les cellules seront vivantes selon la probabilité</span>
<span class="sd">    données en paramètre.</span>
<span class="sd">    lignes = 20 : Le nombre de lignes pour la grille.</span>
<span class="sd">    colonnes = 20 : La nombre de colonnes pour la grille.</span>
<span class="sd">    proba = 0.5 : La probabilité qu'une cellule créée soit vivante.</span>
<span class="sd">    Retourne : Retourne une grille de lignes x colonnes cellules</span>
<span class="sd">               aléatoirement vivantes.</span>
<span class="sd">    """</span>
    <span class="n">aRetourner</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">lignes</span><span class="p">)</span> <span class="p">:</span>
        <span class="n">ligne</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">colonnes</span><span class="p">)</span> <span class="p">:</span>
            <span class="k">if</span> <span class="n">random</span><span class="p">()</span> <span class="o">&gt;</span> <span class="n">proba</span> <span class="p">:</span>
                <span class="n">ligne</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
            <span class="k">else</span> <span class="p">:</span>
                <span class="n">ligne</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">aRetourner</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">aRetourner</span>


<span class="k">def</span> <span class="nf">chargerGrille</span><span class="p">(</span><span class="n">nomFichier</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet de charger une grille à partir d'un fichier. Le fichier</span>
<span class="sd">    doit être composé de lignes de 0 (mort) et de 1 (vivant). Si</span>
<span class="sd">    elles ne sont pas toutes de la même taille, une exception sera</span>
<span class="sd">    levée.</span>
<span class="sd">    nomFichier : Le chemin vers le fichier à charger.</span>
<span class="sd">    Retourne : La grille chargée à partir du fichier.</span>
<span class="sd">    Exception : - IOError : Si le fichier n'existe pas.</span>
<span class="sd">                - ValueError : quelque chose n'est pas un nombre dans la grille.</span>
<span class="sd">                - AssertionError : un nombre différent de 0 ou 1.</span>
<span class="sd">                - AssertionError : lignes de différentes longueurs.</span>
<span class="sd">                - AssertionError : une seule ligne dans le fichier.</span>
<span class="sd">                - AssertionError : pas de cellule vivante.</span>
<span class="sd">    """</span>
    <span class="n">aRetourner</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="c">#Lecture du fichier :</span>
    <span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">nomFichier</span><span class="p">,</span> <span class="s">'r'</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">fichier</span> <span class="p">:</span>
        <span class="n">ligne</span> <span class="o">=</span> <span class="n">ligne</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
        <span class="c">#Conversion en entier :</span>
        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">cellule</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span> <span class="p">:</span>
            <span class="n">ligne</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">cellule</span><span class="p">)</span>
            <span class="c">#Vérification 0 ou 1 :</span>
            <span class="k">assert</span> <span class="n">ligne</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">or</span> <span class="n">ligne</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span>
        <span class="n">aRetourner</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
    <span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
    <span class="c">#Vérification de la longueur des lignes :</span>
    <span class="n">memeLongueur</span> <span class="o">=</span> <span class="bp">True</span>
    <span class="n">longueur</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">aRetourner</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">aRetourner</span> <span class="p">:</span>
        <span class="n">memeLongueur</span> <span class="o">=</span> <span class="n">memeLongueur</span> <span class="ow">and</span> <span class="nb">len</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span> <span class="o">==</span> <span class="n">longueur</span>
    <span class="k">assert</span> <span class="n">memeLongueur</span>
    <span class="k">assert</span> <span class="nb">len</span><span class="p">(</span><span class="n">aRetourner</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span>
    <span class="k">assert</span> <span class="n">encoreDeLaVie</span><span class="p">(</span><span class="n">aRetourner</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">aRetourner</span>
    

<span class="k">def</span> <span class="nf">sauvegarderGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">nomFichier</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet d'enregistrer une grille dans un fichier qui pourra</span>
<span class="sd">    être chargé par la suite. Le fichier sera préalablement effacé</span>
<span class="sd">    s'il existe déjà.</span>
<span class="sd">    grille : La grille à sauvegarder.</span>
<span class="sd">    nomFichier : Le nom du fichier à utiliser pour la sauvegarde.</span>
<span class="sd">    Retourne : 0 si l'opération s'est bien passée, 1 sinon.</span>
<span class="sd">    """</span>
    <span class="n">aEcrire</span> <span class="o">=</span> <span class="s">""</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">for</span> <span class="n">cellule</span> <span class="ow">in</span> <span class="n">ligne</span> <span class="p">:</span>
            <span class="n">aEcrire</span> <span class="o">+=</span> <span class="s">"</span><span class="si">%i</span><span class="s"> "</span> <span class="o">%</span> <span class="n">cellule</span>
        <span class="n">aEcrire</span> <span class="o">+=</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span>
    <span class="k">try</span> <span class="p">:</span>
        <span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">nomFichier</span><span class="p">,</span> <span class="s">"w"</span><span class="p">)</span>
        <span class="n">fichier</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">aEcrire</span><span class="p">)</span>
        <span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
        <span class="k">return</span> <span class="mi">0</span>
    <span class="k">except</span> <span class="p">:</span>
        <span class="k">return</span> <span class="mi">1</span>


<span class="k">def</span> <span class="nf">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">forme</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet d'obtenir une liste des voisines d'une cellule aux coordonnées</span>
<span class="sd">    demandées dans une grille demandée. La forme du modèle est prise en compte.</span>
<span class="sd">    grille : La grille contenant la cellule à étudier.</span>
<span class="sd">    i : L'indice de la ligne de la cellule.</span>
<span class="sd">    j : L'indice de la colonne de la cellule.</span>
<span class="sd">    forme : La forme du modèle (plan, cylindre, tore).</span>
<span class="sd">    Retourne : La liste des voisines de la cellule demandée.</span>
<span class="sd">    Exception : - IndexError si i et/ou j sort de la grille.</span>
<span class="sd">                - AssertionError si la forme demandée n'est pas reconnue.</span>
<span class="sd">    """</span>
    <span class="n">aRetourner</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">nbLignes</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span>
    <span class="n">nbColonnes</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">grille</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
    <span class="k">if</span> <span class="n">forme</span> <span class="o">==</span> <span class="s">"plan"</span> <span class="p">:</span>
        <span class="c">#On considère 9 cellules :</span>
        <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="p">:</span>
            <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="p">:</span>
                <span class="k">if</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="n">k</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">nbLignes</span> <span class="ow">and</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="p">(</span><span class="n">j</span> <span class="o">+</span> <span class="n">l</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">nbColonnes</span> <span class="p">:</span>
                    <span class="n">aRetourner</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">grille</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="n">k</span><span class="p">][</span><span class="n">j</span> <span class="o">+</span> <span class="n">l</span><span class="p">])</span>
        <span class="c">#On retire la cellule elle-même (ou une valeur équivalente...) :</span>
        <span class="n">aRetourner</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">grille</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">])</span>
    <span class="k">elif</span> <span class="n">forme</span> <span class="o">==</span> <span class="s">"cylindre"</span> <span class="p">:</span>
        <span class="c">#On considère 9 cellules :</span>
        <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="p">:</span>
            <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="p">:</span>
                <span class="k">if</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="n">k</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">nbLignes</span> <span class="p">:</span>
                    <span class="n">aRetourner</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">grille</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="n">k</span><span class="p">][(</span><span class="n">j</span> <span class="o">+</span> <span class="n">l</span><span class="p">)</span><span class="o">%</span><span class="n">nbColonnes</span><span class="p">])</span>
        <span class="c">#On retire la cellule elle-même (ou une valeur équivalente...) :</span>
        <span class="n">aRetourner</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">grille</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">])</span>
    <span class="k">elif</span> <span class="n">forme</span> <span class="o">==</span> <span class="s">"tore"</span> <span class="p">:</span>
        <span class="c">#On considère 9 cellules :</span>
        <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="p">:</span>
            <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="p">:</span>
                <span class="n">aRetourner</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">grille</span><span class="p">[(</span><span class="n">i</span> <span class="o">+</span> <span class="n">k</span><span class="p">)</span><span class="o">%</span><span class="n">nbLignes</span><span class="p">][(</span><span class="n">j</span> <span class="o">+</span> <span class="n">l</span><span class="p">)</span><span class="o">%</span><span class="n">nbColonnes</span><span class="p">])</span>
        <span class="c">#On retire la cellule elle-même (ou une valeur équivalente...) :</span>
        <span class="n">aRetourner</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">grille</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">])</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="k">assert</span> <span class="bp">False</span>
    <span class="k">return</span> <span class="n">aRetourner</span>


<span class="k">def</span> <span class="nf">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">regle1</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="n">regle2</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="n">forme</span> <span class="o">=</span> <span class="s">"tore"</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet de créer le tour suivant de la grille en fonction des</span>
<span class="sd">    règles en vigueur dans la source de vie que vous avez créée.</span>
<span class="sd">    grille : La grille de cellules à faire évoluer.</span>
<span class="sd">    regle1 = 3 : Le nombre de cellules à avoir pour qu'une cellule</span>
<span class="sd">                 soit vivante au prochain tour.</span>
<span class="sd">    regle2 = 2 : Le nombre de cellules à avoir pour qu'une cellule</span>
<span class="sd">                 reste dans le même état au tour suivant.</span>
<span class="sd">    forme = "plan" : Le modèle peut prendre différentes formes, soit</span>
<span class="sd">                     un plan fermé ("plan"), soit un cylindre ("cylindre"),</span>
<span class="sd">                     soit un tore ("tore").</span>
<span class="sd">                     Change les voisines aux bords du modèle.</span>
<span class="sd">    Retourne : Retourne la nouvelle grille après évolution.</span>
<span class="sd">    Exception : AssertionError : la forme donnée n'est pas reconnue.</span>
<span class="sd">    """</span>
    <span class="k">global</span> <span class="n">FORMES_POSSIBLES</span>
    <span class="k">assert</span> <span class="n">forme</span> <span class="ow">in</span> <span class="n">FORMES_POSSIBLES</span>
    <span class="n">aRetourner</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="c">#Parcours de la grille :</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span> <span class="p">:</span>
        <span class="n">nouvelleLigne</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">j</span><span class="p">,</span> <span class="n">cellule</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span> <span class="p">:</span>
            <span class="c">#Compter les voisines vivantes :</span>
            <span class="n">voisinesVivantes</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">forme</span><span class="p">))</span>
            <span class="c">#Appliquer les règles de vie ou de mort :</span>
            <span class="k">if</span> <span class="n">voisinesVivantes</span> <span class="o">==</span> <span class="n">regle1</span> <span class="p">:</span>
                <span class="n">nouvelleLigne</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">voisinesVivantes</span> <span class="o">==</span> <span class="n">regle2</span> <span class="p">:</span>
                <span class="n">nouvelleLigne</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">cellule</span><span class="p">)</span>
            <span class="k">else</span> <span class="p">:</span>
                <span class="n">nouvelleLigne</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
        <span class="n">aRetourner</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">nouvelleLigne</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">aRetourner</span>


<span class="k">def</span> <span class="nf">encoreDeLaVie</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Permet de savoir si la grille contient encore de la vie ou non.</span>
<span class="sd">    grille : La grille a tester.</span>
<span class="sd">    Retourne : Retourne True si la grille contient de la vie, False sinon.</span>
<span class="sd">    """</span>
    <span class="n">aRetourner</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">for</span> <span class="n">cellule</span> <span class="ow">in</span> <span class="n">ligne</span> <span class="p">:</span>
            <span class="n">aRetourner</span> <span class="o">=</span> <span class="n">aRetourner</span> <span class="ow">or</span> <span class="n">cellule</span>
    <span class="k">return</span> <span class="n">aRetourner</span>


<span class="c"># Tests des fonctions :</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"********************</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Test du moteur ! *</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"********************"</span><span class="p">)</span>
    
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">*****</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Création d'une grille vivante :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"*****"</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">creerGrille</span><span class="p">(</span><span class="n">proba</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">vivantes</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">cellule</span> <span class="ow">in</span> <span class="n">ligne</span> <span class="p">:</span>
            <span class="k">if</span> <span class="n">cellule</span> <span class="p">:</span>
                <span class="n">vivantes</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Nombre de cellules vivantes : </span><span class="si">%i</span><span class="s"> (normalement à 400)"</span> <span class="o">%</span> <span class="n">vivantes</span><span class="p">)</span>
    
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">*****</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Création d'une grille aléatoire :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"*****"</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">creerGrille</span><span class="p">()</span>
    <span class="n">vivantes</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">cellule</span> <span class="ow">in</span> <span class="n">ligne</span> <span class="p">:</span>
            <span class="k">if</span> <span class="n">cellule</span> <span class="p">:</span>
                <span class="n">vivantes</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Nombre de cellules vivantes : </span><span class="si">%i</span><span class="s"> (aux alentours de 200)"</span> <span class="o">%</span> <span class="n">vivantes</span><span class="p">)</span>
    
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">*****</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Sauvegarde de la grille aléatoire :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"*****"</span><span class="p">)</span>
    <span class="n">echec</span> <span class="o">=</span> <span class="n">sauvegarderGrille</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="s">"Test/TestMoteur.txt"</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">echec</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"La grille n'a pas été sauvegardée..."</span><span class="p">)</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier TestMoteur.txt a bien été écrit !"</span><span class="p">)</span>
        
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">*****</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Chargement de la grille sauvegardée :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"*****"</span><span class="p">)</span>
    <span class="n">grille2</span> <span class="o">=</span> <span class="n">chargerGrille</span><span class="p">(</span><span class="s">"Test/TestMoteur.txt"</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">grille2</span> <span class="o">==</span> <span class="p">[]</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier TestMoteur.txt n'a pas été chargé correctement..."</span><span class="p">)</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier TestMoteur.txt a été correctement chargé !"</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille2</span> <span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">*****</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Chargement d'une grille incorrecte :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"*****"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Lignes pas de la même longueur :"</span><span class="p">)</span>
    <span class="k">try</span> <span class="p">:</span>
        <span class="n">grille3</span> <span class="o">=</span> <span class="n">chargerGrille</span><span class="p">(</span><span class="s">"Test/Longueur.txt"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"La grille a tout de même été chargée..."</span><span class="p">)</span>
    <span class="k">except</span> <span class="ne">AssertionError</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier existe mais est incorrect !"</span><span class="p">)</span>
    <span class="k">except</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier ne semble pas exister..."</span><span class="p">)</span>
        <span class="k">raise</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Autre chose que 0 ou 1 dans le fichier :"</span><span class="p">)</span>
    
    <span class="k">try</span> <span class="p">:</span>
        <span class="n">grille4</span> <span class="o">=</span> <span class="n">chargerGrille</span><span class="p">(</span><span class="s">"Test/PasBonNombre.txt"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"La grille a tout de même été chargée..."</span><span class="p">)</span>
    <span class="k">except</span> <span class="ne">AssertionError</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier existe mais est incorrect !"</span><span class="p">)</span>
    <span class="k">except</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Le fichier ne semble pas exister..."</span><span class="p">)</span>
        <span class="k">raise</span>
        
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">***********************</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Test des voisines : *</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"***********************</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">creerGrille</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test de la forme tore :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin haut gauche :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin haut droit :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin bas gauche :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin bas droit :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test au milieu (4,4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté haut (0, 4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté bas (19, 4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté gauche (4, 0) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté droit (4, 19) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"tore"</span><span class="p">))</span>
    
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">Test de la forme plan :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin haut gauche :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin haut droit :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin bas gauche :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin bas droit :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test au milieu (4,4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté haut (0, 4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté bas (19, 4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté gauche (4, 0) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté droit (4, 19) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"plan"</span><span class="p">))</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">Test de la forme cylindre :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin haut gauche :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin haut droit :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin bas gauche :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test coin bas droit :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test au milieu (4,4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté haut (0, 4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté bas (19, 4) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté gauche (4, 0) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Test côté droit (4, 19) :"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">voisines</span><span class="p">(</span><span class="n">grille</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"cylindre"</span><span class="p">))</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"*****</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"* Test de quelques tours de simu :</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
          <span class="s">"*****"</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">chargerGrille</span><span class="p">(</span><span class="s">"Test/PeriodiqueStable.txt"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Grille initiale :"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Grille après 1 tour :"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Grille après 2 tours :"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
    <span class="n">grille</span> <span class="o">=</span> <span class="n">tourSuivant</span><span class="p">(</span><span class="n">grille</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Grille après 3 tours :"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">grille</span> <span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ligne</span><span class="p">)</span>
    <span class="nb">input</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
Dans mon modèle, j'ai décidé de représenter les cellules par un booléen sous forme d'entier. Cette forme à l'avantage de permettre de tester rapidement si une cellule est morte ou vivante mais cela permet aussi de compter facilement les cellules vivantes autour d'une cellule à tester par exemple. J'ai donc essayé de simplifier un peu l'écriture des algorithmes en prenant un modèle qui s'adapte assez bien au problème que l'on traite ici !<br>
<br>
Vous pourrez trouver ma version complète accompagné de quelques fichiers de tests et quelques configurations initiales sympathiques <a href="http://www.megaupload.com/?d=AT8IX2BM">en cliquant ici</a>.
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Ce TP est un bon exercice si vous avez réussi à le faire en entier mais vous ne pourrez apprendre à programmer qu'en vous exerçant encore et encore ! Essayer donc de trouver des petits projets que vous pourriez faire. Les sites d'école informatique en proposent assez souvent et sinon, vous pouvez vous essayer aux grands classiques des jeux !
	</div>
	
<div>
<br>
Vous voilà prêt pour passer à la programmation par objet. Avant d'y passer, assurez-vous de bien maîtriser les fonctions, car vous en aurez besoin à tour de bras !
</div>

<hr>
<h2>Partie 3 : Programmation Orientée Objet</h2>
<div>
Ca fait peur comme nom hein ? En fait, vous allez voir qu'une fois que vous y aurez goûté, vous ne pourrez plus vous en passer ! La programmation orientée objet, c'est le must de l'intuitif pour la structuration d'un code et ça permet de simplifier et de rendre réutilisables des pans entiers de code ! Alors, ne perdons pas de temps et commençons !
</div>
	
	<hr>
	<h1 id="chap_284396">Un objet, c'est quoi ?</h1>
	<div id="chap_intro">
	La programmation orientée objet est avant tout composée de concepts. Nous allons donc voir dans cette partie, les concepts de base que vous devez vous approprier afin de devenir des programmeurs objets ! <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"><br>
<br>
Dans cette partie, nous aborderons alors :<br>
<ul>
<li>Les objets que vous utilisez déjà</li>
<li>Les concepts que l'on y retrouve</li>
<li>Beaucoup de vocabulaire</li>
</ul>Au niveau pratique, vous n'apprendrez rien de nouveau mais tout ce qui se trouve dans cette partie doit être connu sur le bout des doigts pour comprendre la suite ! La pratique ne sera pas possible sans un peu de théorie !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_284398">Mmh, vous avez dit objet ?</h2>
		<div class="ss_part_texte">
		Commençons ce chapitre par une petite définition de la programmation objet :<br>
<br>
<span class="citation">Citation : Wikipédia</span><div class="citation2">C'est un paradigme de programmation informatique qui consiste en la définition et l'interaction de briques logicielles appelées objets ; un objet représente un concept, une idée ou toute entité du monde physique, comme une voiture, une personne ou encore une page d'un livre. Il possède une structure interne et un comportement, et il sait communiquer avec ses pairs. Il s'agit donc de représenter ces objets et leurs relations ; la communication entre les objets via leur relation permet de réaliser les fonctionnalités attendues, de résoudre le ou les problèmes.</div><br>
Pour un zéro, il y a de fortes chances pour que cette définition ne soit pas très claire. Je vais donc essayer de l'expliciter. En gros, dans la programmation orientée objet, on crée des objets comme dans le monde physique. Chaque objet est représenté par des caractéristiques et des actions que l'on peut lui faire subir. Par exemple, dans la vraie vie, vous pouvez prendre un objet livre composé de pages que vous pouvez tourner. <br>
<br>
En programmation, des termes particuliers sont utilisés pour décrire les caractéristiques et les actions que l'on peut faire sur un objet :<br>
<ul>
<li><strong>Les attributs</strong> : c'est ce qui définit un objet (pour le livre, ses dimensions, son nombre de page, son titre, etc...)</li>
<li><strong>Les méthodes</strong> : ce sont les actions que l'on peut faire avec cet objet (pour le livre, ouvrir/fermer, tourner les pages, lire, etc...)</li>
</ul>Le fait de modéliser des objets physiques que l'on peut appréhender rend la programmation orientée objet relativement instinctive. En effet, dans la plupart des problèmes que vous chercherez à résoudre, vous en aurez une représentation naturelle avec des objets qui vous viendra à l'esprit puisque vous réfléchirez d'abord à comment vous feriez en réalité pour faire ce que vous voulez programmer. Vous verrez ensuite que la plupart des algorithmes seront faciles à penser une fois votre structure bien définie.<br>
<br>
D'ailleurs, si vous pensiez n'avoir jamais fait de POO, et bien c'est faux ! Jusqu'à maintenant vous avez déjà manipulé des objets. En effet, les listes, les dictionnaires, les fichiers et toutes les séquences en général sont des objets que vous manipulez sans problème !<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">liste</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">liste</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span>
<span class="n">liste</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Peuh !"</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans ce petit exemple, on crée un objet de type <span class="italique">list</span> et on lui applique la méthode <span class="italique">append</span>(). Remarquez ici que <span class="italique">list</span> est bien un type de donnée ! En fait, lorsque vous créez des objets, vous créez de nouveaux types de données ! Pour appliquer une méthode à un objet en particulier, vous l'appliquez à l'aide du point (notation pointée). Vous pouvez retrouver la même chose avec les fichiers...<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">fichier</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"FichierQuelconque.txt"</span><span class="p">,</span><span class="s">"w"</span><span class="p">)</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">"Peuh !</span><span class="se">\n</span><span class="s">Je suis un code de test !</span><span class="se">\n</span><span class="s">KTHXBYE"</span><span class="p">)</span>
<span class="n">fichier</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans ce cas, un fichier est ouvert, la méthode <span class="italique">write()</span> appliquée à ce fichier permet d'y écrire du texte et la méthode <span class="italique">close()</span> permet de le fermer. Voyons encore quelques points de théorie avant de créer nos propres objets.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_284397">Principe d'encapsulation</h2>
		<div class="ss_part_texte">
		En programmation orientée objet, il existe un concept très important à respecter le plus possible pour s'éviter toute sorte de problèmes, c'est le principe d'encapsulation des données. Mais qu'est-ce que c'est ? Wikipédia nous dit :<br>
<br>
<span class="citation">Citation : Wikipédia</span><div class="citation2">En programmation orientée objet, l’encapsulation est l'idée de protéger l'information contenue dans un objet et de ne proposer que des méthodes de manipulation de cet objet. Ainsi, les propriétés et axiomes associés aux informations contenues dans l'objet seront assurés/validés par les méthodes de l'objet et ne seront plus de la responsabilité de l'utilisateur extérieur. L'utilisateur extérieur ne pourra pas modifier directement l'information et risquer de mettre en péril les axiomes et les propriétés comportementales de l'objet.</div><br>
L'encapsulation des données consiste donc à ne pas mettre au jour les données caractéristiques d'un objet. Ainsi, les attributs d'un objet ne doivent pas être manipulés directement par l'utilisateur. En clair, lorsque vous utilisez un objet, vous utilisez une boîte noire munie d'une interface.<br>
<br>
<div class="rmq erreur">Mais alors, ça sert à quoi de créer des objets, d'y stocker des données si je ne peux pas y accéder ?! <img src="./Langage Python_files/blink.gif" alt="o_O" class="smilies"> </div><br>
Et bien, les méthodes qui peuvent être appliquées à l'objet sont l'interface entre un modèle (attributs et axiomes) et l'utilisateur final, vous. Les données ne pourront être manipulées que via des méthodes. Les méthodes qui permettent d'accéder ou de modifier les attributs sont respectivement appelées <strong>accesseurs</strong> et <strong>mutateurs</strong>. Vous verrez dans la suite que ce sont des méthodes différenciées uniquement par des conventions.<br>
<br>
L'exemple le plus utilisé pour illustrer l'encapsulation est celui <a href="http://fr.wikipedia.org/wiki/Nombre_complexe">des nombres complexes</a>. Ce sont des nombres que l'on peut écrire de façon cartésienne ou polaire. Dans un cas comme dans l'autre, on peut en obtenir des informations comme la partie réelle, la partie imaginaire, le module, l'argument, etc... Seulement, suivant s'il est stocké en mémoire sous forme cartésienne ou polaire, ces données ne s'obtiennent pas de la même façon. Mais finalement, est-ce que cela intéresse l'utilisateur final ? Et bien non, lui, il n'a besoin que de savoir qu'il peut récupérer ces informations quoiqu'il arrive ! Le modèle est donc pour lui transparent. Il ne le perçoit pas.<br>
<br>
Pour ceux d'entre vous qui n'ont pas forcément compris l'exemple des nombres complexes, vous pouvez considérer votre ordinateur. Le modèle, c'est ce qu'il y a dans votre ordinateur, les opérations que peut effectuer votre processeur tout ça. L'interface, c'est le clavier, la souris et l'écran. Et vous pouvez appliquer des méthodes à votre ordinateur à l'aide d'applications. Avez-vous besoin de savoir comment fonctionnent les applications et votre ordinateur pour les utiliser ? Dans la plupart des cas, pas du tout ! Le modèle est totalement transparent une fois de plus ! Votre matériel respecte donc le principe d'encapsulation ! <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"><br>
<br>
En conclusion, il faut toujours cacher votre modèle à l'utilisateur ! Nous verrons dans le chapitre de pratique comment le faire.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_284394">C'est la classe !</h2>
		<div class="ss_part_texte">
		Ce que nous avons vu jusqu'à maintenant en manipulant les listes, les dictionnaires, etc... c'est qu'il est possible de créer plusieurs objets d'un même type et qu'il est aussi possible de définir de nouveaux types de données. Pour faire cela, il faut donc une sorte d'usine à objet : <strong>une classe</strong>. Une classe est ce qui sera défini pour la création d'objets. Les objets ainsi créés sont appelés <strong>instances</strong>.<br>
<br>
<div class="rmq information">Pour les fans de MMORPG (prononcé Meuporg selon certains journalistes...), vous comprenez certainement mieux le nom d'instance qui est donné aux donjons dont une nouvelle instance est créée pour chaque groupe de joueurs ! <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"> </div><br>
<div class="centre"><img src="./Langage Python_files/246874.png" alt="Usine à objets"></div><br>
Sur ce schéma, vous passez votre commande (instanciation/création d'instance), et l'usine (la classe) vous fabrique les objets que vous avez demandé avec les caractéristiques demandées. Tous les objets issus d'une même classe ont tous les mêmes attributs mais ces attributs n'auront pas forcément les mêmes valeurs d'une instance à une autre ! Toutes les boîtes sont des boîtes mais n'ont pas la même couleur par exemple. La classe est donc le nouveau type de donnée que vous désirez créer. Elle vous permettra de créer autant d'instances que vous le désirerez. Dans la partie pratique, nous verrons donc comment définir tout ce que nous avons vu dans ce chapitre :<br>
<ul>
<li><strong>Des classes</strong> : pour créer de nouveaux types de donnée</li>
<li><strong>Les attributs</strong> : les différents types et comment les définir</li>
<li><strong>Les méthodes</strong> : les différents types et comment les définir</li>
<li><strong>Les accesseurs et les mutateurs</strong> : les créer en respectant les conventions</li>
<li><strong>Le constructeur</strong> : pour créer des instances</li>
<li><strong>Les instances</strong> : comment les créer et les manipuler</li>
</ul>Certains de ces termes ne seront définis que dans la suite et tous seront explicités avec des exemples de code. Ils sont à connaître car ce sont les termes techniques dont vous aurez besoin pour comprendre la suite du cours !
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Bien, maintenant que vous avez une petite idée de ce qu'est la programmation orientée objet, nous allons voir ce que cela donne en pratique avec la création de vos propres objets ! Parce que c'est bien joli de faire de la théorie, mais si on n'en fait rien, je n'en vois pas l'intérêt ! <img src="./Langage Python_files/langue.png" alt=":p" class="smilies">
	</div>
	
	<hr>
	<h1 id="chap_284399">Créer des objets (1/2)</h1>
	<div id="chap_intro">
	Après quelques définitions utiles à la compréhension de la programmation orientée objet, et ce indépendamment du langage de programmation, nous allons passer à la pratique pour le langage Python. Dans ce chapitre, nous allons apprendre à<br>
<ul>
<li>Définir une classe</li>
<li>Implémenter le constructeur et manipuler les attributs</li>
<li>Implémenter et utiliser des méthodes d'instance</li>
</ul>Le but de ce chapitre est d'être capable de créer de petites classes de base puis de les utiliser. Rien qu'avec ce chapitre, vous devriez être capable de comprendre un peu le fonctionnement des objets que vous avez utilisés jusqu'à maintenant.
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_284391">Définir une classe</h2>
		<div class="ss_part_texte">
		Alors, si vous avez bien suivi le chapitre précédent, vous devez savoir qu'une classe est une sorte d'usine à objets. Vous pourrez donc créer des instances de classe par la suite et ce autant de fois que vous le désirez !<br>
<br>
Pour déclarer une classe, il faut utiliser le mot clé <span class="italique">class</span>. Difficile hein ? <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"><br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">MaPremiereClasse</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Je prends toujours le temps de documenter mes classes</span>
<span class="sd">    pour que tout le monde sache à quoi elles servent !</span>
<span class="sd">    C'est un bon réflexe à prendre car je peux revenir sur</span>
<span class="sd">    mon code des mois après et le comprendre en quelques</span>
<span class="sd">    minutes.</span>
<span class="sd">    """</span>
    <span class="k">pass</span>
</pre></div>
</td></tr></tbody></table></div><br>
La définition d'une classe est donc une chose très simple. Il suffit d'utiliser le mot <span class="italique">class</span> puis de le faire suivre du nom de votre classe. Comme pour les fonctions, il est possible de documenter ses classes en faisant suivre la déclaration immédiatement d'un texte entourée de 'triple quote'. <br>
<br>
Les noms de classe commencent généralement par une majuscule et sont composés de noms car ils représentent des objets. Ainsi, on peut les différencier facilement des noms de fonction qui commencent par une minuscule et qui auront plutôt tendance à contenir des verbes d'action.<br>
<br>
En Python, comme pour le reste, une classe va être considérée comme une structure et l'indentation des blocs est donc ce qui permet de déterminer ce qui s'y trouve ! Il faudra alors indenter tout le code que vous désirez insérer dans une classe.<br>
<br>
D'ailleurs, notre classe ne sert pour le moment à rien du tout ! Nous allons donc passer à la suite immédiatement.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_284392">Constructeur et attributs</h2>
		<div class="ss_part_texte">
		Avant de commencer à utiliser nos propres objets, il faut déjà que nous les définissions et nous leur donnions des attributs. C'est ce que nous allons voir tout de suite !<br>
<br>
<h3>Constructeur</h3><br>
Pour créer des instances de votre classe, vous aurez besoin d'un constructeur. C'est une méthode spéciale qui permet, comme son nom l'indique, de construire des objets. Cette fonction va en fait initialiser l'objet que vous créerez. Nous en avons déjà vu. En fait, lorsque vous utilisiez les fonctions <span class="italique">list()</span>, <span class="italique">dict()</span>, etc... vous utilisiez déjà l'équivalent d'un constructeur. Ces fonctions créent et renvoient un objet du type voulu et contenant ce que vous lui passez en argument. Et bien lorsque vous implémentez un constructeur, c'est pareil.<br>
<br>
En Python, le constructeur porte toujours le même nom : <span class="italique">__init__()</span>. C'est donc cette fonction qu'il va falloir implémenter pour pouvoir personnaliser vos objets.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">MaPremiereClasse</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Documentation</span>
<span class="sd">    """</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Constructeur.</span>
<span class="sd">        """</span>
        <span class="k">pass</span>
</pre></div>
</td></tr></tbody></table></div><br>
Il y a plusieurs choses dans cet exemple de code. Ici, je déclare une classe <span class="italique">MaPremiereClasse</span>. Dans cette classe, je définis une fonction à l'aide du mot clé <span class="italique">def</span> qui s'appelle <span class="italique">__init__()</span>, c'est donc mon constructeur. Le mot <span class="italique">self</span> (soi) n'est pas un mot clé mais il est capital et il va bien falloir suivre son explication ! Il est obligatoirement présent en tant que premier argument du constructeur. Il permet de lier la fonction aux instances. Je l'expliquerai plus en détail dans la suite.<br>
<br>
Le mot <span class="italique">self</span> (soi) fait référence à une instance de la classe. Nous n'en avons pas encore créé ici... En fait, lorsque vous écrivez une classe et que vous y définissez des choses, tout ce qui ce réfère à <span class="italique">self</span> appartiendra aux instances que vous créerez. C'est donc une référence générique à une instance. Vous comprendrez mieux à quoi cela sert lorsque nous définirons les attributs d'un objet.<br>
<br>
<div class="rmq information">Le mot <span class="italique">self</span> est l'équivalent du mot clé <span class="italique">this</span> d'autres langages de programmation orienté objet tels que C++ ou Java.</div><br>
Maintenant que nous avons une classe définie, il est possible de créer des objets de type <span class="italique">MaPremiereClasse</span>. Pour cela, c'est très simple, il suffit de faire :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">monObjet</span> <span class="o">=</span> <span class="n">MaPremiereClasse</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Si vous vérifiez le type de votre objet à l'aide de la fonction intégrée <span class="italique">type()</span>, vous pourrez constater que <span class="italique">monObjet</span> est bien du type <span class="italique">MaPremiereClasse</span>. Lorsque vous faites l'appel <span class="italique">MaPremiereClasse()</span>, c'est en fait la méthode <span class="italique">__init__()</span> qui est automatiquement appelée par l'interpréteur. Grâce à ce nom générique pour le constructeur, c'est donc le nom de votre classe qui vous permet de créer des objets du type que vous avez défini ! <br>
<br>
Vous remarquerez d'ailleurs qu'aucun argument n'a été donné au constructeur. En fait, la référence <span class="italique">self</span> est toujours donnée implicitement par l'interpréteur. Vous n'avez et ne devez en aucun cas donner une valeur pour <span class="italique">self</span>. Vous pouvez d'ailleurs essayer. L'interpréteur vous dira certainement que vous donnez deux arguments alors que <span class="italique">__init__()</span> n'en demande qu'un...<br>
<br>
<div class="rmq information">Si vous ne définissez aucun constructeur, il le sera automatiquement par défaut ! Il est donc tout à fait possible de déclarer une classe avec absolument rien dedans !</div><br>
En résumé, les contraintes sur les constructeurs dont il faut absolument tenir compte pour que cela fonctionne sont les suivantes :<br>
<ul>
<li><strong>Le nom</strong> : un constructeur s'appelle toujours <span class="italique">__init__()</span></li>
<li><strong>Les arguments</strong> : il doit forcément y avoir <span class="italique">self</span> en premier argument</li>
<li><strong>Le type de retour</strong> : un constructeur ne doit rien retourner ! (En réalité, il retourne l'objet None qui est l'objet générique servant à représenté un objet qui n'existe pas.)</li>
</ul>Pour le moment, cet objet ne contient rien du tout et n'est donc pas très utile. Afin d'en faire quelque chose qui puisse être réellement utilisé, il va falloir lui définir des attributs.<br>
<br>
<h3>Définir les attributs d'instance</h3><br>
L'intérêt des objets est de modéliser des concepts ou des objets physiques caractérisés par un ensemble de données. Pour faire cela, un ensemble d'attributs d'instance peut être défini dans vos classes. Ils sont dit d'instance car ils auront une valeur différente (ou tout du moins un emplacement en mémoire différent) pour chacune de vos instances.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">Crayon</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Cette classe permet de créer des Crayons qui pourront</span>
<span class="sd">    servir à écrire ce tutoriel par exemple !</span>
<span class="sd">    """</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">couleur</span><span class="p">,</span> <span class="n">quantiteEncre</span><span class="p">,</span> <span class="n">tailleDuTrace</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Constructeur de Crayon.</span>
<span class="sd">        couleur : La couleur d'écriture du crayon.</span>
<span class="sd">        quantiteEncre : La quantite d'encre dans le crayon.</span>
<span class="sd">        tailleDuTrace : La taille du tracé.</span>
<span class="sd">        """</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">couleur</span> <span class="o">=</span> <span class="n">couleur</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">quantiteEncre</span> <span class="o">=</span> <span class="n">quantiteEncre</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">tailleDuTrace</span> <span class="o">=</span> <span class="n">tailleDuTrace</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans cet exemple, je définis une classe <span class="italique">Crayon</span> et j'implémente son constructeur. Remarquez que vous pouvez donner autant de paramètres que vous le souhaitez à votre constructeur. Ici, j'en donne trois qui sont les données que je souhaite stocker dans les attributs d'instance de mon objet.<br>
<br>
<div class="rmq information">Le constructeur est en quelque sorte une fonction comme une autre. Il peut accepter les arguments avec une valeur par défaut mais aussi les listes et les dictionnaires d'arguments.</div><br>
Vous remarquerez que le mot <span class="italique">self</span> a été utilisé à plusieurs reprises. Il permet de préciser qu'une donnée se trouve dans l'objet lui-même. Ainsi, ici, mes <span class="italique">Crayons</span> seront caractérisés par trois attributs : <span class="italique">couleur, quantiteEncre</span> et <span class="italique">tailleDuTrace</span>. Pour les associer à l'objet, je suis obligé de le préciser à l'aide de <span class="italique">self</span>. Ainsi, je différencie les variables appartenant à l'objet et les variables définies dans la fonction via les arguments. Les attributs d'instance sont donc des variables bien différentes de celles passées en paramètres du constructeur puisqu'elles sont reliées à <span class="italique">self</span> par la notation pointée !<br>
<br>
Si je souhaite créer des Crayons et accéder à leur données, je peux donc faire ceci :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">unCrayon</span> <span class="o">=</span> <span class="n">Crayon</span><span class="p">(</span><span class="s">"Bleu"</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">12</span><span class="p">)</span>
<span class="n">unAutreCrayon</span> <span class="o">=</span> <span class="n">Crayon</span><span class="p">(</span><span class="s">"Rouge"</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">18</span><span class="p">)</span>
<span class="n">encoreUnAutreCrayon</span> <span class="o">=</span> <span class="n">Crayon</span><span class="p">(</span><span class="s">"Violet"</span><span class="p">,</span> <span class="n">unCrayon</span><span class="o">.</span><span class="n">quantiteEncre</span><span class="p">,</span> <span class="n">unAutreCrayon</span><span class="o">.</span><span class="n">tailleDuTrace</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Il est possible d'accéder aux données stockées dans un objet en utilisant la notation pointée. Chaque instance que je crée ici possède donc ses propres variables ! Vous pouvez d'ailleurs essayer de modifier la valeur d'un attribut d'une de vos instances et voir que cela ne modifie en rien les autres !<br>
<br>
<div class="rmq attention">Dans la pratique, il n'est autorisé d'accéder directement aux attributs d'un objet uniquement dans la définition de la classe à l'aide du mot <span class="italique">self</span>. Ce que je fais là ne respecte pas le principe d'encapsulation et n'est donc là qu'à titre d'exemple !</div><br>
<div class="rmq information">Dans la pratique, le constructeur n'est pas la seule méthode acceptant la déclaration d'attributs d'instance mais si vous voulez vous éviter un bon paquet d'erreurs casse-têtes, je vous conseille de ne déclarer les attributs d'instance que dans le constructeur.</div>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_284393">Méthodes d'instance</h2>
		<div class="ss_part_texte">
		Maintenant que nous avons vu comment attribuer des données à un objet, nous allons voir comment y accéder et quoi faire de ces données. Nous allons créer ce que l'on appelle des méthodes d'instance. C'est-à-dire des méthodes qui s'appliquent directement à des instances de classe. Par exemple, la fonction <span class="italique">append()</span> est une méthode d'instance de la classe <span class="italique">list</span>. Afin de bien saisir l'intérêt du principe d'encapsulation, nous allons considérer une classe <span class="italique">Point</span> qui va nous permettre de créer des points dans un plan mais ici, nous les modéliserons en <a href="http://fr.wikipedia.org/wiki/Coordonn%C3%A9es_polaires">coordonnées polaires</a>. Pour ceux qui ne seraient pas familiers avec les coordonnées polaires. Je vous invite à lire l'article wikipédia donné en lien. Pour les autres, un petit rappel ne fait pas de mal :<br>
<br>
<span class="citation">Citation : Wikipédia</span><div class="citation2">Les coordonnées polaires sont, en mathématiques, un système de coordonnées à deux dimensions, dans lequel chaque point du plan est entièrement déterminé par un angle et une distance. Ce système est particulièrement utile dans les situations où la relation entre deux points est plus facile à exprimer en termes d’angle et de distance, voir par exemple le pendule.</div><br>
Nous allons donc représenter les points dans notre modèle à l'aide d'un angle et d'une distance par rapport au centre. L'utilisateur, lui, n'aura accès qu'aux coordonnées cartésiennes données par l'abscisse (largeur) et l'ordonnée (hauteur).<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">Point</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Classe permettant la création de points dans un plan.</span>
<span class="sd">    """</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Constructeur de Point.</span>
<span class="sd">        x : Abscisse du point.</span>
<span class="sd">        y : Ordonnée du point.</span>
<span class="sd">        """</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">rho</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">x</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">y</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">x</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">theta</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">atan</span><span class="p">(</span><span class="n">y</span><span class="o">/</span><span class="n">x</span><span class="p">)</span>
        <span class="k">else</span> <span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">theta</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">2</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h3>Accesseurs et mutateurs</h3><br>
Afin de respecter le principe d'encapsulation, les attributs de nos objets ne doivent pas être accessibles directement. En Python, il n'existe aucun moyen d'empêcher l'utilisateur d'y accéder directement sauf en les nommant de façon très lourde voire incompréhensible et de façon non documentée. En général, cela dissuade assez vite mais nous allons espérer que les utilisateurs de nos classes souhaitent respecter le principe d'encapsulation. <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"> Pour rendre la manipulation des attributs tout de même possible, il existe ce que l'on appelle des <strong>accesseurs</strong> et des <strong>mutateurs</strong>.<br>
<br>
Par convention, tous les accesseurs doivent avoir un nom commençant par <strong>get</strong> (obtenir) et tous les mutateurs par <strong>set</strong> (attribuer). Ainsi, dans l'exemple du point en coordonnées polaires, on peut rajouter des accesseurs et des mutateurs.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">math</span>

<span class="k">class</span> <span class="nc">Point</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Classe permettant la création de points dans un plan.</span>
<span class="sd">    """</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Constructeur de Point.</span>
<span class="sd">        x : Abscisse du point.</span>
<span class="sd">        y : Ordonnée du point.</span>
<span class="sd">        """</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">rho</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">x</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">y</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">x</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">theta</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">atan</span><span class="p">(</span><span class="n">y</span><span class="o">/</span><span class="n">x</span><span class="p">)</span>
        <span class="k">else</span> <span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">theta</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">2</span>

    <span class="k">def</span> <span class="nf">getX</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Accesseur de l'abscisse du point.</span>
<span class="sd">        Retourne : L'abscisse du point.</span>
<span class="sd">        """</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">rho</span> <span class="o">*</span> <span class="n">math</span><span class="o">.</span><span class="n">cos</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">theta</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">getY</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Accesseur de l'ordonnée du point.</span>
<span class="sd">        Retourne : L'ordonnée du point.</span>
<span class="sd">        """</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">rho</span> <span class="o">*</span> <span class="n">math</span><span class="o">.</span><span class="n">sin</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">theta</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">setX</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Mutateur de l'abscisse du point.</span>
<span class="sd">        x : Le nouvel abscisse du point.</span>
<span class="sd">        """</span>
        <span class="n">y</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">getY</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">rho</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">x</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">y</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">x</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">theta</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">atan</span><span class="p">(</span><span class="n">y</span> <span class="o">/</span> <span class="n">x</span><span class="p">)</span>
        <span class="k">else</span> <span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">theta</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">pi</span><span class="o">/</span><span class="mi">2</span>

    <span class="k">def</span> <span class="nf">setY</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Mutateur de l'ordonnée du point.</span>
<span class="sd">        x : La nouvelle ordonnée du point.</span>
<span class="sd">        """</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">getX</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">rho</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">y</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">x</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">getX</span><span class="p">()</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">theta</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">atan</span><span class="p">(</span><span class="n">y</span> <span class="o">/</span> <span class="n">x</span><span class="p">)</span>
        <span class="k">else</span> <span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">theta</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">pi</span><span class="o">/</span><span class="mi">2</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans cet exemple, mon modèle de point est en coordonnées polaires mais toute l'interface que je présente à l'utilisateur via les accesseurs et les mutateurs montre un point en coordonnées cartésiennes. Vous voyez donc ici, qu'il est tout à fait possible que le modèle réellement implémenté dans un objet ne corresponde pas du tout à ce à quoi vous accédez. J'ai volontairement pris cet exemple qui paraît compliqué alors que ce n'est pas nécessaire pour illustrer l'encapsulation.<br>
<br>
<div class="rmq information">Pour les non matheux, <span class="italique">sqrt()</span> (square root) retourne la racine carrée d'un nombre et <span class="italique">atan()</span> retourne un angle en radian à partir d'un nombre (ici le rapport entre le côté opposé et le côté contigu de l'angle sur lequel on travaille dans le triangle formé par le centre, le point et la projection sur l'axe horizontal du point...).</div><br>
Maintenant, regardons de plus près ce que je fais. Toutes les fonctions que je définis ici prennent pour premier argument <span class="italique">self</span>. <strong>Toutes les méthodes d'instance prennent <span class="italique">self</span> pour premier argument, c'est ainsi qu'elles sont définies</strong>. Elles seront donc forcément associées à une instance de la classe. Pour y faire appel, il faudra alors utiliser la notation pointée.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">point</span> <span class="o">=</span> <span class="n">Point</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">point</span><span class="o">.</span><span class="n">getX</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">point</span><span class="o">.</span><span class="n">getY</span><span class="p">())</span>
<span class="n">point</span><span class="o">.</span><span class="n">setX</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span>
<span class="n">point</span><span class="o">.</span><span class="n">setY</span><span class="p">(</span><span class="mf">23.4</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">point</span><span class="o">.</span><span class="n">getX</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">point</span><span class="o">.</span><span class="n">getY</span><span class="p">())</span>
</pre></div>
</td></tr></tbody></table></div><br>
En essayant ce petit morceau de code, vous pouvez constater que l'utilisateur n'a aucune raison de penser que le Point est en réalité représenté en coordonnées polaires ! Le principe d'encapsulation est donc parfaitement respecté ici. Grâce aux accesseurs et aux mutateurs, j'offre à l'utilisateur une interface claire pour utiliser ma classe <span class="italique">Point</span>. Il peut alors utiliser sans soucis ma classe et sans avoir à connaître ma modélisation.<br>
<br>
<h3>Méthodes quelconques</h3><br>
Comme je l'ai dit précédemment, les accesseurs et les mutateurs sont des méthodes d'instance. Les autres méthodes d'instance se créent alors exactement de la même façon que les accesseurs et les mutateurs ! En déclarant une fonction dans une classe avec pour premier argument <span class="italique">self</span>, vous créez des méthodes d'instance applicables à vos objets. On peut par exemple rajouter des méthodes sur notre classe <span class="italique">Point</span>.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">.</span>
    <span class="k">def</span> <span class="nf">translater</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Translate le point de x en abscisse et de y</span>
<span class="sd">        en ordonnée.</span>
<span class="sd">        x = 0 : La projection sur l'axe horizontal de la</span>
<span class="sd">            translation à effectuer.</span>
<span class="sd">        y = 0 : La projection sur l'axe vertical de la</span>
<span class="sd">            translation à effectuer.</span>
<span class="sd">        """</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">setX</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">getX</span><span class="p">()</span> <span class="o">+</span> <span class="n">x</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">setY</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">getY</span><span class="p">()</span> <span class="o">+</span> <span class="n">y</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">centrer</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Centre le point.</span>
<span class="sd">        """</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">rho</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">theta</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="k">def</span> <span class="nf">calculerDistance</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">point</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Calcule la distance entre self et le</span>
<span class="sd">        point donné en argument.</span>
<span class="sd">        point : Un point dont on veut la distance par rapport</span>
<span class="sd">                à self.</span>
<span class="sd">        Retourne : La distance entre self et point.</span>
<span class="sd">        """</span>
        <span class="k">return</span> <span class="n">math</span><span class="o">.</span><span class="n">sqrt</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">getX</span><span class="p">()</span> <span class="o">-</span> <span class="n">point</span><span class="o">.</span><span class="n">getX</span><span class="p">())</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> \
                         <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">getY</span><span class="p">()</span> <span class="o">-</span> <span class="n">point</span><span class="o">.</span><span class="n">getY</span><span class="p">())</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous voyez que je crée effectivement des fonctions de la même manière que pour les accesseurs et les mutateurs. Seule la convention de nommage des méthodes change. Je fais d'ailleurs appel aux accesseurs à l'intérieur même de ma classe mais je n'y suis pas contraint. Par exemple, dans la méthode <span class="italique">centrer()</span>, j'accède directement aux attributs de l'objet. Cela ne viole en aucun cas le principe d'encapsulation car je suis toujours dans la définition de la classe <span class="italique">Point</span>. Pour appeler ces méthodes, cela fonctionne toujours pas la notation pointée que vous connaissez.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">point</span> <span class="o">=</span> <span class="n">Point</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="n">point</span><span class="o">.</span><span class="n">translater</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">point</span><span class="o">.</span><span class="n">getX</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">point</span><span class="o">.</span><span class="n">getY</span><span class="p">())</span>
<span class="n">point2</span> <span class="o">=</span> <span class="n">Point</span><span class="p">(</span><span class="mf">2.3</span><span class="p">,</span> <span class="mi">8</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">point</span><span class="o">.</span><span class="n">calculerDistance</span><span class="p">(</span><span class="n">point2</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">point</span><span class="o">.</span><span class="n">calculerDistance</span><span class="p">(</span><span class="n">point</span><span class="p">))</span>
</pre></div>
</td></tr></tbody></table></div>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Vous savez créer des classes de base. Nous allons voir par la suite que les classes peuvent aussi être utilisées pour stocker de l'information avec les attributs et les méthodes statiques ! Nous apprendrons aussi à faire en sorte que vos classes puissent être utilisées comme des types intégrés !
	</div>
	
	<hr>
	<h1 id="chap_285270">Créer des objets (2/2)</h1>
	<div id="chap_intro">
	Vous savez créer des classes et les instancier mais ce n'est pas suffisant. Pour rendre vos programmes encore mieux structurés, vous allez apprendre à utiliser vos objets comme de vrais types intégrés !<br>
<br>
Pour cela, nous aborderons :<br>
<ul>
<li>La composition pour utiliser des objets dans vos objets</li>
<li>Les attributs et les méthodes de classe pour se rapprocher de la programmation modulaire</li>
<li>La surcharge des opérateurs pour simuler des types intégrés</li>
</ul>Ca a l'air sympathique hein ? Bien entendu, ce que vous apprendrez ici n'est en rien obligatoire pour faire de la POO mais cela vous sera certainement très utile pour la suite alors soyez attentifs ! Les deux du fond de la classe, c'est la première et dernière fois que je vous rappelle à l'ordre ! <img src="./Langage Python_files/mechant.png" alt=":colere2:" class="smilies"> 
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_285267">Composition</h2>
		<div class="ss_part_texte">
		La composition consiste en l'utilisation d'objets en tant qu'attribut d'objets... En clair, vous pouvez utiliser vos objets comme des types de variable habituelle ! Dans la culture web, cela pourrait s'exprimer ainsi :<br>
<br>
<div class="centre"><a href="http://uploads.siteduzero.com/files/246001_247000/246976.jpg"><img src="./Langage Python_files/246976.jpg" alt="Yo dawg" title="Yo dawg"></a></div><br>
Concrètement, à quoi cela peut-il servir ? Et bien vous pouvez créer un modèle entièrement objet sans aucun problème. Prenons l'exemple d'un livre. C'est un objet. Il est lui-même composé de différents objets, la couverture et les pages. Avec la composition, vous pouvez créer des relations entre objets du type "appartient à". Ainsi, les pages appartiennent à un livre.<br>
<br>
Dans la pratique, on pourrait avoir quelque chose de cette forme :<br>
<br>
<span class="code">Code : Python - Classe Page - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">Page</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Objet page contenant un texte.</span>
<span class="sd">    """</span>
	
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">texte</span><span class="p">,</span> <span class="n">numero</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Constructeur de page.</span>
<span class="sd">        texte : Le texte de la page.</span>
<span class="sd">        numero : Le numéro de page.</span>
<span class="sd">        """</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">texte</span> <span class="o">=</span> <span class="n">texte</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">numero</span> <span class="o">=</span> <span class="n">numero</span>
		
    <span class="k">def</span> <span class="nf">lirePage</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Affiche le contenu de la page.</span>
<span class="sd">        """</span>
        <span class="k">print</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">texte</span><span class="p">)</span>
		
    <span class="k">def</span> <span class="nf">getNumero</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Accesseur du numéro de page.</span>
<span class="sd">        Retourne : Le numéro de page.</span>
<span class="sd">        """</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">numero</span>
		
    <span class="k">def</span> <span class="nf">getTexte</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Accesseur du texte de la page.</span>
<span class="sd">        Retourne : Le texte de la page.</span>
<span class="sd">        """</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">texte</span>
</pre></div>
</td></tr></tbody></table></div><br>
<span class="code">Code : Python - Classe Livre - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">Livre</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Modélisation d'un livre.</span>
<span class="sd">    """</span>
	
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">texte</span><span class="p">,</span> <span class="n">titre</span><span class="p">,</span> <span class="n">auteur</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Constructeur du livre.</span>
<span class="sd">        texte : Le contenu du livre.</span>
<span class="sd">        titre : Le titre du livre.</span>
<span class="sd">        auteur : L'auteur du livre.</span>
<span class="sd">        """</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">titre</span> <span class="o">=</span> <span class="n">titre</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">auteur</span> <span class="o">=</span> <span class="n">auteur</span>
        <span class="c">#Création des pages (10 lignes par page) :</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="n">nbLignes</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">page</span> <span class="o">=</span> <span class="s">""</span>
        <span class="n">numero</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">for</span> <span class="n">ligne</span> <span class="ow">in</span> <span class="n">texte</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span> <span class="p">:</span>
            <span class="n">page</span> <span class="o">+=</span> <span class="n">ligne</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span>
            <span class="n">nbLignes</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">if</span> <span class="n">nbLignes</span> <span class="o">==</span> <span class="mi">10</span> <span class="p">:</span>
                <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">Page</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">numero</span><span class="p">))</span>
                <span class="n">nbLignes</span> <span class="o">=</span> <span class="mi">0</span>
                <span class="n">page</span> <span class="o">=</span> <span class="s">""</span>
                <span class="n">numero</span> <span class="o">+=</span> <span class="mi">1</span>
	
    <span class="k">def</span> <span class="nf">getPage</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">numero</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Accesseur des pages.</span>
<span class="sd">        numero : Le numéro de page, commence ‡ 1.</span>
<span class="sd">        """</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="n">numero</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
	
    <span class="k">def</span> <span class="nf">lirePage</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">numero</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Lire une page en particulier.</span>
<span class="sd">        numero : Le numéro de page, commence ‡ 1.</span>
<span class="sd">        """</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="n">numero</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">lirePage</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans cet exemple de livre, on utilise une liste de Pages comme attribut des Livres. Vous avez un excellent exemple de composition avec des Pages contenues dans un objet <span class="italique">list</span> lui-même contenu dans un objet Livre. Toutes les classes que vous créez peuvent être utilisées au même titre que les types de données intégrés au langage Python.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_285269">Attributs et méthodes de classe</h2>
		<div class="ss_part_texte">
		Les classes peuvent être utilisées comme des sortes de modules. Nous allons voir qu'il est possible d'y définir des variables et des fonctions qui pourront être utilisés comme ce que vous aviez fait jusqu'à maintenant avec des modules.<br>
<br>
<h3>Attributs de classe</h3><br>
Tout d'abord, il est possible de définir des attributs de classe qui ne seront pas associés à une instance en particulier mais à toute la classe. Toutes les instances partageront donc cet attribut. Pour créer de tels attributs, il suffit de les déclarer directement dans une classe.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">Test</span> <span class="p">:</span>
    <span class="sd">"""Doc"""</span>

    <span class="n">variableTest</span> <span class="o">=</span> <span class="mi">0</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq information">Pour les codeurs Java ou C++, ces attributs sont tout simplement des variables statiques.</div><br>
En faisant cela, on crée une variable globale au sein de la classe <span class="italique">Test</span>. Il est possible d'accéder à ce type d'attributs soit via la classe soit via une instance. Mais attention, d'une instance sur l'autre, la variable sera exactement la même ! Faisons un petit essai en shell.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="syntax"><pre><span class="o">&gt;&gt;&gt;</span> <span class="k">class</span> <span class="nc">Test</span> <span class="p">:</span>
	<span class="n">variable</span> <span class="o">=</span> <span class="mi">0</span>

	
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span> <span class="o">=</span> <span class="n">Test</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">Test</span><span class="o">.</span><span class="n">variable</span>
<span class="mi">0</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span><span class="o">.</span><span class="n">variable</span>
<span class="mi">0</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">Test</span><span class="o">.</span><span class="n">variable</span> <span class="o">+=</span> <span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span><span class="o">.</span><span class="n">variable</span>
<span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">Test</span><span class="o">.</span><span class="n">variable</span>
<span class="mi">1</span>
</pre></div>
</td></tr></tbody></table></div><br>
Je déclare ici ma classe de test. J'instancie cette classe puis accède à la variable de classe via la classe puis via une instance. Vous pouvez remarquer qu'ensuite je modifie la valeur de cette variable en y accédant via la classe mais la valeur est bel et bien modifiée aussi pour l'instance ! C'est donc bien un attribut de classe !<br>
<br>
<div class="rmq attention">En permettant l'accès des attributs de classe via une instance, Python crée une ambiguïté sur les noms des attributs de classe et d'instance. L'interpréteur ne pourra différencier ces deux types d'attributs ! Essayez donc de toujours donner des noms différents aux attributs de classe et aux attributs d'instance ! Cela vous évitera quelques crises de nerfs...</div><br>
L'intérêt de ces attributs réside principalement dans la définition de constantes qui peuvent être utilisées dans la classe ou à l'extérieur. Par exemple, dans le jeu de la vie, j'ai défini une liste des formes possibles. Un attribut de classe est un excellent moyen de proposer une liste de constantes correspondant à une liste de choix possibles. Mais ces attributs peuvent aussi être utilisés pour donner la version du programme, compter le nombre d'instances créées et encore bien d'autres choses !<br>
<br>
<h3>Méthodes de classe</h3><br>
Comme il est possible de définir des attributs de classe, il est possible de définir des méthodes de classe. Ces fonctions sont exactement l'équivalent sous forme de fonction des attributs de classe. Elles pourront être appelées soit via une instance soit via la classe. Une telle fonction prend comme premier argument non pas une instance mais une classe. En général, cet argument sera nommé <span class="italique">cls</span>. Pour en déclarer il faut faire :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">Test</span> <span class="p">:</span>
    <span class="sd">"""Doc"""</span>

    <span class="k">def</span> <span class="nf">fonction</span><span class="p">(</span><span class="n">cls</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""Doc"""</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Je suis une méthode de classe !"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"J'appartiens à la classe </span><span class="si">%s</span><span class="s">"</span> <span class="o">%</span> <span class="n">cls</span><span class="o">.</span><span class="n">__name__</span><span class="p">)</span>
    
    <span class="n">fonction</span> <span class="o">=</span> <span class="nb">classmethod</span><span class="p">(</span><span class="n">fonction</span><span class="p">)</span>

<span class="n">t</span> <span class="o">=</span> <span class="n">Test</span><span class="p">()</span>
<span class="n">t</span><span class="o">.</span><span class="n">fonction</span><span class="p">()</span>
<span class="n">Test</span><span class="o">.</span><span class="n">fonction</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Dans cet exemple, je déclare une fonction que je dois ensuite déclarer comme étant un attribut de classe. Mais c'est un attribut de classe particulier qui peut être appelé. Pour rendre cela possible, j'utilise la fonction intégrée <span class="italique">classmethod()</span> qui s'applique à une fonction et qui permet de préciser que l'attribut sera bel et bien une fonction de classe. De cette manière, je peux ensuite appeler la fonction via la classe ou via une instance.<br>
<br>
Vous remarquerez d'ailleurs que je fais appel à <a href="http://docs.python.org/py3k/library/stdtypes.html?highlight=class.__name__#class.__name__">un attribut spécial</a> de ma classe : <span class="italique">__name__</span>. Toutes les classes possèdent un ensemble d'attributs spécifiques contenant certaines informations à leur sujet. Vous trouverez tout ce qu'il y a à savoir là-dessus dans la documentation.<br>
<br>
<div class="rmq attention">Comme pour les attributs de classe, l'interpréteur ne fera pas la différence entre une méthode d'instance et une méthode de classe... Ne donnez donc pas le même nom à vos fonctions même si elles ne sont pas du même type ! Cela vous évitera de belles erreurs...</div><br>
<h3>Méthodes statiques</h3><br>
<br>
Les méthodes statiques seront appelées de la même manière que les méthodes de classe mais ne prennent aucun argument obligatoire. Leur déclaration est relativement similaire aux méthodes de classe puisque la seule différence réside dans le fait d'appeler la fonction intégrée <span class="italique">staticmethod()</span> au lieu de <span class="italique">classmethod()</span>.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">Test</span> <span class="p">:</span>
    <span class="sd">"""Doc"""</span>

    <span class="k">def</span> <span class="nf">fonction</span><span class="p">()</span> <span class="p">:</span>
        <span class="sd">"""Doc"""</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Je suis une fonction statique !"</span><span class="p">)</span>
    
    <span class="n">fonction</span> <span class="o">=</span> <span class="nb">staticmethod</span><span class="p">(</span><span class="n">fonction</span><span class="p">)</span>

<span class="n">Test</span><span class="o">.</span><span class="n">fonction</span><span class="p">()</span>
<span class="n">t</span> <span class="o">=</span> <span class="n">Test</span><span class="p">()</span>
<span class="n">t</span><span class="o">.</span><span class="n">fonction</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table></div><br>
Avec cet exemple, vous pouvez constater que les deux types d'appels fonctionnent. La seule différence est donc bien dans le fait que les méthodes statiques ne prennent pas pour premier argument une classe.<br>
<br>
Avec les attributs et les méthodes de classe, vous pouvez faire de vos classes de véritables modules ! Cela vous permet ainsi de créer des ensembles cohérents de données et de fonctions tous organisés autour d'un même thème représenté par la classe. Pour ceux qui ont l'habitude de ne programmer qu'en objet, vous ne serez donc pas déboussolés.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_285265">Surcharge des opérateurs</h2>
		<div class="ss_part_texte">
		Dans la plupart des langages objets, il est possible de surcharger les opérateurs. Mais d'abord, qu'est-ce que cela veut dire ? La surcharge des fonctions (<span class="italique">override</span> en anglais) consiste en la réécriture de celle-ci pour modifier leur comportement. Dans notre cas, ce qui va nous intéresser, c'est la surcharge des opérateurs intégrés tels que l'addition, la soustraction, la conversion en chaîne de caractères etc...<br>
<br>
<div class="rmq erreur">Mais euh, comment je peux réécrire ces fonctions si elles ne le sont pas de base ?! Quand je crée un objet, je ne peux pas en additionner plusieurs !  <img src="./Langage Python_files/huh.png" alt=":o" class="smilies"> </div><br>
Et c'est là toute la magie de Python. Tous les objets que vous créez peuvent en fait surcharger des méthodes qui ne sont pas implémentées explicitement. D'ailleurs vous le faites déjà lorsque vous écrivez la méthode <span class="italique">__init__()</span>. En réalité, vous la surchargez pour qu'elle ne fasse pas rien.<br>
<br>
Maintenant que l'on sait que l'on peut surcharger les opérateurs, comment ça marche ? Et bien, si vous regardez <a href="http://docs.python.org/py3k/reference/datamodel.html">la documentation à ce sujet</a>, vous pouvez remarquer qu'il existe pas mal de choses. En effet, il est possible d'émuler des conteneurs tels que les listes mais aussi des types numériques. Toutes les fonctions à surcharger sont entourées d'un double espace souligné (underscore, '_') et portent toutes un nom plus ou moins explicite du moment que l'on parle anglais.<br>
<br>
Pour l'exemple, nous allons créer une classe pour représenter les temps et nous essayerons d'effectuer les opérations de base sur celle-ci. Commençons par déclarer une classe Temps.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">Temps</span> <span class="p">:</span>
    <span class="sd">"""</span>
<span class="sd">    Classe permettant de créer des temps.</span>
<span class="sd">    """</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">temps</span><span class="p">)</span> <span class="p">:</span>
        <span class="sd">"""</span>
<span class="sd">        Constructeur de temps !</span>
<span class="sd">        temps : Le temps en secondes.</span>
<span class="sd">        """</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">temps</span> <span class="o">=</span> <span class="n">temps</span>
</pre></div>
</td></tr></tbody></table></div><br>
Maintenant que l'on peut créer des temps, nous allons essayer de les afficher correctement en surchargeant la méthode les convertissant en chaîne de caractères. Cette méthode, c'est <span class="italique">__str__() (string)</span> et c'est elle qui est automatiquement appelée lorsque vous utilisez une variable dans <span class="italique">print()</span> ou <span class="italique">input()</span> pour l'afficher dans la console. Elle doit donc retourner une chaîne de caractères.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">""" Surcharge de la conversion en chaîne de caractères."""</span>
    <span class="n">jour</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">temps</span><span class="o">//</span><span class="mi">86400</span>
    <span class="n">heures</span> <span class="o">=</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">temps</span><span class="o">%</span><span class="mi">86400</span><span class="p">)</span><span class="o">//</span><span class="mi">3600</span>
    <span class="n">minutes</span> <span class="o">=</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">temps</span><span class="o">%</span><span class="mi">3600</span><span class="p">)</span><span class="o">//</span><span class="mi">60</span>
    <span class="n">secondes</span> <span class="o">=</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">temps</span><span class="o">%</span><span class="mi">60</span><span class="p">)</span>
    <span class="n">texte</span> <span class="o">=</span> <span class="s">""</span>
    <span class="k">if</span> <span class="n">jour</span> <span class="p">:</span>
        <span class="n">texte</span> <span class="o">+=</span> <span class="s">"</span><span class="si">%i</span><span class="s">j"</span> <span class="o">%</span> <span class="n">jour</span>
    <span class="k">if</span> <span class="n">heures</span> <span class="p">:</span>
        <span class="n">texte</span> <span class="o">+=</span> <span class="s">"</span><span class="si">%i</span><span class="s">h"</span> <span class="o">%</span> <span class="n">heures</span>
    <span class="k">if</span> <span class="n">minutes</span> <span class="p">:</span>
        <span class="n">texte</span> <span class="o">+=</span> <span class="s">"</span><span class="si">%i</span><span class="s">min"</span> <span class="o">%</span> <span class="n">minutes</span>
    <span class="n">texte</span> <span class="o">+=</span> <span class="s">"</span><span class="si">%i</span><span class="s">s"</span> <span class="o">%</span> <span class="n">secondes</span>
    <span class="k">return</span> <span class="n">texte</span>
</pre></div>
</td></tr></tbody></table></div><br>
Avec cette fonction, dès que vos temps devront être convertis en chaîne de caractères, ils le seront automatiquement avec un appel de la fonction <span class="italique">__str__()</span>. Le petit test tout simple consiste à créer plusieurs temps et à essayer de les afficher dans la console.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">liste</span> <span class="o">=</span> <span class="p">[</span><span class="n">Temps</span><span class="p">(</span><span class="mi">12</span><span class="p">),</span> <span class="n">Temps</span><span class="p">(</span><span class="mi">342</span><span class="p">),</span> <span class="n">Temps</span><span class="p">(</span><span class="mi">8456</span><span class="p">),</span> <span class="n">Temps</span><span class="p">(</span><span class="mi">2348509</span><span class="p">)]</span>
<span class="k">for</span> <span class="n">temps</span> <span class="ow">in</span> <span class="n">liste</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">temps</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous devriez constater que vos temps s'affichent de la manière dont nous l'avons défini dans la fonction <span class="italique">__str__()</span>. Si c'est le cas, c'est que tout a bien fonctionné ! Voyons maintenant si l'on peut comparer des temps. Nous allons surcharger les méthodes de comparaison. Ici, ce ne sera pas très compliqué. Les méthodes à surcharger sont <span class="italique">__lt__()</span> (<span class="italique">Lower Than</span>, plus petit que), <span class="italique">__le__()</span> (<span class="italique">Lower or Equal</span>, plus petit ou égal), etc...<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">__lt__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">autre</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Surcharge de &lt;"""</span>
    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">temps</span> <span class="o">&lt;</span> <span class="n">autre</span><span class="o">.</span><span class="n">temps</span>

<span class="k">def</span> <span class="nf">__le__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">autre</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Surcharge de &lt;="""</span>
    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">temps</span> <span class="o">&lt;=</span> <span class="n">autre</span><span class="o">.</span><span class="n">temps</span>

<span class="k">def</span> <span class="nf">__eq__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">autre</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Surcharge de =="""</span>
    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">temps</span> <span class="o">==</span> <span class="n">autre</span><span class="o">.</span><span class="n">temps</span>

<span class="k">def</span> <span class="nf">__ne__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">autre</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Surcharge de !="""</span>
    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">temps</span> <span class="o">!=</span> <span class="n">autre</span><span class="o">.</span><span class="n">temps</span>

<span class="k">def</span> <span class="nf">__gt__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">autre</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Surcharge de &gt;"""</span>
    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">temps</span> <span class="o">&gt;</span> <span class="n">autre</span><span class="o">.</span><span class="n">temps</span>

<span class="k">def</span> <span class="nf">__ge__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">autre</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Surcharge de &gt;="""</span>
    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">temps</span> <span class="o">&gt;=</span> <span class="n">autre</span><span class="o">.</span><span class="n">temps</span>
</pre></div>
</td></tr></tbody></table></div><br>
Avec le modèle choisi pour représenté les temps, la comparaison est assez triviale puisqu'il suffit de comparer les deux temps proprement dits. Sachez que vous auriez pu créer une classe Temps où vous auriez stocké les jours, les heures, les minutes et les secondes séparément. La comparaison n'aurait donc pas été directe. Ceci étant fait, vous pouvez maintenant utiliser les opérateurs de comparaison sur vos temps comme s'ils étaient des types intégrés au langage Python. Cela vous permettra de simplifier vos codes en écrivant des opérations simples sur vos objets plutôt qu'en faisant des appels de fonctions habituels. Vous pouvez faire quelques petits tests.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">liste</span> <span class="o">=</span> <span class="p">[</span><span class="n">Temps</span><span class="p">(</span><span class="mi">12</span><span class="p">),</span> <span class="n">Temps</span><span class="p">(</span><span class="mi">342</span><span class="p">),</span> <span class="n">Temps</span><span class="p">(</span><span class="mi">8456</span><span class="p">),</span> <span class="n">Temps</span><span class="p">(</span><span class="mi">2348509</span><span class="p">)]</span>
<span class="k">print</span><span class="p">(</span><span class="s">"12s &lt; 342s : </span><span class="si">%s</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">liste</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">liste</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"12s &gt; 342s : </span><span class="si">%s</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">liste</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">liste</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span>
</pre></div>
</td></tr></tbody></table></div><br>
Avec ces exemples, vous avez vu qu'il est possible de surcharger les opérateurs de comparaison et de conversion de type avec <span class="italique">__str__()</span> par exemple. Il est aussi possible de surcharger les opérations de base comme l'addition ou la soustraction.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">__add__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">autre</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Surcharge de +"""</span>
    <span class="k">return</span> <span class="n">Temps</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">temps</span> <span class="o">+</span> <span class="n">autre</span><span class="o">.</span><span class="n">temps</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">__sub__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">autre</span><span class="p">)</span> <span class="p">:</span>
    <span class="sd">"""Surcharge de -"""</span>
    <span class="k">return</span> <span class="n">Temps</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">temps</span> <span class="o">-</span> <span class="n">autre</span><span class="o">.</span><span class="n">temps</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ainsi, vous pouvez maintenant additionner ou soustraire des temps sans aucun souci ! Vous pouvez d'ailleurs utiliser la syntaxe simplifiée '+=' ou '-=' comme avec les types intégrés de Python si vous avez surchargé les opérations concernées.<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">liste</span> <span class="o">=</span> <span class="p">[</span><span class="n">Temps</span><span class="p">(</span><span class="mi">12</span><span class="p">),</span> <span class="n">Temps</span><span class="p">(</span><span class="mi">342</span><span class="p">),</span> <span class="n">Temps</span><span class="p">(</span><span class="mi">8456</span><span class="p">),</span> <span class="n">Temps</span><span class="p">(</span><span class="mi">2348509</span><span class="p">)]</span>
<span class="n">temps</span> <span class="o">=</span> <span class="n">liste</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">liste</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">temps</span><span class="p">)</span>
<span class="n">temps</span> <span class="o">+=</span> <span class="n">Temps</span><span class="p">(</span><span class="mi">5668</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">temps</span><span class="p">)</span>
</pre></div>
</td></tr></tbody></table></div><br>
J'espère que vous comprenez l'intérêt de la surcharge des opérateurs. Cela vous permettra de simplifier votre code et de le rendre plus lisible lorsque vous devez utiliser couramment des opérations simples. Cependant, vous êtes laissé entièrement libre sur l'implémentation des opérateurs. Vous pouvez créer de véritables fonctions mais essayez de faire en sorte qu'elles soient instinctives et correspondent au symbole que vous utilisez si vous ne voulez pas perdre l'utilisateur de vos classes voire vous-même !<br>
<br>
Si vous voulez émuler des conteneurs du type des listes ou des dictionnaires, vous devriez lire la partie appelée "Emulating containers types" de <a href="http://docs.python.org/py3k/reference/datamodel.html">la documentation</a>. Vous y trouverez de quoi surcharger les méthodes d'accès aux éléments par indice ou clé par exemple.
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Vous savez maintenant utiliser créer des classes et les utiliser de façon basique. Avant de passer à la suite dans la POO, je vous propose un petit TP facile pour vous exercer !
	</div>
	
<div>
<br>
<div class="rmq attention">Partie en chantier !</div><br>
<br>
La programmation orientée objet n'a maintenant plus de secrets pour vous ! Mais avec une interface graphique, c'est pas mieux ? Si, et c'est pour ça que la prochaine partie va vous les introduire (je vous y prends bande de petits cochons  <img src="./Langage Python_files/langue.png" alt=":p"> ) !
</div>

<hr>
<h2>Partie 4 : Annexes</h2>
<div>

</div>
	
	<hr>
	<h1 id="chap_278262">Des bonnes pratiques</h1>
	<div id="chap_intro">
	Cette petite partie est consacrée aux bonnes habitudes à prendre lorsque l'on programme pour rendre son code compréhensible par d'autres programmeurs mais aussi par soi-même lorsque l'on revient après plusieurs mois sur un code que l'on a fait. Ce sera rapide, mais quelques petits rappels ne font jamais de mal !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278259">Nommer</h2>
		<div class="ss_part_texte">
		<h3>Des noms explicites...</h3><br>
La première chose très importante pour rendre son code lisible est d'utiliser des noms explicites pour vos variables (non pas explicite dans ce sens là...). J'entends par là, que tout les noms que vous utilisez doivent être parlants ! Par exemple, utiliser des noms de hamburger ne vous aidera pas vraiment à comprendre le fonctionnement du code lorsque vous le relirez... Bien sûr, ça peut être très bien si vous modéliser un fast food...<br>
<br>
<div class="rmq information">Vous n'êtes pas limité dans le nombre de caractères pour les noms de variables ou de fonctions...</div><br>
Prenons un petit exemple simple, essayez de deviner ce que fais le code ci-dessous. Il est écrit une fois avec des noms débiles, et une fois avec des vrais noms de variables :<br>
<br>
<span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">peuh</span><span class="p">(</span><span class="n">var</span><span class="p">)</span> <span class="p">:</span>
	<span class="n">cheeseburger</span> <span class="o">=</span> <span class="mi">0</span>
	<span class="k">if</span> <span class="n">var</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">:</span>
		<span class="n">cheeseburger</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">math</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">var</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>
	<span class="k">if</span> <span class="n">cheeseburger</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="p">:</span>
		<span class="n">cheeseburger</span> <span class="o">-=</span> <span class="mi">1</span>
	<span class="k">return</span> <span class="n">cheeseburger</span>

<span class="k">print</span><span class="p">(</span><span class="n">peuh</span><span class="p">(</span><span class="mf">0.0003843</span><span class="p">))</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code">Code : Python - <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 python"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">def</span> <span class="nf">getPower</span><span class="p">(</span><span class="n">number</span><span class="p">)</span> <span class="p">:</span>
	<span class="sd">"""</span>
<span class="sd">	Return the 10 power of the number given in argument.</span>
<span class="sd">	number : the number to test.</span>
<span class="sd">	"""</span>
	<span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>
	<span class="k">if</span> <span class="n">number</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">:</span>
		<span class="n">result</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">math</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">number</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>
	<span class="k">if</span> <span class="n">result</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="p">:</span>
		<span class="n">result</span> <span class="o">-=</span> <span class="mi">1</span>
	<span class="k">return</span> <span class="n">result</span>

<span class="k">print</span><span class="p">(</span><span class="n">getPower</span><span class="p">(</span><span class="mf">0.0003843</span><span class="p">))</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
<br>
<h3>De la normalisation...</h3><br>
Un autre excellent moyen de rendre son code compréhensible est de garder toujours les mêmes normes de nommage des variables et des fonctions. Ainsi, j'utilise la norme suivante :<br>
<ul>
<li>Tous les noms de variables et de fonctions commencent par un lettre minuscule</li>
<li>Les noms de variables et de fonctions ne sont composés que de lettres et de chifffres</li>
<li>Chaque mot au sein d'un nom prend une majuscule (sauf le premier)</li>
<li>Les noms des constantes sont écrits uniquement en majuscules</li>
</ul><br>
La norme à utiliser est libre mais doit être constante pour rendre le code plus lisible et facilement compréhensible.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278281">Documenter</h2>
		<div class="ss_part_texte">
		C'est peut-être le point le plus important de tous ! Si votre code est bien documenté, alors il n'est pas nécessaire de lire autre chose que la documentation pour l'utiliser ! La devise d'une très grande entreprise d'informatique est : <br>
<br>
<span class="citation">Citation</span><div class="citation2"><span class="italique">Si vous n'êtes pas capable de comprendre un code en ne lisant que sa documentation, c'est qu'il est bon à jeter...</span></div> <br>
Donc faites plaisir aux gens qui vous reliront et à vous-même en documentant du mieux possible vos codes. Pour générer la documentation au format html par exemple, il existe différents programmes:<br>
<ul>
<li><strong>Pydoc</strong> : programme officiel générateur de documentation</li>
<li><strong>Doxygen </strong>: générateur de documentation pour tous les codes prenant en compte différents formats de documentation (j'ai un faible pour celui-ci <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"> )</li>
<li>Et bien d'autres encore...</li>
</ul><br>
Ce genre de documentation vous permet de comprendre rapidement le fonctionnement d'objets ou de modules. Doxygen génère notamment les arbres d'héritage si nécessaire, ce qui est relativement pratique pour avoir une vue d'ensemble d'une bibliothèque...
		</div>
		<hr>
		
	<div id="chap_conclusion">
	
	</div>
	
	<hr>
	<h1 id="chap_278228">Références</h1>
	<div id="chap_intro">
	Vous pensez que je ne me suis aidé de rien du tout pour vous écrire un tutoriel complet qui ressemble à quelque chose ? Je ne pense pas cela aurait été possible sans d'excellentes références avec lesquelles j'ai moi-même appris à programmer ! Ici, vous trouverez tous les ouvrages ou presque j'ai pu utiliser (j'espère en faire une liste la plus exhaustive possible...) mais aussi les ressources web à connaître qui ne pourront que vous aider dans votre long périple au coeur de Python.
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278239">Livres</h2>
		<div class="ss_part_texte">
		Parce que nous avons souvent tendance à les délaisser alors qu'ils sont le plus souvent une référence incontournable, les livres sont capitaux lorsque l'on veut apprendre quelque chose. C'est en allant chez le libraire du coin que j'ai pu trouver mes premiers livres de programmation et j'espère que vous en ferez de même. Pour ma part, j'ai utilisé :<br>
<ul>
<li>Python : Le guide de survie, Brad Dayley (CampusPress, 16€)</li>
<li>Au coeur de Python (vol 1 et 2), Whesley J. Chun (CampusPress, 48€ et 35€)</li>
</ul><br>
<br>
Vous pouvez vous procurez ses bouquins sur internet ou chez n'importe quel libraire !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278252">Ressources web</h2>
		<div class="ss_part_texte">
		Programmer sans internet c'est un peu comme vouloir taper au clavier sans main, c'est difficile... C'est donc aussi grâce à des ressources web que j'ai pu apprendre à programmer et écrire ce tutoriel. Les ressources que j'ai utilisées sont donc :<br>
<ul>
<li>Apprendre à programmer en Python, Gérard Swinnen : cours complet trouvable en format pdf sur le web</li>
<li>Developpez.net : cours et forum de discussion pour les programmeurs</li>
<li>Commentcamarche.net : parce qu'il est rare d'avoir un problème auquel personne n'ait répondu</li>
</ul><br>
<br>
Et il y en a bien d'autres que j'ai pu utiliser ponctuellement pour des idées d'exercices ou pour trouver des réponses à des problèmes spécifiques.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_278273">Quelques idées d'application</h2>
		<div class="ss_part_texte">
		Savoir programmer, c'est bien beau mais il faut bien trouver quelque chose à programmer ! Pour ça, je vous suggère quelques lectures intéressantes que j'ai pu avoir voire que j'ai encore (et oui... Je n'ai pas forcément le temps de ne faire que de l'informatique... <img src="./Langage Python_files/langue.png" alt=":p" class="smilies"> ). Donc, voici quelques références sympathiques qui peuvent vous donner des idées :<br>
<ul>
<li>Intelligence artificielle, S. Russel et P. Norvig (Pearson Education, 72€)</li>
<li>Techniques de hacking, Jon Erickson (Pearson, 32€)</li>
</ul><br>
J'espère que cela vous inspirera et que cela vous occupera pour un bout de temps !
		</div>
		<hr>
		
	<div id="chap_conclusion">
	
	</div>
	
<div>
<br>

</div>


<hr>

<div id="btuto_conclusion">
	Ce tutoriel n'est pas encore terminé, loin de là ! Sa construction ne fait que commencer et je vais profiter d'un peu de temps libre durant mes vacances pour essayer de l'avancer au plus vite... Alors soyez patients, entraînez-vous au maximum et revenez jeter un coup d'oeil de temps en temps !<br>
<br>
Dans la partie programmation orientée objet vous verrez :<br>
 - Ce qu'est un objet<br>
 - Que vous savez déjà les utiliser<br>
 - Comment les créer vous-même<br>
 - L'héritage et le polymorphisme<br>
 - Le tout accompagné d'exemples et de TP !<br>
<br>
Dans la partie sur l'introduction aux GUI, vous verrez :<br>
 - Ce qu'est une GUI<br>
 - Comment en créer avec Tkinter<br>
 - La programmation évènementielle<br>
 - Comment créer ses propres composants graphiques<br>
 - Une petite intro à PyGTK et à PyQt<br>
 - Et bien sûr toujours des exercices et des TP<br>
<br>
Dans la partie sur les modules de base, vous verrez :<br>
 - Quelques fonctionnalités avancées du langage Python<br>
 - La gestion du temps dans vos applications<br>
 - La gestion des bases de données en Python<br>
 - La gestion du multithreading<br>
 - Etc...<br>
<br>
Dans la partie pour aller plus loin, il y aura des introductions à :<br>
 - PyGame<br>
 - SciPy et PyLab<br>
 - Panda3D<br>
 - Blender<br>
 - Etc...<br>
<br>
Le but de ce cours est donc d'être le plus complet possible en vous offrant la possibilité d'en apprendre un peu plus sur les possibilités de ce magnifique langage qu'est Python ! Bien entendu, tout ce cours est basé en grande partie sur les expériences que j'ai pu avoir avec ce langage et d'autres. J'espère qu'il vous sera utile !<br>
<br>
J'attends impatiemment vos commentaires pour l'améliorer !
</div>

<div class="clearer"></div>

<div class="infobox cadre_auteur_date" id="tuto_details">
  <form action="http://www.siteduzero.com/tutoriel-54-278227.html" method="post">
    <div class="dnone"><input type="hidden" value="7297721f270eb1023794efafd96f8c66acb25dcd" name="challenge"></div>

    <h3 class="special">Informations sur le tutoriel</h3>
   
    <div class="conteneur_infobox">
	<a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#onglets_tutos">Retour en haut <img src="./Langage Python_files/fleche_haut.png" alt="Retour en haut" title="Retour en haut"></a>
	<br>
   	<br>			
<strong>Créé</strong> : Le 26/06/2010 à 19:21:02<br>
<strong>Modifié</strong> : Le 22/07/2010 à 21:14:47<br>

<strong>Avancement</strong> : 10%<br>

<br>


<a href="http://www.siteduzero.com/tutoriel-50-278227-70993-langage-python.html#r70993">32 commentaires</a><br>

  <a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html">Revenir au sommaire du tutoriel</a><br>


    </div>
  </form>
</div>



                </div>
            </div>

            <div id="footer">
                <ul>
                    <li>
                        Le Site du Zéro
                        <ul>
                            <li><a href="http://www.siteduzero.com/plan.html">Plan du site</a></li>
                            <li><a href="http://www.siteduzero.com/membres-304.html">L'équipe</a></li>
                            <li><a href="http://www.siteduzero.com/mentions.html">Mentions légales</a></li>
                            <li><a href="http://www.siteduzero.com/accessibilite.html" accesskey="0">Accessibilité</a></li>
                            <li><a href="http://www.siteduzero.com/livreor.html">Livre d'or</a></li>
                            <li><a href="http://suggestions.siteduzero.com/"><img alt="logo_user_voice" src="./Langage Python_files/ico_uservoice.png"> Suggestions <img alt="Nouveau" src="./Langage Python_files/iconouveau.png"></a></li>
                        </ul>
                    </li>
                    <li>
                        Simple IT
                        <ul>
                            <li><a href="http://www.siteduzero.com/simpleit.html">Qui sommes-nous ? </a></li>
                            
                                <li><a href="http://www.siteduzero.com/formations.html">Formation professionnelle</a></li>
                                <li><a href="http://www.siteduzero.com/recrutement.html">Recrutement</a></li>
                            
                            <li><a href="http://www.simple-it.fr/blog/">Notre blog</a></li>
                        </ul>
                    </li>
                    <li>
                        Contacts
                        <ul>
                            <li><a href="http://www.siteduzero.com/publicite-440.html">Espace annonceurs</a></li>
                            <li><a href="http://www.siteduzero.com/presse.html">Espace presse</a></li>
                            <li><strong><a href="http://www.siteduzero.com/contact.html" accesskey="7">Nous contacter</a></strong></li>
                            <li><a href="http://www.siteduzero.com/promouvoir.html">Promouvoir le site</a></li>
                            <li><a href="http://suggestions.siteduzero.com/forums/97879-rapports-de-bugs">Signaler un bug</a></li>
                        </ul>
                    </li>
                    
                        <li>
                            Partenaires 
                            <ul>
                                <li><a href="http://www.planethoster.net/Site-du-Zero">Hébergement web</a></li>
                                <li><a href="http://www.zcorrecteurs.fr/">Correction tutoriels</a></li>
                            </ul>
                        </li>
                    
                    <li>
                        Suivez-nous
                        <ul class="dernier">
                            <li><a href="http://www.siteduzero.com/Templates/xml/news_fr.xml"><img src="./Langage Python_files/rss_mini.png" alt="Flux RSS"> Flux RSS News</a>, <a href="http://www.siteduzero.com/Templates/xml/tutoriels_fr.xml">Cours</a>, <a href="http://www.simple-it.fr/blog/index.php?feed/atom">Blog</a></li>
                            <li><a href="http://www.siteduzero.com/twitter.html"><img src="./Langage Python_files/twitter_mini.png" alt="Twitter"> Twitter</a></li>
                            <li><a href="http://www.facebook.com/siteduzero"><img src="./Langage Python_files/fb_mini.png" alt="Facebook"> Facebook</a></li>
                        </ul>
                    </li>
                </ul>

                
            </div>

            


            
            <script type="text/javascript" src="./Langage Python_files/scripts_lang.min.js"></script>
            <script type="text/javascript" src="./Langage Python_files/scripts.min.js"></script>
            <script type="text/javascript" src="./Langage Python_files/lib.min.js"></script>

            
                <script type="text/javascript">
    var addthis_config = {  ui_508_compliant: true,
                            ui_cobrand: "Site du Zéro",
                            ui_header_color: "#ffffff",
                            ui_header_background: "#7AB7FC",
                            username: "simpleit",
                            services_exclude: 'print,pdfonline,email,twitter,facebook,myspace,googlebuzz,blogger,buzz,live',
                            data_track_clickback: true  };
                        
    var addthis_share = {templates: { twitter:'{{title}} {{url}} #SdZ' } };

    $('div.slidable').hide();
    $('a.expend').show();
    $('a.expend').removeAttr('style');
    
    $('.expend').click(function(e)
    {
        e.preventDefault();
        $(this).hide('fast');
        $(this).next('div.slidable').slideToggle('fast');
    });
   
</script>
<script type="text/javascript" src="./Langage Python_files/addthis_widget.js"></script>
            

            <div class="droite printnone">
                <a href="http://www.xiti.com/xiti.asp?s=129196" title="WebAnalytics">
                    <script type="text/javascript">
                        <!--
                        Xt_param = 's=129196&p=%2Ftutoriel-3-278227-langage-python.html%3Fall%3D1';
                        try {Xt_r = top.document.referrer;}
                        catch(e) {Xt_r = document.referrer; }
                        Xt_h = new Date();
                        Xt_i = '<img width="80" height="15" border="0" ';
                        Xt_i += 'src="http://logv23.xiti.com/g.xiti?'+Xt_param;
                        Xt_i += '&hl='+Xt_h.getHours()+'x'+Xt_h.getMinutes()+'x'+Xt_h.getSeconds();
                        if(parseFloat(navigator.appVersion)>=4)
                        {
                        Xt_s=screen;Xt_i+='&r='+Xt_s.width+'x'+Xt_s.height+'x'+Xt_s.pixelDepth+'x'+Xt_s.colorDepth;
                        }
                        document.write(Xt_i+'&ref='+Xt_r.replace(/[<>"]/g, '').replace(/&/g, '$')+'">');
                        //-->
                    </script><img width="80" height="15" border="0" src="./Langage Python_files/g.xiti">
                    <object>
                        <noscript>
                            &lt;p&gt;&lt;img width="80" height="15" src="http://logv23.xiti.com/g.xiti?s=129196&amp;amp;p=&amp;amp;" alt="WebAnalytics" /&gt;&lt;/p&gt;
                        </noscript>
                    </object>
                </a>
                <script type="text/javascript">
                    var _gaq = _gaq || [];
                    _gaq.push(['_setAccount', 'UA-19807070-2']);
                    _gaq.push(['_trackPageview']);

                    (function() {
                    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
                    })();
                </script>
            </div>

            <!-- /#3 261/#1.9617/#1.9197/# -->
	
    


<div style="display: none; position: absolute; overflow-x: hidden; overflow-y: hidden; z-index: 1000; outline-width: 0px; outline-style: initial; outline-color: initial; " class="ui-dialog ui-widget ui-widget-content ui-corner-all " tabindex="-1" role="dialog" aria-labelledby="ui-dialog-title-dialog_bientot"><div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix" unselectable="on"><span class="ui-dialog-title" id="ui-dialog-title-dialog_bientot" unselectable="on">Bientôt sur le Site du Zéro.</span><a href="http://www.siteduzero.com/tutoriel-3-278227-langage-python.html?all=1#" class="ui-dialog-titlebar-close ui-corner-all" role="button" unselectable="on"><span class="ui-icon ui-icon-closethick" unselectable="on">close</span></a></div><div id="dialog_bientot" style="" class="ui-dialog-content ui-widget-content">
                <p>Le Site du Zéro vous proposera bientôt de nouveaux cours partant de Zéro dans d'autres domaines que l'informatique ! </p>
                 <a style="color:#2677C9;text-decoration:none;" href="http://www.siteduzero.com/tutoriel-1-433-sciences.html">Découvrir les cours scientifiques</a>
            </div><div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"><button type="button" class="ui-state-default ui-corner-all">Ok</button></div></div><div id="tooltip" style="display: none; "><h3></h3><div class="body"></div><div class="url"></div></div></body></html>