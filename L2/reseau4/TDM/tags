!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	Makefile	/^CC=gcc$/;"	m
NBR_MAX_TIMERS	physique.c	3;"	d	file:
OBJ_COMMON	Makefile	/^OBJ_COMMON=physique.o couche_liaison.o$/;"	m
OBJ_ENVOIE	Makefile	/^OBJ_ENVOIE=emetteur.o$/;"	m
OBJ_LSAP0	Makefile	/^OBJ_LSAP0=service_liaison0.o$/;"	m
OBJ_LSAP1	Makefile	/^OBJ_LSAP1=service_liaison1.o$/;"	m
OBJ_LSAP2	Makefile	/^OBJ_LSAP2=service_liaison2.o$/;"	m
OBJ_RECOIT	Makefile	/^OBJ_RECOIT=recepteur.o$/;"	m
PRG	Makefile	/^PRG=emetteur recepteur$/;"	m
RECEPTION	physique.h	4;"	d
SYS	Makefile	/^SYS= -Wall -DUNIX -I.$/;"	m
TAILLE_MAX	service_liaison.h	3;"	d
__COUCHE_LIAISON	couche_liaison.h	2;"	d
__PROTOCOLE_H__	physique.h	2;"	d
__SERVICE_LIAISON	service_liaison.h	2;"	d
adr_dst	couche_liaison.h	/^	unsigned char adr_dst[6];$/;"	m	struct:trame_s	access:public
adr_src	couche_liaison.h	/^	unsigned char adr_src[6];$/;"	m	struct:trame_s	access:public
arreter_compteur	physique.c	/^void arreter_compteur(int n) {$/;"	f	signature:(int n)
arreter_compteur	physique.h	/^void arreter_compteur(int n);$/;"	p	signature:(int n)
attendre	physique.c	/^int attendre() {$/;"	f
attendre	physique.h	/^int attendre();$/;"	p	signature:()
ctrl	couche_liaison.h	/^	unsigned char ctrl;$/;"	m	struct:trame_s	access:public
de_canal	physique.c	/^void de_canal(void *trame, int taille) {$/;"	f	signature:(void *trame, int taille)
de_canal	physique.h	/^void de_canal(void *trame, int taille);$/;"	p	signature:(void *trame, int taille)
deb_trame	couche_liaison.h	/^	unsigned char deb_trame;$/;"	m	struct:trame_s	access:public
depart_compteur	physique.c	/^void depart_compteur(int n, int ms) {$/;"	f	signature:(int n, int ms)
depart_compteur	physique.h	/^void depart_compteur(int n, int ms);$/;"	p	signature:(int n, int ms)
emettre_sur_liaison	service_liaison.h	/^void emettre_sur_liaison(char* adr_src, char* adr_dest, char* msg, int lg_msg);$/;"	p	signature:(char* adr_src, char* adr_dest, char* msg, int lg_msg)
emettre_sur_liaison	service_liaison0.c	/^void emettre_sur_liaison(char* adr_src, char* adr_dest, char* msg, int lg_msg) {$/;"	f	signature:(char* adr_src, char* adr_dest, char* msg, int lg_msg)
emettre_sur_liaison	service_liaison1.c	/^void emettre_sur_liaison(char* adr_src, char* adr_dest, char* msg, int lg_msg) {$/;"	f	signature:(char* adr_src, char* adr_dest, char* msg, int lg_msg)
emettre_sur_liaison	service_liaison2.c	/^void emettre_sur_liaison(char* adr_src, char* adr_dest, char* msg, int lg_msg) {$/;"	f	signature:(char* adr_src, char* adr_dest, char* msg, int lg_msg)
emettre_sur_liaison_connectee	service_liaison.h	/^void emettre_sur_liaison_connectee(char* msg, int lg_msg);$/;"	p	signature:(char* msg, int lg_msg)
etablir_connexion_liaison	service_liaison.h	/^int etablir_connexion_liaison(char* adr_src, char* adr_dest);$/;"	p	signature:(char* adr_src, char* adr_dest)
fcs	couche_liaison.h	/^	unsigned char fcs;$/;"	m	struct:trame_s	access:public
fin_trame	couche_liaison.h	/^	unsigned char fin_trame;$/;"	m	struct:trame_s	access:public
info	couche_liaison.h	/^	unsigned char info[82];$/;"	m	struct:trame_s	access:public
initialisation	physique.c	/^void initialisation(float proba_perte, float proba_erreur,$/;"	f	signature:(float proba_perte, float proba_erreur, unsigned short port_local, char* destination, unsigned short port_dest)
initialisation	physique.h	/^void initialisation(float proba_perte, float proba_erreur, unsigned short port_local, char* destination, unsigned short port_destination);$/;"	p	signature:(float proba_perte, float proba_erreur, unsigned short port_local, char* destination, unsigned short port_destination)
initialisation_simple	physique.c	/^void initialisation_simple(float proba_perte, float proba_erreur, int reception)$/;"	f	signature:(float proba_perte, float proba_erreur, int reception)
initialisation_simple	physique.h	/^void initialisation_simple(float proba_perte, float proba_erreur, int reception);$/;"	p	signature:(float proba_perte, float proba_erreur, int reception)
initialiser_trame	service_liaison.h	/^trame_t initialiser_trame(void);$/;"	p	signature:(void)
lg_info	couche_liaison.h	/^	unsigned char lg_info;$/;"	m	struct:trame_s	access:public
main	emetteur.c	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	recepteur.c	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
num_seq	couche_liaison.h	/^	unsigned char num_seq;$/;"	m	struct:trame_s	access:public
physique_destination	physique.c	/^char*	physique_destination = NULL;$/;"	v
physique_initialise	physique.c	/^int	physique_initialise = 0;$/;"	v
physique_port_destination	physique.c	/^short	physique_port_destination = 2001;$/;"	v
physique_port_local	physique.c	/^short	physique_port_local = 2000;$/;"	v
physique_proba_erreur	physique.c	/^float physique_proba_erreur = 0; $/;"	v
physique_proba_perte	physique.c	/^float	physique_proba_perte = 0;$/;"	v
physique_socket	physique.c	/^SOCKET	physique_socket;$/;"	v
physique_socket	physique.c	/^int physique_socket;$/;"	v
physique_timers	physique.c	/^int	physique_timers[NBR_MAX_TIMERS+1];$/;"	v
recevoir_de_liaison	service_liaison.h	/^int recevoir_de_liaison(char* adr_src, char* adr_dest, char* msg);$/;"	p	signature:(char* adr_src, char* adr_dest, char* msg)
recevoir_de_liaison	service_liaison0.c	/^int recevoir_de_liaison(char* adr_src, char* adr_dest,char* msg) {$/;"	f	signature:(char* adr_src, char* adr_dest,char* msg)
recevoir_de_liaison	service_liaison1.c	/^int recevoir_de_liaison(char* adr_src, char* adr_dest,char* msg) {$/;"	f	signature:(char* adr_src, char* adr_dest,char* msg)
recevoir_de_liaison	service_liaison2.c	/^int recevoir_de_liaison(char* adr_src, char* adr_dest,char* msg) {$/;"	f	signature:(char* adr_src, char* adr_dest,char* msg)
recevoir_de_liaison_connectee	service_liaison.h	/^int recevoir_de_liaison_connectee(char* msg);$/;"	p	signature:(char* msg)
recevoir_demande_connexion_liaison	service_liaison.h	/^void recevoir_demande_connexion_liaison(char* adr_src, char* adr_dest);$/;"	p	signature:(char* adr_src, char* adr_dest)
recevoir_terminaison_connexion_liaison	service_liaison.h	/^void recevoir_terminaison_connexion_liaison();$/;"	p	signature:()
remplirTrame	service_liaison2.c	/^trame_t remplirTrame(char* adr_src, char* adr_dest, char* msg, int lg_msg) {$/;"	f	signature:(char* adr_src, char* adr_dest, char* msg, int lg_msg)
repondre_demande_connexion_liaison	service_liaison.h	/^void repondre_demande_connexion_liaison(int reponse);$/;"	p	signature:(int reponse)
terminer_connexion_liaison	service_liaison.h	/^void terminer_connexion_liaison();$/;"	p	signature:()
trame_s	couche_liaison.h	/^typedef struct trame_s {$/;"	s
trame_s::adr_dst	couche_liaison.h	/^	unsigned char adr_dst[6];$/;"	m	struct:trame_s	access:public
trame_s::adr_src	couche_liaison.h	/^	unsigned char adr_src[6];$/;"	m	struct:trame_s	access:public
trame_s::ctrl	couche_liaison.h	/^	unsigned char ctrl;$/;"	m	struct:trame_s	access:public
trame_s::deb_trame	couche_liaison.h	/^	unsigned char deb_trame;$/;"	m	struct:trame_s	access:public
trame_s::fcs	couche_liaison.h	/^	unsigned char fcs;$/;"	m	struct:trame_s	access:public
trame_s::fin_trame	couche_liaison.h	/^	unsigned char fin_trame;$/;"	m	struct:trame_s	access:public
trame_s::info	couche_liaison.h	/^	unsigned char info[82];$/;"	m	struct:trame_s	access:public
trame_s::lg_info	couche_liaison.h	/^	unsigned char lg_info;$/;"	m	struct:trame_s	access:public
trame_s::num_seq	couche_liaison.h	/^	unsigned char num_seq;$/;"	m	struct:trame_s	access:public
trame_t	couche_liaison.h	/^} trame_t;$/;"	t	typeref:struct:trame_s
vers_canal	physique.c	/^void vers_canal(void *trame, int taille) {$/;"	f	signature:(void *trame, int taille)
vers_canal	physique.h	/^void vers_canal(void *trame, int taille);$/;"	p	signature:(void *trame, int taille)
