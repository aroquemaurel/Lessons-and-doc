/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PaletteForFormulas.java
 *
 * Created on 25 sept. 2010, 19:08:52
 */

package satoulouse;

import java.util.ArrayList;

/**
 * représente la palette avec les boutons où on peut insérer des "(<phi> and <psi>)" etc.
 * @author François Schwarzentruber
 */
public class PaletteForFormulas extends javax.swing.JPanel {
    private ArrayList<FormulaBox> fbs = new ArrayList<FormulaBox>();

    /** Creates new form PaletteForFormulas */
    public PaletteForFormulas() {
        initComponents();
        jToolBar1.add(new PaletteSeperationLabel("propositions :"));
        jToolBar1.add(new InsertionButton(fbs, "p", "insérer la proposition p"));
        jToolBar1.add(new InsertionButton(fbs, "q", "insérer la proposition q"));
        jToolBar1.add(new InsertionButton(fbs, "(p i)", "insérer la proposition (p i)"));
        jToolBar1.add(new InsertionButton(fbs, "(p (i + 1))", "insérer la proposition (p (i + 1))"));
        jToolBar1.add(new InsertionButton(fbs, "(p i j)", "insérer la proposition (p i j)"));

        jToolBar1.add(new PaletteSeperationLabel("connecteurs :"));
        jToolBar1.add(new InsertionButton(fbs, "(<phi> and <psi>)", "insérer une conjonction (et)"));
        jToolBar1.add(new InsertionButton(fbs, "(not <phi>)", "insérer la négation de ..."));
        jToolBar1.add(new InsertionButton(fbs, "(<phi> or <psi>)", "insérer une disjonction (ou)"));
        jToolBar1.add(new InsertionButton(fbs, "(<phi> imply <psi>)", "insérer une implication"));
        jToolBar1.add(new InsertionButton(fbs, "(<phi> equiv <psi>)", "insérer une équivalence"));
        
        jToolBar1.add(new PaletteSeperationLabel("macros :"));
        jToolBar1.add(new InsertionButton(fbs, "(bigand i (1 2 3) <phi>)", "insérer une grosse conjonction (et)"));
        jToolBar1.add(new InsertionButton(fbs, "(bigor i (1 2 3) <phi>)", "insérer une grosse disjonction (ou)"));
        jToolBar1.add(new InsertionButton(fbs, "(bigand i (1 2 3) (i diff j) <phi>)",  "insérer une grosse conjonction (et)" ));
        jToolBar1.add(new InsertionButton(fbs, "(bigor i (1 2 3) (i diff j) <phi>)",  "insérer une grosse disjonction (et)"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();

        setName("Form"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        jToolBar1.setFloatable(false);
        jToolBar1.setOrientation(1);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(satoulouse.SatoulouseApp.class).getContext().getResourceMap(PaletteForFormulas.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jToolBar1.add(jLabel1);

        add(jToolBar1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    public void addFormulaBoxToTreat(FormulaBox fb)
    {
        fbs.add(fb);
    }





    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

}
