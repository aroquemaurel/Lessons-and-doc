<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0086)http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10258 -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link rel="stylesheet" type="text/css" href="./java_files/widget53.css" media="all">

        


        
        <meta name="keywords" content="tutoriels, concernant, programmation, java">
        <meta name="description" content="Tutoriels concernant la programmation en Java">
        <meta name="robots" content="index,follow">
        <meta name="verify-v1" content="UL/4+QUCNTv1xBkNcC4sv4EjPUAoVj1yE+fMZClqLsc=">

        <title>
            Programmation en Java
        </title>

        <link rel="shortcut icon" type="image/x-icon" href="http://www.siteduzero.com/Templates/images/designs/2/favicon.ico">
        <link rel="alternate" type="application/rss+xml" title="News du Site du Zéro" href="http://www.siteduzero.com/Templates/xml/news_fr.xml">
        
        <link rel="alternate" type="application/rss+xml" title="Derniers tutoriels du Site du Zéro" href="http://www.siteduzero.com/Templates/xml/tutoriels_fr.xml">
        

        <link rel="index" href="http://www.siteduzero.com/plan.html">
        <link rel="start" title="Accueil" href="http://www.siteduzero.com/">
        <link rel="search" type="application/opensearchdescription+xml" title="Site Du Zero" href="http://www.siteduzero.com/Templates/xml/xpi/fr/siteduzero.xpi">
        <link rel="search" href="http://www.siteduzero.com/recherche.html" title="Rechercher">
        <link rel="help" title="Accessibilité" href="http://www.siteduzero.com/accessibilite.html">
        <link rel="accesskeys" title="Raccourcis et Accesskeys" href="http://www.siteduzero.com/accessibilite.html">


        <link href="./java_files/design.min.css" rel="stylesheet" type="text/css" media="screen, handheld, tv, projection">
        <link href="./java_files/zcode.min.css" rel="stylesheet" type="text/css" media="screen, handheld, tv, projection">
        <link href="./java_files/impression.min.css" rel="stylesheet" type="text/css" media="print">


        

        

        <!--[if lt IE 8]>
            <link href="/css/ie_old.min.css?1299748133" rel="stylesheet" type="text/css" media="screen" />
        <![endif]-->

        
            <script type="text/javascript" async="" src="./java_files/ga.js"></script><script type="text/javascript">
                document.write('<style type="text/css">');
                document.write('.spoiler3{visibility: hidden;}');           // cache le contenu
                document.write('.spoiler3_hidden{display: none;}');         // ferme le cadre "secret"

                document.write('.spoiler_hidden a{visibility: visible;}');  // montre le lien pour afficher le contenu
                document.write('.spoiler a{visibility: visible;');          // montre le lien pour afficher le contenu
                document.write('</style>');
            </script><style type="text/css">.spoiler3{visibility: hidden;}.spoiler3_hidden{display: none;}.spoiler_hidden a{visibility: visible;}.spoiler a{visibility: visible;</style>
        
        <!--
        
            <style type="text/css">
                .spoiler3
                {
                        visibility: hidden;
                }
                .spoiler3_hidden
                {
                        display: none;
                }
            </style>
        
        -->
        
        <script type="text/javascript" src="./java_files/jquery.min.js"></script>
        <script type="text/javascript" src="./java_files/jqueryui.min.js"></script>
    </head>

    <body><div style="visibility: hidden; height: 1px; width: 1px; position: absolute; z-index: 100000; " id="_atssh"><iframe id="_atssh927" style="height: 1px; width: 1px; position: absolute; z-index: 100000; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; left: 0px; top: 0px; " src="./java_files/sh33.htm"></iframe></div>
		
            <div id="acces_rapide">
                <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#menu">Aller au menu</a> - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#corps">Aller au contenu</a>
            </div>

            <div id="top">
                <ul class="intersites">
                    
                    <li class="selected"><a href="http://www.siteduzero.com/">Informatique</a></li>
                    <li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" id="bientot_lien">Bientôt...</a></li>
                </ul>

		<ul class="stats_sites">
                    
                    <li class="last_items"><a href="http://www.siteduzero.com/connectes.html">3 305 Zéros connectés</a> - </li>
                    <li class="last_items"><a href="http://www.siteduzero.com/membres-292.html">231 084 Membres inscrits</a></li>
		</ul>
            </div>

            <div id="header">
                <div class="header_gauche">
                    <a href="http://www.siteduzero.com/"><img src="./java_files/logo_sdz_fr.png" alt=""></a>
                </div>

                <div class="header_droit">
                    <div class="fr">
                        <div id="logbox">
                            
                                <div class="bloc_inscription">
                                    <a href="http://www.siteduzero.com/membres-315.html">
                                        <strong class="liens_invites">Inscription</strong><br>
                                        Inscription rapide en 2 minutes
                                    </a>
                                </div>
                                <div class="bloc_connexion">
                                    <a href="http://www.siteduzero.com/connexion.html">
                                        <strong class="liens_invites">Connexion</strong><br>
                                        Utilisez votre compte
                                    </a>
                                    <a class="rpxnow" onclick="return false;" href="https://site-du-zero.rpxnow.com/openid/v2/signin?token_url=http%3A%2F%2Fwww.siteduzero.com%2Fmembres-348-1.html%3Freferer%3Dtutoriel-3-10601-programmation-en-java.html%3Fall%3D1"><img src="./java_files/rpx_icons.png" alt="connexion_rpx"></a>
                                    <script type="text/javascript">
                                        var rpxJsHost = (("https:" == document.location.protocol) ? "https://" : "http://static.");
                                        document.write(unescape("%3Cscript src='" + rpxJsHost +
                                        "rpxnow.com/js/lib/rpx.js' type='text/javascript'%3E%3C/script%3E"));
                                    </script><script src="./java_files/rpx.js" type="text/javascript"></script>
                                    <script type="text/javascript">
                                        RPXNOW.overlay = true;
                                        RPXNOW.language_preference = 'fr';
                                    </script>
                                </div>
                            
                        </div>

                        
                    </div>

                    <div id="publicite_header">
                        <div id="publicite_banniere" class="publicite">
                            <script type="text/javascript">
                                <!--
                                ord=Math.random();
                                ord=ord*10000000000000000000;
                                document.write('<scr'+'ipt type="text/javascript" src="pub.js.php?cb='+ord+'&amp;l=468&amp;h=60&amp;age=0&amp;pays=0&amp;cid=178"><\/scr'+'ipt>');
                                -->
                            </script><script type="text/javascript" src="./java_files/pub.js.php"></script>
                        </div>

                    </div>
                    </div>
                </div>

                    <div id="speedbarre">
                            <ul class="smenu">
                                <li id="speed_accueil" class="home">
                                    <a href="http://www.siteduzero.com/" accesskey="1" class="">
                                        <span title="Accueil">Accueil</span>
                                    </a>
                                </li>
                                
                                <li id="speed_cours" class="">
                                    <a href="http://www.siteduzero.com/tutoriel.html" class="">
                                        <span>Cours</span>
                                    </a>
                                    <span class="speedbarre_arrow"></span>
                                </li>
                                <li id="speed_forum" class="">
                                    <a href="http://www.siteduzero.com/forum.html" class="">
                                        <span>Forums</span>
                                    </a>
                                    <span class="speedbarre_arrow"></span>
                                </li>
                                
                                    <li id="speed_concours" class="">
                                        <a href="http://www.siteduzero.com/participez.html" class="">
                                            <span>Participez</span>
                                        </a>
                                        <span class="speedbarre_arrow"></span>
                                    </li>
                                    <li id="speed_etudes" class="">
                                        <a href="http://www.siteduzero.com/etudes.html" class="last_item">
                                            <span>Études</span>
                                        </a>
                                        <span class="speedbarre_arrow"></span>
                                    </li>
                                    <li id="speed_job" class="">
                                        <a href="http://www.siteduzero.com/emploi.html" class="last_item">
                                            <span>Emploi</span>
                                        </a>
                                        <span class="speedbarre_arrow"></span>
                                    </li>

                                    <li id="speed_boutique" class="">
                                    <a href="http://www.siteduzero.com/boutique.html" class="last_item">
                                            <span>Boutique</span>
                                        </a>
                                        <span class="speedbarre_arrow"></span>
                                    </li>
                                
                            </ul>

                            <div id="speedbar_expand" class="menuh" style="display:none;">
                                <div class="menuh_content">
                                    <div id="menuh_tutorials" style="display: none; ">
                                        

                                        <div id="menu_tutorials">
                                            <div class="menu_prim">
                                                <h5>Les cours phares</h5>
                                                <div class="menuh_list_category">
                                                    <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-67-site-web.html"><img src="./java_files/67.png" alt=""></a></div>
                                                    <h6><a href="http://www.siteduzero.com/tutoriel-1-67-site-web.html"><strong>Site Web</strong></a></h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-13666-apprenez-a-creer-votre-site-web.html"><span style="display:block">XHTML / CSS</span></a></li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-309961-dynamisez-vos-sites-web-avec-javascript.html">Javascript</a></li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-14668-concevez-votre-site-web-avec-php-et-mysql.html">PHP / MySQL</a>
                                                            <a href="http://www.siteduzero.com/boutique-614-107-concevez-votre-site-web-avec-php-et-mysql.html">
                                                                <span class="in_book"><img src="./java_files/ico_livre.png" alt=""></span>
                                                                <span style="display:none">Ce cours existe en livre :<br>Concevez votre site web avec PHP et MySQL</span>
                                                            </a>
                                                        </li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-112219-apprenez-a-creer-des-applications-web-dynamiques-avec-jee.html">Java EE (J2EE)</a></li>
                                                    </ul>
                                                </div>

                                                <div class="menuh_list_category">
                                                    <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html"><img src="./java_files/57.png" alt=""></a></div>
                                                    <h6><a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html"><strong>Programmation</strong></a></h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-14189-apprenez-a-programmer-en-c.html">Langage C</a>
                                                            <a href="http://www.siteduzero.com/boutique-614-65-apprenez-a-programmer-en-c.html">
                                                                <span class="in_book"><img src="./java_files/ico_livre.png" alt=""></span>
                                                                <span style="display:none">Ce cours existe en livre :<br>Apprenez à programmer en C</span>
                                                            </a>
                                                        </li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-11406-apprenez-a-programmer-en-c.html">Langage C++</a></li>
                                                        <li>
                                                            <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html">
                                                                Java
                                                            </a>
                                                            <a href="http://server1.evonia.fr/tracking/ads_stats2-32325f35385f323533__77c00fc1a6__2748__2-0/http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html">
                                                                <span class="in_book"><img src="./java_files/ico_livre_preco.png" alt=""></span>
                                                                <span style="display:none">Ce livre est en précommande :<br>Apprenez à programmer en Java</span>
                                                            </a>
                                                        </li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-119239-programmation-en-java-api.html">Java (API)</a></li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-223267-apprendre-python.html">Python</a></li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-134798-visual_basic_net.html">VB .NET </a></li>
                                                    </ul>
                                                </div>


                                                <div class="menuh_list_category">
                                                    <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-60-systemes-d-exploitation.html"><img src="./java_files/60.png" alt=""></a></div>
                                                    <h6><a href="http://www.siteduzero.com/tutoriel-1-60-systemes-d-exploitation.html"><strong>Systèmes d'exploitation</strong></a></h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-12827-reprenez-le-controle-a-l-aide-de-linux.html">Linux</a>
                                                            <a href="http://www.siteduzero.com/boutique-614-171-reprenez-le-controle-a-l-aide-de-linux.html">
                                                                <span class="in_book"><img src="./java_files/ico_livre.png" alt=""></span>
                                                                <span style="display:none">Ce cours existe en livre :<br>Reprenez le contrôle a l'aide de Linux</span>
                                                            </a>
                                                        </li>                                                    
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-273305-freebsd-et-l-envers-du-decor.html">FreeBSD</a></li>
                                                    </ul>
                                                </div>

                                                <div class="menuh_list_category">
                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-56-graphisme.html"><img src="./java_files/56.png" alt=""></a></div>
                                                    <h6><a href="http://www.siteduzero.com/tutoriel-1-56-graphisme.html"><strong>Graphisme</strong></a></h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-351765-debuter-sur-adobe-photoshop.html">Photoshop</a></li>
                                                    </ul>
                                                </div>

                                                <div class="menuh_list_category">
                                                    <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-58-infographie-3d.html"><img src="./java_files/58.png" alt=""></a></div>
                                                    <h6><a href="http://www.siteduzero.com/tutoriel-1-58-infographie-3d.html"><strong>Infographie 3D</strong></a></h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-11714-debutez-dans-la-3d-avec-blender.html">Blender</a></li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-228998-apprenez-a-modeliser-en-3d-avec-autodesk-maya.html">Maya </a></li>
                                                    </ul>
                                                </div>

                                                <div class="menuh_list_category">
                                                    <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-55-bureautique.html"><img src="./java_files/55.png" alt=""></a></div>
                                                    <h6><a href="http://www.siteduzero.com/tutoriel-1-55-bureautique.html"><strong>Bureautique</strong></a></h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-258577-redigez-des-documents-de-qualite-professionnelle-avec-latex.html">LaTeX</a>
                                                            <a href="http://www.siteduzero.com/boutique-614-207-redigez-des-documents-de-qualite-professionnelle-avec-latex.html">
                                                                <span class="in_book"><img src="./java_files/ico_livre.png" alt=""></span>
                                                                <span style="display:none">Ce cours existe en livre :<br>Rédigez des documents de qualité avec LaTeX</span>
                                                            </a>
                                                        </li>
                                                        <li><a href="http://www.siteduzero.com/tutoriel-3-417000-redigez-facilement-des-documents-avec-word.html">Word<img style="margin-left: 10px;" alt="" src="./java_files/iconouveau.png"></a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                            
                                            <div class="menu_princi menuhcattuto ">
                                                <h5>Tous les cours par catégories</h5>
                                                <div class="menuh_princi_col">
                                                    
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-67-site-web.html"><img src="./java_files/67.png" alt=""></a></div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-67-site-web.html">Site Web <span style="font-weight:normal;">(206 Cours)</span></a></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-69-xhtml-css.html">XHTML / CSS</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-1-210-php.html">PHP</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-71-divers.html">Divers</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-73-forums.html">Forums</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-77-hebergement.html">Hébergement</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-70-javascript.html">Javascript</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-74-serveur.html">Serveur</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-309-ide.html">IDE</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-60-systemes-d-exploitation.html"><img src="./java_files/60.png" alt=""></a></div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-60-systemes-d-exploitation.html">Systèmes d'exploitation <span style="font-weight:normal;">(96 Cours)</span></a></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-96-linux.html">Linux</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-147-macos.html">MacOS</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-1-97-windows.html">Windows</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-408-bsd.html">BSD</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-54-mapping.html"><img src="./java_files/54.png" alt=""></a></div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-54-mapping.html">Mapping <span style="font-weight:normal;">(31 Cours)</span></a></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-63-half-life.html">Half-Life</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-66-half-life.html">Half-Life²</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-173-warcraft.html">Warcraft</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-188-autres.html">Autres</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-55-bureautique.html"><img src="./java_files/55.png" alt=""></a></div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-55-bureautique.html">Bureautique <span style="font-weight:normal;">(29 Cours)</span></a></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-1-290-microsoft-office.html">Microsoft Office</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-1-291-openoffice-org.html">OpenOffice.org</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-87-firefox.html">Firefox</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-195-irc.html">IRC</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-192-divers.html">Divers</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-59-jeux-video.html"><img src="./java_files/59.png" alt=""></a></div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-59-jeux-video.html">Jeux Vidéo <span style="font-weight:normal;">(22 Cours)</span></a></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-102-hl-ses-mods.html">HL &amp; ses mods</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-185-autres-jeux.html">Autres jeux</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-61-materiel.html"><img src="./java_files/61.png" alt=""></a></div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-61-materiel.html">Matériel <span style="font-weight:normal;">(11 Cours)</span></a></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-101-general.html">Général</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        

                                                    <div class="menuh_list_category">
                                                        <div class="ico"><img src="./java_files/tuto_cat_thb.png" alt=""></div>
                                                        <h6>Autres</h6>
                                                        <ul>
                                                            
                                                                <li>
                                                                    <a style="display:block" href="http://www.siteduzero.com/tutoriel-2-404-bases-de-donnees.html">Bases de données</a>
                                                                </li>
                                                            
                                                                <li>
                                                                    <a style="display:block" href="http://www.siteduzero.com/tutoriel-2-403-mobiles.html">Mobiles</a>
                                                                </li>
                                                            
                                                                <li>
                                                                    <a style="display:block" href="http://www.siteduzero.com/tutoriel-2-141-site-du-zero.html">Site du Zéro</a>
                                                                </li>
                                                            
                                                        </ul>
                                                    </div>
                                                </div>

                                                <div class="menuh_princi_col">
                                                    
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html">
                                                                    <img src="./java_files/57.png" alt=""></a>
                                                                </div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html">Programmation</a> <span style="font-weight:normal;">(244 Cours)</span></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-91-as-flash-flex.html">AS / Flash / Flex</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-217-algorithmique.html">Algorithmique</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-254-basic-et-derives.html">Basic et dérivés</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-1-344-bibliotheques.html">Bibliothèques</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-262-c.html">C</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-261-c.html">C++</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-201-c-net.html">C# / .NET</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-1-258-calculatrices.html">Calculatrices</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-242-ide.html">IDE</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-336-erlang.html">Erlang</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-227-general.html">Général</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-178-java.html">Java</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-93-mirc.html">mIRC</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-196-python.html">Python</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-355-caml-ocaml.html">Caml / OCaml</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-386-cocoa-objective-c.html">Cocoa / Objective-C</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-253-autres-langages.html">Autres langages</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-56-graphisme.html">
                                                                    <img src="./java_files/56.png" alt=""></a>
                                                                </div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-56-graphisme.html">Graphisme</a> <span style="font-weight:normal;">(27 Cours)</span></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-176-dessin.html">Dessin</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-177-divers.html">Divers</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-79-flash.html">Flash</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-157-gimp.html">Gimp</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-153-dessin-vectoriel.html">Dessin vectoriel</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-190-photofiltre.html">PhotoFiltre</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-78-photoshop.html">Photoshop</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-197-pov-ray.html">POV-Ray</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-58-infographie-3d.html">
                                                                    <img src="./java_files/58.png" alt=""></a>
                                                                </div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-58-infographie-3d.html">Infographie 3D</a> <span style="font-weight:normal;">(25 Cours)</span></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-95-3d-studio-max.html">3D Studio Max</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-152-blender.html">Blender</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-296-maya.html">Maya</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-62-multimedia.html">
                                                                    <img src="./java_files/62.png" alt=""></a>
                                                                </div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-62-multimedia.html">Multimédia</a> <span style="font-weight:normal;">(24 Cours)</span></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-99-audio.html">Audio</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-100-video.html">Vidéo</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-382-after-effects.html">After Effects</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        
                                                            <div class="menuh_list_category">
                                                                <div class="ico"><a href="http://www.siteduzero.com/tutoriel-1-182-reseaux.html">
                                                                    <img src="./java_files/182.png" alt=""></a>
                                                                </div>
                                                                <h6><a href="http://www.siteduzero.com/tutoriel-1-182-reseaux.html">Réseaux</a> <span style="font-weight:normal;">(18 Cours)</span></h6>
                                                                <ul>
                                                                    <li>
                                                                        
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-183-general.html">Général</a>,
                                                                            <a href="http://www.siteduzero.com/tutoriel-2-189-securite.html">Sécurité</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        

                                                    <div class="menuh_list_category">
                                                        <div id="create_tutorials_button">
                                                            
                                                                <div><a href="http://www.siteduzero.com/connexion.html"><img src="./java_files/redigercours.png" alt=""></a></div>
                                                            
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clear"></div>
                                            </div>
                                            <div class="clear"></div>
                                        </div>
                                    </div>
                                    
                                    <div id="menuh_forum" style="display: none; ">
                                        <div class="menu_princi">
                                            <a class="button_all_forums" href="http://www.siteduzero.com/forum.html">Accueil des forums</a>
                                            <div class="menuh_princi_col">
                                                
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-121-site-web.html"><img src="./java_files/121.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-121-site-web.html">Site Web</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-122-xhtml-css.html">XHTML / CSS</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-338-javascript.html">Javascript</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-123-php.html">PHP</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-128-mapping.html"><img src="./java_files/128.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-128-mapping.html">Mapping</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-129-goldsource-hl1.html">GoldSource (HL1)</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-130-source-hl2.html">Source (HL2)</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-24-communaute-des-zeros.html"><img src="./java_files/24.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-24-communaute-des-zeros.html">Communauté des zéros</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-28-discussions-generales.html">Discussions générales</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-278-vos-etudes.html">Vos études</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-239-presentation-de-vos-projets.html">Présentation de vos projets</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-200-recrutements-pour-vos-projets.html">Recrutements pour vos projets</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-440-sciences.html"><img src="./java_files/440.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-440-sciences.html">Sciences</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-441-mathematiques.html">Mathématiques</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-442-physique-chimie.html">Physique - Chimie</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-443-biologie-et-geologie.html">Biologie et Géologie</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-444-autres-sciences.html">Autres sciences</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                            </div>

                                            <div class="menuh_princi_col">
                                                
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-125-programmation.html"><img src="./java_files/125.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-125-programmation.html">Programmation</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-126-langage-c.html">Langage C</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-237-langage-c.html">Langage C++</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-305-langage-java.html">Langage Java</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-407-langage-python.html">Langage Python</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-406-bases-de-donnees.html">Bases de données</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-127-autres-langages-outils-et-approches.html">Autres langages, outils et approches</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-219-materiel-et-logiciels.html"><img src="./java_files/219.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-219-materiel-et-logiciels.html">Matériel et logiciels</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-339-discussions-informatiques.html">Discussions informatiques</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-220-linux-mac-et-bsd.html">Linux, Mac et *BSD</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-221-windows.html">Windows</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-116-jeux-video.html">Jeux vidéo</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-117-graphisme.html">Graphisme</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-223-materiel.html">Matériel</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-310-concours.html"><img src="./java_files/310.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-310-concours.html">Concours</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-435-innov-game-2011-a-la-gloire-de.html">Innov'Game 2011 : A la gloire de</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-447-atelier-de-noel-faites-votre-jeu.html">Atelier de noël : "Faites votre jeu"</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                                        <div class="menuh_list_category">
                                                            <div class="ico"><a href="http://www.siteduzero.com/forum-89-143-le-site-du-zero.html"><img src="./java_files/143.png" alt=""></a></div>
                                                            <h6><a href="http://www.siteduzero.com/forum-89-143-le-site-du-zero.html">Le Site du Zéro</a></h6>
                                                            <ul>
                                                                <li>
                                                                    
                                                                            <a href="http://www.siteduzero.com/forum-81-144-suggestions-et-commentaires.html">Suggestions et Commentaires</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-145-designs-du-site-du-zero.html">Designs du Site du Zéro</a>
                                                                        
                                                                            <a href="http://www.siteduzero.com/forum-81-429-tutoriels-du-site-du-zero.html">Tutoriels du Site du Zéro</a>
                                                                        
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    
                                            </div>
                                        </div>

                                        
                                    <div class="clear"></div>
                                    </div>
                                    <div id="menuh_collaborate" style="display: none; ">
                                        <div class="menuh_list_category">
                                            
                                                <div class="ico"><a href="http://www.siteduzero.com/membres-315.html"><img src="./java_files/tuto_cat_thb.png" alt=""></a></div>
                                                <h6><a href="http://www.siteduzero.com/membres-315.html">Cours</a></h6>
                                                <ul>
                                                    <li style="font-style:italic;">Pour rédiger et participer à la rédaction d'un tutoriel, <a style="display:inline; font-style:normal" href="http://www.siteduzero.com/membres-315.html">rejoignez-nous !</a></li>
                                                </ul>
                                            
                                        </div>

                                        <div class="menuh_list_category">
                                            
                                                <div class="ico"><a href="http://www.siteduzero.com/membres-315.html"><img src="./java_files/defaut_thb.png" alt=""></a></div>
                                                <h6><a href="http://www.siteduzero.com/membres-315.html">News</a></h6>
                                                <ul>
                                                    <li style="font-style:italic;">Pour partager ou participer à la rédaction d'une news, <a style="display:inline; font-style:normal" href="http://www.siteduzero.com/membres-315.html"> rejoignez-nous !</a></li>
                                                </ul>
                                            
                                        </div>

                                        <div class="menuh_list_category">
                                            <div class="ico"><a href="http://www.siteduzero.com/concours.html"><img src="./java_files/cup_thb.png" alt=""></a></div>
                                            <h6><a href="http://www.siteduzero.com/concours.html">Concours</a></h6>
                                            <ul>
                                                
                                                        <li><a href="http://www.siteduzero.com/concours-654-122-innov-game-2011-a-la-gloire-de.html">Innov'Game 2011 : A la gloire de</a></li>
                                                    
                                            </ul>
                                        </div>
                                        <div class="clear"></div>
                                    </div>


                                    <div id="menuh_job" style="display: none; ">
                                        <div class="menu_princi">
                                            <div class="menuh_princi_col">
                                                <div class="menuh_list_category">
                                                    <h6>Dernières annonces</h6>
                                                    <div class="menuh_list_category_job">
                                                        
                                                            <a title="Consulter le poste : Développeur C/C++ (H/F)" href="http://www.siteduzero.com/emploi/78/developpeur-c-c" class="corpsmenu">
                                                                <span class="last_jobs">
                                                                    <span title="CDD" class="job_type jobtypes2">CDD</span>
                                                                </span>
                                                                <span>
                                                                    <span class="job_title">Développeur C/C++ (H/F)</span>
                                                                    <span style="color:#000000;">AYOTLE</span>
                                                                </span>
                                                            </a>
                                                        
                                                            <a title="Consulter le poste : Développeur web asp.net/aja…" href="http://www.siteduzero.com/emploi/77/developpeur-web-asp-net-ajax-xhtml" class="corpsmenu">
                                                                <span class="last_jobs">
                                                                    <span title="Stage" class="job_type jobtypes3">Stage</span>
                                                                </span>
                                                                <span>
                                                                    <span class="job_title">Développeur web asp.net/aja…</span>
                                                                    <span style="color:#000000;">Citizenside.com</span>
                                                                </span>
                                                            </a>
                                                        
                                                            <a title="Consulter le poste : Ingénieur logiciel C++ (H/F…" href="http://www.siteduzero.com/emploi/3/ingenieur-logiciel-c" class="corpsmenu">
                                                                <span class="last_jobs">
                                                                    <span title="Stage" class="job_type jobtypes3">Stage</span> <span title="CDI" class="job_type jobtypes1">CDI</span>
                                                                </span>
                                                                <span>
                                                                    <span class="job_title">Ingénieur logiciel C++ (H/F…</span>
                                                                    <span style="color:#000000;">FACTSET JCF</span>
                                                                </span>
                                                            </a>
                                                        
                                                    </div>
                                                </div>
                                            </div>
                                                
                                                <div class="menuh_princi_col">
                                                    
                                                        <div class="menuh_list_category">
                                                            <h6>Annonces à la une</h6>
                                                            <div class="menuh_list_category_job">
                                                                
                                                                    <a title="Consulter le poste : 5 Développeurs Java (H/F)" href="http://www.siteduzero.com/emploi/63/5-developpeurs-java" class="corpsmenu">

                                                                        <span class="last_jobs">
                                                                            <span title="CDI" class="job_type jobtypes1">CDI</span>
                                                                        </span>
                                                                        <span>
                                                                            <span class="job_title">5 Développeurs Java (H/F)</span>
                                                                            <span style="color:#000000;">Small iz beautiful pour AIRP…</span>
                                                                        </span>
                                                                    </a>
                                                                
                                                                    <a title="Consulter le poste : Développeur PHP Symfony (H/…" href="http://www.siteduzero.com/emploi/58/developpeur-php-symfony" class="corpsmenu">

                                                                        <span class="last_jobs">
                                                                            <span title="CDI" class="job_type jobtypes1">CDI</span>
                                                                        </span>
                                                                        <span>
                                                                            <span class="job_title">Développeur PHP Symfony (H/…</span>
                                                                            <span style="color:#000000;">Externis Resourcing</span>
                                                                        </span>
                                                                    </a>
                                                                
                                                            </div>
                                                        </div>
                                                      
                                                    <div class="menuh_list_category">
                                                        <div>
                                                            <div><a href="http://www.siteduzero.com/emploi.html"><img src="./java_files/speed_barre_btn_recherche_emploi.png" alt=""></a></div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="menuh_more2">
                                                        <a href="http://www.siteduzero.com/emploi/liste.html">Toutes les annonces<img src="./java_files/fleche_droite.png" alt="►"></a>
                                                </div>
                                            </div>
                                        <div class="clear"></div>
                                    </div>

                                    <div id="menuh_study" style="padding-left: 15px; display: none; ">
                                        <div class="menu_princi">
                                            <div class="ico_study"><img src="./java_files/ico_etude.png" width="50" alt="icon etude"></div>
                                            <div class="menuh_princi_col">
                                                <div class="menuh_list_category">
                                                    <h6>Recrutement à Bac / Bac +1</h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-280-bts.html">BTS</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-269-ecoles-d-ing%C3%A9nieurs-en-informatique.html">Ecoles d'ingénieurs en informatique</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-274-ecoles-d-ing%C3%A9nieurs-generalistes.html">Ecoles d'ingénieurs généralistes</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-283-iut.html">IUT</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-300-universites.html">Universités</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-287-autre-formation-diplomantes.html">Autres formations diplômantes</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-448-cpge.html">CPGE</a></li>
                                                    </ul>
                                                </div>

                                                <div class="menuh_list_category">
                                                    <h6>Recrutement à Bac +2</h6>
                                                    <ul>
                                                       <li><a href="http://www.siteduzero.com/etudes-550-270-ecoles-d-ing%C3%A9nieurs-en-informatique.html">Ecoles d'ingénieurs en informatique</a></li>
                                                       <li><a href="http://www.siteduzero.com/etudes-550-273-ecoles-d-ing%C3%A9nieurs-generalistes.html">Ecoles d'ingénieurs généralistes</a></li>
                                                       <li><a href="http://www.siteduzero.com/etudes-550-289-autre-formation-diplomantes.html">Autres formations diplômantes</a></li>
                                                    </ul>
                                                </div>
                                            </div>

                                            <div class="menuh_princi_col">
                                                <div class="menuh_list_category">
                                                    <h6>Recrutement à Bac +3 / Bac +4</h6>
                                                    <ul>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-388-ecoles-d-ing%C3%A9nieurs-en-informatique.html">Ecoles d'ingénieurs en informatique</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-389-ecoles-d-ing%C3%A9nieurs-generalistes.html">Ecoles d'ingénieurs généralistes</a></li>
                                                        <li><a href="http://www.siteduzero.com/etudes-550-390-autre-formation-diplomantes.html">Autres formations diplômantes</a></li>
                                                    </ul>
                                                </div>

                                                <div class="menuh_list_category">
                                                    <h6>Recrutement à Bac +5</h6>
                                                    <ul>
                                                       <li><a href="http://www.siteduzero.com/etudes-550-299-doctorats.html">Doctorats</a></li>
                                                       <li><a href="http://www.siteduzero.com/etudes-550-391-autre-formation-diplomantes.html">Autres formations diplômantes</a></li>
                                                    </ul>
                                                    <div class="menuh_list_category">
                                                        <div id="find_training">
                                                            <div><a href="http://www.siteduzero.com/etudes.html"><img src="./java_files/ico_recherche_cours.png" alt=""><strong>Trouvez une formation</strong></a></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="clear"></div>
                                    </div>

                                    <div id="menuh_shop" style="display: none; ">
                                        <div class="flagship_products headband_preorder">
                                            <a style="display:block;height:144px;" href="http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html"><img src="./java_files/livre_cours_java_2d.png" alt="Apprenez à programmer en Java"></a>
                                            <h5>Apprenez à programmer en Java</h5>
                                            <div class="price" style="margin-top : 16px;">
                                                <span class="min_price">Prix de précommande</span><br>
                                                25 €
                                            </div>
                                            <span><a class="bouton_action fl" href="http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html">Acheter</a></span>
                                        </div>
                                        <div class="flagship_products">
                                            <a href="http://www.siteduzero.com/boutique-614-188-cle-usb-du-site-du-zero-8-go.html"><img src="./java_files/image_usb_speedbarre.jpg" alt="cle usb"></a>
                                            <h5>Clé USB du site du Zéro</h5>
                                            <a href="http://www.siteduzero.com/boutique-614-184-cle-usb-du-site-du-zero-4-go.html">4 Go</a>
                                            - <a href="http://www.siteduzero.com/boutique-614-188-cle-usb-du-site-du-zero-8-go.html">8 Go</a>
                                            - <a href="http://www.siteduzero.com/boutique-614-191-cle-usb-du-site-du-zero-16-go.html">16 Go</a><br>
                                            <div class="price">
                                                <span class="min_price">À partir de</span><br>
                                                15,20 €
                                            </div>
                                            <span><a class="bouton_action fl" href="http://www.siteduzero.com/boutique-614-188-cle-usb-du-site-du-zero-8-go.html">Acheter</a></span>
                                        </div>

                                    <div class="other_products">
                                        <span>Concevez votre site web avec PHP et MySQL<br>
                                        <a href="http://www.siteduzero.com/boutique-614-107-concevez-votre-site-web-avec-php-et-mysql.html">En savoir plus ►</a></span>
                                        <a href="http://www.siteduzero.com/boutique-614-107-concevez-votre-site-web-avec-php-et-mysql.html">
                                        <img style="margin:13px 0 0 22px" alt="Concevez votre site web avec php et mysql" src="./java_files/livre_cours_php_2d.png"></a>
                                    </div>

                                    <div class="other_products">
                                        <span>Apprenez à programmer en C <br>
                                        <a href="http://www.siteduzero.com/boutique-614-65-apprenez-a-programmer-en-c.html">En savoir plus ►</a></span>
                                        <a href="http://www.siteduzero.com/boutique-614-65-apprenez-a-programmer-en-c.html">
                                        <img style="margin:13px 0 0 22px" alt="Apprenez à programmer en C" src="./java_files/livre_cours_c_2d.png"></a>
                                    </div>
                                    <div class="other_products">
                                        <span>Reprenez le contrôle à l'aide de Linux <br>
                                        <a href="http://www.siteduzero.com/boutique-614-171-reprenez-le-controle-a-l-aide-de-linux.html">En savoir plus ►</a></span>
                                        <a href="http://www.siteduzero.com/boutique-614-171-reprenez-le-controle-a-l-aide-de-linux.html">
                                        <img style="margin:13px 0 0 22px" alt="Reprenez le contrôle à l&#39;aide de Linux" src="./java_files/livre_cours_linux_2d.png"></a>
                                    </div>

                                    <div class="other_products">
                                        <span>Rédigez des documents de qualité avec LaTeX<br>
                                        <a href="http://www.siteduzero.com/boutique-614-207-redigez-des-documents-de-qualite-avec-latex.html">En savoir plus ►</a></span>
                                        <a href="http://www.siteduzero.com/boutique-614-207-redigez-des-documents-de-qualite-avec-latex.html">
                                        <img style="margin:13px 0 0 22px" alt="Rédigez des documents de qualité avec LaTeX" src="./java_files/livre_cours_latex_2d.png"></a>
                                    </div>
                                      
                                    <div class="menuh_more">
                                        <a href="http://www.siteduzero.com/boutique.html">Tous les produits <img src="./java_files/fleche_droite(1).png" alt="►"></a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="search_bar">
                        <div class="ard"></div>
                        <form method="get" action="http://www.siteduzero.com/recherche.html" id="recherche">
                            <p>
                                <input type="text" name="src" id="champ_recherche" accesskey="4" value="Rechercher">
                                <select name="c" id="section_recherche">
                                    <option value="3" selected="selected">Cours</option>
                                    <option value="6">Forums</option>
                                    <option value="4">News</option>
                                    <option value="mbr">Membres</option>
                                    <option value="formation">Études</option>
                                    <option value="codeweb">Code web</option>
                                    <option value="mp">MP</option>
                                </select>
                                <input class="button_go_search" value="Go" type="submit">
                                <a class="button_more_search" href="http://www.siteduzero.com/recherche.html">+</a>
                            </p>
                        </form>
                        </div>

                    </div>

<script type="text/javascript">

    
        //On Hover

    var keyCodeEscape = 27;
    $(document).keyup(function(f) {
        if (f.keyCode == keyCodeEscape)
        {
            hideBlocMenu();
        }
    });


    /* Var for speedbar*/
    showDelay = 300;
    hiddenDelay = 367;
    fadeInDelay = 100
    fadeOutDelay = 100
    timer = null;
    hideTimeOut = null
    // speedbar function
    function speedShowDelay(){
        if($('.menuh_content > div').is(':visible'))
        {
            showDelay = null;
        }
        else
        {
            showDelay = 300;
        }
    }
    
    $("body").mouseleave(function(){
        $('.menuh_content > div').hide();
        $('#speedbarre .smenu>li a').removeClass("smenu_hover");
    });
    
    function showMenu(id, id2){

        $(id2).click(function(){
            clearInterval(timer);
            hideBlocMenu();
            return;
        });

        speedShowDelay();

        $("body").unbind('click');

        clearInterval(timer);
        if(!$(id).is(':visible'))
        {
            $('.menuh_content > div').hide();

            $('#speedbarre .smenu>li a').removeClass("smenu_hover");
            $('#speedbarre .smenu > li > .speedbarre_arrow').hide();

            timer=setInterval(function(){
                $(id+' ,#speedbar_expand').fadeIn(fadeInDelay);
                $(id2+' a').addClass('smenu_hover')
                clearInterval(timer);

                },showDelay);
        }
    }

    function hideMenu(id, id2){

        clearInterval(timer);
        clearTimeout(hideTimeOut);

        $("body").bind('click',function(){
            hideBlocMenu();
        });

        timer=setInterval(function(){
            $(id).fadeOut(fadeOutDelay,function(){
                $('#speedbar_expand').hide();
                $(id2+' a').removeClass("smenu_hover");
            });
            clearInterval(timer);
        },hiddenDelay)
    }

    function hideBlocMenu(){
        $('.menuh_content > div').fadeOut(fadeOutDelay, function(){
            $('#speedbar_expand').hide();
            $('#speedbarre .smenu>li a').removeClass("smenu_hover");})
    }

        /* speedbar */


    $("#speed_cours").addClass('hideOnLoad');
    $("#speed_forum").addClass('hideOnLoad');
    $("#speed_concours").addClass('hideOnLoad');
    $("#speed_job").addClass('hideOnLoad');
    $("#speed_etudes").addClass('hideOnLoad');
    $("#speed_boutique").addClass('hideOnLoad');



    $(document).mousemove(function(){
        $("#speed_cours").removeClass('hideOnLoad');
        $("#speed_forum").removeClass('hideOnLoad');
        $("#speed_concours").removeClass('hideOnLoad');
        $("#speed_job").removeClass('hideOnLoad');
        $("#speed_etudes").removeClass('hideOnLoad');
        $("#speed_boutique").removeClass('hideOnLoad');
    })


    //TUTORIALS
    $("#speed_cours, #menuh_tutorials").hover(function(){
        clearTimeout(hideTimeOut);
        id = '#menuh_tutorials';
        id2 = '#speed_cours';
        if(!$(id2).hasClass('hideOnLoad'))
        {
            hideTimeOut = setTimeout(function(){
                showMenu(id, id2);
            },100);
        }

    ;},function(){

        id = '#menuh_tutorials';
        id2 = '#speed_cours';
        hideMenu(id, id2);
    });
    //FORUMS
    $("#speed_forum, #menuh_forum").hover(function(){
        clearTimeout(hideTimeOut);
        id = '#menuh_forum';
        id2 = '#speed_forum';

        if(!$(id2).hasClass('hideOnLoad'))
        {
            hideTimeOut = setTimeout(function(){
                showMenu(id, id2);
            },100);
        }

    ;},function(){

        id = '#menuh_forum';
        id2 = '#speed_forum';
        hideMenu(id, id2);
    });

    //COLLABORATE
    $("#speed_concours, #menuh_collaborate").hover(function(){
        clearTimeout(hideTimeOut);
        id = '#menuh_collaborate';
        id2 = '#speed_concours';
        if(!$(id2).hasClass('hideOnLoad'))
        {
            hideTimeOut = setTimeout(function(){
                showMenu(id, id2);
            },100);
        }

    ;},function(){

        id = '#menuh_collaborate';
        id2 = '#speed_concours';
        hideMenu(id, id2);
    });

    //JOB
    $("#speed_job, #menuh_job").hover(function(){
        clearTimeout(hideTimeOut);
        id = '#menuh_job';
        id2 = '#speed_job';
        if(!$(id2).hasClass('hideOnLoad'))
        {
            hideTimeOut = setTimeout(function(){
                showMenu(id, id2);
            },100);
        }

    ;},function(){

        id = '#menuh_job';
        id2 = '#speed_job';
        hideMenu(id, id2);
    });

    //STUDY
    $("#speed_etudes, #menuh_study").hover(function(){
        clearTimeout(hideTimeOut);
        id = '#menuh_study';
        id2 = '#speed_etudes';
        if(!$(id2).hasClass('hideOnLoad'))
        {
            hideTimeOut = setTimeout(function(){
                showMenu(id, id2);
            },100);
        }

    ;},function(){

        id = '#menuh_study';
        id2 = '#speed_etudes';
        hideMenu(id, id2);
    });

    //SHOP
    $("#speed_boutique, #menuh_shop").hover(function(){
        clearTimeout(hideTimeOut);
        id = '#menuh_shop';
        id2 = '#speed_boutique';
        if(!$(id2).hasClass('hideOnLoad'))
        {
            hideTimeOut = setTimeout(function(){
                showMenu(id, id2);
            },100);
        }

    ;},function(){

        id = '#menuh_shop';
        id2 = '#speed_boutique';
        hideMenu(id, id2);
    });

    

</script>
            
            <div class="contenu">
                <div id="menu">
                    

                    <div class="box_menu">
                        <h5>Cours</h5>

                        <div class="corpsmenu">
                            <ul>
                                
                                    <li style="border-bottom: 0 none; padding: 0 0 2px 0; background-color: #e2f0ff">
                                        <a href="http://www.siteduzero.com/tutoriel-3-361996-par-ou-commencer.html"><img style="padding-left:5px;" src="./java_files/compass.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu" style="margin-left: 43px;">
                                            <a href="http://www.siteduzero.com/tutoriel-3-361996-par-ou-commencer.html"><strong class="menu_cours_section">Nouveau ?</strong></a>
                                            <ul>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-361996-par-ou-commencer.html">Suivez le guide !</a></li>
                                            </ul>
                                        </div>
                                    </li>
                                    <li>
                                        <a href="http://www.siteduzero.com/tutoriel-1-67-site-web.html"><img src="./java_files/67.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu">
                                            <a href="http://www.siteduzero.com/tutoriel-1-67-site-web.html"><strong class="menu_cours_section">Site Web</strong></a>
                                            <ul>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-13666-apprenez-a-creer-votre-site-web.html">XHTML / CSS</a></li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-309961-dynamisez-vos-sites-web-avec-javascript.html">Javascript</a></li>
                                                <li>
                                                    <a href="http://www.siteduzero.com/tutoriel-3-14668-concevez-votre-site-web-avec-php-et-mysql.html">
                                                        PHP / MySQL
                                                    </a>
                                                    <a href="http://www.siteduzero.com/boutique-614-107-concevez-votre-site-web-avec-php-et-mysql.html">
                                                        <span class="in_book"><img src="./java_files/ico_livre.png" alt=""></span>
                                                        <span style="display:none">Ce cours existe en livre :<br>Concevez votre site web avec PHP et MySQL</span>
                                                    </a>
                                                </li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-112219-apprenez-a-creer-des-applications-web-dynamiques-avec-jee.html">Java EE (J2EE)</a></li>
                                            </ul>
                                        </div>
                                    </li>
                                    <li>
                                        <a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html"><img src="./java_files/57.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu">
                                            <a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html"><strong class="menu_cours_section">Programmation</strong></a>
                                            <ul>
                                                <li>
                                                    <a href="http://www.siteduzero.com/tutoriel-3-14189-apprenez-a-programmer-en-c.html">
                                                        Langage C
                                                    </a>
                                                    <a href="http://www.siteduzero.com/boutique-614-65-apprenez-a-programmer-en-c.html">
                                                        <span class="in_book"><img src="./java_files/ico_livre.png" alt=""></span>
                                                        <span style="display:none">Ce cours existe en livre :<br>Apprenez à programmer en C</span>
                                                    </a>
                                                </li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-11406-apprenez-a-programmer-en-c.html">Langage C++</a></li>
                                                <li>
                                                    <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-Java.html">
                                                        Java
                                                    </a>
                                                        <a href="http://server1.evonia.fr/tracking/ads_stats2-32325f35385f323533__77c00fc1a6__2748__2-0/http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html">
                                                        <span class="in_book"><img src="./java_files/ico_livre_preco.png" alt=""></span>
                                                        <span style="display:none">Ce livre est en précommande :<br>Apprenez à programmer en Java</span>
                                                    </a>
                                                </li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-119239-programmation-en-java-api.html">Java (API)</a></li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-223267-apprendre-python.html">Python </a></li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-134798-visual_basic_net.html">VB .NET</a></li>
                                            </ul>
                                        </div>
                                    </li>
                                    <li>                                        
                                        <a href="http://www.siteduzero.com/tutoriel-1-60-systemes-d-exploitation.html"><img src="./java_files/60.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu">
                                            <a href="http://www.siteduzero.com/tutoriel-1-60-systemes-d-exploitation.html"><strong class="menu_cours_section">Systèmes d'exploitation</strong></a>
                                            <ul>
                                                <li>
                                                    <a href="http://www.siteduzero.com/tutoriel-3-12827-reprenez-le-controle-a-l-aide-de-linux.html">
                                                        Linux
                                                    </a>
                                                    <a href="http://www.siteduzero.com/boutique-614-171-reprenez-le-controle-a-l-aide-de-linux.html">
                                                        <span class="in_book"><img src="./java_files/ico_livre.png" alt=""></span>
                                                        <span style="display:none">Ce cours existe en livre :<br>Reprenez le contrôle a l'aide de Linux</span>
                                                    </a>
                                                </li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-273305-freebsd-et-l-envers-du-decor.html">FreeBSD</a></li>
                                            </ul>
                                        </div>
                                    </li>
                                    <li>
                                        <a href="http://www.siteduzero.com/tutoriel-1-56-graphisme.html"><img src="./java_files/56.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu">
                                            <a href="http://www.siteduzero.com/tutoriel-1-56-graphisme.html"><strong class="menu_cours_section">Graphisme</strong></a>
                                            <ul>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-351765-debuter-sur-adobe-photoshop.html">Photoshop</a></li>
                                            </ul>
                                        </div>
                                    </li>
                                    <li>
                                        <a href="http://www.siteduzero.com/tutoriel-1-58-infographie-3d.html"><img src="./java_files/58.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu">
                                            <a href="http://www.siteduzero.com/tutoriel-1-58-infographie-3d.html"><strong class="menu_cours_section">Infographie 3D</strong></a>
                                            <ul>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-11714-debutez-dans-la-3d-avec-blender.html">Blender</a></li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-228998-apprenez-a-modeliser-en-3d-avec-autodesk-maya.html">Maya</a></li>
                                            </ul>
                                        </div>
                                    </li>

                                    <li>
                                        <a href="http://www.siteduzero.com/tutoriel-1-55-bureautique.html"><img src="./java_files/55.png" class="fl" alt=""></a>
                                        <div class="liste_cours_menu">
                                            <a href="http://www.siteduzero.com/tutoriel-1-55-bureautique.html"><strong class="menu_cours_section">Bureautique</strong></a>
                                            <ul>
                                                <li>
                                                    <a href="http://www.siteduzero.com/tutoriel-3-258577-redigez-des-documents-de-qualite-professionnelle-avec-latex.html">
                                                        LaTeX
                                                    </a>
                                                    <a href="http://www.siteduzero.com/boutique-614-207-redigez-des-documents-de-qualite-professionnelle-avec-latex.html">
                                                        <span class="in_book"><img src="./java_files/ico_livre.png" alt=""></span>
                                                        <span style="display:none">Ce cours existe en livre :<br>Rédigez des documents de qualité avec LaTeX</span>
                                                    </a>
                                                </li>
                                                <li><a href="http://www.siteduzero.com/tutoriel-3-417000-redigez-facilement-des-documents-avec-word.html">Word<img style="margin-left: 10px;" alt="" src="./java_files/iconouveau.png"></a></li>
                                            </ul>
                                        </div>
                                    </li>
                                    
                                    
                                    <li>
                                        <img src="./java_files/die.png" class="fl" alt="">
                                        <div class="liste_cours_menu">
                                            <strong class="menu_cours_section">Tutoriel du jour</strong><br>
                                            <ul>
                                                <li>
                                                    <a href="http://www.siteduzero.com/tutoriel-3-33156-faire-un-menu-similaire-a-celui-du-design-popup.html">Faire un menu similaire à celui du design PopUp</a>
                                                </li>
                                            </ul>
                                        </div>
                                    </li>
                                
                                <li class="last_idem_liste">
                                    <div id="menu_ajout_cours">
                                        <ul>
                                            <li>
                                                
                                                    <a href="http://www.siteduzero.com/tutoriel-3-256867-devenez-auteur-de-cours-sur-le-site-du-zero-et-le-livre-du-zero.html">
                                                
                                                Rédigez un cours <img src="./java_files/add.png" alt="">&nbsp;</a>
                                             </li>
                                             <li>
                                                 <a href="http://www.siteduzero.com/tutoriel.html" title="Tous les cours">Tous les cours  <img src="./java_files/fleche_droite.png" alt="">&nbsp;</a>
                                             </li>
                                         </ul>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>

                <div id="corps">
                    <div id="zozor_position">
                        <div id="zozor">
                            <div class="centre"><img src="./java_files/zozor6.png" alt=" Zozor" title=" Zozor"></div>
                       </div>
                    </div>

                    <div id="container_bulle_zozor">
                        
                    </div>

                    <div id="arbre">
                        
			&gt;  <a href="http://www.siteduzero.com/">Le Site du Zéro</a>
		
			&gt;  <a href="http://www.siteduzero.com/tutoriel.html">Cours</a>
			 &gt;  <a href="http://www.siteduzero.com/tutoriel-1-352-tutoriels.html">Tutoriels</a>
		 &gt;  <a href="http://www.siteduzero.com/tutoriel-1-57-programmation.html">Programmation</a>
		 &gt;  <a href="http://www.siteduzero.com/tutoriel-2-178-java.html">Java</a>
		&gt;  <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html">Programmation en Java</a> 

&gt; Lecture du tutoriel

                    </div>

                    


<h1>Programmation en Java</h1>


<div id="onglets_tutos" class="onglets_tutos">
  <ul>
    
      <li class="selected">
      <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html">Tutoriel</a></li>
    
      <li>
      <a href="http://www.siteduzero.com/tutoriel-50-10601-p10-programmation-en-java.html#r71292">274 commentaires</a></li>
    
      <li>
      <a href="http://www.siteduzero.com/tutoriel-21-10601-programmation-en-java.html">Historique</a></li>
    
  </ul>
</div>
<hr class="bas_onglets">





<div class="cadre_auteur_date">
  <form action="http://www.siteduzero.com/tutoriel-54-10601.html" method="post">
    <div class="dnone"><input type="hidden" value="4bca73605591512818aaf350fccd8ca9b6e9bf3c" name="challenge"></div>

    <div class="infobox">
<h3 class="special">Informations sur le tutoriel</h3>
<div class="conteneur_infobox">
<table>
  <tbody><tr>
    <td>
    <div class="boite_avatar_100px">
      <a href="http://www.6boy.info/"><img src="./java_files/184014.jpg" style="width:91px; height:91px; display: block;" alt="Avatar" class="avatar" id="avatar875"></a>  
     </div>
    </td>
    <td>
     
      <strong>Auteur</strong> :
      
    
	    <a class="auteur_tut" href="http://www.siteduzero.com/membres-294-875.html">cysboy</a>
    
      <br>
    
      
		  <strong>Difficulté</strong> :
		  
			<img src="./java_files/niveau_2.png" alt="Intermédiaire">
		  
		  <br>
	  <strong>Licence</strong> : <a href="http://creativecommons.org/licenses/by-nc-sa/2.0/fr/"><img src="./java_files/6.png" alt="Creative Commons BY-NC-SA" title="Creative Commons BY-NC-SA"></a><br><br>
      <br>
      <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#tuto_details" onclick="return false;" id="tuto_details_plus">Plus d'informations <img src="./java_files/fleche_bas.png" alt="Plus d&#39;informations" title="Plus d&#39;informations" id="image_detail"></a>
      <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#onglets_tutos" onclick="return false;" id="tuto_details_moins" style="display : none;">Moins d'informations <img src="./java_files/fleche_haut.png" alt="Plus d&#39;informations" title="Plus d&#39;informations" id="image_detail_moins"></a>
      <script type="text/javascript">
          var lien_plus = document.getElementById('tuto_details_plus');
          var lien_moins = document.getElementById('tuto_details_moins');

          var toggleDetails = function()
          {
              toggle('infos_detaillees');
              toggle('tuto_details_plus');
              toggle('tuto_details_moins');
              return false;
          };

          if(lien_plus.addEventListener)
          {
              lien_plus.addEventListener('click', toggleDetails , false);
          } else
          {
              lien_plus.attachEvent('onclick', toggleDetails);
          }

          if(lien_moins.addEventListener)
          {
              lien_moins.addEventListener('click', toggleDetails , false);
          } else
          {
              lien_moins.attachEvent('onclick', toggleDetails);
          }
          
      </script>

      <div style="display: none;" id="infos_detaillees">
	<br>			
<strong>Créé</strong> : Le 21/06/2006 à 15:02:22<br>
<strong>Modifié</strong> : Le 12/02/2010 à 11:20:29<br>

<strong>Avancement</strong> : 100%<br>

<br>


<a href="http://www.siteduzero.com/tutoriel-50-10601-71292-programmation-en-java.html#r71292">274 commentaires</a><br>

  <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html">Revenir au sommaire du tutoriel</a><br>


      </div>

    </td>
  </tr>
</tbody></table>
</div>
</div>


    <div class="infobox">
        <h3 class="special">Popularité</h3>
        <div class="conteneur_infobox">
            <strong>Visualisations</strong> : 2&nbsp;109&nbsp;992&nbsp;859<br><br>
            <div style="padding-top: 1px; float: left;"><strong>Appréciation<br>des lecteurs</strong> : </div>
            <div class="tut_appreciation">
                <div class="tut_appreciation_smiley" id="smiley-1-88--593526" style="background-position: -19px 50%;"><img src="./java_files/empty.gif" alt=""></div>
                <span id="eval_nb-1">47</span>
            </div>
            <div class="tut_appreciation">
                <div class="tut_appreciation_smiley" id="smiley-2-88--593526" style="background-position: -57px 50%;"><img src="./java_files/empty.gif" alt=""></div>
                <span id="eval_nb-2">42</span>
            </div>
            <div class="tut_appreciation">
                <div class="tut_appreciation_smiley" id="smiley-3-88--593526" style="background-position: -95px 50%;"><img src="./java_files/empty.gif" alt=""></div>
                <span id="eval_nb-3">70</span>
            </div>
            <div class="tut_appreciation">
                <div class="tut_appreciation_smiley eval_always_color" id="smiley-4-88--593526" style="background-position: -114px 50%;"><img src="./java_files/empty.gif" alt=""></div>
                <span id="eval_nb-4">464</span>
            </div>
            
            <div style="clear: both;"></div>
                
                    <p id="tut_vot_ldz" style="text-align:center;"><a href="http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html"><img src="./java_files/430.png" id="tut_vot_ldz_img" alt=""></a>
                        Retrouvez ce tutoriel en livre dans la <a href="http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html">boutique</a>
                
            </p>
        </div>
    </div>


<div class="infobox" id="pave_pub_tuto" style="display: block; ">
<h3 class="special">Publicité</h3>
<div class="conteneur_infobox">
<table style="width: 100%;">
  <tbody><tr>
    <td colspan="2" id="menu_pub_tuto">


        
            <script type="text/javascript">
                <!--
                ord=Math.random();
                ord=ord*10000000000000000000;
                var test = true;
                document.write('<scr'+'ipt type="text/javascript" src="pub.js.php?cb='+ord+'&amp;l=300&amp;h=250&amp;age=0&amp;afficher_bloc_pub=pave_pub_tuto&amp;cid=178&amp;pays=0"><\/scr'+'ipt>');
                -->
            </script><script type="text/javascript" src="./java_files/pub.js(1).php"></script><iframe src="./java_files/cm.htm" marginwidth="0" marginheight="0" width="300" height="250" border="0" frameborder="0" style="border:none;" scrolling="no"></iframe>
        
    </td>
  </tr>
</tbody></table>
</div>
</div>

    
	<div class="infobox">
		<h3 class="special">Historique des mises à jour</h3>
		<div class="conteneur_infobox">
			<ul>
				
					<li>
						<em>Hier à 11:25:50</em><br>
						Ajout du lien du livre.
					</li>
			  
					<li>
						<em>Le 01/03/2011 à 08:59:27</em><br>
						Correction orthographique suite au report #3994
					</li>
			  
					<li>
						<em>Le 01/03/2011 à 08:56:18</em><br>
						Correction orthographique suite au report #3999
					</li>
			  
			</ul>
		</div>
	</div>


    
  </form>
</div>

<div id="btuto_intro">
	Bonjour à tous, amis Zéros !  <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
<br>
Bienvenue dans mon cours de programmation en Java. C'est un langage très utilisé, notamment par un grand nombre de programmeurs professionnels, ce qui en fait un langage incontournable actuellement.<br>
<br>
Voici les caractéristiques de Java en quelques mots :<br>
<br>
<ul>
<li>Java est un langage de programmation moderne développé par <strong>Sun Microsystems</strong> (aujourd'hui racheté par <strong>Oracle</strong>). Il ne faut surtout pas le confondre avec JavaScript (langage de scripts utilisé principalement sur les sites web), car Java n'a rien à voir.</li>
<li>Une de ses plus grandes forces est son excellente portabilité : une fois votre programme créé, il fonctionnera automatiquement sous Windows, Mac, Linux, etc.</li>
<li>On peut faire de nombreuses sortes de programmes avec Java :<br>
<ul>
<li>des <span class="bleu">applications</span>, sous forme de fenêtre ou de console ;</li>
<li>des <span class="bleu">applets</span>, qui sont des programmes Java incorporés à des pages web ;</li>
<li>des applications pour <span class="bleu">appareils mobiles</span>, avec <acronym title="Java 2 Micro Edition">J2ME</acronym> ;</li>
<li>et bien d'autres ! <acronym title="Java 2 Enterprise Edition">J2EE</acronym>, <acronym title="Java Media Framework">JMF</acronym>, <acronym title="Java 3D">J3D</acronym> pour la 3D...</li>
</ul></li>
</ul><br>
Comme vous le voyez, Java permet de réaliser une très grande quantité d'applications différentes ! Mais... comment apprendre un langage si vaste qui offre autant de possibilités ? <img src="./java_files/blink.gif" alt="o_O" class="smilies"><br>
<br>
Heureusement, ce cours est là pour tout vous apprendre de Java à partir de zéro <img src="./java_files/smile.png" alt=":)" class="smilies"> .<br>
<br>
<div class="centre"><a href="http://uploads.siteduzero.com/files/111001_112000/111842.jpg"><img src="./java_files/111842.jpg" alt="Application Java"></a> <a href="http://uploads.siteduzero.com/files/111001_112000/111841.jpg"><img src="./java_files/111841.jpg" alt="Application Java"></a> <a href="http://uploads.siteduzero.com/files/111001_112000/111843.jpg"><img src="./java_files/111843.jpg" alt="Application Java"></a><br>
<span class="italique">Exemples de programmes réalisés en Java</span></div><br>
<br>
<div class="flot_gauche"><a href="http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html"><img src="./java_files/297512.png" alt="Image utilisateur"></a></div><br>
Ce cours vous plaît ?<br>
Si vous avez aimé ce cours, vous pouvez retrouver le livre "<a href="http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html">Apprenez à programmer en Java</a>" du même auteur, en vente <a href="http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html">sur le Site du Zéro</a>. Vous y trouverez ce cours adapté au format papier avec une série de chapitres inédits.<br>
<br>
<a href="http://www.siteduzero.com/boutique-614-430-apprenez-a-programmer-en-java.html">Plus d'informations</a><br>
<br>
<br>
<br>
<br>
<br>
<br>
<span class="tpetit"><span class="souligne">N.B.</span> : je tiens à faire une dédicace spéciale à ptipilou, zCorrecteur émérite, sans qui ce tuto n'aurait pas vu le jour !<br>
Un grand merci pour ton travail et ton soutien ! <img src="./java_files/smile.png" alt=":)" class="smilies"></span>
</div>

<hr>



<div id="pre_liste_parties">
	Ce cours est composé des parties suivantes :
</div>

<ul id="liste_parties">
	
		<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#part_10600">Bien commencer en Java</a></li>
	
		<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#part_10602">Java Orienté Objet</a></li>
	
		<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#part_10599">Java et la programmation événementielle</a></li>
	
		<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#part_65564">Les Design patterns</a></li>
	
		<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#part_65580">Annexes</a></li>
	
</ul>
		<ul class="liste_parties_btut">
		
		<li>
		<hr class="separateur_parties">
		<h2 id="part_10600">Partie 1 : Bien commencer en Java</h2>
		<div>
			Bon, vous ne connaissez rien à Java ? Eh bien c'est par ici que ça se passe ! Java est normalement un langage fait pour développer des applications graphiques, mais pour arriver à cela, nous devons tout de même passer par la programmation Java en mode console.<br>
<br>
Donc, dans cette première partie, nous allons voir <span class="bleu">les bases du langage</span>, ainsi que leur fidèle compagnon <span class="bleu">Eclipse</span>.
		</div>
			
				<ul class="liste_chapitres_btut">
				
					<li>
						<br><br><a href="./java_files/java.htm">1) Parlons d'Eclipse</a>
						<div class="icone_chap">
							
								<img src="./java_files/10247.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10257">Préambule</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10256">Téléchargement</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10255">Installation</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10254">Présentation rapide de l'interface</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10253">D'autres outils à la hauteur</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10268">2) Votre premier programme</a>
						<div class="icone_chap">
							
								<img src="./java_files/10259.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10267">Mieux connaitre son environnement Java</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10266">Avant de commencer</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10265">Votre premier programme</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10264">Compilation en ligne de commande (Windows)</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10276">3) Les variables et les opérateurs</a>
						<div class="icone_chap">
							
								<img src="./java_files/10269.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10275">Les différents types de variables</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10274">Les opérateurs arithmétiques</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10278">Les conversions, ou "cast"</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10277">Astuce d'Eclipse</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10284">4) Lire les entrées clavier</a>
						<div class="icone_chap">
							
								<img src="./java_files/10279.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10283">Utilisation de l'objet Scanner</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10282">Récupérez ce que vous tapez</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10296">5) Les conditions</a>
						<div class="icone_chap">
							
								<img src="./java_files/10285.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10295">Les opérateurs logiques</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10294">La structure if....else</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10293">Les conditions multiples</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10292">La structure switch</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10291">La condition ternaire</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10304">6) Les boucles</a>
						<div class="icone_chap">
							
								<img src="./java_files/10297.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10303">La boucle while</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10302">La boucle do....while</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10301">La boucle for</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10312">7) TP n°1 : un tableau de conversion Celsius - Fahrenheit !</a>
						<div class="icone_chap">
							
								<img src="./java_files/10305.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10311">Élaboration</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10310">Conception</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10309">Correction</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10320">8) Les tableaux</a>
						<div class="icone_chap">
							
								<img src="./java_files/10313.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10319">Déclarer et initialiser un tableau</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10318">Les tableaux multi-dimensionnels</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10317">Utiliser et rechercher dans un tableau !</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10328">9) Les méthodes de classe</a>
						<div class="icone_chap">
							
								<img src="./java_files/10321.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10327">Quelques méthodes bien utiles !</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10326">Créer et utiliser sa propre méthode !</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10325">La surcharge de méthode</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
				</ul>
				<div>
					<br>
					J'ose espérer que vous avez apprécié ce tuto sur les bases du langage Java ! En tout cas, je me suis bien amusé en le faisant.<br>
<br>
Maintenant, nous allons rentrer dans les méandres de la programmation orientée objet !<br>
Alors ?... Toujours prêts ?  <img src="./java_files/langue.png" alt=":p" class="smilies">
				</div>
			
		</li>
		
		<li>
		<hr class="separateur_parties">
		<h2 id="part_10602">Partie 2 : Java Orienté Objet</h2>
		<div>
			Dans cette partie, nous allons aborder la programmation orientée objet. Concept de programmation extrêmement puissant et pratique.<br>
En effet, vous verrez qu'avec ce type de programmation, vous pourrez créer, utiliser, recréer divers objets et les utiliser dans un but que vous seuls aurez décidé.<br>
<br>
<div class="rmq information">J'aborderai ce que j'ai pu voir durant ma formation, et uniquement cela... Mais je vous rassure : il y a déjà du travail...<br>
</div><br>
Cette partie sera extrêmement riche en concepts, vocabulaire et méthodologie. Entre autres, vous saurez programmer en <span class="souligne">orienté objet</span>, vous pourrez enregistrer vos objets dans des fichiers...<br>
<br>
J'ajouterai aussi quelques notions de modélisation. Ceci dans le but de vous familiariser avec la façon de schématiser des objets et leurs interactions entre eux. Nous y reviendrons, mais il s'agira de diagrammes de classes utilisés avec le langage <a href="http://fr.wikipedia.org/wiki/Unified_Modeling_Language">UML</a> (Unified Modeling Language).<br>
<br>
Une longue introduction ne servirait à rien... passons donc tout de suite à la première partie.
		</div>
			
				<ul class="liste_chapitres_btut">
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10343">1) Les premiers pas en "Orienté Objet"</a>
						<div class="icone_chap">
							
								<img src="./java_files/10330.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10342">Les classes</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10341">Les constructeurs</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10340">Votre objet sait parler : accesseurs et mutateurs</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10339">Travaillez avec votre objet : les méthodes</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10338">Les variables de classes</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10345">Astuce Eclipse</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10344">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10355">2) L'héritage !</a>
						<div class="icone_chap">
							
								<img src="./java_files/10346.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10354">La notion d'héritage</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10353">Construction d'un objet hérité</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10352">Le polymorphisme</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10351">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10363">3) Apprendre à modéliser</a>
						<div class="icone_chap">
							
								<img src="./java_files/27751.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10362">UML, mais qu'est-ce donc ?</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10361">Modéliser un objet</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10360">Modéliser les interactions entre objets</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10373">4) Les classes abstraites</a>
						<div class="icone_chap">
							
								<img src="./java_files/10364.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10372">Qu'est-ce que c'est ?</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10371">Une classe Animal très abstraite</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10370">Étoffons notre exemple</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10375">Astuce d'Eclipse</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10374">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10387">5) Les interfaces</a>
						<div class="icone_chap">
							
								<img src="./java_files/10376.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10386">Une petite devinette</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10385">Votre première interface</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10384">Implémentation de l'interface Rintintin</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10383">Astuce d'Eclipse</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10382">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10399">6) Les exceptions</a>
						<div class="icone_chap">
							
								<img src="./java_files/10388.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10398">Premier exemple d'exception et le bloc try{....} catch{...}</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10397">Les exceptions personnalisées</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10396">La gestion de plusieurs exceptions</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10395">Astuce d'Eclipse</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10394">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10409">7) Les collections d'objets</a>
						<div class="icone_chap">
							
								<img src="./java_files/10400.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10408">L'objet LinkedList</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10407">L'objet ArrayList</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10406">L'objet Hashtable</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10405">L'objet HashSet</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10421">8) La généricité en Java</a>
						<div class="icone_chap">
							
								<img src="./java_files/10410.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10420">Notion de base</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10419">Plus loin dans la généricité !</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10418">Généricité et collection</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10417">Héritage et généricité</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10416">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10431">9) Java et la réflexivité</a>
						<div class="icone_chap">
							
								<img src="./java_files/10422.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10430">Commençons par le commencement</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10429">Interroger un objet Class</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10428">Instanciation dynamique</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10427">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
				</ul>
				<div>
					<br>
					J'espère que cette partie vous a plu et que vous avez appris plein de bonne choses !<br>
J'ai volontairement omis de parler des <span class="italique"><strong>flux</strong></span> et des <strong><span class="italique">threads</span></strong> dans cette partie. Je préfère avoir des cas bien concrets à vous soumettre pour ça...<br>
<br>
Bon : je sais que beaucoup d'entre vous l'attendent avec impatience, alors voici la partie sur la <strong><span class="vertf"><span class="gros">programmation événementielle </span></span></strong>!
				</div>
			
		</li>
		
		<li>
		<hr class="separateur_parties">
		<h2 id="part_10599">Partie 3 : Java et la programmation événementielle</h2>
		<div>
			Dans cette partie, nous aborderons la programmation événementielle comme le stipule le titre.<br>
Par là, entendez <strong><span class="italique">programmation d'interface graphique</span></strong>, ou <acronym title="Interfaces Hommes Machines">IHM</acronym>, ou encore <acronym title="Graphicals Users Interfaces">GUI</acronym>.<br>
<br>
Nous utiliserons essentiellement les bibliothèques <strong><span class="violet"><span class="courrier">Swing</span></span></strong> et <strong><span class="violet"><span class="courrier"><acronym title="Abstract Window Toolkit">AWT</acronym> </span></span></strong>présentes d'office dans Java. <br>
<br>
Nous verrons ce qui forme, je pense, les fondements de base ! Nous n'entrerons pas dans les détails, enfin pas trop... <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
Je ne vais pas faire de long discours maintenant, je sais que vous êtes impatients... alors go !
		</div>
			
				<ul class="liste_chapitres_btut">
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10444">1) Votre première fenêtre</a>
						<div class="icone_chap">
							
								<img src="./java_files/10433.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10443">L'objet JFrame</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10442">Votre fenêtre héritée</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10441">Des méthodes et encore des méthodes</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10440">Ce que vous cache votre fenêtre</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10439">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10456">2) Une histoire de conteneur</a>
						<div class="icone_chap">
							
								<img src="./java_files/10445.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10455">Créez un conteneur pour votre fenêtre</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10454">L'objet Graphics</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10453">Plus loin dans le Graphics</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10452">Le cousin caché : l'objet Graphics2D</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10451">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10466">3) Faire une animation simple</a>
						<div class="icone_chap">
							
								<img src="./java_files/10457.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10465">Les déplacements : principe</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10464">Continue, ne t'arrêtes pas si vite !</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10463">Attention aux bords, ne va pas te faire mal...</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10462">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10480">4) Votre premier bouton</a>
						<div class="icone_chap">
							
								<img src="./java_files/10467.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10479">Utiliser la classe JButton</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10478">Les layout managers</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10477">Continuons dans notre lancée</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10476">Une classe Bouton personnalisée</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10475">Interaction avec la souris : l'interface MouseListener</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10474">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10492">5) Interaction bouton(s) - application</a>
						<div class="icone_chap">
							
								<img src="./java_files/10481.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10491">Déclencher une action : l'interface ActionListener</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10490">Parlez avec votre classe intérieure</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10489">Contrôler votre animation : lancement et arrêt</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10488">Cadeau : votre bouton personnalisé optimisé !</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10487">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10500">6) TP : une calculatrice</a>
						<div class="icone_chap">
							
								<img src="./java_files/10493.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10499">Élaboration</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10498">Conception</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10502">Correction</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10501">Astuce Eclipse : faire un jar exécutable</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10516">7) Les threads</a>
						<div class="icone_chap">
							
								<img src="./java_files/10503.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10515">Principes et bases</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10514">Une classe héritée de Thread</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10513">Utiliser l'interface Runnable</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10512">Synchronisez vos threads</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10511">Contrôlez votre animation</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10510">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10526">8) Les listes : l'objet JComboBox</a>
						<div class="icone_chap">
							
								<img src="./java_files/10517.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10525">Première utilisation</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10524">L'interface ItemListener</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10523">Changer la forme de notre animation</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10522">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10532">9) Les cases à cocher : l'objet JCheckBox</a>
						<div class="icone_chap">
							
								<img src="./java_files/10527.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10536">Premier exemple</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10535">Un pseudo-morphing pour notre animation</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10534">Les boutons radio : l'objet JRadioButton</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10533">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10550">10) Les champs de texte : l'objet JTextField</a>
						<div class="icone_chap">
							
								<img src="./java_files/10537.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10549">Utilisation</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10548">Un objet plus restrictif : le JFormattedTextField</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10547">Contrôlez vos données post-saisie</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10546">Utiliser des regex</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10545">Contrôle du clavier : l'interface KeyListener</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10544">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10564">11) Les applets</a>
						<div class="icone_chap">
							
								<img src="./java_files/10551.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10563">Les applets : quésaco ?</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10562">Votre première applet</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10561">Interaction page web - applet</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10560">Interaction applet - page web</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10559">Applets et sécurité</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10558">Ce que vous devez retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10576">12) Les boîtes de dialogue</a>
						<div class="icone_chap">
							
								<img src="./java_files/10565.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10575">Les boîtes d'information</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10574">Les boîtes de confirmation</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10573">Les boîtes de saisie</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10572">Des boîtes de dialogue personnalisées</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10571">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10588">13) Les menus</a>
						<div class="icone_chap">
							
								<img src="./java_files/10577.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10587">La barre de menus et les éléments de menu</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10586">Faire un menu contextuel</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10585">Les barres d'outils</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10584">Utiliser les actions abstraites</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10583">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_10596">14) TP : l'ardoise maZique</a>
						<div class="icone_chap">
							
								<img src="./java_files/10589.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10595">Cahier des charges</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10594">Prérequis</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10598">Correction</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_10597">Améliorations possibles</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65524">15) Les flux d'entrées / sorties (1/2)</a>
						<div class="icone_chap">
							
								<img src="./java_files/10782.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65523">Les flux : qu'est-ce donc ?</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65530">L'objet File</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65529">Les objets FileInputStream et FileOutputStream</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65528">Les flux filtrés : les classes FilterInputStream et FilterOutputStream</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65527">La sérialisation : les objets ObjectInputStream et ObjectOutputStream</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65526">Cas pratique</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65525">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65532">16) Les flux d'entrées / sorties (2/2)</a>
						<div class="icone_chap">
							
								<img src="./java_files/10790.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65531">Les objets CharArray(Writer/Reader) et  String(Writer/Reader)</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65534">les classes File(Writer/Reader) et Print(Writer/Reader)</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65533">Du renouveau chez les flux : le package java.nio</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65538">17) TP : Le penduZ</a>
						<div class="icone_chap">
							
								<img src="./java_files/10794.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65537">Cahier des charges</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65536">Prérequis</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65535">Correction</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65571">18) Gérez vos conteneurs</a>
						<div class="icone_chap">
							
								<img src="./java_files/57354.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65583">Rendre vos conteneurs fractionnables</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65582">Ajouter des scrolls</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65569">Avoir plusieurs contenus</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65573">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65570">19) Les arbres</a>
						<div class="icone_chap">
							
								<img src="./java_files/59793.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65568">La composition des arbres</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65567">Des arbres qui vous parlent</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65581">Décorez vos arbres</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65566">Jouons avec nos arbres</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65574">Ce que vous devez retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_71859">20) Les tableaux, les vrais</a>
						<div class="icone_chap">
							
								<img src="./java_files/66171.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_71858">Premiers pas</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_71855">Les cellules, c'est la vie</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_71862">Contrôlez l'affichage de vos cellules</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_71863">Des tableaux très actifs !</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_71856">Ajouter des lignes et des colonnes</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_71852">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65572">21) Ce que vous pouvez voir en plus</a>
						<div class="icone_chap">
							
								<img src="./java_files/57350.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_96674">D'autres conteneurs graphiques</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_96673">D'autres objets graphiques</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_96672">Enjoliver vos IHM</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
				</ul>
				<div>
					<br>
					Vous en avez fini avec la partie événementielle.<br>
Et le tuto s'arrête ici !<br>
<br>
J'espère que vous avez appris tout plein de choses et que vous commencez à faire des choses sympa avec ce langage de programmation.<br>
<br>
Il y a de quoi faire niveau IHM... Vous devez vous en rendre compte. <img src="./java_files/hihi.png" alt="^^" class="smilies">
				</div>
			
		</li>
		
		<li>
		<hr class="separateur_parties">
		<h2 id="part_65564">Partie 4 : Les Design patterns</h2>
		<div>
			Ceci est en fait un complément du tuto Java mais vous devez savoir que les chapitres qui suivent peuvent s'adapter à beaucoup de langages (PHP, C#...).<br>
<br>
Dans cette partie, vous pourrez voir et utiliser ce qu'on appelle des <strong><span class="italique">design patterns</span></strong> ou, en français, des modèles de conceptions. <br>
La conception est la phase qui intervient avant le codage, lorsque vous réfléchissez : <br>
<ul>
<li>aux classes dont vous aurez besoin ;</li>
<li>à savoir lier telle classe avec telle autre ;</li>
<li>au type d'interfaces que vous souhaitez créer ;</li>
<li>au type de classes abstraites que vous désirez coder ;</li>
<li>...</li>
</ul><br>
<br>
Afin de schématiser ceci, vous pouvez faire des dessins, mais il y a mieux !<br>
Dans la partie 2, je vous ai initiés ttrrèèèsssss rapidement à UML : nous allons l'utiliser de nouveau ici afin de schématiser les situations.<br>
<br>
Vous constaterez qu'il y a de nombreux DP (j'utiliserai cette abréviation à partir de maintenant) et qu'ils peuvent être extrêmement pratiques.<br>
<br>
Dîtes-vous bien que, malgré le temps que vous passez à coder, quelqu'un d'autre a rencontré, à un moment donné, les mêmes problèmes de conception que vous. Et vous en avez peut-être un en ce moment, sans même le savoir. <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
Rassurez-vous, car d'autres ont trouvé une solution : <br>
<ul>
<li>évolutive ;</li>
<li>souple ;</li>
<li>résistante.</li>
</ul><br>
<br>
L'un des buts des DP est de vous fournir des solutions afin de rendre vos codes moins assujettis à la modification. Je pense qu'après le premier chapitre vous comprendrez mieux ce que je veux dire... Mais il va y avoir une constante, dans cette partie ! <br>
<br>
<strong>Nous partirons du postulat que votre programme est amené à connaître des changements, majeurs ou mineurs. Ces changements pourront être de plusieurs natures mais au final, le but est d'avoir un code réutilisable et non modifiable : on dit aussi "<strong><span class="italique"><span class="vertf">hermétique à la modification</span></span></strong>".</strong><br>
<br>
Je me doute que vous devez être sceptique... Je vous propose donc de commencer !
		</div>
			
				<ul class="liste_chapitres_btut">
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65563">1) Les limites de l'héritage : le pattern strategy</a>
						<div class="icone_chap">
							
								<img src="./java_files/10799.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65562">Posons le problème</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65559">Un problème supplémentaire</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65558">Une solution simple et robuste : le pattern strategy</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65556">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65552">2) Ajouter des fonctionnalités dynamiquement à vos objets : le pattern decorator</a>
						<div class="icone_chap">
							
								<img src="./java_files/10804.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65551">Posons le problème</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65550">Le pattern decorator</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65549">Les mystères de java.io</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65548">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65547">3) Soyez à l'écoute de vos objets : le pattern observer</a>
						<div class="icone_chap">
							
								<img src="./java_files/10809.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65546">Posons le problème</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65544">Des objets qui parlent et qui écoutent : le pattern observer</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65543">le pattern observer : le retour</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65542">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65541">4) Un pattern puissant : le pattern MVC</a>
						<div class="icone_chap">
							
								<img src="./java_files/10814.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65540">Premiers pas</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65561">Le modèle</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65560">Le contrôleur</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65557">La vue</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65555">MVC pour le web : le pattern M2VC</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65553">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65554">5) Un véritable assemblage : le pattern composite</a>
						<div class="icone_chap">
							
								<img src="./java_files/60052.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65565">Creusez-vous les méninges</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65545">La solution : le pattern composite</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_71854">Le composite et Java</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_71853">Ce qu'il faut retenir</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
				</ul>
				<div>
					<br>
					J'espère sincèrement que cette partie vous a permis d'y voir plus clair dans les méandres des DP !<br>
Vous conviendrez que ceux-ci sont très utiles et vous permettent de faire des applications plus faciles à maintenir, modifier, faire évoluer...
				</div>
			
		</li>
		
		<li>
		<hr class="separateur_parties">
		<h2 id="part_65580">Partie 5 : Annexes</h2>
		<div>
			Voici une annexe afin de vous fournir un complément sur certains des chapitres vus jusqu'ici ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
		</div>
			
				<ul class="liste_chapitres_btut">
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65579">1) Annexe A : liste des mots clés</a>
						<div class="icone_chap">
							
								<img src="./java_files/10822.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65578">Les mots clés</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_65577">2) Annexe B : Les objets travaillant avec des flux</a>
						<div class="icone_chap">
							
								<img src="./java_files/10824.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65576">Les objets traitant des flux d'entrée (in)</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_65575">Les objets traitant les flux de sortie (out)</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
					<li>
						<br><br><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#chap_71861">3) Annexe C : Eclipse</a>
						<div class="icone_chap">
							
								<img src="./java_files/65903.png" alt="Icône du chapitre" class="icone_chapitre">
							
						</div>
						<div class="droite_chapitre">
						<ul class="liste_btuto_chap">
							
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_71860">Installation</a></li>
								
									<li><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#ss_part_71857">Raccourcis utiles</a></li>
								
						</ul>
						</div>
						<div class="clearer"> </div>
					</li>
				
				</ul>
				<div>
					<br>
					En espérant que celle-ci vous a été utile.
				</div>
			
		</li>
		
		</ul>

<hr>
<h2>Partie 1 : Bien commencer en Java</h2>
<div>
Bon, vous ne connaissez rien à Java ? Eh bien c'est par ici que ça se passe ! Java est normalement un langage fait pour développer des applications graphiques, mais pour arriver à cela, nous devons tout de même passer par la programmation Java en mode console.<br>
<br>
Donc, dans cette première partie, nous allons voir <span class="bleu">les bases du langage</span>, ainsi que leur fidèle compagnon <span class="bleu">Eclipse</span>.
</div>
	
	<hr>
	<h1 id="chap_10258">Parlons d'Eclipse</h1>
	<div id="chap_intro">
	Pour ceux qui l'avaient deviné, Eclipse est le petit logiciel qui va nous permettre de développer nos applications, ou nos applets, et aussi celui qui va compiler tout ça.<br>
Eh oui ! Java est un langage compilé. Je ne l'avais pas dit, je crois... <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
 <br>
Donc, notre logiciel va permettre de traduire nos futurs programmes Java en langage compilé. Mais celui-ci ne peut pas être compris par l'ordinateur. Ce code compilé s'appelle du <strong>Byte Code</strong>. Il n'est compréhensible que par un environnement Java, vulgairement appelé JRE (<span class="italique">Java Runtime Environment</span>) disponible sur le site de Sun MicroSystems.
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10257">Préambule</h2>
		<div class="ss_part_texte">
		Avant toute chose, quelques mots sur le projet Eclipse.<br>
<br>
<strong>Eclipse IDE</strong> est un environnement de développement libre permettant potentiellement de créer des projets de développement mettant en œuvre n'importe quel langage de programmation (C++, PHP...). Eclipse IDE est principalement écrit en Java. <br>
<br>
La spécificité d'Eclipse IDE vient du fait que son architecture est totalement développée autour de la notion de <strong>plug-in</strong>. Cela signifie que toutes les fonctionnalités de celui-ci sont développées en tant que plug-in. Pour faire court, si vous voulez ajouter des fonctionnalités à Éclipse, vous devez :<br>
<br>
<ul>
<li>télécharger le plug-in correspondant,</li>
<li>copier les fichiers spécifiés dans les répertoires spécifiés,</li>
<li>démarrer Eclipse, et ça y est !  <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"> </li>
</ul><br>
<div class="rmq information"> Lorsque vous téléchargez un nouveau plug-in pour Éclipse, celui-ci se présente souvent comme un dossier contenant généralement deux sous-dossiers. Un dossier « <span class="italique">plugins</span> » et un dossier  « <span class="italique">features</span> ». Ces dossiers existent aussi dans le répertoire d'Éclipse. Il vous faut donc copier le contenu des dossiers de votre plug-in dans le dossier correspondant dans Éclipse (<span class="italique">plugins</span> dans plugins, et <span class="italique">features</span> dans features).</div><br>
<br>
C'est pour toutes ces raisons que j'ai choisi Eclipse comme outil de développement ; de plus, vous verrez qu'il est relativement simple d'utilisation.<br>
<br>
Maintenant que ces quelques mots ont été dits, je vous invite donc à passer à l'étape suivante.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10256">Téléchargement</h2>
		<div class="ss_part_texte">
		Avant de vous lancer dans le téléchargement d'<strong>Éclipse</strong>, vous devez <span class="tgros"><span class="rouge">avant tout</span></span> vous assurer d'avoir <strong>un environnement Java, ou JRE sur votre machine</strong>.<br>
<br>
<div class="rmq information">Un JRE (ou <strong>J</strong>ava <strong>R</strong>untime <strong>E</strong>nvironment) va vous servir à lire les programmes qui ont été codés en Java. Comme je vous l'ai dit plus tôt, Eclipse est codé en Java : donc, pour utiliser Eclipse, il vous faut un <strong>JRE</strong>.</div><br>
<br>
Rendez-vous donc sur la page de <a href="http://java.sun.com/javase/downloads/index.jsp">téléchargement des JRE</a> sur le site de SUN Microsystem (fondateur du langage).<br>
Choisissez le suivant (dernière version stable) : <br>
<br>
<div class="centre"><img src="./java_files/113158.jpg" alt="Image utilisateur"></div><br>
<br>
Après avoir cliqué sur "<strong>Download</strong>", vous arrivez sur cette page : <br>
<br>
<div class="centre"><img src="./java_files/113156.jpg" alt="Image utilisateur"></div><br>
<br>
Sélectionnez votre système d'exploitation (ici, j'ai mis <span class="italique">Windows</span>) et n'oubliez pas de cocher la case : "<strong>I agree to the Java SE Development Kit 6 License Agreement</strong>".<br>
Afin d'accepter la licence !<br>
<br>
Vous voilà arrivé à la dernière ligne droite : <br>
<br>
<div class="centre"><img src="./java_files/113159.jpg" alt="Image utilisateur"></div><br>
<br>
Cliquez sur le lien du haut pour une installation en ligne, ou celui du bas pour une installation hors ligne ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
<div class="rmq question">Euh... ça veut dire quoi, <strong><span class="italique">JSE</span></strong> ?</div><br>
Alors on va faire simple. Je vous ai dit plus tôt que Java permet de développer différents types d' applications. Eh bien il faut des outils différents pour les différents types d'applications.<br>
<br>
<ul>
<li><strong><span class="italique">J2SE ou Java 2 Standard Édition</span></strong> : permet de développer des applications dites "client", par exemple... euh... Éclipse est une application "client". C'est ce que nous allons faire dans ce tutoriel. </li>
<li><strong><span class="italique">J2EE ou Java 2 Enterprise Édition</span></strong> : permet de développer des applications web en Java.</li>
<li><strong><span class="italique">J2ME ou Java 2 Micro Édition</span></strong> : permet de développer des applications pour appareil portable, comme des téléphones portables, des PDA...</li>
</ul><br>
<br>
Voilà, fin de l'aparté...<br>
<br>
Vous pouvez maintenant télécharger et installer votre JRE. Ceci fait, je vous invite donc à télécharger Éclipse IDE sur <a href="http://www.eclipse.org/">cette page</a>.<br>
Accédez à la page de téléchargement puis choisissez <strong>"Éclipse IDE for java developers"</strong>, en choisissant la version d'Eclipse correspondant à votre <acronym title="Operating System = système d&#39;exploitation">OS</acronym>.<br>
<br>
<div class="centre"><img src="./java_files/111926.jpg" alt="Image utilisateur"></div><br>
<br>
Sélectionnez maintenant le miroir que vous souhaitez utiliser pour obtenir Éclipse. Voilà, vous n'avez plus qu'à attendre la fin du téléchargement. <img src="./java_files/heureux.png" alt=":D" class="smilies"> 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10255">Installation</h2>
		<div class="ss_part_texte">
		Maintenant que vous avez un JRE et que vous avez téléchargé Éclipse, nous allons voir comment nous servir de celui-ci.<br>
<br>
Vous devez maintenant avoir une archive contenant Éclipse. Décompressez-la où vous voulez, puis, entrez dans ce dossier. Si comme moi vous êtes sous Windows, vous devriez avoir ceci :<br>
<br>
<div class="centre"><img src="./java_files/111927.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Ne travaillant pas sous Mac OS ni sous Linux, je ne peux malheureusement pas vous proposer de <span class="italique">screenshot</span> pour ces OS, mais je pense que ça doit fortement y ressembler...  <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
La suite sera donc pour Windows, mais cela ne doit pas être très différent sur les autres OS.</div><br>
<br>
Ensuite, si vous le souhaitez, vous pouvez créer un raccourci de l'exécutable "<strong><span class="bleu">eclipse.exe</span></strong>" pour pouvoir y accéder plus facilement. Ceci fait, lancez Eclipse.<br>
<br>
Peu de temps après, vous devriez avoir une fenêtre comme celle-ci :<br>
<br>
<div class="centre"><img src="./java_files/111928.jpg" alt="Image utilisateur"></div><br>
<br>
Ici, Eclipse vous demande dans quel dossier vous souhaitez enregistrer vos projets. Libre à vous de choisir celui-ci. J'ai coché la <span class="italique">checkbox</span> pour qu'Éclipse se souvienne de ma décision. Mais lorsque vous créerez des projets, rien ne vous empêche de spécifier un autre dossier que celui de votre <strong>"<span class="italique">workspace</span>"</strong>.<br>
<br>
Une fois cette étape effectuée, vous arrivez sur la page d'accueil d'Éclipse. Je n'ai jamais trop regardé ce que celle-ci propose ; donc, si vous avez envie de jeter un coup d'oeil, allez-y.  <img src="./java_files/langue.png" alt=":p" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10254">Présentation rapide de l'interface</h2>
		<div class="ss_part_texte">
		Je vais maintenant vous faire faire un tour rapide de l'interface que vous propose Eclipse, en gros, des éléments dont nous allons nous servir dans ce tutoriel.<br>
<br>
<div class="rmq information">Je ne connais malheureusement pas toutes les fonctionnalités d'Eclipse...  <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
Par conséquent, je peux très bien omettre certains points qui peuvent être importants pour d'autres développeurs. Merci de me tenir au courant le cas échéant.</div><br>
Avant de commencer, regardez bien les raccourcis clavier présents dans les menus... Ils sont <span class="gros">très</span> utiles et peuvent vous faire gagner beaucoup de temps !<br>
<br>
<div class="rmq question">On est obligés ?</div><br>
Bien sûr que non, mais croyez-moi, quand on y a goûté, on ne peut plus s'en passer...<br>
<br>
Allez, trêve de bavardages, on est partis.  <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
<span class="gros"><span class="souligne"><br>
Menu "File"</span></span><br>
<br>
<div class="centre"><img src="./java_files/111932.jpg" alt="Image utilisateur"></div><br>
<br>
C'est ici que nous pourrons créer de nouveaux projets Java, enregistrer ceux-ci, les exporter le cas échéant...<br>
Ici, les raccourcis à retenir sont :<br>
<ul>
<li><strong>ALT + SHIFT + N</strong> : <strong>N</strong>ouveau projet</li>
<li><strong>CTRL + S</strong> : enregistrer la <strong><span class="italique">classe *</span></strong> Java où on est positionnés</li>
<li><strong>CTRL + SHIFT + S</strong> : tout sauvegarder</li>
<li><strong>CTRL + W</strong> : fermer la classe Java où on est positionnés</li>
<li><strong>CTRL + SHIFT + W</strong> : fermer toutes les classes Java ouvertes.</li>
</ul><br>
<br>
<strong><span class="italique"><span class="rouge">* classe : on y reviendra.</span></span></strong><br>
<br>
<br>
<span class="gros"><span class="souligne"><br>
Menu "Edit"</span></span><br>
<br>
<div class="centre"><img src="./java_files/111931.jpg" alt="Image utilisateur"></div><br>
<br>
Dans ce menu, nous pourrons utiliser les commandes "copier", "coller"...<br>
Ici, les raccourcis à retenir sont :<br>
<ul>
<li><strong>CTRL + C</strong> : copier la sélection</li>
<li><strong>CTRL + X</strong> : couper la sélection</li>
<li><strong>CTRL + V</strong> : coller la sélection</li>
<li><strong>CTRL + A</strong> : tout sélectionner</li>
<li><strong>CTRL + F</strong> : chercher / remplacer.</li>
</ul><br>
<br>
<br>
<span class="gros"><span class="souligne"><br>
Menu "Window"</span></span><br>
<br>
<div class="centre"><img src="./java_files/111938.jpg" alt="Image utilisateur"></div><br>
<br>
Dans celui-ci, nous pourrons configurer Eclipse selon nos besoins.<br>
<br>
<span class="gros"><span class="souligne"><br>
La barre de navigation</span></span><br>
<br>
<div class="centre"><img src="./java_files/111934.jpg" alt="Image utilisateur"></div><br>
<br>
Nous avons dans l'ordre :<br>
<ul>
<li>1 : "nouveau" général. Cliquer sur ce bouton revient à faire "Fichier - Nouveau" </li>
<li>2 : enregistrer. Revient à faire CTRL + S.</li>
<li>3 : imprimer.</li>
<li>4 : exécuter la classe ou le projet spécifié. Nous verrons ceci plus en détail.</li>
<li>5 : créer un nouveau projet Java. Revient à faire "Fichier - Nouveau - Java project".</li>
<li>6 : créer une nouvelle classe dans un projet. Revient à faire "Fichier - Nouveau - Classe".</li>
</ul><br>
<br>
Je vous demande maintenant de créer un nouveau projet Java. Vous devriez arriver à cette fenêtre sans trop de difficultés :<br>
<br>
<div class="centre"><img src="./java_files/111936.jpg" alt="Image utilisateur"></div><br>
<br>
Renseignez le nom de votre projet comme je l'ai fait plus haut (encadré 1). Vous pouvez aussi voir où sera enregistré ce projet (encadré 2). <br>
Un peu plus compliqué maintenant, vous avez donc un environnement Java sur votre machine, mais dans le cas où vous en auriez plusieurs, vous pouvez aussi spécifier à Eclipse quel JRE utiliser pour ce projet.<br>
<br>
<div class="rmq information">En fait, vous pourrez changer ceci à tout moment dans Eclipse en allant dans Window / Préférences, en dépliant l'arbre "Java" dans la fenêtre et en choisissant "<span class="italique">Installed JRE". </span><br>
Par contre,  n'utilisez ça que si vous êtes sûrs de vous ! <img src="./java_files/siffle.png" alt=":-°" class="smilies"> </div><br>
<br>
Vous devriez avoir un nouveau projet dans la fenêtre de gauche, comme ceci :<br>
<br>
<div class="centre"><img src="./java_files/111937.jpg" alt="Image utilisateur"></div><br>
<br>
Pour boucler la boucle, ajoutons dès maintenant une nouvelle classe dans ce projet. Je suis sûr que vous allez y arriver sans moi...  <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
Vous êtes donc devant cette fenêtre :<br>
<br>
<div class="centre"><img src="./java_files/111929.jpg" alt="Image utilisateur"></div><br>
<br>
Dans l'encadré 1, nous pouvons voir où seront enregistrés nos fichiers Java.<br>
Dans l'encadré 2, nommez votre classe Java, moi j'ai <strong><span class="bleu">sdz1</span></strong>.<br>
Dans l'encadré 3, Eclipse vous demande si cette classe a un truc particulier. Eh bien oui ! Cochez<br>
"<strong><span class="italique">public static void main(String[] args)</span></strong>", puis cliquez sur "<strong><span class="italique">finish</span></strong>" (nous allons revenir sur ce dernier point dans la partie suivante).<br>
<br>
Une fois ces opérations terminées, vous êtes devant ceci :<br>
<br>
<div class="centre"><img src="./java_files/111930.jpg" alt="Image utilisateur"></div><br>
<br>
Alors avant de commencer à coder, nous allons un peu explorer notre espace de travail.<br>
<br>
<strong>Dans l'encadré vert (à gauche)</strong>, vous trouverez le dossier de votre projet ainsi que son contenu. Ici, vous pourrez gérer votre projet comme bon vous semble (ajout, suppression...).<br>
<br>
<strong>Dans l'encadré bleu (au centre)</strong>, je pense que vous avez deviné... C'est ici que nous allons écrire nos codes sources.<br>
<br>
<strong>Dans l'encadré rose (en bas)</strong>, c'est là que vous verrez apparaître le contenu de vos programmes ainsi que les erreurs éventuelles ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Et enfin pour finir, <strong>dans l'encadré violet (à droite)</strong>, dès lors que nous aurons appris à coder nos propres fonctions ainsi que des objets, c'est ici que la liste des méthodes et des variables sera affiché.<br>
<br>
Maintenant que vous avez Eclipse bien en main, nous allons faire un tour rapide des autres IDE de développement pour Java.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10253">D'autres outils à la hauteur</h2>
		<div class="ss_part_texte">
		<strong>Surtout gardez en mémoire qu'un IDE est un outil de développement</strong>.<br>
Comment ça, je ne vous l'avais pas dit...  <img src="./java_files/siffle.png" alt=":-°" class="smilies"> <br>
<br>
Ce qu'il faut garder en tête, c'est qu'un IDE, comme n'importe quel outil, est :<br>
<ul>
<li>fonctionnel,</li>
<li>adapté,</li>
<li>évolutif.</li>
</ul><br>
Ce que j'entends par là, c'est que comme un menuisier, vous utiliserez des outils pour travailler et comme lui, vous choisirez celui qui vous convient le mieux. Partez du principe que les IDE ont grosso-modo les mêmes fonctionnalités, compiler en <strong><span class="italique">byte code</span></strong>, exécuter, debugger...<br>
<br>
Les IDE de la liste suivante sont tout aussi adaptés qu'Eclipse pour développer en Java. A vous de vous faire un avis. Testez, comparez et choisissez.<br>
<br>
<h3><span class="souligne">1. JBuilder</span><br>
</h3><br>
<div class="flot_gauche"><img src="./java_files/111933.jpg" alt="Image utilisateur"></div><br>
<br>
Celui-ci est idéal pour le développement à grande échelle, pour les projets d'entreprise, etc.<br>
Il intègre tout un tas de technologies comme <strong>XML</strong>, <strong>jsp/servlet</strong>, concept d'ingénierie, outils <strong>UML</strong>...<br>
<br>
C'est simple : je crois même qu'il fait du café... <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
Tout ceci fait de lui un outil puissant, mais très lourd pour les configurations moyennes.<br>
<br>
En gros, vous serez peut-être amenés à l'utiliser, mais en entreprise...<br>
<br>
Bon : pour les curieux de nature, vous pouvez faire un tour <a href="http://www.borland.com/downloads/index.html">ici</a>.<br>
Ne cherchez pas de version gratuite, JBuilder est payant. Mais je crois que vous pouvez avoir une version d'évaluation... A vérifier...  <img src="./java_files/siffle.png" alt=":-°" class="smilies"> <br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<h3><span class="souligne">2. NetBeans</span></h3><br>
<br>
<div class="flot_gauche"><img src="./java_files/111935.jpg" alt="Image utilisateur"></div><br>
<br>
NetBeans est l'IDE créé par <a href="http://java.sun.com/">Sun Microsystems</a>, il contient donc toutes les fonctionnalités d'un bon IDE : <br>
<ul>
<li>un debugger,</li>
<li>un outil de modélisation UML,</li>
<li>tout le nécessaire pour faire des applications J2EE,</li>
<li>il est <strong>GRATUIT !</strong></li>
<li>...</li>
</ul><br>
<br>
De plus, il semblerait qu'on puisse <span class="italique">customiser</span> l'environnement de celui-ci.<br>
<br>
Si vous voulez vous faire une opinion, ce que je vous conseille vivement, vous pouvez le télécharger <a href="http://www.netbeans.info/downloads/index.php">ici</a>.<br>
<br>
<br>
<br>
<br>
<br>
Il existe bien d'autres IDE pour développer en Java, mais ceux-ci (Eclipse compris) représentent la majorité des IDE utilisés. En voici d'autres, pour information : <br>
<ul>
<li>JCreator</li>
<li>IntelliJ</li>
<li>Sun ONE Studio </li>
<li>JDeveloper</li>
<li>JEdit</li>
<li>Le Bloc-notes de Windows (<strong><span class="italique">vi</span></strong> sous Linux), ou encore Notepad++. <img src="./java_files/siffle.png" alt=":-°" class="smilies"> </li>
</ul><br>
<br>
<div class="rmq question">Qu... Quoi ? On peut faire des programmes Java avec le Bloc-notes de Windows ?</div><br>
Tout à fait...  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
En fait, lorsque vous créerez un programme Java dans votre IDE préféré et que vous l'exécuterez, celui-ci va pré-compiler votre code Java en <strong><span class="italique">byte code</span></strong> pour qu'ensuite votre <strong>JVM</strong> (<span class="italique"><strong>J</strong>ava <strong>V</strong>irtual <strong>M</strong>achine, cf chapitre suivant</span>) l'interprète et l'exécute.<br>
<br>
Mais toutes ces étapes peuvent être faites à la main, en ligne de commande, mais nous n'en parlerons pas maintenant.  <br>
<br>
Bon, je crois qu'il est temps pour un petit QCM...  <img src="./java_files/pirate.png" alt=":pirate:" class="smilies">
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Voilà ! Une partie pénible de terminée ! <br>
Par contre, Eclipse regorge de fonctionnalités. Je n'en ai pas parlé pour le moment car je pense que vous comprendrez mieux le moment venu, avec un exemple concret d'utilisation. <br>
<br>
J'espère que vous avez encore de l'énergie, car, dans le chapitre suivant, nous aborderons quelque chose de bien plus passionnant... <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
Bon ! Tenez-vous prêts pour faire <span class="orange">vos premiers codes Java ! !</span> <img src="./java_files/pirate.png" alt=":pirate:" class="smilies">
	</div>
	
	<hr>
	<h1 id="chap_10268">Votre premier programme</h1>
	<div id="chap_intro">
	Dans ce chapitre, nous allons faire nos premiers programmes en Java.<br>
Mais tout d'abord, quelques explications sur le fonctionnement du JRE s'imposent. <br>
Alors... go !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10267">Mieux connaitre son environnement Java</h2>
		<div class="ss_part_texte">
		Bon : cette partie s'annonce riche en informations et pour certains, elle sera même "pompeuse"... Mais afin de bien coder en Java, il vaut mieux comprendre comment tout cela fonctionne.<br>
<br>
Dans le JRE, que je vous ai fait télécharger dans la partie précédente, se trouve le coeur même de Java. Celui-ci s'appelle la <span class="violet"><strong>JVM (pour Java Virtual Machine)</strong></span> que j'appellerai dorénavant <strong>machine virtuelle</strong>. Celle-ci a pour rôle, comme je vous l'ai dit dans le chapitre précédent, d'exécuter les programmes Java sur votre machine, c'est ce qui fait que les programmes Java sont dit <strong>"<span class="souligne">portables</span>"</strong>.<br>
<br>
<div class="rmq question">Qu'est-ce tu entends par là ?</div><br>
J'allais y venir...  <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
<br>
Comme je vous l'ai maintes fois répété, les programmes Java sont, avant d'être utilisés par la machine virtuelle, pré-compilés en <span class="bleu">byte code</span> (par votre IDE ou encore à la main). Ce byte code n'est compréhensible que par une JVM, et c'est celle-ci qui va faire le lien entre ce code et votre machine.<br>
<br>
Vous aviez sûrement remarqué que sur la page de téléchargement du JRE, plusieurs liens étaient disponibles :<br>
<ul>
<li>un lien pour Windows,</li>
<li>un lien pour Mac,</li>
<li>un lien pour Linux.</li>
</ul><br>
Ceci car la machine virtuelle Java se présente différemment selon qu'on se trouve sous Mac, sous Linux ou encore sous Windows. Par contre le byte code, lui, reste le même quelque soit l'environnement où a été développé et pré-compilé votre programme Java.<br>
<br>
Conséquence directe :<br>
<div class="rmq information"><span class="gros">quel que soit l'OS sous lequel a été codé un programme Java, n'importe quelle machine pourra l'exécuter si elle dispose d'une JVM !</span></div><br>
<br>
<div class="rmq question">Tu n'arrêtes pas de nous rabâcher byte code par-ci... byte code par-là...<br>
Mais c'est quoi, au juste ?</div><br>
Eh bien un byte code - et je dis bien <span class="gros">UN</span> byte code - n'est autre qu'un code intermédiaire entre votre code Java et le code machine.<br>
Ce code particulier se trouve dans les fichiers pré-compilés de vos programmes ; en Java, un fichier source a l'extension <strong><span class="bleu">.java</span></strong> et un fichier pré-compilé a l'extension <strong><span class="bleu">.class</span></strong> ; c'est dans ce dernier que vous pourrez voir du byte code.<br>
<br>
Par contre, vos fichiers <strong><span class="bleu">.java</span></strong> sont de bêtes fichiers texte, seule l'extension est changée... Vous pouvez donc les ouvrir, les créer ou encore les mettre à jour avec... le Bloc-notes de Windows par exemple...  <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
 <br>
Pour en revenir à notre byte code, je vous invite à regarder un fichier <strong><span class="bleu">.class</span></strong> à la fin de cette partie (vous en aurez au moins un), mais je vous préviens, c'est illisible ! !  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
<br>
<div class="rmq information"><strong> Inutile de vous dire que votre machine est incapable d'interpréter du byte code ! </strong></div><br>
Alors pourquoi je vous ai dit <span class="gros">UN</span> byte code ? Tout simplement parce que la machine virtuelle de Java se moque que le byte code soit à la base du Java ou autre chose. <br>
Son rôle est d'interpréter ce code et de le faire fonctionner. Donc, si un jour vous arrivez à faire du byte code avec comme fichier source un <strong><span class="bleu">.cpp</span></strong> (pour C++), ça <strong>devrait <span class="italique">(et j'insiste sur le devrait)</span> fonctionner</strong>.<br>
<br>
Vous pouvez avoir un aperçu de ce qui devrait fonctionner sur <a href="http://www.robert-tolksdorf.de/vmlanguages.html">cette page</a>.<br>
<br>
<strong><span class="souligne">Ce qu'il faut retenir : </span></strong><br>
<ul>
<li>la JVM est le coeur de Java,</li>
<li>celle-ci fait fonctionner vos programmes Java, pré-compilés en byte code,</li>
<li>les fichiers contenant le code source de vos programmes Java ont l'extension <span class="bleu"><strong>.java</strong></span>,</li>
<li>les fichiers pré-compilés correspondant à vos codes sources Java ont l'extension <span class="bleu"><strong>.class</strong></span>,</li>
<li>le byte code est un code intermédiaire entre votre programme et votre machine,</li>
<li>un programme Java, codé sous Windows peut être pré-compilé sous Mac et enfin exécuté sous Linux,</li>
<li>votre machine NE PEUT PAS interpréter du byte code.</li>
</ul><br>
<br>
Je pense qu' après cette partie purement théorique, vous avez hâte de commencer à taper des lignes de code... Mais avant, il me reste quelques choses à vous dire !  <img src="./java_files/langue.png" alt=":p" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10266">Avant de commencer</h2>
		<div class="ss_part_texte">
		Avant de commencer, vous devez savoir que <span class="gros"><span class="rouge">tous les programmes Java sont composés d'au moins une classe</span></span>. <br>
Cette classe doit contenir (applet mise à part) une méthode <span class="rouge">main</span>. Celle-ci est la méthode principale du programme, c'est elle que la JVM va chercher afin de lancer votre programme. Pour faire court, c'est le point de départ du programme.<br>
Vous voyez donc son importance !  <img src="./java_files/smile.png" alt=":)" class="smilies"> <br>
Et pour qu'on se comprenne bien, une méthode est une suite d'instructions à exécuter. Une méthode contient : <br>
<ul>
<li><strong><span class="italique">une entête :</span></strong> celle-ci va être un peu comme la carte d'identité de la méthode. Nous y reviendrons.</li>
<li><strong><span class="italique">un corps :</span></strong> le contenu de la méthode. Ce qui va être fait ! Délimité par des accolades <strong><span class="violet">{}</span></strong>.</li>
<li><strong><span class="italique">une valeur de retour :</span></strong> le résultat que la méthode va retourner.<strong> SAUF</strong> pour les méthodes de type <strong><span class="courrier">void</span></strong> qui ne renvoient rien. Nous y reviendrons aussi.</li>
</ul><br>
<div class="rmq information">Vous verrez, un peu plus tard, qu'un programme n'est qu'une multitude de classes qui s'utilisent l'une l'autre. <br>
Mais pour le moment, nous n'allons travailler qu'avec une seule classe.   </div><br>
Dans la partie précédente, je vous avais demandé de créer un projet Java ; ouvrez-le si ce n'est pas déjà fait. Donc pour rappel, voici ce que vous aviez sous votre nez :<br>
<br>
<div class="centre"><img src="./java_files/93016.jpg" alt="Image utilisateur"></div><br>
<br>
Vous voyez la fameuse classe dont je vous parlais ? Ici, elle s'appelle <strong><span class="violet">sdz1</span></strong>.<br>
Vous pouvez voir que le mot <span class="violet"><strong><span class="courrier">class</span></strong></span> est précédé du mot <strong><span class="violet"><span class="courrier">public</span></span></strong>, nous verrons la signification de celui-ci lorsque nous programmerons des objets.<br>
<br>
Pour le moment, ce que vous devez retenir c'est que votre classe est définie par un mot clé, <strong><span class="violet"><span class="courrier">class</span></span></strong>, qu'elle a un nom ; ici, <strong><span class="violet">sdz1</span></strong> et que le contenu de celle-ci est délimité par des accolades, <strong><span class="violet">{}</span></strong>.<br>
<br>
Comme je vous l'ai dit plus haut, notre unique classe contient la méthode <strong>main</strong>. La syntaxe de cette méthode est toujours la même :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="c1">// Contenu de votre classe</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq information">Ce sera entre les accolades de la méthode main que nous écrirons nos codes sources.</div><div class="rmq question">Excuse-nous, mais... Pourquoi as-tu écrit "//Contenu de votre classe" et non "Contenu de votre classe" ?</div><br>
Bonne question !  <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
Je vous ai dit plus haut que votre programme Java, avant de pouvoir être exécuté, doit être pré-compilé en byte code. Eh bien la possibilité de forcer le compilateur à ignorer certaines instructions existe !  <img src="./java_files/huh.png" alt=":o" class="smilies"> <br>
On appelle ça des <strong><span class="violet">commentaires</span></strong> et il existe deux syntaxes : <br>
<ul>
<li><strong><span class="italique">les commentaires unilignes :</span></strong> introduits par les symboles <strong>//</strong>, ils mettent tous ce qui les suit en commentaires, du moment que le texte se trouve sur la même ligne que les <strong>//</strong>.</li>
</ul><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
<span class="c1">//Un commentaire</span>
<span class="c1">//un autre</span>
<span class="c1">//Encore un autre</span>
<span class="n">Ceci</span> <span class="n">n</span>'<span class="n">est</span> <span class="n">pas</span> <span class="n">un</span> <span class="n">commentaire</span> <span class="o">!</span> <span class="o">!</span> <span class="o">!</span> <span class="o">!</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<ul>
<li>les commentaires multilignes : ils sont introduits par les symboles <strong>/*</strong> et se terminent par les symboles <strong>*/</strong>.</li>
</ul><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
 
<span class="cm">/*</span>
<span class="cm">Un commentaire</span>
<span class="cm">Un autre</span>
<span class="cm">Encore un autre</span>
<span class="cm">*/</span>
<span class="n">Ceci</span> <span class="n">n</span>'<span class="n">est</span> <span class="n">pas</span> <span class="n">un</span> <span class="n">commentaire</span> <span class="o">!</span> <span class="o">!</span> 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq question">D'accord ! Mais ça sert à quoi ?</div><br>
C'est simple : au début, vous ne ferez que de très petits programmes. <br>
Mais dès que vous aurez pris de la bouteille, la taille de ceux-ci, ainsi que le nombre de classes qui les composera, augmentera.<br>
Vous serez contents de trouver quelques lignes de commentaires au début de votre classe pour vous dire à quoi elle sert, ou encore des commentaires dans une méthode qui fait des choses compliquées afin de savoir ou vous en êtes dans vos traitements...  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
<br>
Il existe en fait <span class="italique">une troisième syntaxe</span>, mais celle-ci a un but particulier. Elle permettra de générer une documentation de votre programme ! Une Javadoc (Java Documentation).<br>
Je n'en parlerai que très peu, et pas dans ce chapitre. Nous verrons cela lorsque nous programmerons des objets mais, pour les curieux, je vous conseille le très bon <a href="http://www.siteduzero.com/tuto-3-14971-1-presentation-de-la-javadoc.html">tutoriel de dworkin</a>.<br>
<br>
Je profite de cet aparté sur les commentaires pour vous donner une astuce bien pratique ! <br>
Il vous arrivera forcément à un moment donné de vouloir mettre une partie de code en commentaire. Dans ce cas, il y a 99,99999999 % de chance que vous choisissiez les commentaires multilignes. <br>
L'inconvénient, c'est que lorsque vous voudrez remettre votre morceau de code en activité, il vous faudra retirer les <strong><span class="courrier">/* */</span></strong>. Mais si 5 minutes plus tard, vous voulez remettre la même portion de code en commentaire  <img src="./java_files/pinch.png" alt="&gt;_&lt;" class="smilies"> .<br>
<br>
Regardez ce morceau de code (il ne fait rien du tout, c'est un exemple) :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
 
 <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"toto"</span><span class="o">;</span>
 <span class="kt">int</span> <span class="n">entier</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
 
 <span class="k">if</span><span class="o">(</span><span class="n">entier</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">){</span>
 
<span class="cm">/*</span>
<span class="cm">  for(int i = 0; i &lt; 20; i++){</span>
<span class="cm">    System.out.println("oui ! ! ! ! !");</span>
<span class="cm">  }</span>
<span class="cm">//*/</span>
 
 <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez voir que j'ai utilisé les commentaires multilignes ! Mais avec une variante...  <img src="./java_files/siffle.png" alt=":-°" class="smilies"> <br>
La ligne qui ferme les commentaires est précédée... de <strong>//</strong>. Mais c'est ce qui met une ligne en commentaires... <br>
<div class="rmq question">C'est idiot de mettre ça là... Ils sont en commentaire !</div><br>
Je le sais bien, et c'est là qu'est l'astuce. Pour le moment, les deux <strong>//</strong> sont en commentaires comme les lignes qui se trouvent entre <strong>/*</strong> et <strong>*/</strong>.<br>
Mais que se passe-t-il si j'ajoute un / devant ma première instruction de commentaire ?<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
 
 <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"toto"</span><span class="o">;</span>
 <span class="kt">int</span> <span class="n">entier</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
 
 <span class="k">if</span><span class="o">(</span><span class="n">entier</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">){</span>
 
<span class="c1">//*</span>
  <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"oui ! ! ! ! !"</span><span class="o">);</span>
  <span class="o">}</span>
<span class="c1">//*/</span>
 
 <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Eh bien là, ce sont mes commentaires multilignes qui sont devenus des commentaires, et mes lignes sont de nouveau actives dans mon code !  <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
<br>
<div class="rmq question">Explique-nous ça !</div><br>
C'est très simple. Le fait d'ajouter un / devant /* met l'étoile en commentaire... Dans ce cas, il ne s'agit plus d'un commentaire multilignes, mais uniligne ! Et là je crois que vous avez deviné l'utilité de cette ligne //*/... Sur celle-ci, c'est l'instruction de commentaire multiligne fermante qui est en commentaire !  <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
Donc, plus besoin d'ajouter de commentaire, d'en effacer, de les remettre, de les ré-effacer...<br>
Vous encadrez la portion de code que vous souhaitez enlever de /* .... //*/ et lorsque vous la voulez à nouveau, vous ajoutez un / devant l'instruction ouvrante des commentaires ! Et si vous voulez remettre la même portion de code en commentaire, enlevez le / ajouté devant /* !<br>
<br>
A partir de maintenant et jusqu'à ce que nous programmions des interfaces graphiques, nous allons faire ce qu'on appelle des <strong>programmes procéduraux</strong>. Cela signifie que le programme se déroulera de façon procédurale.<br>
<br>
<div class="rmq question">Euh... késako ?</div><br>
En fait, un programme procédural est un programme qui s'effectue de <strong>haut en bas</strong>, <strong>une ligne après l'autre.</strong><br>
Bien sûr, il y a des instructions qui permettent de répéter des morceaux de code, mais le programme en lui même se terminera une fois arrivé à la fin du code.<br>
Ceci vient en opposition à la programmation événementielle (ou graphique) qui elle, est basée sur des événements (clic de souris, choix dans un menu...).<br>
<br>
Je pense que j'ai fait le tour de ce que je voulais vous dire...  <img src="./java_files/siffle.png" alt=":-°" class="smilies"> <br>
Bon : pour votre premier programme, je pense que le traditionnel "Hello World ! ! " est de mise... <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
Donc, allons-y !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10265">Votre premier programme</h2>
		<div class="ss_part_texte">
		Nous entrons enfin dans le vif du sujet !<br>
Mais ne vous attendez pas à faire un vrai programme tout de suite...  <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Maintenant, vous pouvez taper les lignes suivantes entre les accolades de votre méthode main :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"Hello World !"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq erreur">N'oubliez surtout pas le <span class="tgros">;</span> à la fin de la ligne !<br>
<strong>Toutes les instructions en Java sont suivies d'un point virgule.</strong></div><br>
<br>
Une fois que vous avez saisi cette ligne de code dans votre méthode main, vous devez lancer le programme.<br>
Si vous vous souvenez bien de la présentation du chapitre précédent, vous avez dû cliquer sur la flèche blanche dans un rond vert : <br>
<br>
<div class="centre"><img src="./java_files/93034.jpg" alt="Image utilisateur"></div><br>
<br>
Si vous regardez dans votre console, fenêtre en bas sous Eclipse, vous devez avoir : <br>
<br>
<div class="centre"><img src="./java_files/93032.jpg" alt="Image utilisateur"></div><br>
Expliquons un peu cette ligne de code.<br>
Littéralement, elle signifie "la méthode <strong><span class="courrier">print()</span></strong> va écrire <span class="italique">Hello World !</span> en utilisant l'objet <strong><span class="courrier">out</span></strong> de la classe <strong><span class="courrier">System</span></strong>".<br>
<ul>
<li><strong><span class="courrier">System</span></strong> : ceci correspond à l'appel d'une classe qui s'appelle "<span class="courrier">System</span>". C'est une classe utilitaire qui permet surtout d'utiliser l'entrée et la sortie standard.</li>
<li><strong><span class="courrier">out</span></strong> : objet de la classe <strong>System</strong> qui gère la sortie standard.</li>
<li><strong><span class="courrier">print</span></strong> : méthode qui écrit dans la console la chaîne passée en paramètre.</li>
</ul><br>
Si vous mettez plusieurs <span class="courrier">System.out.print</span>, voici ce qui ce passe.<br>
Prenons ce code :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"Hello World ! !"</span><span class="o">);</span>
  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"My name is"</span><span class="o">);</span>
  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"Cysboy"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Lorsque vous l'exécutez, vous devriez avoir une chaîne de caractères qui se suivent, sans saut à la ligne. En gros, vous devez avoir ceci dans votre console :<br>
<strong>Hello World ! !My name isCysboy</strong><br>
<br>
Je me doute que vous souhaiteriez faire un retour à la ligne pour que votre texte soit plus lisible...  <img src="./java_files/smile.png" alt=":)" class="smilies"> Pour réussir cela, vous avez plusieurs solutions. <br>
<ul>
<li>Soit vous utilisez un caractère d'échappement, ici, <strong><span class="courrier">\n</span></strong>.</li>
<li>Soit vous utilisez la méthode <strong><span class="courrier">println()</span></strong> à la place de la méthode <strong><span class="courrier">print()</span></strong>.</li>
</ul><br>
<br>
Donc, si nous reprenons notre précédent code et que nous appliquons ceci, voilà ce que ça donnerait :<br>
<span class="italique">(notre code modifié)</span> :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"Hello World ! ! \n"</span><span class="o">);</span>
  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"My name is"</span><span class="o">);</span>
  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nCysboy"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Le résultat :<br>
<strong>Hello World ! !<br>
My name is<br>
 <br>
Cysboy</strong><br>
<br>
Vous pouvez voir que :  <br>
<ul>
<li>lorsque vous utilisez le caractère d'échappement <strong><span class="courrier">\n</span></strong>, quelle que soit la  méthode appelée, celle-ci intègre immédiatement un retour à la ligne à l'emplacement de ce dernier.</li>
<li>lorsque vous utilisez la méthode <strong><span class="courrier">println()</span></strong>, celle-ci ajoute automatiquement un retour à la ligne à la fin de la chaîne passée en paramètre.</li>
<li>rien ne vous empêche de mettre un caractère d'échappement dans la méthode <span class="courrier">println()</span>.</li>
</ul><br>
<br>
J'en profite au passage pour vous donner deux autres caractères d'échappement :<br>
<ul>
<li><strong><span class="courrier">\r</span></strong> : va mettre un retour chariot.</li>
<li><strong><span class="courrier">\t</span></strong> : va faire une tabulation.</li>
</ul><br>
<br>
<div class="rmq information">Vous avez sûrement remarqué que la chaîne de caractères que l'on affiche est entourée de <span class="tgros">"</span> &lt;chaine&gt; <span class="tgros">"</span>.<br>
En Java, les double quotes sont des délimiteurs de chaînes de caractères ! Si vous voulez afficher un double quote avec la sortie standard, vous devrez "<span class="italique">l'échapper</span>" avec un <span class="tgros"><strong>\</strong></span>, ce qui donnerait <br>
<span class="courrier">System.out.println("coucou mon <strong>\"</strong>choux<strong>\"</strong></span> ! ");</div><br>
<br>
Maintenant que vous savez faire un "Hello World", je vous propose de voir la compilation de vos programmes en ligne de commande. <br>
<br>
<div class="rmq information">Cette sous-partie n'est ici que pour les plus curieux d'entre vous. <br>
Vous pouvez passer outre cette sous-partie si vous le voulez, et aller directement au QCM mais, partez du principe que ça pourrait vous servir un jour...</div>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10264">Compilation en ligne de commande (Windows)</h2>
		<div class="ss_part_texte">
		Donc bienvenue aux plus curieux !  <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
Avant de vous apprendre à compiler et à exécuter un programme en ligne de commandes, il va vous falloir le JDK de SUN (<strong>J</strong>ava SE <strong>D</strong>evelopment <strong>K</strong>it). C'est dans celui-ci que nous  aurons de quoi compiler nos programmes. Le nécessaire à l'exécution des programmes est aussi dans le JRE... Mais vous l'aurez en plus dans le JDK.<br>
<br>
Je vous invite donc à retourner sur le site de SUN et à télécharger celui-ci. Une fois cette opération effectuée, il est conseillé de mettre à jour votre variable d'environnement %PATH%.<br>
<br>
<div class="rmq question">Euh... Quoi ?</div><br>
Votre <strong>variable d'environnement</strong>. C'est grâce à celle-ci que Windows arrive à trouver des exécutables sans lui spécifier le chemin d'accès complet. Vous, enfin Windows, en a plusieurs, mais nous nous intéresserons qu'à une seule.  <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
En gros, cette variable contient le chemin d'accès à certains programmes. <br>
<br>
Par exemple, si vous spécifiez le chemin d'accès d'un programme X dans votre variable d'environnement et que, comme par un malheureux hasard, vous n'avez plus aucun raccourci vers X, c'est simple : vous l'avez définitivement perdu dans les méandres de votre PC. <br>
Eh bien vous pourrez le lancer en faisant "<strong>démarrer &gt; Exécuter</strong>" et en tapant la commande "<strong><span class="courrier">X.exe</span></strong>" (en partant du principe que le nom de l'exécutable est <span class="courrier">X.exe</span>).<br>
<br>
<div class="rmq question">D'accord, mais comment on fait ? Et pourquoi on doit faire ça pour le JDK ?</div><br>
J'y arrive...  <img src="./java_files/smile.png" alt=":)" class="smilies"> <br>
Une fois votre JDK installé, ouvrez le répertoire <strong><span class="bleu">bin</span></strong> de celui-ci, <strong>mais également</strong> celui-ci de votre JRE. Nous allons nous attarder sur deux fichiers.<br>
<br>
Dans le répertoire <strong><span class="bleu">bin</span></strong> de votre JRE, vous devez avoir un fichier appelé <strong><span class="bleu">java.exe</span></strong>. Fichier que vous retrouvez aussi dans le répertoire <strong><span class="bleu">bin</span></strong> de votre JDK. C'est grâce à ce fichier que votre ordinateur peut lancer vos programmes par le biais de la JVM.<br>
<br>
<div class="rmq information">Lorsque vous lancez une application sous Eclipse, ce fichier est lancé de façon implicite !  <img src="./java_files/hihi.png" alt="^^" class="smilies"> </div><br>
Le deuxième ne se trouve que dans le répertoire <strong><span class="bleu">bin</span></strong> de votre JDK, il s'agit de <strong><span class="bleu">javac.exe</span></strong> (<strong>java c</strong>ompiler). C'est celui-ci qui va pré-compiler vos programmes Java en byte code.<br>
<br>
Alors pourquoi le faire pour le JDK ? <br>
Eh bien, compiler-exécuter en ligne de commande revient à utiliser ces deux fichiers en leur précisant où se trouvent les fichiers à traiter. Cela veut dire que si on ne met pas à jour la variable d'environnement de Windows, nous devons :<br>
<ul>
<li>ouvrir l'invite de commande,</li>
<li>se positionner dans le répertoire bin de notre JDK,</li>
<li>appeler la commande souhaitée,</li>
<li>préciser le chemin du fichier <strong><span class="bleu">.java</span></strong>,</li>
<li>renseigner le nom du fichier.</li>
</ul><br>
Avec notre variable d'environnement mise à jour, nous n'aurons plus qu'à :<br>
<ul>
<li>nous positionner dans le dossier de notre programme,</li>
<li>appeler la commande,</li>
<li>renseigner le nom du fichier Java.</li>
</ul><br>
<br>
Comme un exemple vaut mieux que de grands discours, mettons notre variable d'environnement à jour...<br>
<br>
Allez dans le "<strong>panneau de configuration</strong>" de votre PC, de là, cliquez sur l'icône "<strong>Système</strong>" ; choisissez l'onglet "<strong>avancé</strong>" et vous devriez avoir un bouton, en bas, intitulé "<strong>Variables d'environnement</strong>" ; cliquez dessus.<br>
Une nouvelle fenêtre s'ouvre. Dans la partie inférieure intitulée "<strong>Variables système</strong>" chercher la variable <strong>Path</strong>. Une fois sélectionnée, cliquez sur <strong>Modifier</strong>.<br>
Encore une fois, une fenêtre, plus petite celle-là, s'ouvre devant vous. Elle contient le <strong>nom</strong> de la variable et sa <strong>valeur</strong>. <br>
<br>
<div class="rmq erreur">Ne changez pas son nom et n'effacez pas le contenu de valeur !<br>
Nous allons juste <strong><span class="gros">ajouter un chemin d'accès</span></strong>.</div><br>
Pour ce faire, allez jusqu'au bout de la valeur de la variable, ajoutez-y un point-virgule (<strong>;</strong>) s'il n'y en a pas, et ajoutez maintenant le chemin d'accès au répertoire <strong><span class="bleu">bin</span></strong> de votre JDK, en terminant celui-ci par un <strong>point-virgule</strong> !.<br>
Chez moi, ça donne ceci : "<strong>C:\Sun\SDK\jdk\bin</strong>".<br>
<br>
<span class="souligne">Alors, ma variable d'environnement contenait avant ajout</span> :<br>
<br>
<strong><span class="bleugris">%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;</span></strong><br>
<br>
<span class="souligne">Et maintenant</span> :<strong><br>
<br>
<span class="bleugris">%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;</span><span class="violet">C:\Sun\SDK\jdk\bin</span><span class="rouge">;</span></strong><br>
<br>
Validez les changements, et c'est tout !  <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
Vous êtes maintenant prêts à compiler en ligne de commande.<br>
<br>
Pour bien faire, allez dans le répertoire de votre premier programme et effacez le <strong><span class="bleu">.class</span></strong>.<br>
Ensuite, faites "<strong>démarrer &gt; Exécuter</strong>" (ou encore touche Windows + r), et tapez "<strong><span class="courrier">cmd</span></strong>".<br>
<br>
<div class="rmq information">Pour rappel, dans l'invite de commande, on se déplace de dossier en dossier grâce à l'instruction <strong><span class="gros"><span class="courrier">cd</span></span></strong>.<br>
<strong><span class="courrier">cd</span></strong> &lt;nom du dossier enfant&gt; : pour aller dans un dossier contenu dans celui dans lequel nous sommes.<br>
<strong><span class="violet">cd ..</span></strong> : pour remonter d'un dossier dans la hiérarchie.<br>
</div><br>
<br>
Par exemple : lorsque j'ouvre la console, je me trouve dans le dossier <span class="violet">C:\toto\titi</span> et mon application se trouve dans le dossier <span class="violet">C:\sdz</span>, je fais donc :<br>
<br>
<span class="code">Code : Bash - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 bash"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="nb">cd</span> ..
<span class="nb">cd</span> ..
<span class="nb">cd </span>sdz
</pre></div>
</td></tr></tbody></table></div><br>
Lors de la première instruction, je me retrouve dans le dossier <span class="bleu">C:\toto</span>.<br>
Lors de la deuxième instruction, je me retrouve à la racine de mon disque.<br>
Lors de la troisième instruction, je me retrouve dans le dossier <span class="bleu">C:\sdz</span>.<br>
Nous sommes maintenant dans le dossier contenant notre fichier Java !  <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
<br>
Mais nous pouvons condenser ceci en :<br>
<span class="code">Code : Bash - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 bash"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="nb">cd</span> ../../sdz
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Maintenant, vous pouvez créer votre fichier <strong><span class="bleu">.class</span></strong> en utilisant la commande <strong><span class="violet"><span class="courrier">javac &lt;nomDeFichier.java&gt;</span></span></strong>.<br>
Si, dans mon dossier, j'ai un fichier <span class="bleu">test.java</span>, je le compile en faisant :<br>
<strong><span class="violet"><span class="courrier">javac test.java</span></span></strong><br>
Et si vous n'avez aucun message d'erreur, vous pouvez vérifier que le fichier <span class="bleu">test.class</span> est présent en utilisant l'instruction <strong><span class="courrier">dir</span></strong> qui liste le contenu d'un répertoire.<br>
<br>
Cette étape réussie, vous pouvez lancer votre programme Java en faisant <strong><span class="violet"><span class="courrier">java &lt;nomFichierClassSansExtension&gt;</span></span></strong><br>
Ce qui nous donne :<br>
<strong><span class="marine"><span class="courrier">java test</span></span></strong><br>
Et normalement, vous avez le résultat de votre programme Java qui s'affiche sous vos yeux ébahis !  <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
<br>
<div class="rmq erreur"><strong>Attention : il ne faut pas mettre l'extension du fichier pour le lancer, mais la mettre pour le compiler. </strong></div><br>
<br>
Donc voilà : vous avez compilé et exécuté un programme Java en ligne de commande... Vous en aurez peut être besoin un jour... En tout cas, j'espère que vous êtes d'attaque pour un petit QCM...  <img src="./java_files/pirate.png" alt=":pirate:" class="smilies">
		</div>
		<hr>
		
	<div id="chap_conclusion">
	J'espère que maintenant vous arrivez mieux à cerner comment fonctionne Java, et à écrire ce que vous voulez à l'écran.<br>
À présent, nous allons voir comment stocker des données en mémoire afin de les afficher, de les calculer... <br>
<br>
En avant pour <span class="orange"><strong>les variables et les opérateurs</strong></span>.
	</div>
	
	<hr>
	<h1 id="chap_10276">Les variables et les opérateurs</h1>
	<div id="chap_intro">
	Nous y voilà. Encore un chapitre barbant... Mais celui-là aussi est nécessaire, et je dirais même vital ! <br>
En Java, comme dans beaucoup de langages de programmation, avant d'utiliser une variable, nous devons d'abord définir ce qu'elle va contenir. <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
<br>
<div class="rmq question">T'es bien gentil, mais c'est quoi, une <span class="italique">variable</span> ?</div><br>
<br>
Oups ! Désolé ! Je parle, je parle et j'oublie l'essentiel... Une variable, c'est ce qui va nous permettre de stocker des informations de toute sorte (chiffres, résultats de calcul, des tableaux, des renseignements fournis par l'utilisateur...). Bref, vous ne pourrez pas faire de programme sans variables. Et comme je viens de vous le dire,<span class="bleu"> et j'insiste là dessus, il faut à tout prix définir ce que nos variables vont contenir avant de les utiliser.</span><br>
<br>
<div class="rmq information">Une déclaration de variable se fait comme suit :<br>
<br>
&lt;Type de la variable&gt; &lt;Nom de la variable&gt; ;<br>
<br>
Cette opération se termine toujours par un ";" (comme toutes les instructions de ce langage) ; <br>
ensuite, on l'initialise en rentrant une valeur.</div><br>
<br>
Bon. Assez de bla-bla, on y va. (Décidément, moi, les rimes en ce moment... <img src="./java_files/langue.png" alt=":p" class="smilies"> )
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10275">Les différents types de variables</h2>
		<div class="ss_part_texte">
		Tout d'abord, je vous conseille vivement de lire <a href="http://www.siteduzero.com/tuto-3-1224-1-un-monde-de-variables.html#ss_part_1">le chapitre qu'a écrit M@teo21 sur les variables</a> dans son tutoriel sur le C. Je pense que vous y verrez plus clair.<br>
<br>
Bon. En Java, nous avons deux type de variables :<br>
<ul>
<li>des variables de type simple ou "primitif",</li>
<li>des variables de type complexe ou encore des objets.</li>
</ul><br>
Ce qu'on appelle des types simples, ou types primitifs, en Java ce sont tout bonnement des nombres entiers, des nombres réels, des booléens ou encore des caractères. Mais vous allez voir qu'il y a plusieurs façons de déclarer certains de ces types.<br>
<br>
<h4><span class="souligne">Commençons par les variables de type numérique</span></h4><br>
	- Le type <span class="orange"><strong><span class="courrier">byte</span></strong></span> (1 octet) peut contenir les entiers entre -128 et +127. <br>
Ex. :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">byte</span> <span class="n">temperature</span><span class="o">;</span>
<span class="n">temperature</span> <span class="o">=</span> <span class="mi">64</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
- Le type <span class="orange"><strong><span class="courrier">short</span></strong></span> (2 octets) contient les entiers compris entre -32768 et +32767.<br>
Ex. :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">short</span> <span class="n">vitesseMax</span><span class="o">;</span>
<span class="n">vitesseMax</span> <span class="o">=</span> <span class="mi">32000</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
- Le type <span class="orange"><strong><span class="courrier">int</span></strong></span> (4 octets) va de -2*10<sup>9</sup> à 2*10<sup>9</sup> (2 et 9 zéros derrière... ce qui fait déjà un joli nombre).<br>
Ex. :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">temperatureSoleil</span><span class="o">;</span>
<span class="n">temperatureSoleil</span> <span class="o">=</span> <span class="mi">15600000</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
C'est en kelvins...<br>
- Le type <span class="orange"><strong><span class="courrier">long</span></strong></span>(8 octets) de -9*10<sup>18</sup> à 9*10<sup>18</sup> (encore plus gros...).<br>
Ex. :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">long</span> <span class="n">anneeLumiere</span><span class="o">;</span>
<span class="n">anneeLumiere</span> <span class="o">=</span> <span class="mi">9460700000000000</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
- Le type <span class="orange"><strong><span class="courrier">float</span></strong></span> (4 octets) correspond à des nombres avec virgule flottante.<br>
Ex. :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">float</span> <span class="n">pi</span><span class="o">;</span>
<span class="n">pi</span> <span class="o">=</span> <span class="mf">3.141592653f</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
ou encore<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">float</span> <span class="n">nombre</span><span class="o">;</span>
<span class="n">nombre</span> <span class="o">=</span> <span class="mf">2.0f</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq information">Vous remarquerez que nous ne mettons pas de virgule mais un <strong>point !</strong> Et vous remarquerez aussi que même si le nombre en question est rond, on met tout de même .0 derrière celui-ci !</div><br>
- Le type <span class="orange"><span class="courrier"><strong>double</strong></span></span> (8 octets) est identique à <span class="orange"><strong><span class="courrier">float</span></strong></span>, si ce n'est qu'il contient un nombre plus grand derrière la virgule.<br>
Ex. :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">double</span> <span class="n">division</span><span class="o">;</span>
<span class="n">division</span> <span class="o">=</span> <span class="mf">0.333333333333333333333333333333333333333333334</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Nous avons aussi des variables stockant du caractère</span></h4><br>
- Le type <span class="orange"><strong><span class="courrier">char</span></strong></span> contient <span class="rouge">UN caractère</span> stocké entre de simples quotes <span class="rouge">' '</span>  comme ceci...<br>
Ex. :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">char</span> <span class="n">caractere</span><span class="o">;</span>
<span class="n">caractere</span> <span class="o">=</span> <span class="sc">'A'</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Nous avons aussi le type booléen</span></h4><br>
- Le type <span class="orange"><strong><span class="courrier">boolean</span></strong></span> qui lui contient <span class="courrier">true</span> (vrai) ou <span class="courrier">false</span> (faux).<br>
Ex. :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">boolean</span> <span class="n">question</span><span class="o">;</span>
<span class="n">question</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Et aussi le type String</span></h4><br>
-  Celle-ci correspond à de la chaîne de caractères.<br>
Ici, il ne s'agit pas d'une variable mais d'un objet qui instancie une classe qui existe dans Java ; nous pouvons l'initialiser en utilisant l'opérateur unaire <span class="orange"><span class="courrier"><strong>new()</strong></span></span> dont on se sert pour réserver un emplacement mémoire à un objet (mais nous reparlerons de tout ceci dans la partie deux, lorsque nous verrons les classes), ou alors lui affecter directement la chaîne de caractères.<br>
Vous verrez que celle-ci s'utilise très facilement et se déclare comme ceci :<br>
Ex. :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">phrase</span><span class="o">;</span>
<span class="n">phrase</span> <span class="o">=</span> <span class="s">"Titi et gros minet"</span><span class="o">;</span>
<span class="c1">//Deuxième méthode de déclaration de type String</span>
<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
<span class="n">str</span> <span class="o">=</span> <span class="s">"Une autre chaîne de caractères"</span><span class="o">;</span>
<span class="c1">//La troisième</span>
<span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="s">"Une autre chaîne"</span><span class="o">;</span>
<span class="c1">//Et une quatrième pour la route</span>
<span class="n">String</span> <span class="n">chaine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"Et une de plus ! "</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq erreur">Attention : <span class="courrier">String</span> commence par une majuscule ! Et lors de l'initialisation, on utilise ici des doubles quotes " " .</div><br>
En fait, String n'est pas un type de variable mais un <strong><span class="bleu">objet</span></strong>.<br>
Notre variable est <strong>"un objet"</strong>, on dit aussi <strong>"une instance"</strong>, ici, une <strong>instance de la classe String</strong>. Nous y reviendrons lorsque nous aborderons les objets. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
<div class="rmq question">On te croit sur parole, mais pourquoi String commence par une majuscule et pas les autres ?</div><br>
C'est simple. Il s'agit d'une convention de nommage.<br>
En fait, c'est une façon d'appeler nos classes, nos variables, etc. Il faut que vous essayiez de respecter cette convention au maximum. Cette convention, la voici :<br>
<ul>
<li><strong>tous vos noms de classes doivent commencer par une <span class="rouge">majuscule</span> !</strong></li>
<li><strong>tous vos noms de variables doivent commencer par une <span class="rouge">minuscule</span>.</strong></li>
<li>Si un nom de variable est un nom composé, celui-ci commence par une minuscule et son <strong>composé par une majuscule. Et ce, <span class="rouge">sans séparation</span></strong>.</li>
<li>Tout ceci <span class="rouge"><span class="gros">sans accent ! !</span></span></li>
</ul><br>
<br>
Je sais que la première classe que je vous ai demandé de créer ne respecte pas cette convention, mais je ne voulais pas vous dire ça à ce moment-là... Donc, à présent, je vous demanderai de ne pas oublier ces règles ! <br>
Sinon ! <img src="./java_files/mechant.png" alt=":colere2:" class="smilies">  Châtiment corporel.  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
Voici quelques exemples de noms de classes et de variables :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Toto</span><span class="o">{}</span>
 <span class="kd">public</span> <span class="kd">class</span> <span class="nc">Nombre</span><span class="o">{}</span>
 <span class="kd">public</span> <span class="kd">class</span> <span class="nc">TotoEtTiti</span><span class="o">{}</span>
 <span class="n">String</span> <span class="n">chaine</span><span class="o">;</span>
 <span class="n">String</span> <span class="n">chaineDeCaracteres</span><span class="o">;</span>
 <span class="kt">int</span> <span class="n">nombre</span><span class="o">;</span>
 <span class="kt">int</span> <span class="n">nombrePlusGrand</span><span class="o">;</span>
 <span class="c1">//...</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Donc, pour en revenir au pourquoi du comment, je vous ai dit que les variables de type String sont des objets. Les objets sont définis par une ossature (un squelette) qui est en fait une classe. Ici, nous utilisons un objet String qui est défini dans une classe qui s'appelle "<strong><span class="courrier">String</span></strong>" ; c'est pourquoi String à une majucule et pas int, float... qui eux ne sont pas définis par une classe.<br>
<br>
Pfiou ! Ça en fait des choses à retenir d'un coup ! Mais je ne vous cache pas que les deux premiers types de variables ne sont pas trop utilisés... <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
<div class="rmq attention"><strong><span class="souligne">Chose importante :</span></strong> veillez à bien respecter la casse (majuscules et minuscules) car une déclaration de CHAR à la place de char ou autre chose provoquera une erreur, tout comme une variable de type string à la place de String !</div><br>
Alors faites bien attention lors de vos déclarations de variables... Sinon une petite astuce quand même, enfin deux plutôt ! On peut très bien compacter la phase de déclaration et d'initialisation en une seule phase ! Comme ceci : <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"> <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">entier</span> <span class="o">=</span> <span class="mi">32</span><span class="o">;</span>
<span class="kt">float</span> <span class="n">pi</span> <span class="o">=</span> <span class="mf">3.1416f</span><span class="o">;</span>
<span class="kt">char</span> <span class="n">carac</span> <span class="o">=</span> <span class="sc">'z'</span><span class="o">;</span>
<span class="n">String</span> <span class="n">mot</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"Coucou"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Et lorsque nous avons plusieurs variables d'un même type, nous pouvons compacter tout ceci en une déclaration comme ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">nbre1</span> <span class="o">=</span> <span class="mi">2</span><span class="o">,</span> <span class="n">nbre2</span> <span class="o">=</span> <span class="mi">3</span><span class="o">,</span> <span class="n">nbre3</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, toutes les variables sont des entiers et toutes initialisées.<br>
<div class="rmq question">Bon, t'es bien mignon, mais on code quand, nous ?</div><br>
Minute papillon ! On va y arriver ! <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
Mais avant, nous avons encore quelque chose de très important à voir pour pouvoir travailler sur et avec nos variables : <br>
<span class="italique"><span class="orange"><strong>Les opérateurs arithmétiques</strong></span></span>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10274">Les opérateurs arithmétiques</h2>
		<div class="ss_part_texte">
		Ceci est notre avant dernière ligne droite avant de commencer à coder ! Et après, vous regretterez le temps où vous n'aviez pas à vous creuser la tête !! <img src="./java_files/diable.png" alt=":diable:" class="smilies"> <br>
<br>
Bon, allez ! Je vois bien que vous brûlez d'impatience, alors on va y aller tout de suite.<br>
<br>
<h3>Les opérateurs arithmétiques</h3><br>
<br>
Ce sont ceux que l'on apprend à l'école primaire...<br>
<br>
<span class="orange"><span class="gros">+</span></span> permet d'ajouter deux variables numériques (mais aussi de concaténer des chaînes de caractères ! Ne vous inquiétez pas, on aura l'occasion d'y revenir).<br>
<br>
<span class="orange"><span class="gros">-</span></span> permet de soustraire deux variables numériques.<br>
<span class="orange"><span class="gros">*</span></span> permet de multiplier deux variables numériques.<br>
<span class="orange"><span class="gros">/</span></span> Permet de diviser deux variables numériques.(mais je crois que vous aviez deviné <img src="./java_files/langue.png" alt=":p" class="smilies"> ).<br>
<span class="orange"><span class="gros">%</span></span> permet de renvoyer le reste de la division de deux variables de type numériques, cet opérateur s'appelle le <strong>modulo</strong>.<br>
<br>
<h4><span class="souligne">Quelques exemples de calcul</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">nbre1</span><span class="o">,</span> <span class="n">nbre2</span><span class="o">,</span> <span class="n">nbre3</span><span class="o">;</span><span class="c1">//déclaration des variables</span>
<span class="n">nbre1</span> <span class="o">=</span> <span class="n">nbre2</span> <span class="o">=</span> <span class="n">nbre3</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span><span class="c1">//initialisation</span>
 
<span class="n">nbre1</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">3</span><span class="o">;</span>         <span class="c1">// ici nbre1 vaut 4</span>
<span class="n">nbre2</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="mi">6</span><span class="o">;</span>         <span class="c1">// ici nbre2 vaut 12</span>
<span class="n">nbre3</span> <span class="o">=</span> <span class="n">nbre2</span> <span class="o">/</span> <span class="n">nbre1</span><span class="o">;</span>     <span class="c1">//ici nbre3 vaut 3</span>
<span class="n">nbre1</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">%</span> <span class="mi">2</span><span class="o">;</span>         <span class="c1">//ici nbre1 vaut 1 car 5 = 2 * 2 + 1</span>
<span class="n">nbre2</span> <span class="o">=</span> <span class="mi">99</span> <span class="o">%</span> <span class="mi">8</span><span class="o">;</span>        <span class="c1">//ici nbre2 vaut 3 car 99 = 8 * 12 + 3</span>
<span class="n">nbre3</span> <span class="o">=</span> <span class="mi">6</span> <span class="o">%</span> <span class="mi">3</span><span class="o">;</span>         <span class="c1">//et là, nbre3 vaut 0 car la division n'a aucun reste</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, nous voyons bien que nous pouvons affecter des opérations sur des nombres à nos variables mais aussi affecter des opérations sur des variables de même type !!<br>
<br>
<div class="rmq information">Je me doute bien que le modulo est assez difficile à assimiler. Voici une utilisation assez simple : Pour déterminer si un entier est pair, il suffit de voir si cet entier modulo 2 renvoie 0 <img src="./java_files/hihi.png" alt="^^" class="smilies"> .</div><br>
<br>
Maintenant, quelque chose que les personnes qui n'ont jamais programmé ont du mal à assimiler. Je garde la même déclaration de variable que ci-dessus.<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">nbre1</span><span class="o">,</span> <span class="n">nbre2</span><span class="o">,</span> <span class="n">nbre3</span><span class="o">;</span>        <span class="c1">//déclaration des variables</span>
<span class="n">nbre1</span> <span class="o">=</span> <span class="n">nbre2</span> <span class="o">=</span> <span class="n">nbre3</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>                  <span class="c1">//initialisation</span>
 
<span class="n">nbre1</span> <span class="o">=</span> <span class="n">nbre1</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>  <span class="c1">//nbre1 = lui même donc 0 + 1 =&gt; nbre1 = 1</span>
<span class="n">nbre1</span> <span class="o">=</span> <span class="n">nbre1</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>  <span class="c1">// nbre1 = 1 (cf ci-dessus) maintenant nbre1 = 1 + 1 = 2!!!</span>
<span class="n">nbre2</span> <span class="o">=</span> <span class="n">nbre1</span><span class="o">;</span>         <span class="c1">//nbre2 = nbre1 = 2</span>
<span class="n">nbre2</span> <span class="o">=</span> <span class="n">nbre2</span> <span class="o">*</span> <span class="mi">2</span><span class="o">;</span>  <span class="c1">//nbre2 = 2 =&gt; nbre2 = 2 * 2 = 4</span>
<span class="n">nbre3</span> <span class="o">=</span> <span class="n">nbre2</span><span class="o">;</span>         <span class="c1">//nbre3 = nbre2 = 4</span>
<span class="n">nbre3</span> <span class="o">=</span> <span class="n">nbre3</span> <span class="o">/</span> <span class="n">nbre3</span><span class="o">;</span>    <span class="c1">//nbre3 = 4 / 4 = 1</span>
<span class="n">nbre1</span> <span class="o">=</span> <span class="n">nbre3</span><span class="o">;</span>        <span class="c1">//nbre1 = nbre3 = 1</span>
<span class="n">nbre1</span> <span class="o">=</span> <span class="n">nbre1</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span><span class="c1">// nbre1 = 1 - 1 = 0</span>
</pre></div>
</td></tr></tbody></table></div><br>
Et là aussi, il existe une syntaxe qui raccourcit l'écriture de ce genre d'opération. Regardez bien :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">nbre1</span> <span class="o">=</span> <span class="n">nbre1</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
<span class="n">nbre1</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
<span class="n">nbre1</span><span class="o">++;</span>
<span class="o">++</span><span class="n">nbre1</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ces trois syntaxes correspondent exactement à la même opération. La troisième syntaxe sera certainement celle que vous utiliserez le plus... <span class="rouge">mais ne marche que pour augmenter la valeur de 1 ! Si vous devez augmenter la valeur d'une variable de 2, utilisez les deux syntaxes précédentes. On appelle cette syntaxe l'<strong>incrémentation</strong></span>. La dernière fait la même chose que la troisième, mais avec une subtilité en plus... Nous en reparlerons dans le chapitre sur les boucles.<br>
<br>
Sinon, la syntaxe est identique pour la soustraction :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">nbre1</span> <span class="o">=</span> <span class="n">nbre1</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span>
<span class="n">nbre1</span> <span class="o">-=</span> <span class="mi">1</span><span class="o">;</span>
<span class="n">nbre1</span><span class="o">--;</span>
<span class="o">--</span><span class="n">nbre1</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
Même commentaire que pour l'addition sauf qu'ici, la troisième syntaxe s'appelle la <span class="rouge"><strong>décrémentation</strong></span>.<br>
<br>
Les raccourcis pour la multiplication marchent aussi ; regardez plutôt :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">nbre1</span> <span class="o">=</span> <span class="n">nbre1</span> <span class="o">*</span> <span class="mi">2</span><span class="o">;</span>
<span class="n">nbre1</span> <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span>
<span class="n">nbre1</span> <span class="o">=</span> <span class="n">nbre1</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
<span class="n">nbre1</span> <span class="o">/=</span> <span class="mi">2</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq erreur">TRES IMPORTANT == On ne peut faire de traitement arithmétique que sur des variables de même type, sous peine de perdre de la précision lors du calcul. On ne s'amuse pas à diviser un <strong>int</strong> par un <strong>float</strong> !  Ou pire, par un <strong>char</strong> !! Et ceci est valable pour tous les opérateurs arithmétiques et pour tous les types de variables numériques. Essayer de garder une certaine rigueur pour vos calculs arithmétiques.</div><br>
<br>
Voici les raisons de ma mise en garde.<br>
Comme je vous l'ai dit plus haut, chaque type de variable a une contenance différente et, pour faire simple, nous allons comparer nos variables à différents récipients.<br>
Une variable de type : <br>
<ul>
<li><span class="courrier">byte</span> correspondrait à un dé à coudre. On ne met pas beaucoup de chose dedans...</li>
<li><span class="courrier">int</span>, à un verre. C'est déjà plus grand.</li>
<li><span class="courrier">double</span>, à un baril. Pfiou, on en met là-dedans...  <img src="./java_files/hihi.png" alt="^^" class="smilies"> </li>
</ul><br>
A partir de là, ce n'est plus que du bon sens. Vous devez facilement voir que vous pouvez mettre le contenu d'un dé à coudre dans un verre ou un baril. Mais par contre, si vous versez le contenu d'un baril dans un verre... Il y en a plein par terre !  <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
Cela s'appelle : <strong>une perte de précision !</strong><br>
<br>
Ainsi, si nous affectons le résultat d' une opération sur deux variables de type <span class="courrier">double</span> dans une variable de type <span class="courrier">int</span>, le résultat sera de type <span class="courrier">int</span> et <strong>donc ne sera pas un réel mais un entier</strong>.<br>
<br>
<div class="rmq information">Pour afficher le contenu d'une variable dans la console, il vous suffit d'appeler l'instruction : <strong><span class="courrier">System.out.println(maVariable);</span></strong>, ou encore <strong><span class="courrier">System.out.print(maDeuxiemeVariable);</span></strong>.</div><br>
<br>
Je suppose que vous voudriez aussi mettre du texte en même temps que vos variables... Eh bien sachez que l'opérateur <span class="orange"><strong><span class="gros">+</span></strong></span> sert aussi comme opérateur de concaténation, c'est-à-dire qu'il permet de mixer du texte brut avec des variables.<br>
<br>
<span class="souligne">Voici un exemple d'affichage avec une perte de précision</span> :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">double</span> <span class="n">nbre1</span> <span class="o">=</span> <span class="mi">10</span><span class="o">,</span> <span class="n">nbre2</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>
 <span class="kt">int</span> <span class="n">resultat</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="n">nbre1</span> <span class="o">/</span> <span class="n">nbre2</span><span class="o">);</span>
 <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le résultat est = "</span> <span class="o">+</span> <span class="n">resultat</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq information">Sachez aussi que vous pouvez tout à fait mettre des calculs dans un affichage, comme ceci <strong><span class="courrier">System.out.print("Résultat = " + nbre1/nbre2);</span></strong> (le plus joue ici le rôle d'opérateur de concaténation) ; ceci vous permet d'économiser une variable et donc de la mémoire.  <img src="./java_files/hihi.png" alt="^^" class="smilies"> </div><br>
Mais pour le bien de ce chapitre, nous n'allons pas utiliser cette méthode...<br>
Vous devez voir que le résultat fait 3, au lieu de 3.33333333333333... Et je pense que vous êtes intrigués par ça :<br>
<span class="orange"><strong> int resultat = (int)(nbre1 / nbre2);</strong></span><br>
<br>
Avant de vous expliquer, remplacez la ligne citée ci-dessus par celle-ci :<br>
<span class="bleu"><strong><span class="courrier"> int resultat = nbre1 / nbre2;</span></strong></span><br>
<br>
Vous devez voir qu'Eclipse n'aime pas du tout ! <br>
Pour savoir pourquoi, nous allons voir ce qu'on appelle <strong>les conversions</strong> ou <strong>"cast"</strong>.<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10278">Les conversions, ou "cast"</h2>
		<div class="ss_part_texte">
		Comme expliqué plus haut, les variables de type <span class="courrier">double</span> contiennent plus d'informations que les variables de type <span class="courrier">int</span>.<br>
<br>
Ici, il va falloir écouter comme il faut... heu, pardon ! Lire comme il faut ! <br>
Nous allons voir un truc super important en Java. Ne vous en déplaise, vous serez amenés à convertir des variables...<br>
<br>
<br>
<strong><span class="souligne">Conversion de type <span class="courrier">int</span> vers un autre type numérique</span></strong><br>
<br>
D'un type <strong><span class="courrier">int</span></strong> en type <strong><span class="courrier">float</span></strong> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">123</span><span class="o">;</span>
<span class="kt">float</span> <span class="n">j</span> <span class="o">=</span> <span class="o">(</span><span class="kt">float</span><span class="o">)</span><span class="n">i</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
D'un type <strong><span class="courrier">int</span></strong> en <strong><span class="courrier">double</span></strong> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">123</span><span class="o">;</span>
<span class="kt">double</span> <span class="n">j</span> <span class="o">=</span> <span class="o">(</span><span class="kt">double</span><span class="o">)</span><span class="n">i</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et inversement :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">double</span> <span class="n">i</span> <span class="o">=</span> <span class="mf">1.23</span><span class="o">;</span>
<span class="kt">double</span> <span class="n">j</span> <span class="o">=</span> <span class="mf">2.9999999</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="n">i</span><span class="o">;</span> <span class="c1">// k vaut 1</span>
<span class="n">k</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="n">j</span><span class="o">;</span> <span class="c1">// k vaut 2</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce type de conversion s'appelle une <strong>conversion d'ajustement</strong> ou <strong>cast</strong> de variable. <br>
<br>
Vous l'avez vu : nous pouvons passer directement d'un type <strong><span class="courrier">int</span></strong> à un type <strong><span class="courrier">double</span></strong>. <span class="rouge">Mais ceci ne fonctionnera pas dans le sens inverse sans une perte de précision.</span><br>
En effet comme vous avez pu le constater, lorsque nous castons un <span class="courrier">double</span> en <span class="courrier">int</span>, la valeur de ce <span class="courrier">double</span> est <strong>tronqué</strong>. Ce qui signifie que l'<span class="courrier">int</span> en question prendra la valeur entière du <span class="courrier">double</span> <strong><span class="bleu">quelle que soit la valeur des décimales</span></strong>.<br>
<br>
Pour en revenir à notre ancien problème, il est aussi possible de caster le résultat d'une opération mathématique. En mettant celle-ci entre <strong>()</strong> et précédée du type de cast souhaité.<br>
Donc : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">double</span> <span class="n">nbre1</span> <span class="o">=</span> <span class="mi">10</span><span class="o">,</span> <span class="n">nbre2</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>
 <span class="kt">int</span> <span class="n">resultat</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="n">nbre1</span> <span class="o">/</span> <span class="n">nbre2</span><span class="o">);</span>
 <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le résultat est = "</span> <span class="o">+</span> <span class="n">resultat</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Fonctionne parfaitement. Mais pour un résultat optimal, vous devez mettre le résultat de l'opération en type <span class="courrier">double</span>.<br>
<br>
<div class="rmq question">Et si on faisait l'inverse ? Si nous déclarons deux entiers et que nous mettons le résultat dans un <span class="courrier">double</span> ?</div><br>
<br>
Comme ceci ?<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">nbre1</span> <span class="o">=</span> <span class="mi">3</span><span class="o">,</span> <span class="n">nbre2</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
 <span class="kt">double</span> <span class="n">resultat</span> <span class="o">=</span> <span class="n">nbre1</span> <span class="o">/</span> <span class="n">nbre2</span><span class="o">;</span>
 <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le résultat est = "</span> <span class="o">+</span> <span class="n">resultat</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous auriez <strong>1</strong> comme résultat.  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
Je ne cast pas ici, car un <span class="courrier">double</span> peut contenir un <span class="courrier">int</span>.<br>
<br>
<div class="rmq question">Et comme ça ?</div><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">nbre1</span> <span class="o">=</span> <span class="mi">3</span><span class="o">,</span> <span class="n">nbre2</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
 <span class="kt">double</span> <span class="n">resultat</span> <span class="o">=</span> <span class="o">(</span><span class="kt">double</span><span class="o">)(</span><span class="n">nbre1</span> <span class="o">/</span> <span class="n">nbre2</span><span class="o">);</span>
 <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le résultat est = "</span> <span class="o">+</span> <span class="n">resultat</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Idem...  <img src="./java_files/siffle.png" alt=":-°" class="smilies"> <br>
<br>
<div class="rmq question">Comment doit-on faire, alors ?</div><br>
Avant de vous donner la réponse, vous devez savoir qu'en Java, comme dans d'autres langages d'ailleurs, il y a la notion de <strong><span class="bleu">priorité d'opération</span></strong> et là, nous en avons un très bon exemple !  <img src="./java_files/heureux.png" alt=":D" class="smilies">  <br>
<br>
<div class="rmq information"><strong>Sachez que l'affectation, le calcul, le cast, le test, l'incrémentation... toutes ces choses sont des opérations !</strong><br>
Et Java les fait dans un certain ordre, suivant une priorité.</div><br>
Dans le cas qui nous intéresse, il y a trois opérations :<br>
<ul>
<li>un calcul,</li>
<li>un cast de valeur de résultat de calcul,</li>
<li>une affectation dans la variable <span class="courrier">resultat</span>.</li>
</ul><br>
Eh bien Java exécute cette ligne dans cet ordre !  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
Il fait le calcul (ici 3/2), il cast le résultat en <span class="courrier">double</span>, puis il l'affecte dans notre variable <span class="courrier">resultat</span>.<br>
<br>
<div class="rmq question">D'accord, mais pourquoi on n'a pas 1.5, alors ?</div><br>
C'est simple : lors de la première opération de Java, la JVM voit un cast à effectuer mais sur un résultat de calcul. La JVM fait ce calcul (division de deux <span class="courrier">int</span> qui, ici, nous donne 1), puis le cast (toujours 1) et affecte la valeur à la variable (encore et toujours 1).<br>
Donc, pour avoir un résultat correct, il faudrait caster chaque nombre avant de faire l'opération, comme ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">nbre1</span> <span class="o">=</span> <span class="mi">3</span><span class="o">,</span> <span class="n">nbre2</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
 <span class="kt">double</span> <span class="n">resultat</span> <span class="o">=</span> <span class="o">(</span><span class="kt">double</span><span class="o">)(</span><span class="n">nbre1</span><span class="o">)</span> <span class="o">/</span> <span class="o">(</span><span class="kt">double</span><span class="o">)(</span><span class="n">nbre2</span><span class="o">);</span>
 <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le résultat est = "</span> <span class="o">+</span> <span class="n">resultat</span><span class="o">);</span> <span class="c1">//affiche: Le résultat est = 1.5</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq question">Message reçu mais... peut-on changer un type numérique en autre chose ?</div><br>
Bien sûr, je ne détaillerai pas trop ceci mais maintenant, vous allez transformer l'argument d'un type donné, <span class="courrier">int</span> par exemple, en <span class="courrier">String</span>.  <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
<br>
<span class="souligne"><strong>Voici la méthode à appliquer</strong></span><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">12</span><span class="o">;</span>
    <span class="n">String</span> <span class="n">j</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
     <span class="n">j</span> <span class="o">=</span> <span class="n">j</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<strong><span class="courrier">j</span></strong> est donc une variable de type <span class="courrier">String</span> contenant la <strong><span class="italique">chaîne de caractères 12</span></strong>. <strong><span class="rouge">Ceci fonctionne aussi avec les autres types numériques.</span></strong> Voyons maintenant comment faire marche arrière, en partant de ce que nous venons de faire.<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">12</span><span class="o">;</span>
<span class="n">String</span> <span class="n">j</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
 
        <span class="n">j</span> <span class="o">=</span> <span class="n">j</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        
        <span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">j</span><span class="o">).</span><span class="na">intValue</span><span class="o">();</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Maintenant, la variable <strong><span class="courrier">k</span></strong> est de type <strong><span class="courrier">int</span></strong>, et contient le nombre <strong><span class="italique">12</span></strong>.<br>
<div class="rmq information">Il y a l'équivalent de <span class="courrier">intValue()</span> pour les autres types numérique : <span class="courrier">floatValue()</span>, <span class="courrier">doubleValue()</span>...</div>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10277">Astuce d'Eclipse</h2>
		<div class="ss_part_texte">
		Retapez le code qu'Eclipse n'aimait pas ; pour mémoire, c'était celui-ci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="kt">double</span> <span class="n">nbre1</span> <span class="o">=</span> <span class="mi">10</span><span class="o">,</span> <span class="n">nbre2</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">resultat</span> <span class="o">=</span> <span class="n">nbre1</span> <span class="o">/</span> <span class="n">nbre2</span><span class="o">;</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le résultat est = "</span> <span class="o">+</span> <span class="n">resultat</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Eclipse vous souligne <span class="courrier">nbre1 / nbre2</span> et vous met une croix rouge sur la gauche de la zone d'édition, sur cette même ligne. <br>
<br>
<div class="centre"><img src="./java_files/95066.jpg" alt="Image utilisateur"></div><br>
<br>
Si vous cliquez sur cette croix rouge, vous aurez ceci :<br>
<br>
<div class="centre"><img src="./java_files/95068.jpg" alt="Image utilisateur"></div><br>
<br>
Double-cliquez sur <strong>"Add cast to 'int'"</strong> et Eclipse vous met automatiquement le cast de l'opération !  <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
Ensuite pour tester, vous pouvez cliquez sur <strong>"Run"</strong> ou appuyer sur <strong>Control + F11</strong>.<br>
Si vous faites cette manipulation (Ctrl + F11), une fenêtre s'ouvre et vous demande quelle ressource sauver, puis lancer. Pour le moment, le choix est simple puisque vous n'avez qu'une classe. Vous n'avez plus qu'à valider et votre programme se lance !  <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
<br>
<div class="rmq information">Au fil de ce tutoriel, vous verrez que cette manipulation va beaucoup vous aider pour des erreurs en tous genres ! </div><br>

		</div>
		<hr>
		
	<div id="chap_conclusion">
	Je suis bien conscient que ces deux chapitres étaient riches en vocabulaire, en nouveautés (pour ceux qui n'auraient pas lu les cours de M@teo), mais bon, voilà : votre calvaire... ne fait que commencer. <img src="./java_files/diable.png" alt=":diable:" class="smilies">  <br>
Eh oui : tout ceci était un amuse-bouche ! Maintenant, nous rentrons dans le vif du sujet. Dans tous les cas, si vous n' avez pas eu 20/20 à ces deux questionnaires, relisez ces deux chapitres !!<br>
<br>
Allez on s' y jette : <span class="orange"><strong><span class="italique">Lire les entrées clavier</span></strong> !</span> <br>
<strong><span class="rouge">TAAAAÏÏÏÏAAAAUUUUTTTT</span></strong> ! <img src="./java_files/zorro.png" alt=":zorro:" class="smilies">
	</div>
	
	<hr>
	<h1 id="chap_10284">Lire les entrées clavier</h1>
	<div id="chap_intro">
	Dans ce chapitre, nous verrons comment lire les entrées clavier.<br>
Nous survolerons ceci sans voir les différents cas d'erreurs que cela peut engendrer.<br>
Trêve de bavardage, je suis sûr que vous êtes impatients...  <img src="./java_files/clin.png" alt=";)" class="smilies"> 
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10283">Utilisation de l'objet Scanner</h2>
		<div class="ss_part_texte">
		Je me doute qu'il vous tardait de pouvoir communiquer avec votre application...  <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
Le moment est enfin venu ! Mais je vous préviens, la méthode que je vais vous donner a des failles.<br>
Je vous fais confiance pour ne pas rentrer n'importe quoi n'importe quand...<br>
<br>
Pour les puristes qui me diront "<span class="italique">ouais, mais si je rentre ça, tu vas te prendre une belle exception dans ta face !</span>", je le sais, mais je ne trouve pas opportun de vous parler des exceptions et de la manière de les capturer maintenant... Bon. Allons-y !  <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
<br>
Je vous ai dit que vos variables de type <strong><span class="courrier">String</span></strong> sont en fait des <strong><span class="violet">objets</span></strong> de type <strong><span class="courrier">String</span></strong>. Pour que Java puisse lire ce que vous tapez au clavier, vous allez devoir utiliser un objet de type <strong><span class="violet">Scanner</span> (merci à Myhtrys)</strong>.<br>
<br>
<div class="rmq information">Je vous rappelle que pour <strong>instancier</strong> un objet, c'est-à-dire créer un nouvel objet afin de s'en servir, <strong>vous devez utiliser l'opérateur unaire <span class="courrier">new()</span></strong>.</div><br>
<br>
Cet objet peut prendre différents paramètres, mais ici, nous n'en utiliserons qu'un. Celui qui correspond justement à l'entrée standard en Java.<br>
Lorsque vous faites <strong><span class="courrier">System.out.println();</span></strong>, je vous rappelle que vous appliquez la méthode <span class="courrier">println()</span> sur la sortie standard ; or ici, nous allons utiliser l'entrée standard <strong><span class="violet"><span class="courrier">System.in</span></span></strong>.<br>
Donc, avant de dire à Java de lire ce que nous allons taper au clavier, nous devrons instancier un objet <span class="courrier">Scanner</span>.<br>
<div class="rmq attention">Pour pouvoir utiliser un objet <span class="courrier">Scanner</span>, nous devons dire à Java où trouver cet objet !</div><br>
Avant de vous expliquer ceci, créez une nouvelle classe et tapez cette ligne de code dans votre méthode main :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous devez avoir une zolie vague rouge sous le mot <strong><span class="courrier">Scanner</span></strong>.<br>
Mais souvenez-vous de l'astuce que je vous avais donnée pour le cast de variables. Cliquez sur la croix rouge sur la gauche et double-cliquez sur "<strong><span class="italique">Import 'Scanner' java.util</span></strong>". Et là, l'erreur disparaît !  <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
<div class="centre"><img src="./java_files/95193.jpg" alt="Image utilisateur"></div><br>
<br>
Maintenant, regardez tout au dessus de votre classe, au dessus de la déclaration de celle-ci, vous devez avoir une ligne : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voilà ce que nous avons fait. Je vous ai dit qu'il fallait dire à Java où se trouve la classe <span class="courrier">Scanner</span>.<br>
Pour faire ceci, nous devons <strong><span class="violet">importer la classe <span class="courrier">Scanner</span></span></strong>, grâce à l'instruction <strong><span class="courrier">import</span></strong>. <br>
La classe que nous voulons se trouve dans le <strong>package <span class="bleu">java.util</span></strong>. <br>
<br>
<div class="rmq information">Tout d'abord, vous devez savoir que le langage Java n'est qu'une multitude de classes ordonnées en <strong>packages</strong>. Par défaut, Java incorpore automatiquement un package contenant les fondements de Java : <strong><span class="bleu">java.lang</span></strong>. C'est dans ce package qu'il y a les variables de bases, la classe <span class="courrier">System</span> et beaucoup d'autres choses qui vous permettent de faire des programmes. Pour voir le contenu de ce package, vous pouvez allez voir <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/package-summary.html"><span class="souligne"><strong>ici</strong></span>.</a> </div><br>
Je pense que vous avez compris qu'un package est en fait un ensemble de classes. En fait, c'est un ensemble de dossiers et de sous-dossiers contenant une ou plusieurs classes.<br>
Par exemple, nous avons importé tout à l'heure la classe <span class="courrier">Scanner</span> qui se trouve dans le package <strong><span class="bleu">java.util</span></strong>. Remplacez les <strong><span class="gros">.</span></strong> par des <strong><span class="gros">/</span></strong>, l'arborescence des dossiers est donc <strong><span class="bleu">java/util/</span></strong> et dans ce dossier se trouve le fichier <strong><span class="bleu">Scanner.class</span></strong> ! Vous verrez ceci plus en détail lorsque nous ferons nos propre packages.  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
<br>
Les classes qui se trouvent dans les autres packages que <strong><span class="bleu">java.lang</span></strong> sont à importer <span class="italique">à la main</span> dans vos classes Java pour pouvoir vous en servir. <br>
La façon dont nous avons importé la classe <span class="courrier">java.util.Scanner</span> dans Eclipse est très pratique et très simple. Vous pouvez aussi le faire manuellement en tapant :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="c1">//Ceci importe la classe Scanner du package java.util</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span> 
<span class="c1">//Ceci importe toutes les classes du package java.util</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq attention">Si vous faites vos imports manuellement, n'oubliez surtout pas le <span class="gros"><strong>;</strong></span> à la fin !</div><br>
Maintenant que vous avez assimilé ceci, nous pouvons retourner à nos moutons !  <img src="./java_files/clin.png" alt=";)" class="smilies"> 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10282">Récupérez ce que vous tapez</h2>
		<div class="ss_part_texte">
		Retournons à notre morceau de code, pour mémoire :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Afin de vous préparer à saisir des informations, veuillez afficher un message à l'écran ; nous avons donc :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Veuillez saisir un mot :"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Maintenant, voici l'instruction pour permettre à Java de récupérer ce que vous avez saisi et ensuite de l'afficher :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Veuillez saisir un mot :"</span><span class="o">);</span>
<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Vous avez saisi : "</span> <span class="o">+</span> <span class="n">str</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq attention">Une fois l'application lancée, le message que vous avez écrit auparavant s'affiche dans la console, en bas dans Eclipse (vous avez l'habitude, maintenant  <img src="./java_files/clin.png" alt=";)" class="smilies">  ).<br>
<strong><span class="gros">Pensez à cliquer dans la console, après votre message, afin que ce que vous saisissez soit écrit dans la console, pour que Java puisse récupérer ce que vous avez inscrit !</span></strong></div><br>
<div class="centre"><img src="./java_files/95254.jpg" alt="Image utilisateur"></div><br>
Alors ? Heureux ?  <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
Voilà votre première saisie clavier ! Comme vous avez pu le constater, l'instruction <span class="courrier">nextLine()</span> renvoie une chaîne de caractères. Si vous avez essayé de remplacer la variable de type <span class="courrier">String</span> par une variable d'un autre type, vous avez dû voir qu'Eclipse n'apprécie pas du tout... Et si vous avez cliqué sur la croix rouge pour corriger le problème, vous constatez que la seule solution qu'il vous propose est de changer le type de votre variable pour le type String.<br>
<br>
<div class="rmq information">Vous aurez remarqué aussi qu'Eclipse vous simplifie la vie au maximum. Lorsque vous tapez "<strong><span class="courrier">sc.</span></strong>", Eclipse vous propose une liste de méthodes appartenant à cet objet.</div><br>
Si vous remplacez la ligne de code qui récupère une chaîne de caractères comme suit :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Veuillez saisir un nombre :"</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">str</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Vous avez saisi le nombre : "</span> <span class="o">+</span> <span class="n">str</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
vous devez voir que lorsque vous utilisez votre variable de type Scanner, et où vous tapez le point permettant d'appeler des méthodes de l'objet, Eclipse vous donne une liste de méthodes associées à cet objet et, lorsque vous commencez à taper le début de la méthode <strong><span class="courrier">nextInt()</span></strong>, le choix se restreint jusqu'à ne laisser que cette seule méthode.<br>
<br>
Exécutez et testez ce programme et vous verrez qu'il fonctionne à la perfection ! <strong>Sauf... si vous saisissez autre chose qu'un entier !</strong><br>
<div class="rmq attention">C'est ce que je vous disais au départ de ce chapitre. L'objet essaie de récupérer un entier, mais si vous lui donnez autre chose, une exception est levée ! Nous verrons ceci lorsque nous programmerons des objets...</div><br>
Pour les curieux, voici ce que donnerait l'erreur :<br>
<div class="centre"><img src="./java_files/95259.jpg" alt="Image utilisateur"></div><br>
<br>
Vous savez maintenant que pour lire un <span class="courrier">int</span>, vous devez utiliser <strong><span class="courrier">nextInt()</span></strong>. <br>
De façon générale, dites-vous que pour récupérer un type de variable, il vous suffit d'appeler <span class="courrier">next&lt;Type de variable commençant par une majuscule&gt;</span> (rappelez-vous de la convention de nommage !). <br>
Bon. C'est mon jour de bonté :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
<span class="kt">double</span> <span class="n">d</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextDouble</span><span class="o">();</span>
<span class="kt">long</span> <span class="n">l</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLong</span><span class="o">();</span>
<span class="kt">byte</span> <span class="n">b</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextByte</span><span class="o">();</span>
<span class="c1">//etc</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq erreur"><strong><span class="souligne">Attention</span></strong> : il y a un type de variable primitive qui n'est pas pris en compte par la classe <span class="courrier">Scanner</span> ; il s'agit des variables de type <strong><span class="courrier">char</span></strong>.</div><br>
<br>
Voici comment on pourrait récupérer un caractère : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Saisissez une lettre :"</span><span class="o">);</span>
<span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
<span class="kt">char</span> <span class="n">carac</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Vous avez saisi le caractère : "</span> <span class="o">+</span> <span class="n">carac</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<strong><span class="souligne">Qu'est-ce que nous avons fait ici ?</span></strong><br>
Nous avons récupéré une chaîne de caractères, puis nous avons utilisé une méthode de l'objet <span class="courrier">String</span> (ici, <span class="courrier"><strong>charAt(0)</strong></span> ) afin de récupérer le premier caractère saisi !<br>
Même si vous tapez une longue chaîne de caractères, l'instruction <strong><span class="courrier">charAt(0)</span></strong> ne renverra que le premier caractère...<br>
<div class="rmq information">Vous devez vous demander pourquoi <span class="courrier">charAt(0)</span> et non <span class="courrier">charAt(1)</span> ? Ne vous inquiétez pas, nous aborderons ce point lorsque nous verrons les tableaux...</div><br>
<br>
<br>
Jusqu'à ce qu'on aborde les exceptions, je vous demande d'être rigoureux et de faire attention à ce que vous attendez comme donnée afin d'utiliser la bonne méthode.<br>
<br>
Une précision toutefois. La méthode <span class="code2 java"><span class="n">nextLine</span><span class="o">()</span>
</span> récupère le contenu de toute la ligne saisie et repositionne la "<span class="italique">tête de lecture</span>" au début d'une autre ligne. Par contre, si vous avez invoqué une méthode comme <span class="code2 java"><span class="n">nextInt</span><span class="o">()</span>
</span>, <span class="code2 java"><span class="n">nextDouble</span><span class="o">()</span>
</span> et si vous invoquez directement derrière la méthode <span class="code2 java"><span class="n">nextLine</span><span class="o">()</span>
</span>, celle-ci ne vous invitera pas à saisir une chaîne de caractères mais elle videra la ligne commencée précédemment par les autres instructions car celles-ci ne repositionnent pas la tête de lecture, l'instruction <span class="code2 java"><span class="n">nextLine</span><span class="o">()</span>
</span> le fait donc à leurs place. Pour faire simple, ceci :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Saisissez un entier : "</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Saisissez une chaîne : "</span><span class="o">);</span>
		<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>		
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"FIN ! "</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
ne vous demandera pas saisir une chaîne et affichera directement "Fin". Pour pallier ce problème il suffit de vider la ligne après les instructions ne le faisant pas : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Saisissez un entier : "</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Saisissez une chaîne : "</span><span class="o">);</span>
                <span class="c1">//On vide la ligne avant d'en lire une autre</span>
                <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
		<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>		
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"FIN ! "</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voilà : je pense que vous êtes fin prêts pour un QCM, maintenant !
		</div>
		<hr>
		
	<div id="chap_conclusion">
	J'espère que cette partie vous a plu et que vous êtes encore en forme...<br>
A partir de maintenant, nous allons aborder les différentes instructions du langage.<br>
Commençons par <strong><span class="orange">les conditions</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10296">Les conditions</h1>
	<div id="chap_intro">
	Nous abordons ici un des chapitres les plus importants et les plus utilisés.<br>
Vous allez voir que tous vos projets ne sont que des enchaînements et des imbrications de <strong>conditions et de boucles (partie suivante).</strong> <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
Dans une classe, la lecture et l'exécution se font de façon séquentielle. C'est-à-dire en suivant, ligne par ligne. Avec les <strong>conditions</strong>, nous allons pouvoir gérer différents cas de figure, sans pour autant lire tout le code.<br>
Assez de belles paroles ! Rentrons tout de suite dans le vif du sujet.
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10295">Les opérateurs logiques</h2>
		<div class="ss_part_texte">
		Ceux-ci sont surtout utilisés lors de conditions (SI****** alors fait ceci*****) pour tester des vérités ou des contrevérités ! Mais nous verrons plus en détails leur utilité dans un autre chapitre ! Je vous les colle ici car ils sont faciles à mémoriser ; et puis comme ça, c'est fait, on n'en parlera plus.<br>
<br>
<span class="orange"><span class="gros">==</span></span> permet de tester l'égalité. Prenons l'exemple complètement inutile suivant (en français, pour le code Java, ce sera plus tard...).<br>
SI bleu == bleu alors fait ceci.......<br>
<br>
<span class="orange"><span class="gros">!=</span></span> pas égal ou encore différent de. Je pense que c'est assez parlant, non ?<br>
<br>
<span class="orange"><span class="gros">&lt;</span></span> strictement inférieur.<br>
<br>
<span class="orange"><span class="gros">&lt;=</span></span> inférieur ou égal. Vous l'aviez déjà trouvé, je suis sûr ! ! !<br>
<br>
<span class="orange"><span class="gros">&gt;</span></span> strictement supérieur.<br>
<br>
<span class="orange"><span class="gros">&gt;=</span></span> eh oui, voici son grand frère, le majestueux supérieur ou égal !<br>
<br>
<span class="orange"><span class="gros">&amp;&amp;</span></span> voici l'opérateur ET. Permet de préciser une condition.<br>
<br>
<span class="orange"><span class="gros">||</span></span> est le cousin du ET, le OU. Même combat que le précédent.<br>
<br>
<span class="orange"><span class="gros">? :</span></span> L'opérateur ternaire, pour celui-ci vous comprendrez mieux avec un exemple... vers la fin de ce chapitre.  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
<br>
<div class="rmq information">Comme je vous l'ai dit dans la partie précédente, les opérations en Java sont soumises à un ordre de priorité. Tous ces opérateurs sont soumis à cette règle, de la même manière que les opérateurs arithmétiques...</div><br>
<br>
Il n'y a pas grand-chose à dire sur ces opérateurs sans un exemple concret, donc allons-y.  <img src="./java_files/clin.png" alt=";)" class="smilies"> 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10294">La structure if....else</h2>
		<div class="ss_part_texte">
		Pour commencer, je vais vous expliquer à quoi servent ces structures conditionnelles. Elles servent tout simplement à pouvoir constituer un programme, en examinant les différents cas de figure que celui-ci propose.<br>
Je m'explique : imaginons un programme qui demande à un utilisateur de rentrer un nombre réel (qui peut être soit négatif, soit nul, soit positif). Les structures conditionnelles vont nous permettre de gérer ces trois cas de figure.<br>
<br>
La structure de ces conditions ressemble à ça :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="syntax"><pre><span class="k">if</span><span class="o">(</span><span class="c">//condition)</span>
<span class="o">{</span>
<span class="o">.....</span><span class="c">// exécution des instructions si la condition est remplie</span>
<span class="o">.....</span>
<span class="o">.....</span>
<span class="o">}</span>
<span class="k">else</span>
<span class="o">{</span>
<span class="o">....</span><span class="c">// exécution des instructions si la condition n'est pas remplie</span>
<span class="o">....</span>
<span class="o">....</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ceci peut se traduire par "SI... SINON...".<br>
<br>
Mettons notre petit exemple du dessus en pratique :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
 
<span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre est négatif"</span><span class="o">);</span>
 
<span class="k">else</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre est positif"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Testez ce petit code, et vous verrez comment il fonctionne (par exemple, avec la fonction de pas à pas).<br>
Dans ce cas, notre classe affiche que "<strong><span class="italique">le nombre est positif</span></strong>".<br>
Expliquons un peu ce qui se passe :<br>
<ul>
<li>dans un premier temps, la condition du <span class="courrier">if</span> est testée... (qui dit SI <span class="courrier">i</span> est strictement inférieur à 0).</li>
<li>Vu que celle-ci est fausse, le programme exécute le <span class="courrier">else</span>.</li>
</ul><br>
<br>
<div class="rmq question">Attends un peu ! Lorsque tu nous a présenté la structure des conditions, tu as mis des accolades et là, tu n'en mets pas...</div><br>
<div class="rmq information">Bien observé. En fait, les accolades sont la structure "<span class="italique">normale</span>" des conditions mais, lorsque le code à l'intérieur d'une d'entre elles n'est composé que <strong>d'une seule ligne de code, les accolades deviennent facultatives</strong>.</div><br>
<br>
Comme nous avons l'esprit perfectionniste, nous voulons que notre programme affiche "<strong>le nombre est nul</strong>", lorsque <span class="courrier">i</span> est égal à 0 ; nous allons donc rajouter une condition.<br>
Comment faire... La condition du <span class="courrier">if</span> est remplie si le nombre est strictement négatif, ce qui n'est pas le cas ici puisque nous allons le mettre à 0, le code contenu dans la clause <span class="courrier">else</span> est donc exécuté si le nombre est égal à 0 et strictement supérieur à 0.<br>
Il nous suffit de rajouter une condition à l'intérieur de la clause <span class="courrier">else</span>. Comme ceci :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est négatif !"</span><span class="o">);</span>
 
        <span class="k">else</span>
        <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est nul !!"</span><span class="o">);</span>
 
                <span class="k">else</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est positif !!"</span><span class="o">);</span>
 
        <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ici, la seule petite chose qui devrait vous interpeler, c'est l'<strong>imbrication</strong> d'une structure <strong><span class="courrier">if... else</span> dans un <span class="courrier">else</span></strong>. Et encore, parce que je suis tolérant... <br>
Vous voyez aussi que le code à l'intérieur de la première clause <strong><span class="courrier">if</span></strong> ne contient qu'une seule ligne de code <strong>[=&gt; accolades facultatives</strong>] et que la clause <strong><span class="courrier">else</span></strong> correspondante, elle, a plusieurs ligne en son sein <strong>[=&gt; on entoure donc le code de cette dernière avec des accolades]</strong>. Les clauses à l'intérieur du premier <strong><span class="courrier">else</span></strong> n'ont, elles aussi, qu'une seule ligne de code <strong>[=&gt; accolades facultatives].</strong><br>
<br>
Vous verrez vite que vos programmes ne seront que des imbrications de conditions.<br>
Je vous fais voir une autre manière de le faire :<br>
<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="o">)</span>
        <span class="o">{</span>       
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
                  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est nul !!"</span><span class="o">);</span>
 
                <span class="k">else</span>
                  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est négatif !"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">else</span>
           <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est positif !!"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Je pense que ce code parle de lui-même...  <img src="./java_files/siffle.png" alt=":-°" class="smilies"> <br>
Ici, la clause du <span class="courrier">if</span> est remplie si <span class="courrier">i</span> est <strong>INFÉRIEUR OU ÉGAL</strong> à 0, <span class="courrier">i</span> vaut 0 la condition est remplie. La suite, vous la connaissez.  <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
<br>
Maintenant que vous avez tout compris, je vais vous montrer une autre façon de faire ce code, avec le même résultat (encore heureux ! <img src="./java_files/langue.png" alt=":p" class="smilies"> ). En ajoutant juste un petit <strong><span class="italique">SINON SI</span></strong>. Regardez bien la magie. <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
  <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est négatif !"</span><span class="o">);</span>      
  
  <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est positif !!"</span><span class="o">);</span>           
 
  <span class="k">else</span>  
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est nul !!"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Alors ? Explicite, n'est-ce pas ?<br>
<ul>
<li><strong>SI</strong> <span class="courrier">i</span> est strictement négatif =&gt; exécution du code.</li>
<li><strong>SINON SI</strong> <span class="courrier">i</span> est positif =&gt; exécution du code.</li>
<li><strong>SINON</strong> <span class="courrier">i</span> est forcément nul =&gt; exécution du code.</li>
</ul><br>
<br>
<div class="rmq attention">Il faut absolument donner au <strong><span class="courrier">else if</span></strong> une condition pour qu'il fonctionne. Sans cela, Eclipse vous mettra de zolies vagues rouges sous votre <strong><span class="courrier">else if</span></strong>. <br>
Vous en avez sûrement déjà vu à de nombreuses reprises... <img src="./java_files/siffle.png" alt=":-°" class="smilies"> </div><br>
<strong><br>
Par contre, je vais TRÈS FORTEMENT INSISTER sur un point :</strong> regardez l'affichage du code : remarquez le petit décalage entre ma première condition et ma deuxième.<br>
On appelle ceci <strong><span class="rouge"><span class="gros">l'indentation</span></span></strong>, et comme c'est écrit en gros, en gras et en rouge, c'est que c'est hyper important ! <br>
<br>
En effet, pour vous repérer dans vos futurs programmes, cela sera très utile. Imaginez deux secondes que vous avez un programme de 700 lignes avec 150 conditions, et que tout est écrit le long du bord gauche. Vous allez vous amuser pour retrouver où commence et où se termine une condition. <strong>Je vous le garantis !</strong><br>
Vous n'êtes pas obligés de le faire, mais je vous assure que vous y viendrez.<br>
<br>
<div class="rmq information">À titre d'information, n'essayez pas de faire des comparaisons de <strong><span class="courrier">String</span></strong> à ce stade. Je vous expliquerai la marche à suivre lors du chapitre sur <strong><span class="italique">les fonctions</span></strong>.</div><br>
<br>
Je vois que vous apprenez vite : nous pouvons donc passer à la vitesse supérieure ! <br>
Voyons tout de suite <strong><span class="italique">les conditions multiples.<br>
</span></strong>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10293">Les conditions multiples</h2>
		<div class="ss_part_texte">
		<div class="rmq information">Avant de commencer, vous devez savoir <strong>qu'on ne peut pas tester l'égalité de chaînes de caractères !</strong><br>
Du moins pas comme je vous l'ai montré ci-dessus... Nous aborderons ce point plus tard.  <img src="./java_files/siffle.png" alt=":-°" class="smilies"> </div><br>
<br>
Derrière ce nom barbare, se trouve simplement une ou deux (ou X) conditions en plus dans un <strong><span class="courrier">if</span></strong>, ou un <strong><span class="courrier">else if</span></strong>. Nous allons maintenant utiliser les opérateurs logiques que nous avons vus au début. Pfiou ! C'est vieux ! <br>
Alors dans ce cas :<br>
<ul>
<li><strong><span class="italique">SI</span></strong> c'est vieux <span class="rouge">et</span> ça va aller  =&gt; alors on continue.</li>
<li><strong><span class="italique">SINON SI</span></strong> c'est vieux <span class="rouge">et</span> je ne me rappelle plus =&gt; on va relire le début !</li>
<li><strong><span class="italique">SINON</span></strong>, allons-y tout de suite !</li>
</ul><br>
<br>
Voilà un bel exemple de conditions multiples ! Et je n'ai pas été la chercher loin, celle-là. Elle ressemble beaucoup à la condition de notre programme (plus haut).<br>
Je sais par expérience qu'on comprend mieux avec un exemple ; donc, allons-y...<br>
<br>
Maintenant, nous allons vérifier si un nombre donné appartient à un intervalle connu ; par exemple, savoir si un nombre est entre 50 et 100. Nous allons essayer de résoudre ce problème avec les outils que nous avons. En gros, ça donnerait quelque chose comme ça : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">58</span><span class="o">;</span>
 <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">)</span> 
 <span class="o">{</span>
   <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&gt;</span> <span class="mi">50</span><span class="o">)</span>
     <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre est bien dans l'intervalle"</span><span class="o">);</span>
   
   <span class="k">else</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre n'est pas dans l'intervalle"</span><span class="o">);</span>
 <span class="o">}</span>
 
 <span class="k">else</span>
   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre n'est pas dans l'intervalle"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Rien de bien compliqué : notre objectif dans ce programme est de repérer si un nombre répond à deux conditions, il faut :<br>
<ul>
<li>qu'il soit inférieur à 100</li>
<li>qu'il soit supérieur à 50.</li>
</ul><br>
<br>
Eh bien les conditions multiples peuvent éliminer deux lignes dans notre précédent code. Regardez plutôt :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">58</span><span class="o">;</span>
 <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span> <span class="o">&amp;&amp;</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">50</span><span class="o">)</span> 
   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre est bien dans l'intervalle"</span><span class="o">);</span>
 
 <span class="k">else</span>
   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre n' est pas dans l'intervalle"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Nous avons utilisé l'opérateur <strong><span class="orange"><span class="courrier">&amp;&amp;</span></span></strong> qui signifie <strong><span class="orange">ET</span></strong>. Donc, la condition de notre <span class="courrier">if</span> est devenu :<br>
si <span class="courrier">i</span> est inférieur à 100 <strong><span class="gros">ET</span></strong> supérieur à 50, alors la condition est remplie.<br>
<div class="rmq information">Avec l'opérateur <strong><span class="courrier">&amp;&amp;</span></strong>, la clause est remplie <strong>si et seulement si les conditions formant la clause sont toutes remplies ; si l'une des conditions n'est pas vérifiée, la clause sera considérée comme fausse</strong>. <br>
Ici, nous avons deux conditions liées par l'opérateur <strong><span class="courrier">&amp;&amp;</span></strong> : les deux conditions doivent être vraies pour que la clause soit remplie !</div><br>
Cet opérateur vous initie à la notion d'<span class="italique">intersection d'ensembles</span>. Ici, nous avons deux conditions qui définissent chacune un ensemble :<br>
<ul>
<li><span class="courrier">i</span> &lt; 100 définit un ensemble des nombres inférieurs à 100 (59 ou 45 ou 0 ou -1000000)</li>
<li><span class="courrier">i</span> &gt; 50 définit les nombres supérieurs à 50 (58 ou 79 ou 101 ou 1000000).</li>
</ul><br>
L'opérateur <strong><span class="orange"><span class="courrier">&amp;&amp;</span></span></strong> permet de faire intersection de ces ensembles. La condition regroupe donc les nombres qui appartiennent à ces deux ensembles, ici les nombres de 51 à 99 inclus.<br>
Réfléchissez bien à l'intervalle que vous voulez définir. Regardez ce code :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">58</span><span class="o">;</span>
 <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span> <span class="o">&amp;&amp;</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">100</span><span class="o">)</span> 
   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre est bien dans l'intervalle"</span><span class="o">);</span>
 
 <span class="k">else</span>
   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre n'est pas dans l'intervalle"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, la condition ne sera <strong>JAMAIS</strong> remplie car, personnellement, je ne connais aucun nombre qui est à la fois plus petit que 100 et plus grand !<br>
<div class="rmq information">Par contre, si on remplace les inférieur / supérieur stricts par des inférieur / supérieur ou égal, le seul nombre qui puisse valider la clause est 100, car c'est le seul qui appartienne aux deux ensembles.</div><br>
<br>
Reprenez le code précédent, celui-ci où la condition ne sera jamais remplie...<br>
Maintenant, remplacez l'opérateur <span class="courrier">&amp;&amp;</span> par <strong><span class="orange"><span class="courrier">||</span></span></strong> (pour mémoire, c'est un OU).<br>
À l'exécution du programme et après plusieurs tests de valeur pour <span class="courrier">i</span>, vous pouvez vous apercevoir que tous les nombres remplissent cette condition, <strong>sauf</strong> 100.<br>
<br>
Nous vérifions ici si le nombre choisi appartient à <strong><span class="rouge">L'UN DES DEUX ensembles ou aux DEUX</span></strong>. On cherche un nombre strictement inférieur à 100 OU un nombre strictement supérieur à 100 : donc tous les nombres remplissent cette condition, <strong>SAUF 100</strong>.<br>
Et là, si nous remplaçons les inégalités strictes par des inégalités larges, tous les nombres remplissent la condition, car 100 fera partie des deux ensembles.<br>
<div class="rmq information"><br>
Ici, un seul opérateur large suffit, car si 100 appartient à l'un des deux ensembles, la condition sera remplie car le nombre doit appartenir à l'un ou l'autre, ou aux deux intervalles !</div><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10292">La structure switch</h2>
		<div class="ss_part_texte">
		Cette instruction est un peu particulière... par sa syntaxe, et son utilisation.<br>
Le <strong><span class="courrier">switch</span></strong> est surtout utilisé lorsque nous voulons des conditions "à la carte". Le meilleur exemple se trouve sur le site du Zér0 : ce n'est pas tant la note, mais l'appréciation qui suit qui est définie avec un <span class="courrier">switch</span>.<br>
Prenons l'exemple d'un questionnaire de 4 questions, sur 5 points chacune, qui nous donne 5 notes, et donc 5 appréciations possibles, comme ce qui suit :<br>
<ul>
<li><strong>0/20</strong> : tu peux revoir ce chapitre, petit Zér0 !</li>
<li><strong>5/20</strong> : concentre-toi un peu plus... Allez, persévère !</li>
<li><strong>10/20</strong>  : Je crois que tu as compris l'essentiel ! Viens relire ce chapitre à l'occasion.</li>
<li><strong>15/20</strong> : BRAVO ! Voilà une note encourageante pour moi qui essaie de vous apprendre des trucs !</li>
<li><strong>20/20</strong> : IL EST VRAIMENT... IL EST VRAIMENT.... IL EST VRAIMENT PHHHEEEEEENOOOOOMMEEEEEENAAAALLLL!</li>
</ul><br>
<br>
Dans ce genre de cas, on utilise un <strong><span class="courrier">switch</span></strong> pour alléger un peu le code, et surtout pour éviter des <strong><span class="courrier">else if</span></strong> à répétition.<br>
<br>
<div class="rmq information">J'en conviens : nous pouvons très bien arriver au même résultat avec des <strong><span class="courrier">if</span></strong> qu'avec un <strong><span class="courrier">switch</span></strong>. Mais il faut le voir tout de même.</div><br>
<br>
Je vais vous expliquer comment se construit la syntaxe d'un <span class="courrier">switch</span> ; puis nous allons le mettre en pratique tout de suite après.<br>
<br>
<span class="souligne">Syntaxe</span><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="syntax"><pre><span class="k">switch</span> <span class="o">(</span><span class="cm">/*variable*/</span><span class="o">)</span>
     <span class="o">{</span>
       <span class="k">case</span> <span class="cm">/*argument*/</span><span class="o">:</span>
         <span class="cm">/*action*/</span><span class="o">;</span>
         <span class="k">break</span><span class="o">;</span>
         
       <span class="k">case</span> <span class="cm">/*argument*/</span><span class="o">:</span> 
         <span class="cm">/*action*/</span><span class="o">;</span>
         <span class="k">break</span><span class="o">;</span>
         
       <span class="k">case</span> <span class="cm">/*argument*/</span><span class="o">:</span>
         <span class="cm">/*action*/</span><span class="o">;</span>
         <span class="k">break</span><span class="o">;</span>  
 
        <span class="k">default</span><span class="o">:</span><span class="cm">/*action*/</span><span class="o">;</span>             
     <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Cette expression s'exécute comme suit :<br>
<ul>
<li>la classe évalue l'expression figurant après le <span class="courrier">switch</span> (ici <span class="courrier">/* variable*/</span>)</li>
<li>la classe cherche ensuite s'il existe une languette (<span class="courrier">case /*valeur possible de la variable */:</span>), dans le bloc d'instructions, correspondant à la forme de <span class="courrier">/*variable*/</span></li>
<li>s'il existe une languette, la requête figurant dans celle-ci sera exécutée</li>
<li>sinon, on passe à la languette suivante !</li>
<li>Si aucun cas n'a été trouvé, la classe va exécuter ce qui se trouve dans l'instruction <strong><span class="courrier">default:/*action*/;</span></strong>, voyez ceci comme une sécurité.</li>
</ul><br>
<div class="rmq attention">Notez bien la présence de l'instruction <strong><span class="rouge"><span class="courrier">break;</span></span></strong>. Celle-ci permet de sortir du <strong><span class="courrier">switch</span></strong> si une languette a été trouvée pour le cas concerné. Pour mieux juger de l'utilité de cette instruction, enlevez tous les <strong><span class="courrier">break;</span></strong>, et compilez votre programme. Vous verrez le résultat...</div><br>
<br>
Voilà un exemple de <span class="courrier">switch</span> que vous pouvez essayer :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">nbre</span> <span class="o">=</span> <span class="mi">5</span><span class="o">;</span> 
 
     <span class="k">switch</span> <span class="o">(</span><span class="n">nbre</span><span class="o">)</span>
     <span class="o">{</span>
       <span class="k">case</span> <span class="mi">1</span><span class="o">:</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est tout petit"</span><span class="o">);</span>
         <span class="k">break</span><span class="o">;</span>
 
       <span class="k">case</span> <span class="mi">2</span><span class="o">:</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est tout petit"</span><span class="o">);</span>
         <span class="k">break</span><span class="o">;</span>
 
       <span class="k">case</span> <span class="mi">3</span><span class="o">:</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est un peu plus grand"</span><span class="o">);</span>
         <span class="k">break</span><span class="o">;</span>
 
       <span class="k">case</span> <span class="mi">4</span><span class="o">:</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est un peu plus grand"</span><span class="o">);</span>
         <span class="k">break</span><span class="o">;</span>
 
       <span class="k">case</span> <span class="mi">5</span><span class="o">:</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est la moyenne"</span><span class="o">);</span>
         <span class="k">break</span><span class="o">;</span>
 
       <span class="k">case</span> <span class="mi">6</span><span class="o">:</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est tout de même grand"</span><span class="o">);</span>
         <span class="k">break</span><span class="o">;</span>
 
       <span class="k">case</span> <span class="mi">7</span><span class="o">:</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est grand"</span><span class="o">);</span>
         <span class="k">break</span><span class="o">;</span>
 
      <span class="k">default</span><span class="o">:</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ce nombre est très grand, puisqu'il est compris entre 8 et 10"</span><span class="o">);</span>
 
     <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ici, vous devriez commencer à voir l'intérêt de <strong><span class="gros">l'indentation</span></strong>  ==&gt; je crois que je l'aurai assez dit... <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
<br>
Si vous avez essayé ce programme en enlevant l'instruction <strong><span class="courrier">break;</span></strong>, vous avez dû vous rendre compte que le <span class="courrier">switch</span> exécute le code contenu dans le <strong><span class="courrier">case 5:</span></strong> mais aussi dans tous ceux qui suivent !<br>
<strong>L'instruction <strong><span class="courrier">break;</span></strong> permet de sortir de l'opération en cours</strong>. Dans notre cas, on sort de l'instruction <span class="courrier">switch</span>, mais vous verrez une autre utilisation au chapitre suivant.<br>
<br>
<div class="rmq information">L'instruction <strong><span class="courrier">switch</span></strong> ne prend que des entiers ou des caractères en paramètre... C'était important de le dire.</div><br>
<br>
Je pense que c'est assez clair ! Vous pouvez voir le même résultat lorsque vous faites des "scores" différents dans vos QCM.<br>
Surtout, pensez bien à l'instruction <strong><span class="courrier">break;</span></strong>, et aussi à vos <strong><span class="courrier"><span class="gros">;</span></span></strong>.<br>
<br>
Si tout le monde suit, voyons à quoi ressemble les conditions ternaires !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10291">La condition ternaire</h2>
		<div class="ss_part_texte">
		Celle-ci est un peu particulière mais très pratique.<br>
Avec elle, vous pourrez condenser certaines parties de code, mais attention à ne pas en abuser sinon votre code sera indigeste.<br>
<br>
La particularité des conditions ternaires réside dans le fait que trois opérandes (variable ou constante) sont mises en jeu mais aussi que ces conditions sont employées pour affecter des données dans une variable. Voici à quoi ressemble la structure de ce type de condition : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="o">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">20</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="n">y</span><span class="o">)</span> <span class="o">?</span> <span class="n">y</span> <span class="o">:</span> <span class="n">x</span> <span class="o">;</span> <span class="c1">//Maintenant max vaut 20</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Décortiquons ce qu'il se passe : <br>
<ul>
<li>Nous cherchons à affecter une valeur à notre variable <strong><strong><span class="arial">max</span></strong></strong>, mais de l'autre côté de l'opérateur d'affectation se trouve une condition ternaire...</li>
<li>Ce qui se trouve entre parenthèses est évalué : est-ce que <strong><span class="courrier">x</span></strong> est plus petit que <strong><span class="courrier">y</span></strong>, donc deux cas de figure se profilent à l'horizon : </li><ul>
<li>Si la condition renvoie <strong><span class="violet"><span class="courrier">true </span></span></strong>(vrai), donc qu'elle est vérifiée, la valeur qui se trouvent après le <strong><span class="courrier"><span class="gros"><span class="violet">?</span></span></span></strong> sera affectée.</li>
<li>Sinon, la valeur se trouvant après le symbole <strong><span class="gros"><span class="violet"><span class="courrier">:</span></span></span></strong> sera affectée.</li>
</ul>
<li>L'affectation est faite, vous pouvez utiliser votre variable max <img src="./java_files/hihi.png" alt="^^" class="smilies"> .</li>
</ul><br>
<br>
<div class="rmq erreur">Attention : La condition que vous évaluez doit retourner soit vrai soit faux !</div><br>
<br>
Pour vous faire voir l'utilité de ce genre d'instruction, voilà à quoi pourrait ressembler un code qui fait exactement la même chose que l'exemple que je vous ai fourni : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="o">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">20</span><span class="o">,</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="n">y</span><span class="o">)</span>
  <span class="n">max</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>
<span class="k">else</span>
  <span class="n">max</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez aussi faire des calculs (ou autre chose) avant d'affecter les valeurs, donc ce code fonctionne : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="o">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">20</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="n">y</span><span class="o">)</span> <span class="o">?</span> <span class="n">y</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">:</span> <span class="n">x</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">;</span> <span class="c1">//Ici max vaut 2 * 20 soit 40</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
J'espère que vous y voyez plus clair...<br>
Cependant, vous devez savoir autre chose, comme je vous l'ai dit lorsque vous avez lu le chapitre sur les opérateurs, vous pouvez utiliser le modulo pour savoir si un nombre est pair ou impair. Avec le code suivant, vous allez voir que la variable que nous souhaitons affecter n'a pas de lien avec la condition présente dans l'instruction ternaire.<br>
<br>
Pour preuve nous allons affecter un <strong><span class="violet"><span class="courrier">String </span></span></strong>grâce à une condition sur deux <strong><span class="violet"><span class="courrier">int</span></span></strong> : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
<span class="n">String</span> <span class="n">type</span> <span class="o">=</span> <span class="o">(</span><span class="n">x</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">?</span> <span class="s">"C' est pair"</span> <span class="o">:</span> <span class="s">"C' est impair"</span> <span class="o">;</span> <span class="c1">//Ici type vaut "C' est pair"</span>
<span class="n">x</span> <span class="o">=</span> <span class="mi">9</span><span class="o">;</span>
<span class="n">type</span> <span class="o">=</span> <span class="o">(</span><span class="n">x</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">?</span> <span class="s">"C' est pair"</span> <span class="o">:</span> <span class="s">"C' est impair"</span> <span class="o">;</span> <span class="c1">//Ici type vaut "C' est impair"</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Avant de vous laisser, vous ne devez pas oublier que <strong><span class="rouge">la valeur que vous allez affecter à votre variable DOIT ETRE DU MEME TYPE QUE VOTRE VARIABLE ! ! </span></strong><br>
<br>
Vous devez aussi savoir que rien ne vous empêche de mettre une condition ternaire dans une condition ternaire <img src="./java_files/waw.png" alt=":waw:" class="smilies"> : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="o">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">20</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="n">y</span><span class="o">)</span> <span class="o">?</span> <span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> <span class="o">?</span> <span class="n">y</span> <span class="o">%</span> <span class="mi">10</span> <span class="o">:</span> <span class="n">y</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">:</span> <span class="n">x</span> <span class="o">;</span> <span class="c1">// max vaut 40</span>
<span class="c1">//Pas très facile à lire... </span>
<span class="c1">//Vous pouvez entourer votre deuxième instruction ternaire avec des parenthèses pour mieux voir</span>
<span class="n">max</span> <span class="o">=</span> <span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="n">y</span><span class="o">)</span> <span class="o">?</span> <span class="o">((</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> <span class="o">?</span> <span class="n">y</span> <span class="o">%</span> <span class="mi">10</span> <span class="o">:</span> <span class="n">y</span> <span class="o">*</span> <span class="mi">2</span><span class="o">)</span> <span class="o">:</span> <span class="n">x</span> <span class="o">;</span> <span class="c1">// max vaut 40</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Je vous propose maintenant un petit QCM de derrière les fagots... <img src="./java_files/heureux.png" alt=":D" class="smilies">
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Je vous conseille d'utiliser ce que vous venez de voir avec ce que vous avez appris lors du chapitre précédent ! Vous verrez tout de suite qu'il est assez pénible de lancer l'application à chaque fois.<br>
Rappelez-vous de ce que je vous ai dit sur l'exécution séquentielle d'un programme. Une fois arrivé à la fin, le programme s'arrête... <img src="./java_files/triste.png" alt=":(" class="smilies"> <br>
<br>
Si seulement on pouvait répéter des morceaux de codes... Ah ! Mais c'est ce que nous verrons dans le chapitre suivant...  <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
Je crois que vous êtes d'attaque pour le prochain chapitre : <span class="orange"><strong>les boucles</strong></span> !<br>
<br>
GERONIMOOOOOO !
	</div>
	
	<hr>
	<h1 id="chap_10304">Les boucles</h1>
	<div id="chap_intro">
	Autre chapitre important en Java : les boucles !<br>
<div class="rmq question">Oui, mais ...c'est quoi, ces fameuses boucles ?</div><br>
Une boucle est une instruction qui permet de faire plusieurs fois la même chose... <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
Très pratique lors de protocoles lourds en exécution. Comme lorsque nous demandons si un utilisateur souhaite refaire quelque chose ou non. Ou encore, lorsque nous devons trier des données dans un tableau... Eh bien, dans ce genre de cas, on se sert d'une boucle !<br>
<br>
En gros, en français ça donnerait :<br>
<span class="orange"><strong>tant que</strong></span> nombre de lignes est inférieur à 100,<br>
<span class="orange"><strong>alors</strong></span> fais ceci, ou cela, mais n'oublie pas de faire ça...<br>
<br>
Ne vous inquiétez pas : ce chapitre est facile à digérer.<br>
Bon appétit !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10303">La boucle while</h2>
		<div class="ss_part_texte">
		Décortiquons précisément ce qui se passe dans une boucle. <br>
Pour cela, nous allons voir comment elle se forme.<br>
<br>
Une boucle commence par une <span class="orange">déclaration</span>. Ici : <span class="vertf"><strong><span class="courrier">while</span></strong></span> qui veut dire, à peu de chose près, <strong>TANT QUE</strong>. <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
Ensuite, nous avons une <span class="orange">condition</span>. C'est elle qui permet à la boucle de s'arrêter. Une boucle n'est pratique que si nous pouvons la contrôler, et donc lui faire répéter une instruction un certain nombre de fois. C'est à ça que servent les conditions.<br>
Puis nous avons <span class="orange">l'instruction</span>. C'est ce que va répéter notre boucle ! Dans une boucle, il peut y avoir une ou plusieurs instructions. <br>
<br>
<strong>Remarque</strong> : il peut même y avoir des boucles, dans une boucle... <img src="./java_files/diable.png" alt=":diable:" class="smilies"> <br>
<br>
À ce stade, la boucle va tester la condition, et en fonction de celle-ci, va recommencer ou s'arrêter.<br>
<br>
Un exemple concret est toujours le bienvenu... Voici comment une boucle de type <strong><span class="vertf"><span class="courrier">while</span></span></strong> se fait en Java.<br>
<br>
D'abord, réfléchissons au "comment notre boucle va travailler". Pour cela, il faut déterminer notre exemple.<br>
Nous allons afficher "bonjour", &lt;un prénom&gt; que vous allez taper à l'écran, puis vous demanderez si vous voulez recommencer. Pour réussir ceci, il nous faut <span class="orange">une variable pour recevoir le prénom</span>, donc de type <span class="orange"><strong><span class="courrier">String</span></strong></span>, et <span class="orange">une variable pour récupérer votre réponse</span> et là, plusieurs choix s'offrent à nous : soit un caractère, soit une chaîne de caractères, soit un entier. Ici, nous prendrons une variable de type <span class="orange"><strong><span class="courrier">char</span></strong></span>.<br>
Et c'est parti !<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></div></td><td class="code"><div class="syntax"><pre><span class="c1">//Une variable vide</span>
<span class="n">String</span> <span class="n">prenom</span><span class="o">;</span>
<span class="c1">// On initialise celle-ci à O pour oui !</span>
<span class="kt">char</span> <span class="n">reponse</span> <span class="o">=</span> <span class="sc">'O'</span><span class="o">;</span>
<span class="c1">//Notre objet Scanner, n'oubliez pas l'import de java.util.Scanner</span>
<span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="c1">//Tant que la réponse donnée est égale à oui</span>
<span class="k">while</span> <span class="o">(</span><span class="n">reponse</span> <span class="o">==</span> <span class="sc">'O'</span><span class="o">)</span>
<span class="o">{</span>
        <span class="c1">//On affiche une instruction</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Donnez un prénom : "</span><span class="o">);</span>
        <span class="c1">//On récupère le prénom saisi</span>
        <span class="n">prenom</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
        <span class="c1">// On affiche notre phrase avec le prénom</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Bonjour "</span> <span class="o">+</span><span class="n">prenom</span><span class="o">+</span> <span class="s">" comment vas-tu ?"</span><span class="o">);</span>
        <span class="c1">//On demande si la personne veut faire un autre essai</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Voulez-vous réessayer ?(O/N)"</span><span class="o">);</span>
        <span class="c1">//On récupère la réponse de l'utilisateur</span>
        <span class="n">reponse</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">().</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
<span class="o">}</span>
 
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Au revoir..."</span><span class="o">);</span>
<span class="c1">//Fin de la boucle</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Avant tout, vous avez dû cligner des yeux sur cette ligne "<span class="courrier"><strong>reponse = sc.nextLine().charAt(0);</strong></span>". Rappelez-vous comment on récupère un <strong><span class="courrier">char</span></strong> avec l'objet <strong><span class="courrier">Scanner</span></strong>. Nous devons récupérer un objet <strong><span class="courrier">String</span></strong> et ensuite prendre le premier caractère de celui-ci ! Eh bien cette syntaxe est une contraction de ce que je vous avais fait voir auparavant <img src="./java_files/heureux.png" alt=":D" class="smilies"> .<br>
<div class="rmq information">Cette façon de faire permet d'économiser une variable et donc de la mémoire ! Ici <strong><span class="courrier">sc.nextLine()</span></strong> renvoie un <span class="courrier">String</span> sur lequel on applique tout de suite la méthode qui retourne le premier caractère de la chaîne (<strong><span class="courrier">charAt(0)</span></strong>), nous pouvons donc, sans crainte, initialiser une variable de type <strong><span class="courrier">char</span></strong> avec le résultat obtenu.  <img src="./java_files/clin.png" alt=";)" class="smilies"> </div><br>
<br>
Détaillons un peu ce qui ce passe.<br>
Dans un premier temps, nous avons <span class="orange">déclaré et initialisé nos variables</span>.<br>
Ensuite, la boucle <span class="orange">teste la condition</span> qui nous dit : <span class="italique">"Tant que la variable <strong><span class="courrier">reponse</span></strong> contient OUI, on exécute la boucle"</span>. Celle-ci contient bien la chaîne OUI, donc nous entrons dans la boucle. Rappelez-vous qu'on teste l'égalité des conditions avec un double égal <span class="rouge"><span class="gros">==</span></span>.<br>
Puis c'est l'<span class="orange">exécution des instructions</span>, dans l'ordre où elles apparaissent dans la boucle.<br>
Et à la fin, c'est-à-dire à l'accolade fermante de la boucle, le compilateur retourne au début de la boucle.<br>
<br>
<div class="rmq attention">Cette boucle n'est exécutée que lorsque la condition est remplie : ici, nous avons initialisé la variable "<span class="courrier">reponse</span>" à '<span class="courrier">O</span>' pour que la boucle se fasse. Si nous ne l'avions pas fait, nous n'y serions jamais rentrés. Normal, puisque nous testons la condition avant de rentrer dans la boucle !</div><br>
<br>
Voilà. C'est pas mal, mais il y a un petit problème, dans ce programme... <img src="./java_files/huh.png" alt=":o" class="smilies">  Vous ne voyez pas ? Oh ! Je suis sûr qu'il y a des petits malins qui se sont amusés à mettre autre chose que '<span class="courrier">O</span>' ou '<span class="courrier">N</span>' en "<span class="courrier">reponse</span>". Ces petits filous-là ont dû remarquer que nous sortons de la boucle si on tape autre chose que '<span class="courrier">O</span>'... Essayez de trouver comment pallier à ce problème.... <br>
Il faudrait forcer les utilisateurs à ne tapez que 'OUI' ou 'NON'... Mais non, pas en leur mettant un couteau sous la gorge, bande de barbares ! <img src="./java_files/pirate.png" alt=":pirate:" class="smilies"> <br>
<strong>Avec une boucle ! </strong> <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"> <br>
Comment faire ? C'est très simple, vous allez voir ! Il suffit, comme je l'ai dit plus haut, de forcer les utilisateurs à rentrer soit '<span class="courrier">NON</span>'soit '<span class="courrier">OUI</span>' ! Avec un <span class="courrier">while</span> ! Mais cela sous-entend de réinitialiser notre variable <span class="courrier">reponse</span> à ' ' (caractère vide).<br>
Nous allons utiliser ici la méthode. Occupons-nous de la condition de notre boucle, maintenant. Il faut répéter la phase "Voulez-vous réessayer ?" tant que la "<span class="courrier">reponse</span>" donnée n'est pas '<span class="courrier">OUI</span>' et '<span class="courrier">NON</span>' : voilà, tout y est.<br>
On appelle ce genre de condition des <strong><span class="italique">conditions multiples</span></strong>. Vous avez vu les opérateurs logiques au chapitre 2, normalement... (et <span class="courrier">== &amp;&amp;</span>) Nous en reparlerons dans le prochain chapitre...<br>
<br>
Voici notre programme dans son intégralité :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></div></td><td class="code"><div class="syntax"><pre><span class="c1">//Une variable vide</span>
<span class="n">String</span> <span class="n">prenom</span><span class="o">;</span>
<span class="c1">// On initialise celle-ci à O pour oui !</span>
<span class="kt">char</span> <span class="n">reponse</span> <span class="o">=</span> <span class="sc">'O'</span><span class="o">;</span>
<span class="c1">//Notre objet Scanner, n'oubliez pas l' import de java.util.Scanner</span>
<span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="c1">//Tant que la réponse donnée est égale à oui</span>
<span class="k">while</span> <span class="o">(</span><span class="n">reponse</span> <span class="o">==</span> <span class="sc">'O'</span><span class="o">)</span>
<span class="o">{</span>
   <span class="c1">//On affiche une instruction</span>
   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Donnez un prénom: "</span><span class="o">);</span>
   <span class="c1">//On récupère le prénom saisi</span>
   <span class="n">prenom</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
   <span class="c1">// On affiche notre phrase avec le prénom</span>
   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Bonjour "</span> <span class="o">+</span><span class="n">prenom</span><span class="o">+</span> <span class="s">" comment vas-tu ?"</span><span class="o">);</span>
                        
   <span class="c1">//réinitialisation de la variable réponse. </span>
   <span class="c1">//Sans ça, nous n' entrions pas dans la deuxième boucle</span>
   <span class="n">reponse</span> <span class="o">=</span> <span class="sc">' '</span><span class="o">;</span>
                        
   <span class="c1">//tant que la réponse n'est pas O ou N, on repose la question</span>
   <span class="k">while</span><span class="o">(</span><span class="n">reponse</span> <span class="o">!=</span> <span class="sc">'O'</span> <span class="o">&amp;&amp;</span> <span class="n">reponse</span> <span class="o">!=</span> <span class="sc">'N'</span><span class="o">)</span>
   <span class="o">{</span>
       <span class="c1">//On demande si la personne veut faire un autre essai</span>
       <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Voulez-vous réessayer ?(O/N)"</span><span class="o">);</span>
       <span class="c1">//On récupère la réponse de l'utilisateur</span>
       <span class="n">reponse</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">().</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
   <span class="o">}</span>
<span class="o">}</span>
<span class="c1">//Fin de la boucle</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Au revoir..."</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div> <br>
<br>
<div class="rmq erreur">Je vous le répète une dernière fois : <strong>PENSEZ A L'INDENTATION !</strong></div><br>
<br>
Vous pouvez tester ce code (c'est d'ailleurs vivement conseillé) : vous verrez que si vous ne rentrez pas la bonne lettre, le programme vous demandera sans cesse votre réponse !<br>
<br>
<div class="centre"><img src="./java_files/98039.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq erreur">Attention à bien écrire vos <strong>conditions</strong>, et à bien vérifier vos <strong>variables</strong> dans vos <span class="courrier">while</span>, et dans toutes vos boucles en général. Sinon c'est le drame ! Essayez le programme précédent sans la réinitialisation de la variable <strong><span class="courrier">reponse</span></strong>, et vous verrez le résultat... on ne rentre jamais dans la 2° boucle, car "<span class="courrier">reponse</span>" = '<span class="courrier">O</span>' (initialisé au début du programme). Là, vous ne pourrez jamais changer sa valeur... donc le programme ne s'arrêtera jamais ! On appelle ça une <strong>boucle infinie</strong>.</div><br>
<br>
Voilà un autre exemple de boucle infinie, encore plus flagrante :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="o">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">15</span><span class="o">;</span>
<span class="k">while</span> <span class="o">(</span><span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span><span class="o">)</span>
<span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"coucou "</span> <span class="o">+</span><span class="n">a</span><span class="o">+</span> <span class="s">" fois !!"</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Si vous lancez ce programme, vous allez voir une quantité astronomique de <strong><span class="courrier">coucou 1 fois !!</span></strong>, car, dans cette condition, <strong><span class="courrier">a</span></strong> sera <span class="rouge">toujours</span> inférieur à <strong><span class="courrier">b</span></strong>. <br>
Si nous voulions faire en sorte que ce programme fonctionne comme il faut, nous aurions dû rajouter une <strong>instruction</strong> dans le <strong>bloc d'instructions</strong> de notre <strong><span class="courrier">while</span></strong>, pour changer la valeur de <strong><span class="courrier">a</span></strong> à chaque tour de boucle...<br>
<br>
Comme ceci :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="o">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">15</span><span class="o">;</span>
<span class="k">while</span> <span class="o">(</span><span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span><span class="o">)</span>
<span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"coucou "</span> <span class="o">+</span><span class="n">a</span><span class="o">+</span> <span class="s">" fois !!"</span><span class="o">);</span>
        <span class="n">a</span><span class="o">++;</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donnerait cela :<br>
<br>
<div class="centre"><img src="./java_files/98041.jpg" alt="Image utilisateur"></div><br>
<br>
Notre <strong><span class="courrier">a</span></strong> a bien augmenté de 1 à chaque tour. Et si vous me dites que vous n'avez jamais vu <strong><span class="courrier">a++;</span></strong> je vous renvoie illico au second chapitre ==&gt; sous chapitre 3 ! <img src="./java_files/diable.png" alt=":diable:" class="smilies"> <br>
<br>
Qu'en dites-vous ? Pas trop mal, non ? Je dirais même bien ! <br>
<br>
<div class="rmq information">Une petite astuce : lorsque vous n'avez qu'une instruction dans votre boucle, vous pouvez enlever les accolades <strong>{ }</strong>, celles-ci deviennent superflues, tout comme les instructions <strong><span class="courrier">if</span></strong>, <strong><span class="courrier">else if</span></strong> ou <strong><span class="courrier">else</span></strong>.</div><br>
<br>
Vous auriez pu aussi utiliser cette syntaxe :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="o">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">15</span><span class="o">;</span>
<span class="k">while</span> <span class="o">(</span><span class="n">a</span><span class="o">++</span> <span class="o">&lt;</span> <span class="n">b</span><span class="o">)</span>
   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"coucou "</span> <span class="o">+</span><span class="n">a</span><span class="o">+</span> <span class="s">" fois !!"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ici, l'opérateur '++' n'agit qu'après avoir évalué 'a'. Ce qui veut dire que l'effet de l'opérateur '++' (qui est une incrémentation) n'est perçu qu'une instruction après. Par contre, testez ce code : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="o">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">15</span><span class="o">;</span>
<span class="k">while</span> <span class="o">(++</span><span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span><span class="o">)</span>
   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"coucou "</span> <span class="o">+</span><span class="n">a</span><span class="o">+</span> <span class="s">" fois !!"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous devez remarquer qu'il y a un tour de boucle en moins !  <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
Eh bien, avec cette syntaxe, l'incrémentation est immédiate. C'est-à-dire que la boucle incrémente la variable <strong><span class="courrier">a</span></strong> et, seulement après avoir fait cela, elle teste la condition !  <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
<br>
<div class="rmq information">Vous avez dû remarquer aussi que notre instruction n'affiche plus "<strong><span class="courrier">coucou 1 fois !!</span></strong>". Cela à cause de l'incrément dans la condition. Au premier tour de boucle, on entre dans la condition et, quelque soit l'ordre d'incrémentation, à la fin du premier test de condition, <strong><span class="courrier">a</span> vaut 2</strong>. <strong><span class="gros">Donc réfléchissez bien à vos conditions de boucles</span></strong> ! <img src="./java_files/heureux.png" alt=":D" class="smilies"> </div><br>
<br>
Avant d'aller voir un autre type de boucle, j'insiste sur le fait que vous devez <strong>bien réfléchir à vos conditions, ainsi qu'à vos variables, avant de lancer une boucle</strong>, sous peine de ne jamais y rentrer, ou comme on l'a vu, de faire une boucle infinie !<br>
Bon, continuons avec la boucle <strong><span class="courrier">do{...}while()</span></strong>.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10302">La boucle do....while</h2>
		<div class="ss_part_texte">
		Vu que je viens de vous expliquer comment marche une boucle <strong><span class="courrier">while</span></strong>, je ne vous expliquerai que très brièvement la boucle <strong><span class="courrier">do... while</span></strong>.<br>
<br>
<div class="rmq question">Euh... t'es sûr de ton coup, là?</div><br>
Bien entendu. En fait, ces deux boucles ne sont pas cousines, mais plutôt frangines (soeurs, si vous préférez...). Dans le fonctionnement, elles sont identiques, à deux détails près. Soeurs, mais pas jumelles, quoi... <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
<br>
<h4><span class="souligne">Première différence</span></h4><br>
La boucle <span class="courrier">do... while</span> s'exécutera <strong>au moins une fois</strong>, contrairement à sa soeur. C'est-à-dire que la phase de test de la condition se fait à la fin. Car la condition se met après le <span class="courrier">while</span>.<br>
<br>
<h4><span class="souligne">Deuxième différence</span></h4><br>
Différence de syntaxe. Et elle se situe après la condition du <span class="courrier">while</span>.<br>
Exemple :<br>
 <span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="k">do</span><span class="o">{</span>
         <span class="n">blablablablablablablabla</span>
<span class="o">}</span><span class="k">while</span><span class="o">(</span><span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous voyez la différence ? Oui ? Non ?<br>
<div class="rmq attention">Il y a un <span class="rouge"><span class="gros">;</span></span> après le <span class="courrier">while</span>. C'est tout ! Par contre, ne l'oubliez pas, sinon le programme ne compilera pas.</div><br>
<br>
Mis à part ces deux éléments, ces boucles fonctionnent exactement de la même manière. D'ailleurs, nous allons refaire les deux programmes de la boucle <strong><span class="courrier">while</span></strong> ci-dessus, avec une boucle <strong><span class="courrier">do... while</span></strong>. C'est parti !<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="syntax"><pre><span class="c">//une variable vide !</span>
<span class="n">String</span> <span class="n">prenom</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
<span class="c">//pas besoin d'initialiser la variable car on entre au moins une fois dans la boucle !</span>
<span class="kt">char</span> <span class="n">reponse</span> <span class="o">=</span> <span class="sc">' '</span><span class="o">;</span>
 
<span class="c">//Notre objet Scanner, n'oubliez pas l'import de java.util.Scanner</span>
<span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
 
<span class="k">do</span><span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Donnez un prénom : "</span><span class="o">);</span>
        <span class="n">prenom</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Bonjour "</span> <span class="o">+</span><span class="n">prenom</span><span class="o">+</span> <span class="s">", comment vas-tu ?"</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Voulez-vous réessayer ?(O/N)"</span><span class="o">);</span>
        <span class="n">reponse</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">().</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
<span class="o">}</span><span class="k">while</span> <span class="o">(</span><span class="n">reponse</span> <span class="o">==</span> <span class="sc">'O'</span><span class="o">);</span>
 
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Au revoir..."</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et faites-moi confiance : ça marche ! Mais toujours le même problème de réponse... Voici donc le code complet :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="syntax"><pre><span class="c">//une variable vide !</span>
<span class="n">String</span> <span class="n">prenom</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
<span class="c">//pas besoin d'initialiser la variable car on entre au moins une fois dans la boucle !</span>
<span class="kt">char</span> <span class="n">reponse</span> <span class="o">=</span> <span class="sc">' '</span><span class="o">;</span>
 
<span class="c">//Notre objet Scanner, n'oubliez pas l'import de java.util.Scanner</span>
<span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
 
<span class="k">do</span><span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Donnez un prénom : "</span><span class="o">);</span>
        <span class="n">prenom</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Bonjour "</span> <span class="o">+</span><span class="n">prenom</span><span class="o">+</span> <span class="s">", comment vas-tu ?"</span><span class="o">);</span>
       
        <span class="k">do</span><span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Voulez-vous réessayer ? (O/N)"</span><span class="o">);</span>
                <span class="n">reponse</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">().</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
        <span class="o">}</span><span class="k">while</span><span class="o">(</span><span class="n">reponse</span> <span class="o">!=</span> <span class="sc">'O'</span> <span class="o">&amp;&amp;</span> <span class="n">reponse</span> <span class="o">!=</span> <span class="sc">'N'</span><span class="o">);</span>
        
<span class="o">}</span><span class="k">while</span> <span class="o">(</span><span class="n">reponse</span> <span class="o">==</span> <span class="sc">'O'</span><span class="o">);</span>
 
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Au revoir..."</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous voyez donc que ce code ressemble beaucoup à celui utilisé avec la boucle <span class="courrier">while</span>, mais avec une petite subtilité. Avec celui-ci, plus besoin de réinitialiser la variable <strong><span class="courrier">reponse</span></strong>, puisque, de toute manière, la boucle s'exécutera au moins une fois ! <br>
<br>
Normalement, vous devriez avoir compris du premier coup ! On va pouvoir se lancer sur la dernière boucle : la boucle <strong><span class="courrier">for</span></strong>.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10301">La boucle for</h2>
		<div class="ss_part_texte">
		Cette boucle est un peu particulière, puisque qu'elle prend tous ses attributs dans sa condition, et agit en conséquence. Je m'explique : jusqu'ici, nous avions fait des boucles avec :<br>
<ul>
<li>déclaration d'une variable avant la boucle</li>
<li>initialisation de cette variable</li>
<li>incrémentation de celle-ci dans la boucle.</li>
</ul><br>
Eh bien on met tout ça dans la condition de la boucle <strong><span class="courrier">for</span></strong>, et c'est tout. Mais je sais bien qu'un long discours ne vaut pas un exemple, alors voilà une boucle <strong><span class="courrier">for</span></strong> sous vos yeux ébahis :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="syntax"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
<span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Voici la ligne "</span><span class="o">+</span><span class="n">i</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Et ça nous donne :<br>
<br>
<div class="centre"><img src="./java_files/98046.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq attention">Vous aurez sûrement remarqué la présence des '<span class="gros">;</span>' dans la condition pour la séparation des champs. Et là, ne les oubliez surtout pas, sinon, le programme ne compilera pas.</div><br>
Je vous fais la même remarque que pour la boucle <strong><span class="courrier">while</span></strong> concernant les accolades...<br>
Nous pouvons aussi tourner la boucle dans le sens inverse. C'est-à-dire qu'au lieu de partir de zéro pour aller à 10, nous allons aller de 10 pour atteindre 0. Comme ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="syntax"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">--)</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Il reste "</span><span class="o">+</span><span class="n">i</span><span class="o">+</span><span class="s">" ligne(s) à écrire"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donne :<br>
<br>
<div class="centre"><img src="./java_files/98047.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Bien entendu, ces structures servent essentiellement à répéter des instructions rébarbatives ; mais elles servent aussi à faire des recherches dans certains cas de figure, ce que nous aborderons dans un prochain chapitre.</div><br>
<br>
Bon : vu que nous sommes de bons ZérOs et que nous n'aimons pas les fautes d'orthographe, nous voulons mettre "<strong>ligne</strong>" au pluriel lorsqu'il nous en reste plusieurs à écrire, et au singulier lorsqu'il nous en reste 1 ou moins ! Il va de soit que nous allons utiliser les conditions pour réussir ce tour de force.<br>
<strong>Je vous laisse réfléchir </strong><img src="./java_files/siffle.png" alt=":-°" class="smilies"> .<br>
<br>
<span class="spoiler">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2"><div class="spoiler3"><span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">--)</span>
<span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Il reste "</span><span class="o">+</span><span class="n">i</span><span class="o">+</span><span class="s">" lignes à écrire"</span><span class="o">);</span>
        <span class="k">else</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Il reste "</span><span class="o">+</span><span class="n">i</span><span class="o">+</span><span class="s">" ligne à écrire"</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat de ce code : <br>
<br>
<div class="centre"><img src="./java_files/98048.jpg" alt="Image utilisateur"></div><br>
<br>
</div></div><br>
<br>
<div class="rmq information">Il existe une autre syntaxe de boucle <strong><span class="courrier">for</span></strong> depuis le JDK 1.5, celle-ci se rapprocherait d'une boucle <strong><span class="courrier">foreach</span></strong> présente dans d'autres langages (PHP, C#...). Nous verrons celle-ci lorsque nous aborderons les tableaux. <img src="./java_files/heureux.png" alt=":D" class="smilies"></div><br>
<br>
<br>
Un petit détail, tout de même... Ici, nous avons utilisé un entier bien défini pour gérer nos boucles, tel que 0 ou 10. Nous pouvons tout aussi bien faire les mêmes boucles avec une variable en guise d'attribut. Là, vous commencez à apercevoir leur intérêt. Ne vous inquiétez pas : vous allez voir tout ceci plus tard. Et plus précisément dans le chapitre sur <strong>les tableaux</strong>, qui arrive à pas de loup ! <img src="./java_files/clin.png" alt=";)" class="smilies">
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Et voilà : la boucle est bouclée !! <img src="./java_files/langue.png" alt=":p" class="smilies">   <br>
<br>
Normalement, vous n'aurez pas besoin de digestif pour ce chapitre ! Mais on ne sait jamais... <br>
Je crois qu'il est temps pour un petit TP !  <img src="./java_files/siffle.png" alt=":-°" class="smilies">
	</div>
	
	<hr>
	<h1 id="chap_10312">TP n°1 : un tableau de conversion Celsius - Fahrenheit !</h1>
	<div id="chap_intro">
	Voilà un très bon petit TP qui va mettre en oeuvre tout ce que vous avez vu jusqu'ici. Mais vraiment <span class="gros"><strong>tout !</strong></span><br>
Accrochez-vous, car là je vais vous demander de penser à des tonnes de choses, et vous serez tout seuls. Lâchés dans la nature... non, je plaisante. Oui, je sais, je déconne beaucoup, tout de même ! <br>
Mais je pense que nous apprendrons mieux dans la bonne humeur. <br>
<br>
Bon : trêve de bavardage, au boulot. <img src="./java_files/soleil.png" alt=":soleil:" class="smilies">
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10311">Élaboration</h2>
		<div class="ss_part_texte">
		Euh... Avant de foncer têtes baissées sur Eclipse, et commencer à coder, nous allons d'abord essayer de structurer notre futur programme. En plus, je ne vous ai même pas dit ce que j'attendais de vous... <img src="./java_files/siffle.png" alt=":-°" class="smilies"> <br>
<br>
<h4><span class="souligne">Cahier des charges</span></h4><br>
<br>
Alors je veux :<ul>
<li>un code qui puisse se <strong>répéter</strong> autant de fois que nous le souhaitons</li>
<li>que le code demande à quelle <strong>température nous commençons</strong> la conversion</li>
<li>la <strong>température de fin</strong> de conversion</li>
<li>le <strong>pas</strong> de conversion =&gt; c'est-à-dire par degré, ou tous les 2 degrés, ou les x degrés</li>
<li>qu'on vérifie <strong>les cas impossibles</strong> : comme <span class="italique">un pas plus grand que l'intervalle de température</span>, ou <span class="italique">une température d'arrivée plus petite que la température de départ</span></li>
<li>qu'on demande à l'utilisateur <strong>s'il est prêt</strong>, ou si son imprimante est prête... enfin ce que vous voulez, ici</li>
<li><strong>s'il est prêt, que l'on affiche</strong> les conversions sous forme de <strong>tableau visuel</strong></li>
<li>qu'il n'y ait pas de décalage pour les différentes valeurs =&gt; <strong>tout doit être parfaitement aligné</strong></li>
<li>enfin, que l'on demande à l'utilisateur s'il veut faire une nouvelle conversion, donc <strong>revenir au début, s'il le souhaite</strong> !</li>
</ul><br>
Je vous avais prévenus que je serais exigeant ! Mais croyez-moi, vous êtes capables de le faire. <br>
Je sais que vous y arriverez !<br>
<br>
<h4><span class="souligne">Élaboration</span></h4><br>
<br>
Comme je vous l'ai dit, essayez de réfléchir sur papier avant... Ce qu'il vous faut comme nombre de variables, les types de variables, comment va se dérouler le programme, les conditions et les boucles utilisées...<br>
<br>
Pour info, voici la formule de conversion pour passer des degrés Celsius en degrés Fahrenheit :<br>
<span class="gros"><strong>F = 9/5 * C + 32</strong></span><br>
<br>
Je vais vous aiguiller un peu :<br>
<br>
<ul>
<li> pour ce genre de calcul, utilisez des variables de type <strong><span class="courrier">double</span></strong></li>
<li>faites attention à la priorité des opérations</li>
<li>de simples <strong><span class="courrier">if... else</span></strong> suffisent ici : pas besoin d'un <strong><span class="courrier">switch</span></strong>.</li>
</ul><br>
<br>
Voici un aperçu de ce que je vous demande :<br>
<br>
<div class="centre"><img src="./java_files/258376.jpg" alt="Image utilisateur"></div><br>
<br>
Vous voyez bien que tous mes chiffres sont alignés, malgré leur taille. Lors de l'affichage, il faudra donc utiliser une condition en fonction de la taille des chiffres (<span class="courrier">if Celsius &lt; 100){.........} else{.........}</span>).<br>
Je vais également vous donner une fonction toute faite, qui vous permettra d'arrondir vos résultats. Je vous expliquerai le fonctionnement des fonctions exactement 2 chapitres plus loin. Mais en attendant, c'est facultatif. Vous pouvez très bien ne pas vous en servir. Pour ceux qui souhaitent tout de même l'utiliser, la voici :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">double</span> <span class="nf">arrondi</span><span class="o">(</span><span class="kt">double</span> <span class="n">A</span><span class="o">,</span> <span class="kt">int</span> <span class="n">B</span><span class="o">)</span> <span class="o">{</span>
     <span class="k">return</span> <span class="o">(</span><span class="kt">double</span><span class="o">)</span> <span class="o">(</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="n">A</span> <span class="o">*</span> <span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="n">B</span><span class="o">)</span> <span class="o">+</span> <span class="o">.</span><span class="mi">5</span><span class="o">))</span> <span class="o">/</span> <span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="n">B</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Elle est à placer entre les deux accolades fermantes de votre classe, comme ceci :<br>
<br>
<div class="centre"><img src="./java_files/98074.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez l'utiliser de cette manière : imaginez que vous avez la variable <strong><span class="courrier">fahren</span></strong> à arrondir, et que le résultat obtenu soit enregistré dans une variable <strong><span class="courrier">arrondFahren</span></strong>, vous procéderez comme suit :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">arrondFahren</span> <span class="o">=</span> <span class="n">arrondi</span><span class="o">(</span><span class="n">fahren</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span> <span class="c1">// pour un chiffre après la virgule</span>
<span class="n">arrondFahren</span> <span class="o">=</span> <span class="n">arrondi</span><span class="o">(</span><span class="n">fahren</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span><span class="c1">// pour 2 chiffres après la virgule... etc.</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Bon : Je vous ai déjà assez aidés ! Place à la conception.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10310">Conception</h2>
		<div class="ss_part_texte">
		<h4><span class="souligne">Dernière recommandation</span></h4><br>
<br>
Essayez de bien <strong>INDENTER</strong> votre code ! Prenez votre temps. Essayez de penser à tous les cas de figures...<br>
<br>
Maintenant à vos papiers, crayons, neurones et claviers, ...et bon courage !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10309">Correction</h2>
		<div class="ss_part_texte">
		<span class="gros">STOP !!!</span> C'est fini ! Passons maintenant à la correction de ce premier TP.<br>
Ça va ? Pas trop mal à la tête ? Je me doute qu'il a dû y avoir quelques tubes d'aspirine d'utilisés...<br>
Mais vous allez voir qu'en définitive, ce TP n'était pas si compliqué.<br>
Surtout, n'allez pas croire que ma correction est parole d'évangile... Il y avait différentes manières d'obtenir le même résultat. Voici tout de même une des corrections possibles.<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">class</span> <span class="nc">Sdz1</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
       <span class="c1">//Notre objet Scanner</span>
<span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
 
<span class="c1">//initialisation des variables</span>
        <span class="kt">double</span> <span class="n">c</span><span class="o">,</span> <span class="n">f</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i</span><span class="o">,</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
<span class="kt">char</span> <span class="n">reponse</span><span class="o">=</span><span class="sc">' '</span><span class="o">;</span>
 
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">" ------------------------------------------------------------------------"</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"|             CONVERSION DEGRES CELSIUS ET DEGRES FAHRENHEIT                |"</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">" ------------------------------------------------------------------------"</span><span class="o">);</span>
 
<span class="k">do</span><span class="o">{</span><span class="c1">//tant que reponse = O//boucle principale</span>
        
    <span class="k">do</span><span class="o">{</span><span class="c1">//tant que l'imprimante n'est pas prête//boucle de test pour savoir si l'utilisateur est prêt</span>
        
        <span class="k">do</span> <span class="o">{</span><span class="c1">// tant que valeur impossible rentrée</span>
 
<span class="c1">//saisie des valeurs</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"A partir de :"</span><span class="o">);</span><span class="c1">//affichage des directives et récupération des données</span>
            <span class="n">c</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextDouble</span><span class="o">();</span>
 
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"jusqu' à:"</span><span class="o">);</span>
            <span class="n">i</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
 
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Par pas de :"</span><span class="o">);</span>
            <span class="n">j</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
 
            <span class="k">if</span> <span class="o">(</span><span class="n">c</span> <span class="o">&gt;</span> <span class="n">i</span> <span class="o">||</span> <span class="n">j</span> <span class="o">&gt;</span> <span class="n">i</span> <span class="o">||</span> <span class="n">j</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Traitement impossible"</span><span class="o">);</span>
 
        <span class="o">}</span><span class="k">while</span><span class="o">(</span><span class="n">c</span> <span class="o">&gt;</span> <span class="n">i</span> <span class="o">||</span> <span class="n">j</span> <span class="o">&gt;</span> <span class="n">i</span> <span class="o">||</span> <span class="n">j</span> <span class="o">==</span> <span class="mi">0</span><span class="o">);</span>
 
        <span class="k">do</span> <span class="o">{</span><span class="c1">//tant que la reponse n'est pas O ou N</span>
                
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Assurez-vous que l'imprimante est prête"</span><span class="o">);</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Si vous êtes prêt, tapez O, sinon tapez N"</span><span class="o">);</span>
            <span class="c1">//sc.reset();</span>
            <span class="n">reponse</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">next</span><span class="o">().</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
            
        <span class="o">}</span><span class="k">while</span> <span class="o">(</span><span class="n">reponse</span> <span class="o">!=</span> <span class="sc">'O'</span> <span class="o">&amp;&amp;</span> <span class="n">reponse</span> <span class="o">!=</span> <span class="sc">'N'</span><span class="o">);</span>
        
    <span class="o">}</span><span class="k">while</span> <span class="o">(</span><span class="n">reponse</span> <span class="o">==</span> <span class="sc">'N'</span><span class="o">);</span>
 
<span class="c1">//                                                                    Traitement des valeurs</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"TABLE DE CONVERSION CELSIUS / FAHRENHEIT"</span><span class="o">);</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"---------------------------------------------"</span><span class="o">);</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"       Celsius      |       Fahrenheit       "</span><span class="o">);</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"---------------------------------------------"</span><span class="o">);</span>
    
    <span class="k">do</span><span class="o">{</span><span class="c1">//tant que l'affichage n'est pas fini, on boucle les données et les calculs</span>
        
        <span class="n">f</span> <span class="o">=</span> <span class="o">((</span><span class="mf">9.0</span><span class="o">/</span><span class="mf">5.0</span><span class="o">)</span> <span class="o">*</span> <span class="n">c</span><span class="o">)</span> <span class="o">+</span> <span class="mf">32.0</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">c</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span><span class="c1">//si le Celsius n'a qu'un chiffre, on affiche un certain nombre d'espaces</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"         "</span><span class="o">+</span><span class="n">c</span><span class="o">+</span><span class="s">"        |         "</span><span class="o">+</span><span class="n">arrondi</span><span class="o">(</span><span class="n">f</span><span class="o">,</span><span class="mi">1</span><span class="o">));</span>
        
        <span class="k">else</span>
        <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">c</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">)</span><span class="c1">//S'il y a un chiffre en plus, on enlève un espace blanc...</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"        "</span><span class="o">+</span><span class="n">c</span><span class="o">+</span><span class="s">"        |         "</span><span class="o">+</span><span class="n">arrondi</span><span class="o">(</span><span class="n">f</span><span class="o">,</span><span class="mi">1</span><span class="o">));</span>
            <span class="k">else</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"        "</span><span class="o">+</span><span class="n">c</span><span class="o">+</span><span class="s">"       |         "</span><span class="o">+</span><span class="n">arrondi</span><span class="o">(</span><span class="n">f</span><span class="o">,</span><span class="mi">1</span><span class="o">));</span>
        <span class="o">}</span>
 
        <span class="n">c</span> <span class="o">=</span> <span class="n">c</span> <span class="o">+</span> <span class="n">j</span><span class="o">;</span><span class="c1">//On incrémente le degré Celsius avec le pas</span>
        
    <span class="o">}</span><span class="k">while</span> <span class="o">(</span><span class="n">c</span> <span class="o">&lt;=</span> <span class="n">i</span><span class="o">);</span>
 
    <span class="k">do</span><span class="o">{</span>
        
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Souhaitez-vous éditer une autre table ?(O/N)"</span><span class="o">);</span>
        <span class="n">reponse</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">next</span><span class="o">().</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
        
    <span class="o">}</span><span class="k">while</span><span class="o">(</span><span class="n">reponse</span> <span class="o">!=</span> <span class="sc">'O'</span> <span class="o">&amp;&amp;</span> <span class="n">reponse</span> <span class="o">!=</span> <span class="sc">'N'</span><span class="o">);</span>
    
<span class="o">}</span><span class="k">while</span><span class="o">(</span><span class="n">reponse</span> <span class="o">==</span> <span class="sc">'O'</span><span class="o">);</span>
 
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Au revoir !"</span><span class="o">);</span>
 
<span class="c1">//Fin de programme</span>
<span class="o">}</span>
        
<span class="kd">public</span> <span class="kd">static</span> <span class="kt">double</span> <span class="nf">arrondi</span><span class="o">(</span><span class="kt">double</span> <span class="n">A</span><span class="o">,</span> <span class="kt">int</span> <span class="n">B</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="o">(</span><span class="kt">double</span><span class="o">)</span> <span class="o">(</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="n">A</span> <span class="o">*</span> <span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="n">B</span><span class="o">)</span> <span class="o">+</span> <span class="o">.</span><span class="mi">5</span><span class="o">))</span> <span class="o">/</span> <span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="n">B</span><span class="o">);</span>
<span class="o">}</span>
 
 
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Expliquons un peu ce code</span></h4><br>
<br>
<ul>
<li>Tout programme commence par une phase de <strong>déclaration de variable.</strong></li>
<li>Nous <strong>affichons le titre</strong> de notre programme.</li>
<li>Ensuite, vous voyez 3 <span class="courrier">do{</span> consécutifs, correspondant chacun à une condition à vérifier : <strong>le choix de l'utilisateur pour faire une nouvelle conversion, vérification si l'utilisateur est prêt, vérification si les nombres sont cohérents.</strong></li>
<li>Nous <strong>affichons </strong>les renseignements à l'écran, et nous <strong>récupérons les saisies clavier</strong> dans une variable.</li>
<li>Si les chiffres sont incohérents, on <strong>affiche une erreur, et on boucle</strong> sur le début.</li>
<li>Une boucle pour s'assurer que l'utilisateur rentre bien <strong>O</strong> ou <strong>N</strong>.</li>
<li>À partir d'ici, les nombres sont cohérents, et l'utilisateur est prêt. Donc on <strong>lance la conversion</strong>.</li>
<li>On <strong>affiche le squelette</strong> du tableau.</li>
<li>Une boucle pour <strong>afficher les différents résultats</strong>.</li>
<li><strong>Calcul de la conversion</strong>.</li>
<li><strong>Selon la taille du chiffre Celsius, on enlève (ou non) un espace à l'affichage</strong>.</li>
<li><span class="orange">Cette boucle sera répétée <strong>tant que le degré de départ est plus petit que le degré de fin que vous avez choisi</strong>.</span></li>
<li>FIN DU PROGRAMME !</li>
</ul><br>
<br>
Ce programme n'est pas parfait, loin de là... La vocation de celui-ci était de vous faire utiliser ce que vous avez appris et je pense qu'il remplit bien sa fonction.  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
<br>
J'espère que vous avez apprécié ce TP. <br>
Je sais qu'il n'était pas facile, mais avouez-le : il vous a bien fait utiliser tout ce que vous avez vu jusqu'ici ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Voilà : votre premier TP est fait, et bien fait !!<br>
Je vous conseille de vous reposer un peu, parce que ça a dû fumer dans votre boite crânienne...<br>
Je viens de vous faire afficher un tableau (<span class="italique">rudimentaire à l'affichage</span>), mais maintenant nous allons travailler avec <strong><span class="orange">des tableaux</span></strong> en Java ! C'est parti...
	</div>
	
	<hr>
	<h1 id="chap_10320">Les tableaux</h1>
	<div id="chap_intro">
	Comme dans tout langage de programmation qui se respecte, Java travaille aussi avec des tableaux. <br>
Vous verrez que ceux-ci s'avèrent bien pratiques...<br>
<div class="rmq question">Mais un tableau... Qu'est-ce que c'est, au juste ?</div><br>
Très bonne question. Vous vous doutez bien (je suppose) que les tableaux dont nous parlons n'ont pas grand-chose à voir avec ceux que vous connaissez ! En programmation, un tableau n'est rien d'autre qu'<strong><span class="italique">une variable un peu particulière</span></strong>... nous allons pouvoir lui affecter <strong><span class="italique">plusieurs valeurs</span></strong>, rangées de façon séquentielle, <strong><span class="italique">que nous pourrons appeler grâce à un indice, ou un compteur</span></strong>, si vous préférez. Il nous suffira de donner l'emplacement du contenu dans notre variable tableau pour la sortir, travailler avec ou encore l'afficher.<br>
<br>
Assez bavardé : mettons-nous joyeusement au travail ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10319">Déclarer et initialiser un tableau</h2>
		<div class="ss_part_texte">
		Je viens de vous expliquer, grosso-modo, ce qu'est un tableau en programmation. Si maintenant, je vous disais qu'il y a autant de types de tableaux que de types de variables ? Je crois voir quelques gouttes de sueur perler sur vos fronts... <img src="./java_files/langue.png" alt=":p" class="smilies">  <br>
Pas de panique ! Je dirais même que c'est très logique. Comme nous l'avons vu lors du 3° chapitre, une variable d'un type donné ne peut contenir que des éléments de ce type.<br>
<span class="souligne">Exemple</span> : une variable de type <strong><span class="courrier">int</span></strong> ne peut pas recevoir une chaîne de caractères.<br>
<br>
Il en est de même pour les tableaux... <strong>un tableau d'entiers ne pourra pas recevoir des chaînes de caractères, et vice versa.</strong> Voyons tout de suite comment se déclare un tableau :<br>
<br>
<span class="courrier"><strong>&lt;type du tableau&gt; &lt;nom du tableau&gt; [] = { &lt;contenu du tableau&gt;};</strong></span><br>
<br>
La déclaration ressemble beaucoup à celle d'un argument de classe quelconque, si ce n'est la présence des crochets <strong>[]</strong> après le nom de notre tableau, et les accolades <strong>{}</strong> encadrant l'initialisation de celui-ci.<br>
Dans la pratique, ça nous donnerait quelque chose comme ceci :<br>
<br>
<h4><span class="souligne">Pour un tableau d'entiers</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">tableauEntier</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">6</span><span class="o">,</span><span class="mi">7</span><span class="o">,</span><span class="mi">8</span><span class="o">,</span><span class="mi">9</span><span class="o">};</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Pour un tableau de double</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="kt">double</span> <span class="n">tableauDouble</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="mf">0.0</span><span class="o">,</span><span class="mf">1.0</span><span class="o">,</span><span class="mf">2.0</span><span class="o">,</span><span class="mf">3.0</span><span class="o">,</span><span class="mf">4.0</span><span class="o">,</span><span class="mf">5.0</span><span class="o">,</span><span class="mf">6.0</span><span class="o">,</span><span class="mf">7.0</span><span class="o">,</span><span class="mf">8.0</span><span class="o">,</span><span class="mf">9.0</span><span class="o">};</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Pour un tableau de caractères</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="kt">char</span> <span class="n">tableauCaractere</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="sc">'a'</span><span class="o">,</span><span class="sc">'b'</span><span class="o">,</span><span class="sc">'c'</span><span class="o">,</span><span class="sc">'d'</span><span class="o">,</span><span class="sc">'e'</span><span class="o">,</span><span class="sc">'f'</span><span class="o">,</span><span class="sc">'g'</span><span class="o">};</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Pour un tableau de chaînes de caractères</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">tableauChaine</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"chaine1"</span><span class="o">,</span> <span class="s">"chaine2"</span><span class="o">,</span> <span class="s">"chaine3"</span> <span class="o">,</span> <span class="s">"chaine4"</span><span class="o">};</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous remarquez bien que la déclaration et l'initialisation d'un tableau se font comme pour une variable normale (<span class="italique">si on peut dire qu'une variable est normale...</span>).<br>
Nous utilisons des ' ' pour initialiser un tableau de caractères, des " " pour initialiser un tableau de <span class="courrier">String</span>, etc.<br>
<br>
<div class="rmq information">Vous pouvez aussi déclarer un tableau vide !</div><br>
<div class="rmq attention">Attention, votre tableau sera vide mais, il <span class="tgros"><strong>doit</strong></span> avoir un nombre de cases défini !</div><br>
<span class="souligne">Par exemple, si vous voulez un tableau vide de six entiers : </span><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">tableauEntier</span><span class="o">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">6</span><span class="o">];</span>
<span class="c">//ou encore</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">tableauEntier2</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">6</span><span class="o">];</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Cette opération est très simple, car vraiment ressemblante à ce que vous faisiez avec vos variables ; je vous propose donc tout de suite de voir une belle variante de ceci : <strong>les tableaux multi-dimensionnels</strong>. <img src="./java_files/soleil.png" alt=":soleil:" class="smilies"> 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10318">Les tableaux multi-dimensionnels</h2>
		<div class="ss_part_texte">
		Ici, les choses se compliquent un peu. Car un tableau multi-dimensionnel n'est rien d'autre qu'un tableau ayant comme contenu au minimum 2 tableaux... Je me doute bien que cette notion doit en effrayer plus d'un, mais en réalité, elle n'est pas si difficile que ça. Comme tout ce que je vous apprends en général ! <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
Ben oui... Si j'y arrive, vous aussi vous pouvez y arriver ! Alors, on se lance ? GO !<br>
<br>
Je ne vais pas vous faire de grand laïus sur ce type de tableau, puisque je pense sincèrement qu'un exemple vous fera beaucoup mieux comprendre le concept. Imaginez un tableau avec deux lignes : la première contiendra les premiers nombres pairs, et le deuxième contiendra les premiers nombres impairs. Ce tableau s'appellera <span class="courrier">premiersNombres</span>. Voilà ce que cela donnerait :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">premiersNombres</span><span class="o">[][]</span> <span class="o">=</span> <span class="o">{</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">6</span><span class="o">,</span><span class="mi">8</span><span class="o">},{</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">7</span><span class="o">,</span><span class="mi">9</span><span class="o">}</span> <span class="o">};</span>
</pre></div>
</td></tr></tbody></table></div>Nous voyons bien ici les deux <span class="italique">lignes</span> de notre tableau symbolisées par les doubles crochets <strong>[][]</strong>. Et comme je l'ai dit plus haut, ce genre de tableau n'est rien d'autre que plusieurs tableaux en un. Ainsi, pour passer d'une ligne à l'autre, nous jouerons avec la valeur du premier crochet.<br>
<span class="souligne">Exemple</span> :<br>
<strong><span class="courrier">premiersNombres[0][0]</span></strong> correspondra au premier élément de la colonne paire.<br>
Et <strong><span class="courrier">premiersNombres[1][0]</span></strong> correspondra au premier élément de la colonne impaire.<br>
<br>
Allez ! <span class="souligne"> Un petit schéma en guise de synthèse</span> :<br>
<br>
<div class="rmq erreur"><img src="./java_files/208701.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq attention">Surtout, n'oubliez pas de séparer vos différents tableaux par une '<span class="gros"><strong>,</strong></span>' et de bien mettre le tout entre accolades. Sinon, c'est le plantage assuré, et de toutes façons, Eclipse n'en voudra pas.</div><br>
<br>
Je pense que vous savez tout ce qu'il y a à savoir sur les tableaux. Maintenant, je vous propose de faire un peu mumuse avec...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10317">Utiliser et rechercher dans un tableau !</h2>
		<div class="ss_part_texte">
		<span class="souligne">Un tableau simple</span><br>
<br>
Avant d'attaquer, je dois vous dire un truc <span class="gros"><span class="rouge">primordial</span></span> (vous avez remarqué, c'est écrit en gros et en rouge).<br>
<strong><span class="gros">Un tableau, comme ceux que nous avons fait ci-dessus, débute toujours à l'indice 0 !</span></strong> <br>
Je m'explique : prenons l'exemple du tableau de caractères. Si vous voulez afficher la lettre '<span class="courrier">a</span>' à l'écran, vous devrez taper cette ligne de code :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">tableauCaractere</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ce qui signifie tout bêtement qu'un tableau, ayant 4 éléments dans son contenu, aura comme entrées possibles <strong>0, 1, 2 ou 3</strong>. Le 0 correspond au premier élément, le 1 correspond au 2° élément, le 2 correspond au 3° élément, et le 3 correspond au 4° élément.<br>
<br>
<div class="rmq attention">Une très grande partie des erreurs sur les tableaux sont souvent dues à un mauvais indice dans celui-ci. Donc : prenez garde...</div><br>
<br>
Ce que je vous propose, c'est tout bonnement d'afficher un des tableaux ci-dessus dans son intégralité. Et le premier qui me met ce code-là :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">char</span> <span class="n">tableauCaractere</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="sc">'a'</span><span class="o">,</span><span class="sc">'b'</span><span class="o">,</span><span class="sc">'c'</span><span class="o">,</span><span class="sc">'d'</span><span class="o">,</span><span class="sc">'e'</span><span class="o">,</span><span class="sc">'f'</span><span class="o">,</span><span class="sc">'g'</span><span class="o">};</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">tableauCaractere</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">tableauCaractere</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">tableauCaractere</span><span class="o">[</span><span class="mi">2</span><span class="o">]);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">tableauCaractere</span><span class="o">[</span><span class="mi">3</span><span class="o">]);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
... je l'<strong>ASSASSINE</strong> ! Peut-être pas, quand même... <img src="./java_files/siffle.png" alt=":-°" class="smilies">  Il y a une manière beaucoup plus <span class="italique">classe</span>, ou distinguée, mais surtout beaucoup plus pratique d'afficher le contenu d'un tableau.<br>
<br>
<h4><span class="souligne">Voici un parcours de tableau avec une boucle <span class="italique"><strong>while</strong></span></span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">char</span> <span class="n">tableauCaractere</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="sc">'a'</span><span class="o">,</span><span class="sc">'b'</span><span class="o">,</span><span class="sc">'c'</span><span class="o">,</span><span class="sc">'d'</span><span class="o">,</span><span class="sc">'e'</span><span class="o">,</span><span class="sc">'f'</span><span class="o">,</span><span class="sc">'g'</span><span class="o">};</span>
    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    
    <span class="k">while</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="o">)</span>
    <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"A l'emplacement "</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span><span class="s">" du tableau nous avons = "</span> <span class="o">+</span><span class="n">tableauCaractere</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
            <span class="n">i</span><span class="o">++;</span>
    <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Même résultat que précédemment, mais avec une boucle <strong><span class="italique">for</span></strong> (à utiliser de préférence)</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">char</span> <span class="n">tableauCaractere</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="sc">'a'</span><span class="o">,</span><span class="sc">'b'</span><span class="o">,</span><span class="sc">'c'</span><span class="o">,</span><span class="sc">'d'</span><span class="o">,</span><span class="sc">'e'</span><span class="o">,</span><span class="sc">'f'</span><span class="o">,</span><span class="sc">'g'</span><span class="o">};</span>
       
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
    <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"A l'emplacement "</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span><span class="s">" du tableau nous avons = "</span> <span class="o">+</span><span class="n">tableauCaractere</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
    <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<div class="rmq question">Euh... Comment fait-on si on ne connaît pas la taille de notre tableau à l'avance ?</div><br>
Décidément, vous lisez dans mes pensées... J'allais y venir ! <br>
En fait, il existe une instruction qui retourne la taille d'un tableau. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Il s'agit de l'instruction <strong><span class="courrier">&lt;mon tableau&gt;.length</span></strong>. Notre boucle <span class="courrier"><strong>for</strong></span> pourrait donc ressembler à ceci : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">char</span> <span class="n">tableauCaractere</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="sc">'a'</span><span class="o">,</span><span class="sc">'b'</span><span class="o">,</span><span class="sc">'c'</span><span class="o">,</span><span class="sc">'d'</span><span class="o">,</span><span class="sc">'e'</span><span class="o">,</span><span class="sc">'f'</span><span class="o">,</span><span class="sc">'g'</span><span class="o">};</span>
       
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">tableauCaractere</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
    <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"A l'emplacement "</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span><span class="s">" du tableau nous avons = "</span> <span class="o">+</span><span class="n">tableauCaractere</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
    <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Alors ? Ce n'est pas mieux comme ça ? D'accord, je reformule ma phrase pour ceux qui ont le sens de la contradiction. <strong>C'est mieux comme ça !</strong> Je vais vous donner une preuve que vous ne pourrez pas nier. <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
Essayez de faire une recherche dans un des tableaux ci-dessus (pas celui contenant des <span class="courrier">String</span>, nous verrons ce cas dans le prochain chapitre). En gros : faites une saisie clavier, et regardez si celle-ci existe dans votre tableau... Dur, dur, sans boucle... COMMENT ÇA, C'EST DUR, MÊME AVEC UNE BOUCLE ?<br>
<br>
Dans ce cas, je vais vous aider. Gardez la même structure de code permettant de faire plusieurs fois la même action, et ensuite faites une boucle de recherche incluant la saisie clavier, un message si la saisie est trouvée dans le tableau, et un autre message si celle-ci n'est pas trouvée. Ce qui nous donne :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">char</span> <span class="n">tableauCaractere</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="sc">'a'</span><span class="o">,</span> <span class="sc">'b'</span><span class="o">,</span> <span class="sc">'c'</span><span class="o">,</span> <span class="sc">'d'</span><span class="o">,</span> <span class="sc">'e'</span><span class="o">,</span> <span class="sc">'f'</span><span class="o">,</span> <span class="sc">'g'</span><span class="o">};</span>
            <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">emplacement</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="kt">char</span> <span class="n">reponse</span> <span class="o">=</span> <span class="sc">' '</span><span class="o">,</span><span class="n">carac</span> <span class="o">=</span> <span class="sc">' '</span><span class="o">;</span>
            <span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
         
            <span class="k">do</span> <span class="o">{</span><span class="c1">//boucle principale</span>
              <span class="k">do</span> <span class="o">{</span><span class="c1">//on répète cette boucle tant que l'utilisateur n'a pas rentré une lettre figurant dans le tableau</span>
                <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Rentrez une lettre en minuscule, SVP "</span><span class="o">);</span>
                
                <span class="n">carac</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">().</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
         
                <span class="k">while</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">tableauCaractere</span><span class="o">.</span><span class="na">length</span> <span class="o">&amp;&amp;</span> <span class="n">carac</span> <span class="o">!=</span> <span class="n">tableauCaractere</span><span class="o">[</span><span class="n">i</span><span class="o">])</span><span class="c1">//boucle de recherche dans le tableau</span>
                  <span class="n">i</span><span class="o">++;</span>
         
                <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">tableauCaractere</span><span class="o">.</span><span class="na">length</span><span class="o">)</span><span class="c1">//Si i &lt; 7 c'est que la boucle n'a pas dépassé le nombre de cas du tableau ==&gt; il a trouvé</span>
                  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">" La lettre "</span> <span class="o">+</span><span class="n">carac</span><span class="o">+</span> <span class="s">" se trouve bien dans le tableau !"</span><span class="o">);</span>
         
                <span class="k">else</span><span class="c1">//sinon</span>
                  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">" La lettre "</span> <span class="o">+</span><span class="n">carac</span><span class="o">+</span> <span class="s">" ne se trouve pas dans le tableau !"</span><span class="o">);</span>
         
              <span class="o">}</span><span class="k">while</span><span class="o">(</span><span class="n">i</span> <span class="o">&gt;=</span> <span class="n">tableauCaractere</span><span class="o">.</span><span class="na">length</span><span class="o">);</span><span class="c1">//tant que la lettre de l'utilisateur ne correspond pas à une lettre du tableau</span>
         
              <span class="k">do</span><span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Voulez-vous essayer de nouveau ? (O/N)"</span><span class="o">);</span>
                <span class="n">reponse</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">().</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
              <span class="o">}</span><span class="k">while</span><span class="o">(</span><span class="n">reponse</span> <span class="o">!=</span> <span class="sc">'N'</span> <span class="o">&amp;&amp;</span> <span class="n">reponse</span> <span class="o">!=</span> <span class="sc">'O'</span><span class="o">);</span>
         
         
            <span class="o">}</span><span class="k">while</span> <span class="o">(</span><span class="n">reponse</span> <span class="o">==</span> <span class="sc">'O'</span><span class="o">);</span>
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Au revoir !.."</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donne :<br>
<br>
<div class="centre"><img src="./java_files/99948.jpg" alt="Image utilisateur"></div><br>
<br>
<h4><span class="souligne">Explicitons un peu ce code, et plus particulièrement la recherche</span></h4><br>
<br>
Dans notre <span class="courrier">while</span>, il y a deux conditions : <br>
<br>
==&gt; la première correspond au compteur. Tant que ce compteur est inférieur ou égal au nombre d'éléments du tableau, on incrémente notre compteur pour regarder la valeur suivante. Nous passons ainsi en revue tout ce qui se trouve dans notre tableau. <strong>MAIS</strong> si nous n'avions mis que cette condition, la boucle n'aurait fait que parcourir le tableau, sans voir si le caractère saisi correspond bien à un caractère de notre tableau, d'où la deuxième condition.<br>
<br>
==&gt; la deuxième correspond à la comparaison entre le caractère saisi et la recherche dans le tableau. Grâce à ceci, si le caractère saisi se trouve dans le tableau, la boucle prend fin, et donc <strong><span class="courrier">i</span></strong> a une valeur inférieure à 7.<br>
<br>
À ce stade, notre recherche est terminée. Ensuite, les conditions coulent de source ! Si nous avons trouvé une correspondance entre le caractère saisi et notre tableau, <strong><span class="courrier">i</span></strong> aura une valeur inférieure à 7 (je vous rappelle qu'il n'y a que 6 entrées dans notre tableau, puisque nous avons 7 lettres dans celui-ci, et la première entrée a comme indice <span class="rouge">0</span>). Dans ce cas, nous affichons un message positif. Et dans le cas contraire, c'est l'instruction du <strong><span class="courrier">else</span></strong> qui s'exécutera.<br>
<br>
<div class="rmq attention">Vous avez dû remarquer la présence d'un <strong><span class="courrier">i = 0;</span></strong> dans une boucle. Ceci est PRIMORDIAL, car sinon, lorsque vous reviendrez au début de celle-ci, <strong><span class="courrier">i</span></strong> ne vaudra plus 0, mais la dernière valeur qu'il aura eue, après les différentes incrémentations. Si vous faites une nouvelle recherche, vous commencerez par l'indice contenu dans <strong><span class="courrier">i</span></strong> ; ce que vous ne voulez pas, puisque vous voulez regarder depuis le début du tableau, donc <span class="rouge">0</span>.</div><br>
<br>
Pour bien vous rendre compte de cela, essayez le programme ci-dessus sans cette instruction : vous verrez qu'il n'y a plus de recherche possible, ou même un gros plantage d'Eclipse...<br>
<br>
En travaillant avec les tableaux, vous serez confrontés, un jour ou l'autre, au message suivant :<br>
<span class="violet"><span class="courrier"><strong>java.lang.ArrayIndexOutOfBoundsException</strong></span>.</span><br>
Ceci signifie qu'une exception a été levée car vous avez essayé de lire (ou d'écrire dans) une case qui n'a pas été définie dans votre tableau ! Nous verrons les exceptions lorsque nous aborderons la  programmation orienté objet.<br>
<br>
<h4><span class="souligne">Exemple</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span><span class="o">[]</span> <span class="n">str</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="mi">10</span><span class="o">];</span>
<span class="c1">//L'instruction suivante va déclencher une exception</span>
<span class="c1">//car vous essayez d'écrire à la case 11 de votre tableau alors que celui-ci n'en contient que 10  </span>
<span class="n">str</span><span class="o">[</span><span class="mi">11</span><span class="o">]</span> <span class="o">=</span> <span class="s">"Une exception"</span><span class="o">;</span>
<span class="c1">//De même, le code ci-dessous déclenchera la même exception car vous essayez de lire </span>
<span class="c1">//une case non définie !</span>
<span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="n">str</span><span class="o">[</span><span class="mi">24</span><span class="o">];</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="centre"> <span class="rouge"><strong><span class="gros">Faites donc bien attention à cela, car il s'agit de l'une des erreurs commises les plus fréquentes.</span></strong></span></div><br>
<br>
<h3><span class="souligne">Un tableau multi-dimensionnel</span></h3><br>
<br>
Nous allons travailler sur le tableau bi-dimensionnel vu plus haut.<br>
Le principe est vraiment le même que pour un tableau simple. Mais ici, il n'y a que deux compteurs. Voici un code possible pour afficher les données par ligne, c'est-à-dire l'intégralité du <span class="italique">sous-tableau nombres pairs</span>, puis le <span class="italique">sous-tableau nombres impairs</span> :<br>
<br>
<h4><span class="souligne">Avec une boucle <strong><span class="italique">while</span></strong></span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">premiersNombres</span><span class="o">[][]</span> <span class="o">=</span> <span class="o">{</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">6</span><span class="o">,</span><span class="mi">8</span><span class="o">},{</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">7</span><span class="o">,</span><span class="mi">9</span><span class="o">}</span> <span class="o">},</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
 
   <span class="k">while</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">)</span>
   <span class="o">{</span>
     <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
     <span class="k">while</span><span class="o">(</span><span class="n">j</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">)</span>
     <span class="o">{</span>
       <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">premiersNombres</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]);</span>
       <span class="n">j</span><span class="o">++;</span>
     <span class="o">}</span>
     <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
     <span class="n">i</span><span class="o">++;</span>
   <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
Et voilà le résultat :<br>
<br>
<div class="centre"><img src="./java_files/99954.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Je suppose que vous avez remarqué la drôle de déclaration de variable... Vous avez le droit de faire ainsi. Mais seules les variables ayant les crochets <strong>[]</strong> après leur nom seront considérées comme des tableaux, les autres resteront des variables toutes simples.</div><br>
<br>
<h4><span class="souligne">Détaillons un peu ce code</span></h4><br>
<ul>
<li>Dans un premier temps, on initialise les variables.</li>
<li>On entre ensuite dans la première boucle (qui se fera deux fois, donc <span class="courrier"><strong>i</strong></span> vaut 0 la première fois, et vaudra 1 pendant la deuxième), et on initialise <span class="courrier"><strong>j</strong></span> à 0.</li>
<li>On entre ensuite dans la deuxième boucle, où <span class="courrier"><strong>j</strong></span> vaudra successivement 0, 1, 2, 3 et 4 pour afficher le contenu du tableau d'indice 0 (notre premier <span class="courrier">i</span>).</li>
<li>On sort de cette boucle ; notre <span class="courrier"><strong>i</strong></span> est ensuite incrémenté, et passe à 1.</li>
<li>On reprend le début de la première boucle =&gt; initialisation de <span class="courrier"><strong>j</strong></span> à 0.</li>
<li>On rentre dans la deuxième boucle, où le processus est le même que précédemment (mais là, <span class="courrier"><strong>i</strong></span> vaut 1).</li>
<li>Enfin, nous sortons des boucles pour finir le programme.</li>
</ul><br>
<br>
<br>
Ce code affiche donc le contenu des deux tableaux... Encore heureux ! Notez bien que vous devez réinitialiser votre compteur <strong><span class="courrier">j</span></strong> avant la boucle où il est utilisé comme argument, sinon celle-ci ne fonctionnera pas. Et cela, pour la même raison que pour un tableau normal.<br>
<br>
<br>
<h4><span class="souligne">Le même résultat avec une boucle <strong><span class="italique">for</span></strong></span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">premiersNombres</span><span class="o">[][]</span> <span class="o">=</span> <span class="o">{</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">6</span><span class="o">,</span><span class="mi">8</span><span class="o">},{</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">7</span><span class="o">,</span><span class="mi">9</span><span class="o">}</span> <span class="o">};</span>
 
   <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
   <span class="o">{</span>
    
     <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span>
     <span class="o">{</span>
       <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">premiersNombres</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]);</span>
       
     <span class="o">}</span>
     <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>     
   <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
En bonus, voici un petit code qui va vous afficher la suite des nombres dans l'ordre, en piochant tantôt dans le tableau pair, tantôt dans le tableau impair :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">premiersNombres</span><span class="o">[][]</span> <span class="o">=</span> <span class="o">{</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">6</span><span class="o">,</span><span class="mi">8</span><span class="o">},{</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">7</span><span class="o">,</span><span class="mi">9</span><span class="o">}</span> <span class="o">};</span>
 
   <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
   <span class="o">{</span>
    
     <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span>
     <span class="o">{</span>
       <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">premiersNombres</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">i</span><span class="o">]);</span>
       
     <span class="o">}</span>
 
   <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voilà :<br>
<div class="centre"><img src="./java_files/99955.jpg" alt="Image utilisateur"></div><br>
<br>
Vous avez remarqué que la différence entre ces deux codes était seulement l'ordre des conditions dans nos boucles... <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
<br>
<div class="rmq question">Tu ne nous avais pas parlé d'une façon de faire une boucle <strong><span class="courrier">for</span></strong> ?</div><br>
<br>
Tout à fait, d'ailleurs la voici : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">tab</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"toto"</span><span class="o">,</span> <span class="s">"titi"</span><span class="o">,</span> <span class="s">"tutu"</span><span class="o">,</span> <span class="s">"tete"</span><span class="o">,</span> <span class="s">"tata"</span><span class="o">};</span>
 
<span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tab</span><span class="o">)</span>
   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="souligne">Voici le résultat : </span><br>
<div class="centre"><img src="./java_files/99956.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq erreur">Faites bien attention à ne pas confondre les deux syntaxes ! La boucle <strong><span class="courrier">for</span></strong>, ancienne génération, prend des <strong><span class="tgros">;</span></strong> dans ses instructions, alors que la nouvelle version prend un <strong><span class="tgros">:</span></strong>.</div><br>
<br>
Comme je vous l'avais dit lorsque vous avez vu "<strong><span class="italique">Les boucles</span></strong>", cette syntaxe se rapproche de la boucle <strong><span class="courrier">foreach</span></strong> présente dans d'autre langages.<br>
Cette syntaxe signifie qu'à chaque tour de boucle, la valeur courante du tableau est mise dans la variable <span class="courrier"><strong>str</strong></span>.<br>
<div class="rmq attention">Il faut <strong><span class="gros">IMPÉRATIVEMENT</span></strong> que la variable passée en premier paramètre de la boucle <strong><span class="courrier">for</span></strong> soit de même type que la valeur de retour du tableau (une variable de type <span class="courrier"><strong>String</strong></span> pour un tableau de <span class="courrier"><strong>String</strong></span>, un <span class="courrier"><strong>int</strong></span> pour un tableau d'<span class="courrier"><strong>int</strong></span>...)</div><br>
Pour vérifier que les valeurs retournées par la boucle correspondent bien à leurs indices, vous pouvez déclarer un entier (<span class="courrier">i</span>, par exemple) initialisé à 0 et incrémenté à la fin de la boucle.<br>
<br>
Allez, c'est mon jour de bonté : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">tab</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"toto"</span><span class="o">,</span> <span class="s">"titi"</span><span class="o">,</span> <span class="s">"tutu"</span><span class="o">,</span> <span class="s">"tete"</span><span class="o">,</span> <span class="s">"tata"</span><span class="o">};</span>
<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
 
<span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tab</span><span class="o">)</span>
<span class="o">{</span>
   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"La valeur de la nouvelle boucle est : "</span> <span class="o">+</span> <span class="n">str</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"La valeur du tableau à l'indice "</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span><span class="s">" est : "</span> <span class="o">+</span> <span class="n">tab</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
   <span class="n">i</span><span class="o">++;</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donne : <br>
<div class="centre"><img src="./java_files/99961.jpg" alt="Image utilisateur"></div><br>
<br>
Alors ? Convaincus ?  <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
Vous pouvez voir que cette forme de boucle <strong><span class="courrier">for</span></strong> est particulièrement adaptée au parcours de tableau !<br>
<div class="rmq question">D'accord, ça a l'air bien comme méthode, mais pour les tableaux à deux dimensions ?</div><br>
Même si vous devriez trouver la réponse tout seuls, je vais tout de même vous la donner !  <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Je vous ai dit que la variable en premier paramètre devait être du même type que la valeur de retour du tableau. Dans le cas qui nous intéresse, que va retourner l'instruction de la boucle <strong><span class="courrier">for</span></strong> si on utilise un tableau à deux dimensions ? Un <strong><span class="bleu">tableau</span></strong>. Nous devrons donc mettre un tableau, du même type que notre tableau à dimensions, en première instruction de la boucle, et donc faire une deuxième boucle afin de parcourir le résultat obtenu !<br>
<br>
Voici un code qui permet d'afficher un tableau à deux dimensions de façon conventionnelle et selon la nouvelle version du JDK 1.5 : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">tab</span><span class="o">[][]</span> <span class="o">=</span> <span class="o">{{</span><span class="s">"toto"</span><span class="o">,</span> <span class="s">"titi"</span><span class="o">,</span> <span class="s">"tutu"</span><span class="o">,</span> <span class="s">"tete"</span><span class="o">,</span> <span class="s">"tata"</span><span class="o">},</span> <span class="o">{</span><span class="s">"1"</span><span class="o">,</span> <span class="s">"2"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">,</span> <span class="s">"4"</span><span class="o">}};</span>
                <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
 
                <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">sousTab</span><span class="o">[]</span> <span class="o">:</span> <span class="n">tab</span><span class="o">)</span>
                <span class="o">{</span>
                   <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                  <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">sousTab</span><span class="o">)</span>
                  <span class="o">{</span>     
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"La valeur de la nouvelle boucle est : "</span> <span class="o">+</span> <span class="n">str</span><span class="o">);</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"La valeur du tableau à l'indice ["</span> <span class="o">+</span> <span class="n">j</span> <span class="o">+</span> <span class="s">"]["</span> <span class="o">+</span><span class="n">i</span> <span class="o">+</span><span class="s">"] est : "</span> <span class="o">+</span>  <span class="n">tab</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">i</span><span class="o">]</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
                    <span class="n">i</span><span class="o">++;</span>
                  <span class="o">}</span>
                  <span class="n">j</span><span class="o">++;</span>
                <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donne : <br>
<br>
<div class="centre"><img src="./java_files/99964.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez donc voir que nous récupérons un tableau au parcours de la première boucle et que nous parcourons ce même tableau afin de récupérer les valeurs de celui-ci dans la deuxième. Simple, non ? En tout cas, je préfère nettement cette syntaxe ! <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
Après, c'est à vous de voir...<br>
<br>
Vous êtes maintenant parés pour utiliser les tableaux quels qu'ils soient ! <br>
Donc, sans plus attendre, je vous propose un petit QCM de derrière les fagots !
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Encore un chapitre bien dodu, mais je vois que vous vous en sortez comme des pros ! <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
<br>
Le chapitre suivant sera l'un des plus fournis en informations ; donc, si vous sentez un peu de fatigue, reposez-vous un peu avant d'attaquer <strong><span class="orange">les méthodes de classe</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10328">Les méthodes de classe</h1>
	<div id="chap_intro">
	Ce chapitre aura pour but de vous faire découvrir ce qu'on appelle, en Java, des méthodes de classe (fonctions en C/C++), de base et très utiles. <br>
<br>
Java est un langage 100 % objet. Ceci signifie que tout ce qui fait partie du langage est objet ! <br>
Nous approfondirons cette notion lorsque nous ferons de la POO (Programmation Orienté Objet).<br>
Pour le moment, retenez juste que, dans chaque objet, il y a des méthodes qui font des traitements spécifiques. Il s'agit tout bonnement d'une portion de code réutilisable !<br>
<br>
C'est ce que nous allons aborder ici.<br>
<br>
Mais ce chapitre ne serait pas drôle si nous ne nous amusions pas à en créer une ou deux pour le plaisir... <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
Et là, vous aurez beaucoup de choses à retenir...
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10327">Quelques méthodes bien utiles !</h2>
		<div class="ss_part_texte">
		Voici le moment de vous présenter quelques méthodes dont, j'en suis convaincu, vous ne pourrez plus vous passer... <br>
<br>
<strong><span class="souligne"><span class="courrier">toLowerCase()</span></span></strong><br>
<br>
Cette méthode permet de transformer toute saisie clavier de type caractère en minuscules. Elle n'a aucun effet sur les nombres, puisqu'ils ne sont pas assujettis à cette contrainte. Vous pouvez donc utiliser cette fonction sur une chaîne de caractères comportant des nombres.<br>
Elle s'utilise comme ceci :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">chaine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"COUCOU TOUT LE MONDE !"</span><span class="o">),</span> <span class="n">chaine2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
<span class="n">chaine2</span> <span class="o">=</span> <span class="n">chaine</span><span class="o">.</span><span class="na">toLowerCase</span><span class="o">();</span><span class="c1">//donne "coucou tout le monde !"</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<strong><span class="souligne"><span class="courrier">toUpperCase()</span></span></strong><br>
<br>
Celle-là est facile, puisqu'il s'agit de l'opposée de la précédente. Elle transforme donc une chaîne de caractères en majuscules. Et s'utilise comme suit :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">chaine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"coucou coucou"</span><span class="o">),</span> <span class="n">chaine2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
<span class="n">chaine2</span> <span class="o">=</span> <span class="n">chaine</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">();</span><span class="c1">//donne "COUCOU COUCOU"</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<strong><span class="souligne"><span class="courrier">concat()</span></span></strong><br>
<br>
Très explicite, celle-là permet de concaténer deux chaînes de caractères.<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"Coucou "</span><span class="o">),</span> <span class="n">str2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"toi !"</span><span class="o">),</span> <span class="n">str3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
<span class="n">str3</span> <span class="o">=</span> <span class="n">str1</span><span class="o">.</span><span class="na">concat</span><span class="o">(</span><span class="n">str2</span><span class="o">);</span><span class="c1">//donne "Coucou toi !"</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<strong><span class="souligne"><span class="courrier">length()</span></span></strong><br>
<br>
Celle-là permet de donner la longueur d'une chaîne de caractères (en comptant les espaces blancs).<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">chaine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"coucou ! "</span><span class="o">);</span> 
<span class="kt">int</span> <span class="n">longueur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="n">longueur</span> <span class="o">=</span> <span class="n">chaine</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="c1">//donne 9</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<strong><span class="souligne"><span class="courrier">equals()</span></span></strong><br>
<br>
Permet de voir si deux chaînes de caractères sont identiques. Donc, de faire des tests. C'est avec cette fonction que vous ferez vos tests de conditions, lorsqu'il y aura des <span class="courrier">String</span>. Exemple concret :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"coucou"</span><span class="o">),</span> <span class="n">str2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"toutou"</span><span class="o">);</span>
 
<span class="k">if</span> <span class="o">(</span><span class="n">str1</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str2</span><span class="o">))</span><span class="c1">//Si les deux chaînes sont identiques</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Les deux chaines sont identiques !"</span><span class="o">);</span>
 
<span class="k">else</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Les deux chaînes sont différentes !"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Vous pouvez aussi demander la non vérification de l'égalité... Grâce à l'opérateur de négation... vous vous en souvenez ? Il s'agit de '<span class="gros">!</span>'</div><br>
Ce qui nous donne :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"coucou"</span><span class="o">),</span> <span class="n">str2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"toutou"</span><span class="o">);</span>
 
<span class="k">if</span> <span class="o">(!</span><span class="n">str1</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str2</span><span class="o">))</span><span class="c1">//Si les deux chaînes sont différentes</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Les deux chaines sont différentes !"</span><span class="o">);</span>
 
<span class="k">else</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Les deux chaînes sont identiques !"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Le principe de ce genre de condition fonctionne de la même façon pour les boucles. Et dans l'absolu, cette fonction retourne un booléen. C'est pourquoi nous pouvons utiliser cette fonction dans les tests de condition.<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"coucou"</span><span class="o">),</span> <span class="n">str2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"toutou"</span><span class="o">);</span>
<span class="kt">boolean</span> <span class="n">Bok</span> <span class="o">=</span> <span class="n">str1</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str2</span><span class="o">);</span><span class="c1">//ici Bok prendra la valeur false</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<strong><span class="souligne"><span class="courrier">charAt()</span></span></strong><br>
<br>
Le résultat de cette méthode sera un caractère, car il s'agit d'une méthode d'extraction de caractères, je dirais même d'<span class="gros">UN</span> caractère. Elle ne peut s'opérer que sur des <span class="courrier">String</span>! Elle possède la même particularité que les tableaux, c'est-à-dire que, pour cette méthode, le premier caractère sera le numéro <span class="rouge">0</span>. Cette méthode prend un entier comme argument.<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">nbre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"1234567"</span><span class="o">);</span>
<span class="kt">char</span> <span class="n">carac</span> <span class="o">=</span> <span class="sc">' '</span><span class="o">;</span>
<span class="n">carac</span> <span class="o">=</span> <span class="n">nbre</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">4</span><span class="o">);</span><span class="c1">//renverra ici le carctère 5</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<strong><span class="souligne"><span class="courrier">substring()</span></span></strong><br>
<br>
Comme son nom l'indique, elle permet d'extraire une sous-chaîne de caractères d'une chaîne de caractères. Cette méthode prend 2 entiers comme arguments. Le premier définit le début de la sous-chaîne à extraire <strong><span class="rouge">inclus</span></strong>, le deuxième correspond au dernier caractère à extraire <strong><span class="rouge">exclus</span></strong>. Et le premier caractère est aussi le numéro <span class="rouge">0</span>.<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">chaine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"la paix niche"</span><span class="o">),</span> <span class="n">chaine2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
<span class="n">chaine2</span> <span class="o">=</span> <span class="n">chaine</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span><span class="mi">13</span><span class="o">);</span><span class="c1">//permet d'extraire "paix niche"</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<strong><span class="souligne"><span class="courrier">indexOf()/lastIndexOf()</span></span></strong><br>
<br>
<strong><span class="courrier">indexOf()</span></strong> permet d'explorer une chaîne de caractères depuis son début. <strong><span class="courrier">lastIndexOf()</span></strong> depuis sa fin, mais renvoie l'index depuis le début de la chaine. Elle prend un <strong><span class="italique">caractère, ou une chaîne de caractères</span></strong> comme argument, et renvoie un <strong><span class="courrier">int</span></strong>. Tout comme <strong><span class="courrier">charAt()</span></strong> et <strong><span class="courrier">substring()</span></strong>, le premier caractère est à la place <span class="rouge">0</span>. Je crois qu'ici un exemple s'impose, plus encore que pour les autres fonctions :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">mot</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"anticonstitutionnellement"</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
 
<span class="n">n</span> <span class="o">=</span> <span class="n">mot</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="sc">'t'</span><span class="o">);</span>      <span class="c1">// n vaut 2</span>
<span class="n">n</span> <span class="o">=</span> <span class="n">mot</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="sc">'t'</span><span class="o">);</span>        <span class="c1">// n vaut 24</span>
<span class="n">n</span> <span class="o">=</span> <span class="n">mot</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">"ti"</span><span class="o">);</span>    <span class="c1">// n vaut 2</span>
<span class="n">n</span> <span class="o">=</span> <span class="n">mot</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="s">"ti"</span><span class="o">);</span>      <span class="c1">// n vaut 12</span>
<span class="n">n</span> <span class="o">=</span> <span class="n">mot</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="sc">'x'</span><span class="o">);</span>      <span class="c1">// n vaut -1</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h3><span class="souligne">Des méthodes concernant les mathématiques</span></h3><br>
<br>
Ces méthodes utilisent la classe <span class="violet"><span class="courrier">Math</span></span>, présente dans <span class="violet">java.lang</span>. Cette classe fait donc partie des fondements du langage et, par conséquent, aucun import particulier n'est nécessaire pour utiliser la classe <span class="courrier"><span class="violet">Math</span></span>.<br>
<br>
<h4><span class="souligne"><span class="courrier">random()</span></span></h4><br>
<br>
Cette méthode permet de générer un nombre aléatoire, entre 0 et 1 (elle renvoie donc un <span class="courrier">double</span>). Vous ne voyez pas l'utilité ? Eh bien... Vous vous en rendrez compte lors de notre prochain TP...<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">double</span> <span class="n">X</span> <span class="o">=</span> <span class="mf">0.0</span><span class="o">;</span>
<span class="n">X</span> <span class="o">=</span> <span class="n">Math</span><span class="o">.</span><span class="na">random</span><span class="o">();</span><span class="c1">//donne un nombre comme 0.0001385746329371058</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Sinus, cosinus, tangente</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">double</span> <span class="n">sin</span> <span class="o">=</span> <span class="n">Math</span><span class="o">.</span><span class="na">sin</span><span class="o">(</span><span class="mi">120</span><span class="o">);</span>
<span class="kt">double</span> <span class="n">cos</span> <span class="o">=</span> <span class="n">Math</span><span class="o">.</span><span class="na">cos</span><span class="o">(</span><span class="mi">120</span><span class="o">);</span>
<span class="kt">double</span> <span class="n">tan</span> <span class="o">=</span> <span class="n">Math</span><span class="o">.</span><span class="na">tan</span><span class="o">(</span><span class="mi">120</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ces méthodes retournent un nombre de type <span class="courrier"><span class="violet">double</span></span>.<br>
<br>
<h4><span class="souligne">Valeur absolue</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">double</span> <span class="n">abs</span> <span class="o">=</span> <span class="n">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(-</span><span class="mf">120.25</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Exposant</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kt">double</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
<span class="kt">double</span> <span class="n">exp</span> <span class="o">=</span> <span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="n">d</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
<span class="c1">//Ici on initialise la variable exp avec la valeur de d élevée au carré</span>
<span class="c1">//La méthode pow() prend donc une valeur en premier paramètre </span>
<span class="c1">//et un exposant en second</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<br>
Je ne vais pas vous faire un récapitulatif de toutes les méthodes présentes dans Java, sinon, dans 1000 ans, je serais encore derrière mon clavier... <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
Toutes ces méthodes sont très utiles, croyez-moi. Mais les plus utiles sont encore celles que nous faisons ! C'est tellement mieux quand ça vient de nous... <img src="./java_files/hihi.png" alt="^^" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10326">Créer et utiliser sa propre méthode !</h2>
		<div class="ss_part_texte">
		Reprenons la méthode que je vous avais donnée lors du premier TP. Pour mémoire : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">double</span> <span class="nf">arrondi</span><span class="o">(</span><span class="kt">double</span> <span class="n">A</span><span class="o">,</span> <span class="kt">int</span> <span class="n">B</span><span class="o">)</span> <span class="o">{</span>
     <span class="k">return</span> <span class="o">(</span><span class="kt">double</span><span class="o">)</span> <span class="o">(</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="n">A</span> <span class="o">*</span> <span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="n">B</span><span class="o">)</span> <span class="o">+</span> <span class="o">.</span><span class="mi">5</span><span class="o">))</span> <span class="o">/</span> <span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="n">B</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Décortiquons un peu ceci</h4><br>
<ul>
<li>Tout d' abord, il y a le mot clé <span class="courrier"><span class="violet"><strong>public</strong></span></span>. C'est ce qui définit la portée de la méthode. Nous y reviendrons lorsque nous programmerons des objets.</li>
<li>Ensuite il y a <span class="courrier"><strong><span class="violet">static</span></strong></span>. Nous y reviendrons aussi.</li>
<li>Juste après, nous voyons <span class="violet"><span class="courrier"><strong>double</strong></span></span>. Il s'agit du type de retour de la méthode. Pour faire simple, ici, notre méthode va renvoyer un <span class="courrier">double</span> !</li>
<li>Il y a ensuite le <strong>nom de la méthode</strong>. C'est avec ce nom que nous l'appellerons.</li>
<li>Puis, il y a <strong>les arguments que la méthode prend</strong>. C'est en fait les paramètres dont la méthode a besoin pour travailler. Ici, nous demandons d'arrondir le <span class="courrier">double</span> A avec B chiffres derrière la virgule !</li>
<li>Et vous pouvez voir, à l'intérieur de la méthode, une instruction <strong><span class="violet"><span class="courrier">return</span></span></strong>. C'est cette instruction qui effectue le renvoi de la valeur, ici, un <strong><span class="courrier">double</span></strong>.</li>
</ul><br>
<br>
Dans ce chapitre, nous allons voir les différents types de renvois ainsi que les paramètres qu'une méthode peut prendre.<br>
<br>
Vous devez savoir deux choses concernant les méthodes : <br>
<ul>
<li><strong>elles ne sont pas limitées en nombre de paramètres</strong></li>
<li>il y a <strong>trois grands types de méthodes</strong> : <br>
<ul>
<li>les méthodes qui ne renvoient rien. Elles sont de type <span class="courrier"><span class="violet"><strong>void</strong></span></span>. Ces types de méthodes n'ont pas d'instruction <strong><span class="courrier">return </span></strong>!</li>
<li>les méthodes qui retournent des types primitifs (<span class="courrier">double</span>, <span class="courrier">int</span>...). Elles sont de type <strong><span class="violet"><span class="courrier">double</span></span></strong>, <strong><span class="violet"><span class="courrier">int</span></span></strong>, <strong><span class="violet"><span class="courrier">char</span></span></strong>... Celles-ci ont une instruction <strong><span class="courrier">return</span></strong>.</li>
<li>des méthodes qui retournent des objets. Par exemple, une méthode qui retourne un objet de type <strong><span class="violet"><span class="courrier">String</span></span></strong>. Celles-ci aussi ont une instruction <strong><span class="courrier">return</span></strong>.</li>
</ul></li>
</ul><br>
<br>
Pour le moment, nous ne faisions que des programmes comportant une classe. Celle-ci ne comportant qu'une méthode : la méthode <strong><span class="courrier"><span class="violet">main</span></span></strong>.<br>
Le moment est donc venu de créer vos propres méthodes. Que vous ayez utilisé la méthode <span class="violet"><span class="courrier"><strong>arrondi</strong></span></span> dans votre TP ou non, vous avez du voir que celle-ci se place à l'extérieur de la méthode <strong><span class="courrier">main</span></strong>, mais dans votre classe !<br>
<br>
Pour rappel, voici le screen qu'il y avait dans le TP 1 : <br>
<br>
<div class="centre"><img src="./java_files/100028.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq erreur">Si vous placez une de vos méthodes à l'intérieur de la méthode main ou à l'extérieur de votre classe : <strong>LE PROGRAMME NE COMPILERA PAS ! !</strong></div><br>
<br>
<div class="rmq question">Bon, d'accord ! C'est enregistré. Mais concrètement... À quoi vont nous servir ces <strong>méthodes</strong> ? </div><br>
Dites-vous bien qu'un développeur est de nature assez feignante... Sans déconner. Il s'est vite aperçu qu'il y avait du code redondant dans ses programmes... Des morceaux de code qui faisaient toujours la même chose et qui n'avaient, comme seule différence, la (ou les) variable(s) qu'ils traitaient.<br>
<br>
Vu que nous venons de voir les tableaux, nous allons donc faire des méthodes concernant ces derniers !<br>
Vous devez certainement vous rappeler de la façon de parcourir un tableau... <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Et si nous faisions une méthode qui permette d'afficher le contenu d'un tableau sans que nous soyons obligés de retaper la portion de code contenant la boucle ? Je me doute que vous n'en voyez pas l'intérêt maintenant car, mis à part les plus courageux d'entre vous, vous n'avez fait qu'un ou deux tableaux de votre main lors de la partie précédente. Et si je vous demande de déclarer 22 tableaux, si je vous dis : <strong>"Allez, bande de ZérOs ! Parcourez-moi tout ça !"</strong>  <img src="./java_files/pirate.png" alt=":pirate:" class="smilies"> <br>
<br>
Vous n'allez tout de même pas faire 22 boucles <strong><span class="courrier">for</span></strong> ! De toute façon, je vous l'interdis ! Nous allons faire une méthode. Celle-ci va : <br>
<ul>
<li>prendre notre tableau en paramètre (ben oui... c'est lui que nous voulons parcourir),</li>
<li>parcourir notre tableau à notre place,</li>
<li>faire tous les <span class="courrier">System.out.println()</span>,</li>
<li>ne rien renvoyer.</li>
</ul><br>
<br>
Avec ce que nous avons défini, nous savons donc que notre méthode sera de type <strong><span class="courrier">void</span></strong>, qu'elle prendra un tableau en paramètre (pour le moment, on travaillera avec des tableaux de <strong><span class="courrier">String</span></strong>) et le contenu vous vous doutez de ce que ça va être... Une boucle. Cette fameuse boucle que nous ne serons plus obligés de répéter autant de fois que de tableaux de <strong><span class="courrier">String</span></strong> !<br>
<br>
Ce qui va nous donner : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">static</span> <span class="kt">void</span> <span class="nf">parcourirTableau</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">tab</span><span class="o">)</span>
    <span class="o">{</span>
      <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tab</span><span class="o">)</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
    <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voici un exemple de code entier : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Sdz1</span>
<span class="o">{</span>
   <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
   <span class="o">{</span>
      <span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="o">{</span><span class="s">"toto"</span><span class="o">,</span> <span class="s">"tata"</span><span class="o">,</span> <span class="s">"titi"</span><span class="o">,</span> <span class="s">"tete"</span><span class="o">};</span>
      <span class="n">parcourirTableau</span><span class="o">(</span><span class="n">tab</span><span class="o">);</span>
 
   <span class="o">}</span>
 
   <span class="kd">static</span> <span class="kt">void</span> <span class="nf">parcourirTableau</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">tabBis</span><span class="o">)</span>
    <span class="o">{</span>
      <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tabBis</span><span class="o">)</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Je sais que ça vous trouble encore, mais sachez que les méthodes ajoutées dans la classe <strong><span class="courrier">main</span></strong> doivent être déclarées <strong><span class="courrier">static</span></strong> ! Fin du mystère lors de la programmation orientée objet !</div><br>
<br>
Bon. Vous voyez que la méthode parcourt le tableau passé en paramètre. Si vous créez plusieurs tableaux et appelez la méthode avec ces derniers, vous vous apercevrez que la méthode affiche le contenu de chaque tableau !<br>
<br>
Voici une méthode au même effet que la méthode <strong><span class="courrier">parcourirTableau</span></strong>, à la différence que celle-ci retourne une valeur. Ici, une chaîne de caractères !<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">static</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">tab</span><span class="o">)</span>
<span class="o">{</span>
  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Méthode toString() ! ! !\n---------------------------"</span><span class="o">);</span>
   <span class="n">String</span> <span class="n">retour</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
   
   <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tab</span><span class="o">)</span>
       <span class="n">retour</span> <span class="o">+=</span> <span class="n">str</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">;</span> 
   
   <span class="k">return</span> <span class="n">retour</span><span class="o">;</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<strong><span class="souligne">Et voici un code complet : </span></strong><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Sdz1</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
           <span class="o">{</span>
              <span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="o">{</span><span class="s">"toto"</span><span class="o">,</span> <span class="s">"tata"</span><span class="o">,</span> <span class="s">"titi"</span><span class="o">,</span> <span class="s">"tete"</span><span class="o">};</span>
              <span class="n">parcourirTableau</span><span class="o">(</span><span class="n">tab</span><span class="o">);</span>
              <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">toString</span><span class="o">(</span><span class="n">tab</span><span class="o">));</span>   
           <span class="o">}</span>
 
           <span class="kd">static</span> <span class="kt">void</span> <span class="nf">parcourirTableau</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">tab</span><span class="o">)</span>
            <span class="o">{</span>
              <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tab</span><span class="o">)</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
            <span class="o">}</span>
           
           <span class="kd">static</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">tab</span><span class="o">)</span>
           <span class="o">{</span>
                  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Méthode toString() ! ! !\n---------------------------"</span><span class="o">);</span>
                   <span class="n">String</span> <span class="n">retour</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
                   
                   <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tab</span><span class="o">)</span>
                       <span class="n">retour</span> <span class="o">+=</span> <span class="n">str</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">;</span> 
                   
                   <span class="k">return</span> <span class="n">retour</span><span class="o">;</span>
           <span class="o">}</span>
           
          
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous voyez que la deuxième méthode retourne une chaîne de caractères que nous devons afficher à l'aide de l'instruction <strong><span class="courrier">System.out.println()</span></strong>. Nous affichons la valeur renvoyée par la méthode <strong><span class="courrier">toString()</span></strong>. Alors que la méthode <strong><span class="courrier">parcourirTableau</span></strong>, elle, écrit au fur et à mesure le contenu du tableau dans la console ! <br>
Notez que j'ai ajouté une ligne d'écriture dans la console dans la méthode <strong><span class="courrier">toString()</span></strong> afin de vous montrer où était appelée cette dernière.<br>
<br>
<div class="rmq information">L'instruction <strong><span class="courrier">System.out.println()</span></strong> est très pratique pour déboguer vos programmes ! Dans une méthodes, l'utilisation de cette instruction peut faire ressortir des erreurs de conception ou de développement !</div><br>
<br>
Il nous reste un point important à aborder.<br>
Imaginez un instant que vous ayez plusieurs types d'éléments à parcourir ! Des tableaux à une dimension, mais aussi d'autres à deux dimensions, et même des objets comme des <strong><span class="courrier">ArrayList</span></strong> (nous les verrons, ne vous inquiétez pas...). Sans aller si loin. Vous n'allez pas donner un nom différent à la méthode <span class="courrier"><strong>parcourirTableau</strong></span> à chaque type primitif !<br>
<br>
<br>
Vous avez dû remarquer que la méthode que nous avons créée ne prend qu'un tableau de <span class="courrier"><strong>String</strong></span> en paramètre ! Pas de tableau d'<strong><span class="courrier">int</span></strong> ni de <strong><span class="courrier">long</span></strong>.<br>
<br>
Si seulement nous pouvions utiliser la même méthode pour différents types de tableaux !<br>
<br>
C'est là qu'entre en jeu ce qu'on appelle : la surcharge.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10325">La surcharge de méthode</h2>
		<div class="ss_part_texte">
		Grâce à ceci, vous n'aurez plus à retenir 10 000 noms de méthodes qui font la même chose !<br>
<br>
<h4><span class="souligne">Le principe</span></h4><br>
La surcharge de méthode consiste à garder un nom de méthode (donc un type de traitement à faire, pour nous, lister un tableau) et de changer la liste ou le type de ses paramètres.<br>
<br>
Dans le cas qui nous intéresse, nous voulons que notre méthode <strong><span class="courrier">parcourirTableau</span></strong> puisse parcourir n'importe quel type de tableau. <br>
<div class="rmq question">Comment faire ?</div><br>
Nous allons surcharger notre méthode afin qu'elle puisse travailler avec des <strong><span class="courrier">int</span></strong> par exemple : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="k">static</span> <span class="kt">void</span> <span class="nf">parcourirTableau</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">tab</span><span class="o">)</span>
  <span class="o">{</span>
     <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tab</span><span class="o">)</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
  <span class="o">}</span>
        
<span class="k">static</span> <span class="kt">void</span> <span class="nf">parcourirTableau</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">tab</span><span class="o">)</span>
  <span class="o">{</span>
     <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tab</span><span class="o">)</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
  <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Avec ces méthodes, vous pourrez parcourir de la même manière : <br>
<ul>
<li>les tableaux d'entiers</li>
<li>les tableaux de chaînes de caractères.</li>
</ul><br>
<br>
Mais vous pouvez aussi faire de même avec les tableaux à 2 dimensions. <br>
Voici à quoi pourrait ressembler son code (je ne rappelle pas le code des deux méthodes ci-dessus) : <br>
<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="k">static</span> <span class="kt">void</span> <span class="nf">parcourirTableau</span><span class="o">(</span><span class="n">String</span><span class="o">[][]</span> <span class="n">tab</span><span class="o">)</span>
  <span class="o">{</span>
     <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">tab2</span><span class="o">[]</span> <span class="o">:</span> <span class="n">tab</span><span class="o">)</span>
     <span class="o">{</span>
        <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tab2</span><span class="o">)</span>
          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
     <span class="o">}</span>
  <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
La surcharge de méthode fonctionne aussi en ajoutant des paramètres à la méthode. <br>
Cette méthode est donc valide : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="k">static</span> <span class="kt">void</span> <span class="nf">parcourirTableau</span><span class="o">(</span><span class="n">String</span><span class="o">[][]</span> <span class="n">tab</span><span class="o">,</span> <span class="kt">int</span> <span class="n">i</span><span class="o">)</span>
  <span class="o">{</span>
     <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">tab2</span><span class="o">[]</span> <span class="o">:</span> <span class="n">tab</span><span class="o">)</span>
     <span class="o">{</span>
        <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tab2</span><span class="o">)</span>
          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
     <span class="o">}</span>
  <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Bon d'accord, nous ne nous servons pas de la variable <strong><span class="courrier">i</span></strong>, mais c'était un exemple. Comme ça, vous avez vu les cas de surcharge de méthode !<br>
<br>
<h4><span class="souligne">Ce qu'il faut retenir de ce chapitre</span></h4><br>
<ul>
<li>Les méthodes <strong>se définissent dans une classe</strong>.</li>
<li>Les méthodes ne peuvent <strong><span class="rouge">pas être imbriquées</span></strong>. Elles sont déclarées <span class="bleu"><strong>les unes après les autres</strong></span>.</li>
<li>Les méthodes peuvent être surchargées, en <strong>changeant le type de paramètres </strong>que celle-ci attend, <strong>le nombre de ses paramètres ou les deux</strong> !</li>
<li>Pour Java, le fait de surcharger une méthode lui indique qu'il s'agit de 2, 3 ou X méthodes différentes, car <strong>les paramètres d'appel sont différents</strong>. Par conséquent, <strong>Java ne se trompe jamais d'appel de méthode, puisqu'il se base sur les paramètres passés</strong>.</li>
</ul><br>
<br>
<br>
Je crois que vous êtes prêts pour un petit QCM des familles !  <img src="./java_files/clin.png" alt=";)" class="smilies"> 
		</div>
		<hr>
		
	<div id="chap_conclusion">
	J'espère que vous aurez appris beaucoup de choses dans ce chapitre. En tout cas, je sais que vous en aurez besoin, et pas plus tard que pour la partie suivante ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Prêts pour la <span class="orange"><strong>programmation orientée objet</strong></span> ? Here we go !
	</div>
	
<div>
<br>
J'ose espérer que vous avez apprécié ce tuto sur les bases du langage Java ! En tout cas, je me suis bien amusé en le faisant.<br>
<br>
Maintenant, nous allons rentrer dans les méandres de la programmation orientée objet !<br>
Alors ?... Toujours prêts ?  <img src="./java_files/langue.png" alt=":p" class="smilies">
</div>

<hr>
<h2>Partie 2 : Java Orienté Objet</h2>
<div>
Dans cette partie, nous allons aborder la programmation orientée objet. Concept de programmation extrêmement puissant et pratique.<br>
En effet, vous verrez qu'avec ce type de programmation, vous pourrez créer, utiliser, recréer divers objets et les utiliser dans un but que vous seuls aurez décidé.<br>
<br>
<div class="rmq information">J'aborderai ce que j'ai pu voir durant ma formation, et uniquement cela... Mais je vous rassure : il y a déjà du travail...<br>
</div><br>
Cette partie sera extrêmement riche en concepts, vocabulaire et méthodologie. Entre autres, vous saurez programmer en <span class="souligne">orienté objet</span>, vous pourrez enregistrer vos objets dans des fichiers...<br>
<br>
J'ajouterai aussi quelques notions de modélisation. Ceci dans le but de vous familiariser avec la façon de schématiser des objets et leurs interactions entre eux. Nous y reviendrons, mais il s'agira de diagrammes de classes utilisés avec le langage <a href="http://fr.wikipedia.org/wiki/Unified_Modeling_Language">UML</a> (Unified Modeling Language).<br>
<br>
Une longue introduction ne servirait à rien... passons donc tout de suite à la première partie.
</div>
	
	<hr>
	<h1 id="chap_10343">Les premiers pas en "Orienté Objet"</h1>
	<div id="chap_intro">
	Dans la première partie de ce tuto sur la programmation en Java, nous avons travaillé avec une seule classe.<br>
Vous allez voir et apprendre qu'en programmation orientée objet, nous travaillerons avec plusieurs classes : en fait, autant de classes que d'objets. <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
<br>
Rappelez-vous de la première partie : <strong>vous avez déjà utilisé des objets... </strong><img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
Oui ! Lorsque vous faisiez ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"tiens... un objet String"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici <span class="bleu"><span class="courrier">str</span></span> est un objet <span class="italique">String</span>. Vous avez créé un objet de la classe <span class="bleu"><span class="courrier">String</span></span> : on dit que vous avez créé une <span class="rouge">instance de la classe <span class="courrier">String()</span></span>. Nous savons cela grâce à l'opérateur <span class="rouge"><span class="courrier">new</span></span>, qui s'utilise pour instancier une classe.<br>
L'objet <span class="courrier">String</span>, instancié ci-dessus, a bien ses propres données : la chaîne de caractères <strong><span class="italique">"tiens... un objet String"</span></strong>. Vous devez savoir aussi que les variables de type <span class="courrier">String()</span> (mais nous préfèrerons parler d'objet à partir de maintenant) ont des méthodes associées, comme <span class="bleu"><span class="courrier">subString()</span></span>.<br>
<br>
Je vous sens quelque peu perplexes... mais néanmoins rassurés... Attaquons sans plus attendre !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10342">Les classes</h2>
		<div class="ss_part_texte">
		Une classe peut être comparée à un moule, qui, lorsque nous le remplissons, nous donne un objet ayant la forme du moule, et toutes ses caractéristiques. Comme quand vous étiez enfants, quand vous vous amusiez avec de la pâte à modeler.<br>
<br>
Si vous avez bien suivi la première partie de ce tuto, vous devriez savoir que notre classe contenant la méthode <span class="courrier">main</span> ressemble à ceci :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="syntax"><pre><span class="kd">class</span> <span class="nc">ClasseMain</span><span class="o">{</span>
 
<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
 
<span class="c">//Vos données, variables, différents traitements....</span>
 
<span class="o">}</span><span class="c">// fin de la méthodes main</span>
 
<span class="o">}</span><span class="c">//fin de votre classe</span>
</pre></div>
</td></tr></tbody></table></div><br>
Créez cette classe et cette méthode <span class="courrier">main</span> (vous savez faire, maintenant).<br>
<br>
Puisque nous allons travailler en <acronym title="Programmation Orientée Objet">POO</acronym>, nous allons devoir créer une seconde classe dans ce fameux projet ! Nous allons donc tout de suite créer une classe <strong><span class="bleu"><span class="courrier">Ville</span></span></strong>. <br>
<div class="rmq information">Dans un but de simplicité, j'ai pensé que créer des objets <strong><span class="courrier">Ville</span></strong> vous permettrait d'assimiler plus facilement le concept objet. Nous allons donc créer des objets <strong><span class="courrier">Ville</span></strong> avant la fin de ce chapitre...</div><br>
Allez dans <span class="impact">File / New / Class</span> ou utilisez le raccourci dans la barre d'outils, comme ceci :<br>
<br>
<div class="centre"><img src="./java_files/103098.jpg" alt="newClasse"></div><br>
<br>
Nommez votre classe : <span class="bleu"><span class="courrier">Ville</span></span> (convention de nommage ! !  <img src="./java_files/diable.png" alt=":diable:" class="smilies"> ). Mais cette fois vous ne devez pas créer la méthode <span class="courrier">main</span>.<br>
<br>
<div class="rmq attention">Il ne peut y avoir qu'une seule méthode <span class="courrier">main</span> par projet ! Souvenez-vous que celle-ci est <strong>le point de départ de votre programme</strong> ! Et un programme ne commence qu'à <strong>un seul endroit</strong> !  <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
Pour être tout à fait précis, il peut exister plusieurs méthode <span class="courrier">main</span> dans votre projet (oui, même une par classe...) <strong>MAIS une seule sera considérée comme le point de départ de votre programme !</strong></div><br>
Au final, vous devriez avoir ceci :<br>
<br>
<div class="centre"><img src="./java_files/103099.jpg" alt="Classe Ville"></div><br>
<br>
Voilà ! Maintenant vous avez votre classe, avec la méthode <span class="bleu"><span class="courrier">main</span></span>, et votre classe <span class="bleu"><span class="courrier">Ville</span></span> encore vide mais qui va bientôt pouvoir créer des objets <span class="courrier">Ville</span>.<br>
<br>
Un dernier mot cependant. Ici, notre classe ville est précédée du mot clé "<strong><span class="bleu"><span class="courrier">public</span></span></strong>". Vous devez savoir que lorsque nous créons une classe comme nous l'avons fait, Eclipse nous facilite la tache en mettant ce mot clé. Nous verrons plus tard qu'il existe d'autres mots clé pour définir la <strong><span class="bleugris">portée d'une classe</span></strong> (nous y viendrons). Si nous enlevons ce mot clé, l'interpréteur Java considèrera, tacitement, votre classe comme <strong><span class="bleu"><span class="courrier">public</span></span></strong>.  <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
<br>
<div class="rmq information">Retenez que, par défaut et sans instructions contraires, toutes les classes sont <span class="gros"><strong><span class="courrier">public</span></strong></span> !</div><br>
<div class="rmq question">C'est-à-dire ?</div><br>
Nous verrons cela à la fin du chapitre... Dès que nous aurons créé des objets ! <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Retenez que :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UneClasse</span><span class="o">{</span>
  
<span class="o">}</span><span class="c">//fin de votre classe</span>
</pre></div>
</td></tr></tbody></table></div><br>
et<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="kd">class</span> <span class="nc">UneClasse</span><span class="o">{</span>
  
<span class="o">}</span><span class="c">//fin de votre classe</span>
</pre></div>
</td></tr></tbody></table></div><br>
Sont deux codes équivalents !<br>
<br>
Ce mot-clé, <span class="bleu"><span class="courrier">public</span></span>,  vous l'avez déjà rencontré lors du chapitre sur les méthodes.<br>
Mais lorsque <span class="bleu"><span class="courrier">public</span></span> précède une méthode, il s'agit d'un droit d'accès à une méthode membre d'une classe... c'est-à-dire qu'avec le mot-clé <span class="bleu"><span class="courrier">public</span></span> devant une méthode, celle-ci sera accessible par toutes les classes utilisant cette dernière. Bien entendu, nous aurons besoin de ce genre de méthode, mais nous aurons aussi besoin d'autres méthodes dont nous ne nous servirons que dans la classe où celle-ci sera créée...<br>
 <br>
Dans ce cas de figure, nous utiliserons le mot clé <span class="bleu"><span class="courrier">private</span></span>. Ce qui signifie que notre méthode ne pourra être appelée que dans la classe où elle a vu le jour ! <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
<br>
<div class="rmq information">Il en va de même pour les variables. Nous allons voir, dans la deuxième sous-partie, que nous pouvons protéger des variables grâce au mot-clé <span class="courrier">private</span>. Le principe sera le même que pour les méthodes... Ces variables ne seront accessibles que dans la classe où elles seront nées...</div><br>
<br>
Bon !... Toutes les conditions sont réunies pour pouvoir commencer activement la programmation orientée objet ! Et si nous allions créer notre première ville ? <img src="./java_files/soleil.png" alt=":soleil:" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10341">Les constructeurs</h2>
		<div class="ss_part_texte">
		Derrière ce mot un peu barbare, se cache une notion toute bête. Vu que notre objectif dans ce chapitre est de construire un objet <strong><span class="courrier">Ville</span></strong>, il va falloir définir les données qu'on va lui attribuer.<br>
<br>
Nous dirons qu'un objet <strong><span class="courrier">Ville</span></strong> a :<br>
<br>
<ul>
<li>un nom sous forme de chaîne de caractères,</li>
<li>un nombre d'habitants sous la forme d'un entier,</li>
<li>un pays apparenté sous la forme d'une chaîne de caractères.</li>
</ul> <br>
<div class="rmq question">Je suis bien d'accord ! Mais comment fait-on pour dire à notre programme que notre objet a tout ça ?</div><br>
Tout simplement en mettant des variables (<span class="italique">dites d'instances</span>) dans notre classe.<br>
Celle-ci va contenir une variable dont le rôle sera de stocker le nom, une autre stockera le nombre d'habitants et la dernière se chargera du pays ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Voilà à quoi ressemble notre classe <strong><span class="bleu"><span class="courrier">Ville</span></span></strong> à présent : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Ville</span><span class="o">{</span>
 
  <span class="n">String</span> <span class="n">nomVille</span><span class="o">;</span>
  <span class="n">String</span> <span class="n">nomPays</span><span class="o">;</span>
  <span class="kt">int</span> <span class="n">nbreHabitant</span><span class="o">;</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Rappelez-vous que, par défaut, les variables d'instances présentes dans une classe sont <strong><span class="bleu"><span class="courrier">public</span></span></strong>.<br>
<div class="rmq question">Pourquoi tu dis <span class="italique">variables d'instances </span>?</div><br>
Tout simplement parce que dans nos futures classes Java, qui définiront des objets, il y aura plusieurs types de variables dans celles-ci (nous approfondirons ceci dans ce chapitre).<br>
Pour le moment, sachez qu'il y a trois grands types de variables dans une classe objet :<br>
<ul>
<li><strong>les variables d'instances</strong> : ce sont elles qui définiront les caractéristiques de notre objet ;</li>
<li><strong>les variables de classes</strong> : celles-ci sont communes à toutes les instances de votre classe ;</li>
<li><strong>les variables locales </strong>: ce sont des variables que nous utiliserons pour travailler dans notre objet.</li>
</ul><br>
<br>
Dans l'immédiat, nous allons travailler avec des variables d'instances afin de créer des objets différents. Il nous reste plus qu'à créer notre premier objet mais pour ce faire, nous allons devoir créer ce qu'on appelle des <strong><span class="bleu">constructeurs</span></strong>. <br>
<br>
Un constructeur est une méthode (ou méthode d'instance, vu qu'elle interagit avec une instance de votre classe) qui va se charger de créer un objet et, le cas échéant, d'initialiser ses variables de classe ! Cette méthode a pour rôle de dire à la <span class="italique"><strong>JVM</strong></span> de réserver de l'allocation mémoire pour notre futur objet et donc, par extension, d'en réserver pour toutes les variables d'instances et variables de classes de cette dernière !<br>
<br>
Notre premier constructeur sera ce qu'on appelle communément <strong>un constructeur par défaut</strong>.<br>
C'est-à-dire qu'il ne prendra aucun paramètre mais permettra tout de même d'instancier un objet et vu que nous sommes perfectionnistes, nous allons initialiser nos variables d'instances. <br>
Voici votre premier constructeur :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Ville</span><span class="o">{</span>
   <span class="c">/**</span>
<span class="c">   * Stocke le nom de notre ville</span>
<span class="c">   */</span>
  <span class="n">String</span> <span class="n">nomVille</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le nom du pays de notre ville</span>
<span class="c">   */</span>
  <span class="n">String</span> <span class="n">nomPays</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le nombre d'habitants de notre ville</span>
<span class="c">   */</span>
  <span class="kt">int</span> <span class="n">nbreHabitant</span><span class="o">;</span>
 
  
  <span class="c">/**</span>
<span class="c">   * Constructeur par défaut</span>
<span class="c">   */</span>
  <span class="k">public</span> <span class="nf">Ville</span><span class="o">(){</span>
      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Création d'une ville !"</span><span class="o">);</span>      
      <span class="n">nomVille</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
      <span class="n">nomPays</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
      <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
  <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous avez remarqué que le constructeur est en fait une méthode qui n'a aucun type de retour (<span class="courrier">void</span>, <span class="courrier">double</span>...) et qui porte le même nom que notre classe !<br>
<br>
<div class="rmq erreur"><span class="gros"><strong><span class="souligne">Ceci est une règle immuable</span> : le (les) constructeur(s) d'une classe doit (doivent) porter le même nom que la classe !</strong></span></div><br>
<br>
<div class="rmq question">Une classe peut avoir plusieurs constructeurs ?</div><br>
Bien sûr ! <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
Il s'agit de la même méthode, mais surchargée ! Dans notre premier constructeur nous n'avons passé aucun paramètre, mais nous allons bientôt en mettre <img src="./java_files/heureux.png" alt=":D" class="smilies"> .<br>
<br>
Vous pouvez d'ores et déjà créer une instance de ville.<br>
Mais tout d'abord, rappelez-vous qu'une instance d'objet se fait grâce au mot-clé <span class="bleu"><span class="courrier">new</span></span>. Comme lorsque vous créez une variable de type <span class="courrier">String</span>. Vous avez sûrement déjà dû faire ce genre de déclaration :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">mot</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Maintenant, vu que nous allons créer des objets <strong><span class="courrier">Ville</span></strong>, nous allons procéder comme pour les <span class="courrier">String</span>. <br>
<br>
Vérifions que l'instanciation se fait bien. Allez dans votre classe contenant la méthode <strong><span class="bleu"><span class="courrier">main</span></span></strong> et instancions un objet <strong><span class="bleu"><span class="courrier">Ville</span></span></strong>. Je suppose que vous avez deviné que le type de notre objet ne sera pas <strong><span class="violet"><span class="courrier">double</span></span></strong>, <strong><span class="violet"><span class="courrier">int</span></span></strong> ou <strong><span class="violet"><span class="courrier">long</span></span></strong> mais bien <strong><span class="violet"><span class="courrier">Ville</span></span></strong> !<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Sdz1</span><span class="o">{</span>
 
 <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
   
     <span class="n">Ville</span> <span class="n">ville</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">();</span>
 
 <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Exécutez ce code, et voilà !  <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"> <br>
<div class="centre"><img src="./java_files/103117.jpg" alt="newVille"></div><br>
<br>
<div class="rmq information">Félicitations ! Vous avez créé votre premier objet ! !  <img src="./java_files/soleil.png" alt=":soleil:" class="smilies"> </div><br>
Je sais bien que, pour le moment, il ne sert à rien...  <img src="./java_files/siffle.png" alt=":-°" class="smilies"> <br>
Mais vous devez passer par là afin de comprendre le principe de la <strong>POO</strong>.<br>
<br>
Maintenant, nous devons mettre des données dans notre objet, ceci afin de pouvoir commencer à travailler...<br>
Le but final serait d'avoir une déclaration d'objet se faisant comme ceci :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="n">Ville</span> <span class="n">ville1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"Marseille"</span><span class="o">,</span> <span class="mi">123456789</span><span class="o">,</span> <span class="s">"France"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
Vous avez remarqué qu'ici les paramètres sont renseignés : eh bien il suffit de faire une méthode qui récupère ces paramètres, et initialise les variables de notre objet. Notre constructeur d'initialisation sera créé. <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"> <br>
<br>
Voici le constructeur de notre objet <strong><span class="courrier">ville</span></strong>, celui qui permet d'avoir des objets avec des paramètres différents. Comme je suis sympa, voici toute la classe telle qu'elle est maintenant :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Ville</span> <span class="o">{</span>
 
  <span class="c">/**</span>
<span class="c">   * Stocke le nom de notre ville</span>
<span class="c">   */</span>
  <span class="n">String</span> <span class="n">nomVille</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le nom du pays de notre ville</span>
<span class="c">   */</span>
  <span class="n">String</span> <span class="n">nomPays</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le nombre d'habitants de notre ville</span>
<span class="c">   */</span>
  <span class="kt">int</span> <span class="n">nbreHabitant</span><span class="o">;</span>
 
  
  <span class="c">/**</span>
<span class="c">   * Constructeur par défaut</span>
<span class="c">   */</span>
  <span class="k">public</span> <span class="nf">Ville</span><span class="o">(){</span>
          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Création d'une ville !"</span><span class="o">);</span>          
          <span class="n">nomVille</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
          <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
  <span class="o">}</span>
 
  <span class="c">/**</span>
<span class="c">   * Constructeur d'initialisation</span>
<span class="c">   * @param pNom </span>
<span class="c">   *                    Nom de la Ville</span>
<span class="c">   *  @param pNbre</span>
<span class="c">   *                    Nombre d'habitants</span>
<span class="c">   *  @param pPays</span>
<span class="c">   *                    Nom du pays</span>
<span class="c">   */</span>
  <span class="k">public</span> <span class="nf">Ville</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pNbre</span><span class="o">,</span> <span class="n">String</span> <span class="n">pPays</span><span class="o">)</span>
  <span class="o">{</span>
          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Création d'une ville avec des paramètres !"</span><span class="o">);</span>     
          <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
          <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">pNbre</span><span class="o">;</span>
  <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Dans ce cas, l'exemple de déclaration et d'initialisation d'un objet <strong><span class="courrier">ville</span></strong> que je vous ai montré un peu plus haut fonctionne sans aucun souci ! MAIS il vous faudra respecter scrupuleusement l'ordre des paramètres passés lors de l'initialisation de votre objet, sinon, c'est l'erreur de compilation à coup sûr ! <br>
Ainsi :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="syntax"><pre><span class="n">Ville</span> <span class="n">ville1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"marseille"</span><span class="o">,</span> <span class="mi">123456789</span><span class="o">,</span> <span class="s">"France"</span><span class="o">);</span><span class="c">//l'ordre est respecté =&gt; aucun souci</span>
<span class="n">Ville</span> <span class="n">ville2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="mi">12456</span><span class="o">,</span> <span class="s">"France"</span><span class="o">,</span> <span class="s">"Lille"</span><span class="o">);</span><span class="c">//Erreur dans l'ordre des paramètres =&gt; erreur de compilation au final</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Testez ce code dans votre méthode <span class="courrier">main</span> : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="syntax"><pre><span class="n">Ville</span> <span class="n">ville</span> <span class="o">=</span>  <span class="k">new</span> <span class="n">Ville</span><span class="o">();</span>
<span class="n">Ville</span> <span class="n">ville2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"Marseille"</span><span class="o">,</span> <span class="mi">123456789</span><span class="o">,</span> <span class="s">"France"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici le résultat : <br>
<div class="centre"><img src="./java_files/103119.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Vous venez de <strong>surcharger le constructeur</strong> ! <img src="./java_files/heureux.png" alt=":D" class="smilies"></div><br>
<br>
Par contre, notre objet à un gros défaut...<br>
<div class="rmq erreur"> Les variables d'instances qui le caractérisent sont accessibles dans votre classe contenant votre <span class="courrier">main</span> !</div><br>
Ceci veut dire que vous pouvez modifier les attributs d'une classe directement. Testez ce code et vous verrez : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Sdz1</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
        <span class="o">{</span>
                <span class="n">Ville</span> <span class="n">ville</span> <span class="o">=</span>  <span class="k">new</span> <span class="n">Ville</span><span class="o">();</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ville</span><span class="o">.</span><span class="na">nomVille</span><span class="o">);</span>
                <span class="n">ville</span><span class="o">.</span><span class="na">nomVille</span> <span class="o">=</span> <span class="s">"la tête à toto ! ! ! !"</span><span class="o">;</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ville</span><span class="o">.</span><span class="na">nomVille</span><span class="o">);</span>
                
                <span class="n">Ville</span> <span class="n">ville2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"Marseille"</span><span class="o">,</span> <span class="mi">123456789</span><span class="o">,</span> <span class="s">"France"</span><span class="o">);</span>
                <span class="n">ville2</span><span class="o">.</span><span class="na">nomPays</span> <span class="o">=</span> <span class="s">"La tête à tutu ! ! ! ! "</span><span class="o">;</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ville2</span><span class="o">.</span><span class="na">nomPays</span><span class="o">);</span>
        <span class="o">}</span>
          
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat : <br>
<div class="centre"><img src="./java_files/103127.jpg" alt="Image utilisateur"></div><br>
<br>
Vous voyez que nous pouvons accéder aux variables d'instances en utilisant le "<strong><span class="gros">.</span></strong>". Comme lorsque vous appelez la méthode <strong><span class="courrier">subString()</span></strong> de l'objet <strong><span class="violet"><span class="courrier">String</span></span></strong>.<br>
C'est très risqué et la plupart des programmeurs Java vous le diront.<br>
Pour la plupart des cas, nous allons contrôler les modifications des variables de classe de manière à ce qu'un code ne fasse pas n'importe quoi avec nos objets !<br>
<br>
C'est pour cela que nous protégeons nos variables d'instances en les déclarant <strong><span class="violet"><span class="courrier">private</span></span></strong>. Comme ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Ville</span> <span class="o">{</span>
 
  <span class="c">/**</span>
<span class="c">   * Stocke le nom de notre ville</span>
<span class="c">   */</span>
  <span class="k">private</span> <span class="n">String</span> <span class="n">nomVille</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le nom du pays de notre ville</span>
<span class="c">   */</span>
  <span class="k">private</span> <span class="n">String</span> <span class="n">nomPays</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le nombre d'habitants de notre ville</span>
<span class="c">   */</span>
  <span class="k">private</span> <span class="kt">int</span> <span class="n">nbreHabitant</span><span class="o">;</span>
 
  
  <span class="c">/**</span>
<span class="c">   * Constructeur par défaut</span>
<span class="c">   */</span>
  <span class="k">public</span> <span class="nf">Ville</span><span class="o">(){</span>
          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Création d'une ville !"</span><span class="o">);</span>          
          <span class="n">nomVille</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
          <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
  <span class="o">}</span>
 
  <span class="c">/**</span>
<span class="c">   * Constructeur d'initialisation</span>
<span class="c">   * @param pNom </span>
<span class="c">   *                    Nom de la Ville</span>
<span class="c">   *  @param pNbre</span>
<span class="c">   *                    Nombre d'habitants</span>
<span class="c">   *  @param pPays</span>
<span class="c">   *                    Nom du pays</span>
<span class="c">   */</span>
  <span class="k">public</span> <span class="nf">Ville</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pNbre</span><span class="o">,</span> <span class="n">String</span> <span class="n">pPays</span><span class="o">)</span>
  <span class="o">{</span>
          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Création d'une ville avec des paramètres !"</span><span class="o">);</span>     
          <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
          <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">pNbre</span><span class="o">;</span>
  <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Et, si vous n'avez pas effacé les lignes de code où nous avons modifié les attributs de nos objets <span class="violet"><span class="courrier">Ville</span></span>, vous devez voir qu'Eclipse n'apprécie pas du tout que vous tentiez d'accéder à des variables de classe <strong>privé</strong> ! <br>
<strong><div class="rmq information">Ces attributs ne sont plus accessibles en dehors de la classe où ils sont déclarés !</div></strong><br>
<br>
À partir de maintenant, ce ne sera plus le programme instanciant une classe qui ira voir ou modifier les attributs de notre objet, mais notre objet qui renverra les informations (ou les modifiera) lorsque le programme lui demandera !<br>
<br>
Bon... Vous avez fait le plus dur ! Si, si, je vous assure ! <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
<br>
Maintenant, il va falloir se servir de ces objets... Eh oui ! Le but est tout de même d'utiliser nos objets dans des programmes. <br>
Pour pouvoir accéder aux données de nos objets, nous allons utiliser ce que l'on appelle des <strong><span class="italique">ACCESSEURS</span></strong> et pour modifier les données, on appelle ça des <strong><span class="italique">MUTATEURS</span></strong>. Donc que dire, si ce n'est :<br>
"À l'abordage, moussaillons ! <img src="./java_files/pirate.png" alt=":pirate:" class="smilies"> "
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10340">Votre objet sait parler : accesseurs et mutateurs</h2>
		<div class="ss_part_texte">
		<div class="rmq information">Un accesseur est une méthode qui va nous permettre d'accéder aux variables de nos objets en lecture et un mutateur, en écriture !</div><br>
<br>
Reprenons là où nous nous étions arrêtés.<br>
<br>
Vous avez une classe <span class="bleu"><span class="courrier">Ville</span></span> qui crée vos objets.<br>
Vous avez une classe avec une méthode <span class="bleu"><span class="courrier">main</span></span>, prête à accueillir vos objets, et tout ce que vous voudrez en faire ! Mais voilà... pas moyen de faire quelque chose de ces satanés objets ! Eh bien... le calvaire est presque terminé ! Grâce aux accesseurs, vous pourrez afficher les variables de vos objets, et grâce aux mutateurs, les modifier.<br>
<br>
Voilà à quoi ressemblent les accesseurs et les mutateurs :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Ville</span> <span class="o">{</span>
 
  <span class="c">/**</span>
<span class="c">   * Stocke le nom de notre ville</span>
<span class="c">   */</span>
  <span class="k">private</span> <span class="n">String</span> <span class="n">nomVille</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le nom du pays de notre ville</span>
<span class="c">   */</span>
  <span class="k">private</span> <span class="n">String</span> <span class="n">nomPays</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le nombre d'habitants de notre ville</span>
<span class="c">   */</span>
  <span class="k">private</span> <span class="kt">int</span> <span class="n">nbreHabitant</span><span class="o">;</span>
 
  
  <span class="c">/**</span>
<span class="c">   * Constructeur par défaut</span>
<span class="c">   */</span>
  <span class="k">public</span> <span class="nf">Ville</span><span class="o">(){</span>
          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Création d'une ville !"</span><span class="o">);</span>          
          <span class="n">nomVille</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
          <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
  <span class="o">}</span>
 
  <span class="c">/**</span>
<span class="c">   * Constructeur d'initialisation</span>
<span class="c">   * @param pNom </span>
<span class="c">   *                    Nom de la Ville</span>
<span class="c">   *  @param pNbre</span>
<span class="c">   *                    Nombre d'habitants</span>
<span class="c">   *  @param pPays</span>
<span class="c">   *                    Nom du pays</span>
<span class="c">   */</span>
  <span class="k">public</span> <span class="nf">Ville</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pNbre</span><span class="o">,</span> <span class="n">String</span> <span class="n">pPays</span><span class="o">)</span>
  <span class="o">{</span>
          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Création d'une ville avec des paramètres !"</span><span class="o">);</span>     
          <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
          <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">pNbre</span><span class="o">;</span>
  <span class="o">}</span>
        
  
  <span class="c">//*****************************************************************************************</span>
  <span class="c">//                                    ACCESSEURS</span>
  <span class="c">//*****************************************************************************************</span>
  
  <span class="c">/**</span>
<span class="c">   * Retourne le nom de la ville</span>
<span class="c">   * @return le nom de la ville</span>
<span class="c">   */</span>
  <span class="k">public</span> <span class="n">String</span> <span class="nf">getNom</span><span class="o">()</span>
  <span class="o">{</span>
          <span class="k">return</span> <span class="n">nomVille</span><span class="o">;</span>
  <span class="o">}</span>
  
  <span class="c">/**</span>
<span class="c">   * Retourne le nom du pays</span>
<span class="c">   * @return le nom du pays</span>
<span class="c">   */</span>
  <span class="k">public</span> <span class="n">String</span> <span class="nf">getNomPays</span><span class="o">()</span>
  <span class="o">{</span>
          <span class="k">return</span> <span class="n">nomPays</span><span class="o">;</span>
  <span class="o">}</span>
  
  <span class="c">/**</span>
<span class="c">   * Retourne le nombre d'habitants</span>
<span class="c">   * @return nombre d'habitants</span>
<span class="c">   */</span>
 <span class="k">public</span> <span class="kt">int</span> <span class="nf">getNombreHabitant</span><span class="o">()</span>
 <span class="o">{</span>
         <span class="k">return</span> <span class="n">nbreHabitant</span><span class="o">;</span>
 <span class="o">}</span>
 
 
 <span class="c">//*****************************************************************************************</span>
 <span class="c">//                                    MUTATEURS</span>
 <span class="c">//*****************************************************************************************</span>
 
 <span class="c">/**</span>
<span class="c">  * Définit le nom de la ville</span>
<span class="c">  * @param pNom</span>
<span class="c">  *             nom de la ville</span>
<span class="c">  */</span>
 <span class="k">public</span> <span class="kt">void</span> <span class="nf">setNom</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">)</span>
 <span class="o">{</span>
          <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="c">/**</span>
<span class="c">  * Définit le nom du pays</span>
<span class="c">  * @param pPays</span>
<span class="c">  *             nom du pays</span>
<span class="c">  */</span>
 <span class="k">public</span> <span class="kt">void</span> <span class="nf">setNomPays</span><span class="o">(</span><span class="n">String</span> <span class="n">pPays</span><span class="o">)</span>
 <span class="o">{</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="c">/**</span>
<span class="c">  * Définit le nombre d'habitants</span>
<span class="c">  * @param nbre</span>
<span class="c">  *             nombre d'habitants</span>
<span class="c">  */</span>
<span class="k">public</span> <span class="kt">void</span> <span class="nf">setNombreHabitant</span><span class="o">(</span><span class="kt">int</span> <span class="n">nbre</span><span class="o">)</span>
<span class="o">{</span>
         <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">nbre</span><span class="o">;</span>
<span class="o">}</span>
  
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Nos accesseurs sont bien des méthodes, et elles sont <span class="bleu"><span class="courrier">public</span></span> pour que vous puissiez y accéder dans une autre classe que celle-ci (la classe <span class="courrier">main</span>, par exemple.. <img src="./java_files/siffle.png" alt=":-°" class="smilies"> ).<br>
<br>
Les accesseurs sont du même type que la variable qu'ils doivent retourner. Ça semble logique, non ? <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
Les mutateurs sont, par contre, de type <span class="bleu"><span class="courrier">void</span></span>. Ce mot clé signifie <span class="italique"><strong>"rien"</strong></span> ; en effet, ces méthodes ne retournent aucune valeur, elles se contentent de les mettre à jour.<br>
<br>
<div class="rmq information">Je vous ai fait faire la différence entre accesseurs et mutateurs mais, généralement, lorsqu'on parle d'accesseurs, ce terme englobe aussi les mutateurs. <br>
Autre chose : il s'agit ici d'une question de convention de nommage. Les accesseurs commencent par <strong><span class="courrier">get</span></strong> et les mutateurs par <strong><span class="courrier">set</span></strong>, comme vous pouvez le voir ici. On parle d'ailleurs de <strong>Getters</strong> et de <strong>Setters</strong>.</div><br>
<br>
Essayez ce code dans votre méthode <span class="courrier">main</span> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></td><td class="code"><div class="syntax"><pre><span class="n">Ville</span> <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">();</span>
        <span class="n">Ville</span> <span class="n">v1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"marseille"</span><span class="o">,</span> <span class="mi">123456</span><span class="o">,</span> <span class="s">"france"</span><span class="o">);</span>       
        <span class="n">Ville</span> <span class="n">v2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"rio"</span><span class="o">,</span> <span class="mi">321654</span><span class="o">,</span> <span class="s">"brésil"</span><span class="o">);</span>
        
        
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n v = "</span><span class="o">+</span><span class="n">v</span><span class="o">.</span><span class="na">getNom</span><span class="o">()+</span><span class="s">" ville de  "</span><span class="o">+</span><span class="n">v</span><span class="o">.</span><span class="na">getNombreHabitant</span><span class="o">()+</span> <span class="s">" habitants se situant en "</span><span class="o">+</span><span class="n">v</span><span class="o">.</span><span class="na">getNomPays</span><span class="o">());</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">" v1 = "</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">getNom</span><span class="o">()+</span><span class="s">" ville de  "</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">getNombreHabitant</span><span class="o">()+</span> <span class="s">" habitants se situant en "</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">getNomPays</span><span class="o">());</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">" v2 = "</span><span class="o">+</span><span class="n">v2</span><span class="o">.</span><span class="na">getNom</span><span class="o">()+</span><span class="s">" ville de  "</span><span class="o">+</span><span class="n">v2</span><span class="o">.</span><span class="na">getNombreHabitant</span><span class="o">()+</span> <span class="s">" habitants se situant en "</span><span class="o">+</span><span class="n">v2</span><span class="o">.</span><span class="na">getNomPays</span><span class="o">()+</span><span class="s">"\n\n"</span><span class="o">);</span>
        
        <span class="c">/*Nous allons interchanger les Villes v1 et v2</span>
<span class="c">        tout ça par l'intermédiaire d'un autre objet Ville        </span>
<span class="c">        */</span>
       
       <span class="n">Ville</span> <span class="n">temp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">();</span>
       <span class="n">temp</span> <span class="o">=</span> <span class="n">v1</span><span class="o">;</span>
       <span class="n">v1</span> <span class="o">=</span> <span class="n">v2</span><span class="o">;</span>
       <span class="n">v2</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
       
       <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">" v1 = "</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">getNom</span><span class="o">()+</span><span class="s">" ville de  "</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">getNombreHabitant</span><span class="o">()+</span> <span class="s">" habitants se situant en "</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">getNomPays</span><span class="o">());</span>
       <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">" v2 = "</span><span class="o">+</span><span class="n">v2</span><span class="o">.</span><span class="na">getNom</span><span class="o">()+</span><span class="s">" ville de  "</span><span class="o">+</span><span class="n">v2</span><span class="o">.</span><span class="na">getNombreHabitant</span><span class="o">()+</span> <span class="s">" habitants se situant en "</span><span class="o">+</span><span class="n">v2</span><span class="o">.</span><span class="na">getNomPays</span><span class="o">()+</span><span class="s">"\n\n"</span><span class="o">);</span>
       
       <span class="c">/*nous allons maintenant interchanger leurs noms</span>
<span class="c">       cette fois par le biais de leur accesseurs</span>
<span class="c">       */</span>
      
      <span class="n">v1</span><span class="o">.</span><span class="na">setNom</span><span class="o">(</span><span class="s">"Hong Kong"</span><span class="o">);</span>
      <span class="n">v2</span><span class="o">.</span><span class="na">setNom</span><span class="o">(</span><span class="s">"Djibouti"</span><span class="o">);</span>
      
      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">" v1 = "</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">getNom</span><span class="o">()+</span><span class="s">" ville de  "</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">getNombreHabitant</span><span class="o">()+</span> <span class="s">" habitants se situant en "</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">getNomPays</span><span class="o">());</span>
      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">" v2 = "</span><span class="o">+</span><span class="n">v2</span><span class="o">.</span><span class="na">getNom</span><span class="o">()+</span><span class="s">" ville de  "</span><span class="o">+</span><span class="n">v2</span><span class="o">.</span><span class="na">getNombreHabitant</span><span class="o">()+</span> <span class="s">" habitants se situant en "</span><span class="o">+</span><span class="n">v2</span><span class="o">.</span><span class="na">getNomPays</span><span class="o">()+</span><span class="s">"\n\n"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
À la compilation, vous devriez obtenir ceci :<br>
<br>
<div class="centre"><img src="./java_files/103135.jpg" alt="Image utilisateur"></div><br>
<br>
Vous voyez bien que les constructeurs ont fonctionné, que les accesseurs tournent à merveille, et que vous pouvez commencer à travailler avec vos objets <strong><span class="violet"><span class="courrier">Ville</span></span></strong>.<br>
<div class="rmq question">Mais la gymnastique des doigts à effectuer pour afficher les caractéristiques de nos objets... pfiou !... <span class="italique">T'aurais pu faire plus simple</span> ! Si seulement notre objet pouvait faire ça tout seul...  <img src="./java_files/unsure.gif" alt=":euh:" class="smilies"> </div><br>
Il peut le faire ! <br>
Qu'est-ce qu'on attend ? Ben rien... on y va ! <img src="./java_files/soleil.png" alt=":soleil:" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10339">Travaillez avec votre objet : les méthodes</h2>
		<div class="ss_part_texte">
		Bon, alors là... c'est une formalité ! Vous savez quasiment tout. <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
<br>
<div class="rmq question">Mais attends... tu vas nous reparler des méthodes, alors que tu ne fais que ça depuis le début de ce chapitre ?</div><br>
Eh bien oui ! Ceci fait partie de la méthodologie que l'on m'a enseignée en formation, même si tout ce que nous avons fait depuis le début se rapporte aux méthodes, il faut différencier :<br>
<br>
<ul>
<li>les constructeurs =&gt; méthodes servant à créer des objets</li>
<li>les accesseurs =&gt; méthodes servant à accéder aux données de nos objets</li>
<li>et les méthodes de classe =&gt; méthodes servant à la gestion de nos objets.</li>
</ul><br>
Les méthodes de classe vont vous permettre de gérer, éditer, afficher... faire tout ce que vous voudrez avec vos objets.<br>
Il ne vous reste plus qu'à trouver des méthodes qui fassent quelque chose pour vos objets...<br>
<br>
Avec nos objets <span class="courrier">ville</span>, nous sommes un peu limités en choix de méthodes... Mais nous pouvons tout de même en faire une ou deux pour l'exemple :<br>
<ul>
<li>faire un système de catégories de villes par rapport à leur nombre d'habitants ( &lt;1000 =&gt; A, &lt;10 000 =&gt; B...). Ceci déterminé à la construction ou à la redéfinition du nombre d'habitants, donc ajouter une variable d'instance de type <strong><span class="violet"><span class="courrier">char</span></span></strong> à notre classe, appelons-la <span class="courrier">categorie</span>. Penser à ajouter le traitement aux bons endroits. <img src="./java_files/langue.png" alt=":p" class="smilies"></li>
<li>faire une méthode de description de notre objet <span class="courrier">Ville</span></li>
<li>une méthode pour comparer deux objets par rapport à leur nombre d'habitants.</li>
</ul><br>
<br>
<div class="rmq information">Nous voulons que la classe <span class="violet"><span class="courrier"><strong>Ville</strong></span></span> gère la façon de déterminer la catégorie elle-même et non que cette action puisse être opérée de l'extérieur. La méthode qui fera ceci sera donc déclarée <span class="violet"><span class="courrier"><strong>private</strong></span></span>.</div><br>
<br>
Par contre, un problème va se poser ! Vous savez déjà qu'en Java on appelle des méthodes grâce à notre variable qui nous sert de référence, celle-ci suivie de l'opérateur "<strong><span class="tgros">.</span></strong>", puis du nom de la dite méthode. <br>
Par exemple :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">"opizrgpinbzegip"</span><span class="o">);</span>
<span class="n">str</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">subString</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">4</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq question">Comment fait-on référence aux données de notre objet dans notre classe ?</div><br>
En fait, c'est tout simple ! Encore un mot clé à retenir... Cette fois, il s'agit du mot-clé <span class="bleu"><span class="courrier">this</span></span>.<br>
Voici tout d'abord le code de notre <span class="italique">class</span> Ville en entier, c'est-à-dire avec nos méthodes associées :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Ville</span> <span class="o">{</span>
 
  <span class="c">/**</span>
<span class="c">   * Stocke le nom de notre ville</span>
<span class="c">   */</span>
  <span class="kd">private</span> <span class="n">String</span> <span class="n">nomVille</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le nom du pays de notre ville</span>
<span class="c">   */</span>
  <span class="kd">private</span> <span class="n">String</span> <span class="n">nomPays</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le nombre d'habitants de notre ville</span>
<span class="c">   */</span>
  <span class="kd">private</span> <span class="kt">int</span> <span class="n">nbreHabitant</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le type de notre ville</span>
<span class="c">   */</span>
  <span class="kd">private</span> <span class="kt">char</span> <span class="n">categorie</span><span class="o">;</span>
  
  <span class="c">/**</span>
<span class="c">   * Constructeur par défaut</span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="nf">Ville</span><span class="o">(){</span>
          <span class="n">nomVille</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
          <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
          <span class="k">this</span><span class="o">.</span><span class="na">setCategorie</span><span class="o">();</span>
  <span class="o">}</span>
 
  <span class="c">/**</span>
<span class="c">   * Constructeur d'initialisation</span>
<span class="c">   * @param pNom </span>
<span class="c">   *                    Nom de la Ville</span>
<span class="c">   *  @param pNbre</span>
<span class="c">   *                    Nombre d'habitants</span>
<span class="c">   *  @param pPays</span>
<span class="c">   *                    Nom du pays</span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="nf">Ville</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pNbre</span><span class="o">,</span> <span class="n">String</span> <span class="n">pPays</span><span class="o">)</span>
  <span class="o">{</span>  
          <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
          <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">pNbre</span><span class="o">;</span>
          <span class="k">this</span><span class="o">.</span><span class="na">setCategorie</span><span class="o">();</span>
  <span class="o">}</span>
        
  
  <span class="c">//*****************************************************************************************</span>
  <span class="c">//                                    ACCESSEURS</span>
  <span class="c">//*****************************************************************************************</span>
  
  <span class="c">/**</span>
<span class="c">   * Retourne le nom de la ville</span>
<span class="c">   * @return le nom de la ville</span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getNom</span><span class="o">()</span>
  <span class="o">{</span>
          <span class="k">return</span> <span class="n">nomVille</span><span class="o">;</span>
  <span class="o">}</span>
  
  <span class="c">/**</span>
<span class="c">   * Retourne le nom du pays</span>
<span class="c">   * @return le nom du pays</span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getNomPays</span><span class="o">()</span>
  <span class="o">{</span>
          <span class="k">return</span> <span class="n">nomPays</span><span class="o">;</span>
  <span class="o">}</span>
  
  <span class="c">/**</span>
<span class="c">   * Retourne le nombre d'habitants</span>
<span class="c">   * @return nombre d'habitants</span>
<span class="c">   */</span>
 <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNombreHabitant</span><span class="o">()</span>
 <span class="o">{</span>
         <span class="k">return</span> <span class="n">nbreHabitant</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="c">/**</span>
<span class="c">  * Retourne la catégorie de la ville</span>
<span class="c">  * @return catégorie de la ville  </span>
<span class="c">  */</span>
 <span class="kd">public</span> <span class="kt">char</span> <span class="nf">getCategorie</span><span class="o">()</span>
 <span class="o">{</span>
         <span class="k">return</span> <span class="n">categorie</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="c">//*****************************************************************************************</span>
 <span class="c">//                                    MUTATEURS</span>
 <span class="c">//*****************************************************************************************</span>
 
 <span class="c">/**</span>
<span class="c">  * Définit le nom de la ville</span>
<span class="c">  * @param pNom</span>
<span class="c">  *             nom de la ville</span>
<span class="c">  */</span>
 <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNom</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">)</span>
 <span class="o">{</span>
          <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="c">/**</span>
<span class="c">  * Définit le nom du pays</span>
<span class="c">  * @param pPays</span>
<span class="c">  *             nom du pays</span>
<span class="c">  */</span>
 <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNomPays</span><span class="o">(</span><span class="n">String</span> <span class="n">pPays</span><span class="o">)</span>
 <span class="o">{</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="c">/**</span>
<span class="c">  * Définit le nombre d'habitants</span>
<span class="c">  * @param nbre</span>
<span class="c">  *             nombre d'habitants</span>
<span class="c">  */</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNombreHabitant</span><span class="o">(</span><span class="kt">int</span> <span class="n">nbre</span><span class="o">)</span>
<span class="o">{</span>
         <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">nbre</span><span class="o">;</span>
         <span class="k">this</span><span class="o">.</span><span class="na">setCategorie</span><span class="o">();</span>
<span class="o">}</span>
 
 
 
<span class="c">//*****************************************************************************************</span>
<span class="c">//                                    METHODES DE CLASSE</span>
<span class="c">//*****************************************************************************************</span>
 
 
 
  <span class="c">/**</span>
<span class="c">   * Définit la catégorie de la ville</span>
<span class="c">   */</span>
  <span class="kd">private</span> <span class="kt">void</span> <span class="nf">setCategorie</span><span class="o">()</span> <span class="o">{</span>
 
      <span class="kt">int</span> <span class="n">bornesSuperieures</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1000</span><span class="o">,</span> <span class="mi">10000</span><span class="o">,</span> <span class="mi">100000</span><span class="o">,</span> <span class="mi">500000</span><span class="o">,</span> <span class="mi">1000000</span><span class="o">,</span> <span class="mi">5000000</span><span class="o">,</span> <span class="mi">10000000</span><span class="o">};</span>
        <span class="kt">char</span> <span class="n">categories</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="sc">'?'</span><span class="o">,</span> <span class="sc">'A'</span><span class="o">,</span> <span class="sc">'B'</span><span class="o">,</span> <span class="sc">'C'</span><span class="o">,</span> <span class="sc">'D'</span><span class="o">,</span> <span class="sc">'E'</span><span class="o">,</span> <span class="sc">'F'</span><span class="o">,</span> <span class="sc">'G'</span><span class="o">,</span> <span class="sc">'H'</span><span class="o">};</span>

        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">bornesSuperieures</span><span class="o">.</span><span class="na">length</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="o">.</span><span class="na">nbreHabitant</span> <span class="o">&gt;=</span> <span class="n">bornesSuperieures</span><span class="o">[</span><span class="n">i</span><span class="o">])</span>
                <span class="n">i</span><span class="o">++;</span>

        <span class="k">this</span><span class="o">.</span><span class="na">categorie</span> <span class="o">=</span> <span class="n">categories</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>

 
  <span class="o">}</span>
 
  <span class="c">/**</span>
<span class="c">   * Retourne la description de la ville</span>
<span class="c">   * @return description ville</span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">decrisToi</span><span class="o">(){</span>
      <span class="k">return</span> <span class="s">"\t"</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nomVille</span><span class="o">+</span><span class="s">" est une ville de "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nomPays</span><span class="o">+</span><span class="s">", elle comporte : "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nbreHabitant</span><span class="o">+</span>
              <span class="s">" =&gt; elle est donc de catégorie : "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">categorie</span><span class="o">;</span>
  <span class="o">}</span>
 
  <span class="c">/**</span>
<span class="c">   * Retourne une chaîne de caractères selon le résultat de la comparaison</span>
<span class="c">   * @param v1</span>
<span class="c">   *            objet Ville</span>
<span class="c">   * @return comparaison de deux ville</span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">comparer</span><span class="o">(</span><span class="n">Ville</span> <span class="n">v1</span><span class="o">){</span>
      <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
     
      <span class="k">if</span> <span class="o">(</span><span class="n">v1</span><span class="o">.</span><span class="na">getNombreHabitant</span><span class="o">()</span> <span class="o">&gt;</span> <span class="k">this</span><span class="o">.</span><span class="na">nbreHabitant</span><span class="o">)</span>
          <span class="n">str</span> <span class="o">=</span> <span class="n">v1</span><span class="o">.</span><span class="na">getNom</span><span class="o">()+</span><span class="s">" est une ville plus peuplée que "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nomVille</span><span class="o">;</span>
     
      <span class="k">else</span>
          <span class="n">str</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">nomVille</span><span class="o">+</span><span class="s">" est une ville plus peuplée que "</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">getNom</span><span class="o">();</span>
     
      <span class="k">return</span> <span class="n">str</span><span class="o">;</span>
     
  <span class="o">}</span>
  
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Pour simplifier, <strong><span class="courrier">this</span></strong> fait référence à l'objet courant ! </div><br>
<br>
Pour expliciter le fonctionnement du mot clé <span class="bleu"><span class="courrier">this</span></span>, prenons l'exemple de la méthode <strong><span class="courrier">comparer(Ville V1)</span></strong>.<br>
La méthode va s'appeler comme suit :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="syntax"><pre><span class="n">Ville</span> <span class="n">V</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"lyon"</span><span class="o">,</span> <span class="mi">654</span><span class="o">,</span> <span class="s">"france"</span><span class="o">);</span>
<span class="n">Ville</span> <span class="n">V2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"lille"</span><span class="o">,</span> <span class="mi">123</span><span class="o">,</span> <span class="s">"france"</span><span class="o">);</span>
 
<span class="n">V</span><span class="o">.</span><span class="na">comparer</span><span class="o">(</span><span class="n">V2</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Dans cette méthode, nous voulons comparer les nombres d'habitants des deux objets <span class="courrier">ville</span>. Pour accéder à la variable <span class="courrier">nbreHabitant</span> de l'objet <span class="courrier">V2</span>, il suffit d'utiliser la syntaxe <strong><span class="courrier">V2.getNombreHabitant()</span></strong> ; nous ferons donc référence à la propriété <strong><span class="courrier">nbreHabitant</span></strong> de l'objet <strong><span class="courrier">V2</span></strong>. <br>
Mais l'objet <span class="courrier">V</span>, lui, est l'objet appelant de cette méthode. Pour se servir de ses variables, on utilise alors <strong><span class="courrier">this.nbreHabitant</span></strong>, ce qui a pour effet de faire appel à la variable <strong><span class="courrier">nbreHabitant</span></strong> de l'objet appelant la méthode <strong><span class="courrier">comparer(Ville V)</span></strong>.<br>
<br>
Explicitons un peu ces trois méthodes.<br>
<br>
<h4>La méthode </h4><span class="courrier"><strong>categorie();</strong></span><br>
Elle ne prend aucun paramètre, et ne renvoie rien : elle se contente de mettre à jour la variable de classe <strong><span class="courrier">categorie</span></strong>. Elle regarde, par rapport au nombre d'habitants de l'objet appelant, utilisé grâce au mot clé <span class="bleu"><span class="courrier">this</span></span>, dans quelle tranche se trouve la ville en question. Selon le nombre d'habitants, le caractère renvoyé changera. Nous l'appelons lorsque nous construisons un objet <span class="violet"><span class="courrier">Ville</span></span> avec ou sans paramètre, mais aussi lorsque nous redéfinissons le nombre d'habitants : de cette manière, la catégorie est mise à jour automatiquement, sans faire appel à la méthode.<br>
Vous constaterez aussi que nous n'avons pas créé de mutateur pour la variable d'instance <strong><span class="courrier">categorie </span></strong>: nous avons en effet décidé que c'est à l'objet de gérer cette variable !<br>
<br>
<h4>La méthode </h4><strong><span class="courrier">decrisToi()</span></strong><br>
Celle-ci nous renvoie un objet de type <span class="italique">String</span>. Elle fait référence aux variables qui composent l'objet appelant la méthode, toujours grâce à <span class="bleu"><span class="courrier">this</span></span>, et nous renvoie donc une chaîne de caractères qui nous décrit l'objet, en énumérant ses composants.<br>
<br>
<h4>La méthode </h4><span class="courrier"><strong>comparer(Ville V1)</strong></span><br>
Elle prend une ville en paramètre, pour pouvoir comparer les variables <strong><span class="courrier">nbreHabitant</span></strong> de l'objet appelant la méthode, et de celui passé en paramètre pour nous dire laquelle est la plus peuplée !<br>
<br>
<div class="rmq information">Bien entendu, vous pouvez créer vos propres méthodes, avec leurs paramètres, leurs types, etc. Je ne vous oblige en rien à faire exactement les mêmes que moi...</div><br>
<br>
Les choses doivent vous sembler plus claires... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Si nous faisions un petit test... Essayez le code suivant dans votre méthode <span class="courrier">main</span> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="n">Ville</span> <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">();</span>
<span class="n">Ville</span> <span class="n">v1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"marseille"</span><span class="o">,</span> <span class="mi">1236</span><span class="o">,</span> <span class="s">"france"</span><span class="o">);</span>       
<span class="n">Ville</span> <span class="n">v2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"rio"</span><span class="o">,</span> <span class="mi">321654</span><span class="o">,</span> <span class="s">"brésil"</span><span class="o">);</span>
        
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n\n"</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">decrisToi</span><span class="o">());</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">decrisToi</span><span class="o">());</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v2</span><span class="o">.</span><span class="na">decrisToi</span><span class="o">()+</span><span class="s">"\n\n"</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v1</span><span class="o">.</span><span class="na">comparer</span><span class="o">(</span><span class="n">v2</span><span class="o">));</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui devrait vous donner :<br>
<div class="centre"><br>
<img src="./java_files/103153.jpg" alt="Image utilisateur"></div><br>
<br>
Je viens d'avoir une idée ! Et si nous essayons de savoir combien de villes nous avons créé ?<br>
Comment faire ? <br>
Avec une variable de classe ! 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10338">Les variables de classes</h2>
		<div class="ss_part_texte">
		Comme je vous le disais au début de ce chapitre, il y a plusieurs types de variables dans une classe.<br>
Nous avons vu les variables d'instances qui forment la carte d'identité d'un objet et maintenant, voici les variables de classes.<br>
<br>
Celles-ci peuvent être très pratiques. Dans notre exemple, nous allons pouvoir compter le nombre d'instances de notre classe <strong><span class="violet"><span class="courrier">Ville</span></span></strong>, mais vous pouvez en utiliser pour d'autres choses (un taux de TVA dans une classe qui calcule le prix TTC, par exemple).<br>
<br>
La particularité de ce type de variable, c'est qu'elles seront communes à toutes les instances de la classe !  <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
<br>
Créons sans plus attendre notre compteur d'instance. Il s'agira d'une variable de type <strong><span class="violet"><span class="courrier">int</span></span></strong> que nous appellerons <strong><span class="courrier">nbreInstance</span></strong> ; celle-ci sera <strong><span class="bleu"><span class="courrier">public</span></span></strong> et nous ferons aussi son homologue en <strong><span class="violet"><span class="courrier">private</span></span></strong> : appellons-la <strong><span class="courrier">nbreInstanceBis</span></strong> (un accesseur sera nécessaire pour accéder à cette dernière). <br>
Pour qu'une variable soit une variable de classe, elle doit être précédée du mot clé <strong><span class="violet"><span class="courrier">static</span></span></strong>. Ce qui nous donnerait dans notre classe <strong><span class="courrier">Ville</span></strong> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Ville</span> <span class="o">{</span>
 
  <span class="cm">/**</span>
<span class="cm">   * Variables publiques qui comptent les instances</span>
<span class="cm">   */</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">nbreInstance</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
  <span class="cm">/**</span>
<span class="cm">   * Variable privée qui comptera aussi les instances</span>
<span class="cm">   */</span>
  <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">nbreInstanceBis</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        
  <span class="cm">/**</span>
<span class="cm">   * Stocke le nom de notre ville</span>
<span class="cm">   */</span>
  <span class="kd">private</span> <span class="n">String</span> <span class="n">nomVille</span><span class="o">;</span>
  <span class="cm">/**</span>
<span class="cm">   * Stocke le nom du pays de notre ville</span>
<span class="cm">   */</span>
  <span class="kd">private</span> <span class="n">String</span> <span class="n">nomPays</span><span class="o">;</span>
  <span class="cm">/**</span>
<span class="cm">   * Stocke le nombre d'habitants de notre ville</span>
<span class="cm">   */</span>
  <span class="kd">private</span> <span class="kt">int</span> <span class="n">nbreHabitant</span><span class="o">;</span>
  <span class="cm">/**</span>
<span class="cm">   * Stocke le type de notre ville</span>
<span class="cm">   */</span>
  <span class="kd">private</span> <span class="kt">char</span> <span class="n">categorie</span><span class="o">;</span>
  
  <span class="cm">/**</span>
<span class="cm">   * Constructeur par défaut</span>
<span class="cm">   */</span>
  <span class="kd">public</span> <span class="nf">Ville</span><span class="o">(){</span>
          <span class="c1">//On incrémente nos variables à chaque appel aux constructeurs</span>
          <span class="n">nbreInstance</span><span class="o">++;</span>
          <span class="n">nbreInstanceBis</span><span class="o">++;</span>
          
          <span class="n">nomVille</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
          <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
          <span class="k">this</span><span class="o">.</span><span class="na">setCategorie</span><span class="o">();</span>
  <span class="o">}</span>
 
  <span class="cm">/**</span>
<span class="cm">   * Constructeur d'initialisation</span>
<span class="cm">   * @param pNom </span>
<span class="cm">   *                    Nom de la Ville</span>
<span class="cm">   *  @param pNbre</span>
<span class="cm">   *                    Nombre d'habitants</span>
<span class="cm">   *  @param pPays</span>
<span class="cm">   *                    Nom du pays</span>
<span class="cm">   */</span>
  <span class="kd">public</span> <span class="nf">Ville</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pNbre</span><span class="o">,</span> <span class="n">String</span> <span class="n">pPays</span><span class="o">)</span>
  <span class="o">{</span>  
        <span class="c1">//On incrémente nos variables à chaque appel aux constructeurs</span>
          <span class="n">nbreInstance</span><span class="o">++;</span>
          <span class="n">nbreInstanceBis</span><span class="o">++;</span>
          
          <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
          <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">pNbre</span><span class="o">;</span>
          <span class="k">this</span><span class="o">.</span><span class="na">setCategorie</span><span class="o">();</span>
  <span class="o">}</span>
        
  
  <span class="c1">//*****************************************************************************************</span>
  <span class="c1">//                                    ACCESSEURS</span>
  <span class="c1">//*****************************************************************************************</span>
  
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getNombreInstanceBis</span><span class="o">()</span>
  <span class="o">{</span>
          <span class="k">return</span> <span class="n">nbreInstanceBis</span><span class="o">;</span>
  <span class="o">}</span>
  
  <span class="cm">/**</span>
<span class="cm">   * Retourne le nom de la ville</span>
<span class="cm">   * @return le nom de la ville</span>
<span class="cm">   */</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getNom</span><span class="o">()</span>
  <span class="o">{</span>
          <span class="k">return</span> <span class="n">nomVille</span><span class="o">;</span>
  <span class="o">}</span>
  
  <span class="cm">/**</span>
<span class="cm">   * Retourne le nom du pays</span>
<span class="cm">   * @return le nom du pays</span>
<span class="cm">   */</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getNomPays</span><span class="o">()</span>
  <span class="o">{</span>
          <span class="k">return</span> <span class="n">nomPays</span><span class="o">;</span>
  <span class="o">}</span>
  
  <span class="cm">/**</span>
<span class="cm">   * Retourne le nombre d'habitants</span>
<span class="cm">   * @return nombre d'habitants</span>
<span class="cm">   */</span>
 <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNombreHabitant</span><span class="o">()</span>
 <span class="o">{</span>
         <span class="k">return</span> <span class="n">nbreHabitant</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="cm">/**</span>
<span class="cm">  * Retourne la catégorie de la ville</span>
<span class="cm">  * @return catégorie de la ville  </span>
<span class="cm">  */</span>
 <span class="kd">public</span> <span class="kt">char</span> <span class="nf">getCategorie</span><span class="o">()</span>
 <span class="o">{</span>
         <span class="k">return</span> <span class="n">categorie</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="c1">//*****************************************************************************************</span>
 <span class="c1">//                                    MUTATEURS</span>
 <span class="c1">//*****************************************************************************************</span>
 
 <span class="cm">/**</span>
<span class="cm">  * Définit le nom de la ville</span>
<span class="cm">  * @param pNom</span>
<span class="cm">  *             nom de la ville</span>
<span class="cm">  */</span>
 <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNom</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">)</span>
 <span class="o">{</span>
          <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="cm">/**</span>
<span class="cm">  * Définit le nom du pays</span>
<span class="cm">  * @param pPays</span>
<span class="cm">  *             nom du pays</span>
<span class="cm">  */</span>
 <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNomPays</span><span class="o">(</span><span class="n">String</span> <span class="n">pPays</span><span class="o">)</span>
 <span class="o">{</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="cm">/**</span>
<span class="cm">  * Définit le nombre d'habitants</span>
<span class="cm">  * @param nbre</span>
<span class="cm">  *             nombre d'habitants</span>
<span class="cm">  */</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNombreHabitant</span><span class="o">(</span><span class="kt">int</span> <span class="n">nbre</span><span class="o">)</span>
<span class="o">{</span>
         <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">nbre</span><span class="o">;</span>
         <span class="k">this</span><span class="o">.</span><span class="na">setCategorie</span><span class="o">();</span>
<span class="o">}</span>
 
 
 
<span class="c1">//*****************************************************************************************</span>
<span class="c1">//                                    METHODES DE CLASSE</span>
<span class="c1">//*****************************************************************************************</span>
 
 
 
  <span class="cm">/**</span>
<span class="cm">   * Définit la catégorie de la ville</span>
<span class="cm">   */</span>
  <span class="kd">private</span> <span class="kt">void</span> <span class="nf">setCategorie</span><span class="o">()</span> <span class="o">{</span>
 
      
      <span class="kt">int</span> <span class="n">bornesSuperieures</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1000</span><span class="o">,</span> <span class="mi">10000</span><span class="o">,</span> <span class="mi">100000</span><span class="o">,</span> <span class="mi">500000</span><span class="o">,</span> <span class="mi">1000000</span><span class="o">,</span> <span class="mi">5000000</span><span class="o">,</span> <span class="mi">10000000</span><span class="o">};</span>
        <span class="kt">char</span> <span class="n">categories</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="sc">'?'</span><span class="o">,</span> <span class="sc">'A'</span><span class="o">,</span> <span class="sc">'B'</span><span class="o">,</span> <span class="sc">'C'</span><span class="o">,</span> <span class="sc">'D'</span><span class="o">,</span> <span class="sc">'E'</span><span class="o">,</span> <span class="sc">'F'</span><span class="o">,</span> <span class="sc">'G'</span><span class="o">,</span> <span class="sc">'H'</span><span class="o">};</span>

        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">bornesSuperieures</span><span class="o">.</span><span class="na">length</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="o">.</span><span class="na">nbreHabitant</span> <span class="o">&gt;=</span> <span class="n">bornesSuperieures</span><span class="o">[</span><span class="n">i</span><span class="o">])</span>
                <span class="n">i</span><span class="o">++;</span>

        <span class="k">this</span><span class="o">.</span><span class="na">categorie</span> <span class="o">=</span> <span class="n">categories</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>

 
  <span class="o">}</span>
 
  <span class="cm">/**</span>
<span class="cm">   * Retourne la description de la ville</span>
<span class="cm">   * @return description ville</span>
<span class="cm">   */</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">decrisToi</span><span class="o">(){</span>
      <span class="k">return</span> <span class="s">"\t"</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nomVille</span><span class="o">+</span><span class="s">" est une ville de "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nomPays</span><span class="o">+</span><span class="s">", elle comporte : "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nbreHabitant</span><span class="o">+</span>
              <span class="s">" =&gt; elle est donc de catégorie : "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">categorie</span><span class="o">;</span>
  <span class="o">}</span>
 
  <span class="cm">/**</span>
<span class="cm">   * Retourne une chaîne de caractères selon le résultat de la comparaison</span>
<span class="cm">   * @param v1</span>
<span class="cm">   *            objet Ville</span>
<span class="cm">   * @return comparaison de deux ville</span>
<span class="cm">   */</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">comparer</span><span class="o">(</span><span class="n">Ville</span> <span class="n">v1</span><span class="o">){</span>
      <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
     
      <span class="k">if</span> <span class="o">(</span><span class="n">v1</span><span class="o">.</span><span class="na">getNombreHabitant</span><span class="o">()</span> <span class="o">&gt;</span> <span class="k">this</span><span class="o">.</span><span class="na">nbreHabitant</span><span class="o">)</span>
          <span class="n">str</span> <span class="o">=</span> <span class="n">v1</span><span class="o">.</span><span class="na">getNom</span><span class="o">()+</span><span class="s">" est une ville plus peuplée que "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nomVille</span><span class="o">;</span>
     
      <span class="k">else</span>
          <span class="n">str</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">nomVille</span><span class="o">+</span><span class="s">" est une ville plus peuplée que "</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">getNom</span><span class="o">();</span>
     
      <span class="k">return</span> <span class="n">str</span><span class="o">;</span>
     
  <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous avez dû remarquer que l'accesseur de notre variable de classe déclarée privée est aussi déclaré <strong><span class="violet"><span class="courrier">static</span></span></strong>, et ceci est une règle !<br>
<br>
<div class="rmq information">Toutes les méthodes de classes n'utilisant que des variables de classes doivent être déclarées <strong><span class="gros"><span class="courrier">static</span></span></strong> ! On les appelle des <strong>méthodes de classes</strong> car elles sont globales à toutes vos instances ! <br>
Par contre ceci n'est plus vrai si une méthode utilise des variables d'instances et des variables de classes...</div><br>
<br>
Et maintenant, si vous testez le code suivant, vous allez voir l'utilité des variables des classes :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">Ville</span> <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">();</span>
                
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre d'instances de la classe Ville est : "</span> <span class="o">+</span> <span class="n">Ville</span><span class="o">.</span><span class="na">nbreInstance</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre d'instances de la classe Ville est : "</span> <span class="o">+</span> <span class="n">Ville</span><span class="o">.</span><span class="na">getNombreInstanceBis</span><span class="o">());</span>
                        
<span class="n">Ville</span> <span class="n">v1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"marseille"</span><span class="o">,</span> <span class="mi">1236</span><span class="o">,</span> <span class="s">"france"</span><span class="o">);</span>
        
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre d'instances de la classe Ville est : "</span> <span class="o">+</span> <span class="n">Ville</span><span class="o">.</span><span class="na">nbreInstance</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre d'instances de la classe Ville est : "</span> <span class="o">+</span> <span class="n">Ville</span><span class="o">.</span><span class="na">getNombreInstanceBis</span><span class="o">());</span>
                
<span class="n">Ville</span> <span class="n">v2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"rio"</span><span class="o">,</span> <span class="mi">321654</span><span class="o">,</span> <span class="s">"brésil"</span><span class="o">);</span>
        
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre d'instances de la classe Ville est : "</span> <span class="o">+</span> <span class="n">Ville</span><span class="o">.</span><span class="na">nbreInstance</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nombre d'instances de la classe Ville est : "</span> <span class="o">+</span> <span class="n">Ville</span><span class="o">.</span><span class="na">getNombreInstanceBis</span><span class="o">());</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat : <br>
<div class="centre"><img src="./java_files/104657.jpg" alt="Image utilisateur"></div><br>
<br>
Vous voyez que le nombre augmente à chaque instanciation ! Et je suppose que le fait que j'ai utilisé le nom de classe <strong><span class="courrier">Ville</span></strong> pour l'appel à nos variables de classes a dû vous surprendre. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Mais vous deviez savoir ceci... <br>
<div class="rmq information">Il vous faut savoir aussi que vous auriez également utilisé n'importe quelle instance pour faire ces appels. Vous auriez eu le même résultat - peu importe l'instance choisie - car cette donnée ne dépend pas de l'instance, mais de la classe elle-même.  <img src="./java_files/hihi.png" alt="^^" class="smilies"> </div><br>
<br>
Avant la fin de chapitre, j'ai une révélation à vous faire...  <img src="./java_files/huh.png" alt=":o" class="smilies"> 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10345">Astuce Eclipse</h2>
		<div class="ss_part_texte">
		Voici une astuce qui, je pense, va vous simplifier la vie et quelques minutes de codage...<br>
Je vous vois déjà en train de vous imaginer coder une classe magnifique avec une centaine de variables d'instances ainsi qu'une dizaine de variables de classes, et d'un seul coup... <br>
<div class="centre"><strong><span class="gros">BOUM ! !</span></strong></div>Vous tombez à la renverse lorsque vous devez faire tous les accesseurs de cette fabuleuse classe !<br>
<br>
Voici quelque chose qui va vous plaire.<br>
<div class="rmq information"><strong><span class="gros">Eclipse vous fait les accesseurs automatiquement !</span></strong></div><br>
Bon : il faut tout de même créer toutes les variables au préalable, mais bon...<br>
<br>
Nous allons prendre notre classe comme exemple.<br>
Conservez toutes les déclarations de variables d'instances et de classes, et effacez tous les accesseurs (mutateurs compris).<br>
<br>
Ensuite, rendez-vous dans le menu <span class="impact">Source</span> et choisissez l'option <span class="impact">Generate Getters and Setters</span>. Eclipse vous propose alors la liste des variables présentes dans la classe <strong><span class="courrier">Ville</span></strong>.<br>
<br>
<div class="centre"><img src="./java_files/103164.jpg" alt="Image utilisateur"></div><br>
<br>
Ici, j'ai coché ce qui m'intéressait et j'ai ensuite cliqué sur <span class="impact">OK</span>. Mes accesseurs sont tout prêts !  <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"> <br>
Alors, j'suis gentil, non ? <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
<div class="rmq erreur">Comme vous pouvez le constater, Eclispe génère des accesseurs différents de ceux que nous avions faits aux préalables... Pensez-donc à mettre à jours votre méthode <strong><span class="courrier">main</span></strong> si vous voulez faire des tests... <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
<br>
Je profite de cet intermède Eclipse pour vous expliquer pourquoi j'ai mis autant de commentaires autour de mes variables et de mes méthodes.<br>
<div class="rmq information">Par contre, ceci concerne les personnes qui ont téléchargé le <strong>JDK</strong> lors de la première partie !</div><br>
Comme je l'ai mentionné dans la première partie, il y a une troisième syntaxe de commentaires et vous venez de la voir tout au long de ce chapitre. Il s'agit de commentaires <strong><span class="bleu">javadoc</span></strong> ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Cette syntaxe est quasi identique aux commentaires multilignes à une différence près : la présence d'une deuxième <strong><span class="gros">*</span></strong> au début du commentaire.<br>
Vous avez dû constater que la couleur du commentaire était différente.<br>
<ul>
<li>Commentaire standard : commentaire de couleur verte.</li>
<li>Commentaire javadoc : commentaire de couleur bleue.</li>
</ul><br>
<br>
<div class="rmq question">À quoi ça sert ?</div><br>
Tout simplement à documenter vos programmes et surtout à pouvoir générer une documentation automatiquement. Dans Eclipse, il vous suffit d'aller dans <span class="impact">Project</span> et de cliquer sur <span class="impact">Generate Javadoc</span>.<br>
Vous devez avoir une popup comme ceci :<br>
<div class="centre"><img src="./java_files/103166.jpg" alt="Image utilisateur"></div><br>
<br>
Si la commande Javadoc n'est pas renseignée, il vous faut aller chercher, dans le répertoire <strong><span class="italique"><span class="bleu">bin</span></span></strong> de votre JDK, le fichier <span class="bleu">javadoc.exe</span> (comme sur la capture d'écran, chez moi c'est dans <span class="bleu">C:\SUN\SDK\jdk\bin\javadoc.exe</span>).<br>
Il ne vous reste plus qu'à cliquer sur <span class="impact">Finish</span> et à tout approuver.<br>
<br>
Vous avez maintenant, dans votre dossier de code source, un dossier <strong><span class="bleu">doc</span></strong>, où se trouve toute la javadoc de votre projet. Double cliquez sur <strong><span class="italique"><span class="bleu">index.html</span></span></strong> dans ce dossier, et voilà ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Pour les personnes ayant essayé la compilation en ligne de commande, il vous suffit d'aller dans votre dossier de source Java (là où se trouvent vos fichier <span class="bleu">.java</span>) et de taper la commande :<br>
<span class="code">Code : Bash - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 bash"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre>javadoc Ville.java
</pre></div>
</td></tr></tbody></table></div>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10344">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		Après tout ceci, un petit topo ne fera pas de mal...<br>
<br>
<ul>
<li>Une classe permet de définir des objets. Ceux-ci ont des attributs (variable(s) d'instances) et des méthodes (méthodes de classes + accesseurs).</li>
<li>Les objets permettent d'encapsuler du code et des données.</li>
<li>Une classe, par défaut, est déclarée <strong><span class="violet"><span class="courrier">public</span></span></strong>.</li>
<li><strong><span class="rouge">Le ou les constructeurs d'une classe doivent porter le même nom que la classe, et pas de type de retour !</span></strong></li>
<li>Il est recommandé de déclarer ses variables d'instance <strong><span class="violet"><span class="courrier">private</span></span></strong>.</li>
<li>Dans une classe, on accède aux variables de celle-ci grâce au mot clé <span class="violet"><span class="courrier"><strong>this</strong></span></span>.</li>
<li>Une variable de classe est une variable devant être déclarée <strong><span class="violet"><span class="courrier">static</span></span></strong>.</li>
<li><strong><span class="rouge">Les méthodes n'utilisant que des variables de classes doivent elles aussi être déclarées <span class="courrier">static</span></span></strong>.</li>
<li>On instancie un nouvel objet grâce au mot clé <strong><span class="violet"><span class="courrier">new</span></span></strong>.</li>
<li>L'ordre des paramètres passé dans le constructeur <strong>doit être respecté</strong>.</li>
<li>Eclipse vous aide à développer vos applications.</li>
</ul><br>
<br>
Voilà ! Vous venez d'apercevoir les méandres de la programmation orientée objet...<br>
Je suis conscient que ce chapitre fut très riche en nouveautés, vocabulaire, concepts et méthodologie... mais n'est-ce pas ce que je vous avait dit ? <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
Maintenant, ce que je vous propose, c'est un petit QCM digestif ! Ça passe toujours mieux après le digeo !
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Vous venez de voir l'un des chapitres les plus conséquents de cette partie...<br>
Normalement, vous pouvez désormais créer et gérer des objets... <img src="./java_files/heureux.png" alt=":D" class="smilies">  Mais... <span class="italique">(parce qu'il y a un mais)</span>... vous allez voir, au fil de la partie suivante, que la programmation orientée objet offre tout un éventail de possibilités. L'une des plus importantes n'est autre que la notion d'<strong><span class="italique"><span class="gros">héritage</span></span></strong>.<br>
<br>
Sans perdre une seconde, je propose à ceux qui se sentent d'attaque de passer à la suite !
	</div>
	
	<hr>
	<h1 id="chap_10355">L'héritage !</h1>
	<div id="chap_intro">
	Je vous arrête tout de suite... Vous ne toucherez rien ! <img src="./java_files/pirate.png" alt=":pirate:" class="smilies"> <br>
Pas de rapport d'argent entre nous... Non, la notion d'héritage en programmation est toute autre, quoique ressemblante à celle que vous connaissez. C'est l'un des fondements de la programmation orientée objet !<br>
<br>
Imaginons que dans le programme fait précédemment, nous voulions créer un autre type d'objet :<br>
des objets <span class="bleu"><span class="courrier">Capitale</span></span>.<br>
Ceux-ci ne seront ni plus ni moins que des objets <strong><span class="courrier">Ville</span></strong> avec un paramètre en plus... Disons un <strong><span class="italique">président</span></strong> !<br>
<br>
Et donc, au moment de créer votre classe <span class="bleu"><span class="courrier">Capitale</span></span>, au lieu de tout redéfinir, nous allons dire que celle-ci est héritée de <span class="bleu"><span class="courrier">Ville</span></span>. Trêve de bavardage ! À l'assaut !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10354">La notion d'héritage</h2>
		<div class="ss_part_texte">
		Comme je vous l'ai déjà dit lors de l'introduction, la notion d'héritage est l'un des fondements de la programmation orientée objet. Grâce à elle, nous pourrons créer des classes héritées (appelées aussi <span class="italique">classes dérivées</span>) de nos classes mères (appelées aussi <span class="italique">classes de base</span>).<br>
Nous pourrons créer autant de classes dérivées, par rapport à notre classe de base, que nous le souhaitons. Nous pourrons aussi nous servir d'une classe dérivée comme d'une classe de base pour créer une autre classe dérivée...<br>
<br>
Ce que vous devez savoir aussi, c'est que la notion d'héritage est l'un des piliers de la programmation événementielle (autre nom de <span class="italique">programmation graphique</span>). Ceci sera abordé dans la troisième partie de ce tuto. <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
<br>
Pour l'instant, restons dans la programmation procédurale !<br>
<br>
Reprenons l'exemple dont je vous parlais dans l'introduction. Nous allons donc créer une nouvelle classe, nommée <span class="bleu"><span class="courrier">Capitale</span></span> <span class="rouge">héritée</span> de <span class="bleu"><span class="courrier">Ville</span></span>.<br>
Vous vous rendrez vite compte que les objets <span class="courrier">Capitale</span> auront tous les attributs et méthodes associés des objets <span class="courrier">Ville</span> !<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="kd">class</span> <span class="nc">Capitale</span> <span class="kd">extends</span> <span class="n">Ville</span> <span class="o">{</span>
  
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
C'est le mot-clé <span class="gros"><span class="bleu"><span class="courrier">extends</span></span></span> qui informe notre application que la classe <span class="courrier">Capitale</span> est héritée de <span class="violet"><strong><span class="courrier">Ville</span></strong></span>. Pour vous le prouver, essayez ce morceau de code dans votre <span class="courrier">main</span> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="syntax"><pre><span class="n">Capitale</span> <span class="n">cap</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Capitale</span><span class="o">();</span>
 <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n\n"</span><span class="o">+</span><span class="n">cap</span><span class="o">.</span><span class="na">decrisToi</span><span class="o">());</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous devriez avoir ceci :<br>
<br>
<div class="centre"><img src="./java_files/103170.jpg" alt="Image utilisateur"></div><br>
<br>
Ceci est bien la preuve que notre objet <strong><span class="violet"><span class="courrier">Capitale</span></span></strong> possède les avantages de notre objet <strong><span class="violet"><span class="courrier">Ville</span></span></strong>. Les objets hérités peuvent accéder à toutes les méthodes <span class="violet"><strong><span class="courrier">public</span></strong></span> de leur classe mère, ici la méthode <strong><span class="courrier">decrisToi()</span></strong>.<br>
Dans ce cas rudimentaire, notre objet <strong><span class="courrier">Capitale</span></strong> ne possède que le constructeur par défaut et les méthodes associées. <br>
<br>
En fait, lorsque vous déclarez une classe, si vous ne spécifiez pas de constructeur, la <strong>JVM</strong> créera au moment de l'interprétation le constructeur par défaut. C'est le cas ici. De plus, notre classe <strong><span class="courrier">Capitale</span></strong> hérite de la classe <strong><span class="courrier">Ville</span></strong>, ceci a pour effet que le constructeur de notre objet appelle, de façon tacite, le constructeur de la classe mère.<br>
C'est pour cela que les variables d'instances ont pu être initialisées ! Par contre, dans notre classe <strong><span class="courrier">Capitale</span></strong>, nous ne pouvons pas utiliser directement les attributs de la classe <strong><span class="courrier">Ville</span></strong>.<br>
<br>
Essayez ceci dans votre classe : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Capitale</span> <span class="kd">extends</span> <span class="n">Ville</span><span class="o">{</span>
 
   <span class="kd">public</span> <span class="nf">Capitale</span><span class="o">(){</span>
      <span class="k">this</span><span class="o">.</span><span class="na">nomVille</span> <span class="o">=</span> <span class="s">"toto"</span><span class="o">;</span>
   <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous allez avoir une belle erreur de compilation !<br>
<div class="rmq question">Pourquoi ?</div><br>
Tout simplement parce les variables de la classe <strong><span class="courrier">Ville</span></strong> sont déclarés <strong><span class="violet"><span class="courrier">private</span></span></strong>.<br>
Comme seules les méthodes et les variables déclarées <strong><span class="violet"><span class="courrier">public</span></span></strong> peuvent être utilisées dans une classe héritée, le compilateur rejette votre demande lorsque vous tentez d'accéder à des ressources privées d'une classe mère !<br>
<div class="rmq question">Comment y remédier tout en gardant la protection sur les variables de ma classe mère ?</div><br>
C'est ici que je vais vous apprendre un nouveau mot clé : <strong><span class="violet"><span class="courrier">protected</span></span></strong>.<br>
En remplaçant la déclaration des variables et des méthodes privées de la classe <strong><span class="courrier">Ville</span></strong> en <strong><span class="violet"><span class="courrier">protected</span></span></strong>, cela aura pour effet de toujours protéger l'accès à celles-ci depuis du code utilisant un objet <strong><span class="courrier">Ville</span></strong> ; mais cela permet aux classes qui héritent de cette dernière d'y avoir accès !<br>
Donc, une fois toutes les variables et méthodes privées de la classe mère re-déclarées en <strong><span class="violet"><span class="courrier">protected</span></span></strong>, notre objet <strong><span class="courrier">Capitale</span></strong> aura accès à celles-ci !  <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Ainsi, voici votre classe <strong><span class="courrier">Ville</span></strong> revue et corrigée : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Ville</span> <span class="o">{</span>
 
  <span class="c">/**</span>
<span class="c">   * Variable publique compteur d'instances </span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">nbreInstance</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Variable privée compteur d'instances</span>
<span class="c">   */</span>
  <span class="kd">protected</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">nbreInstanceBis</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        
  <span class="c">/**</span>
<span class="c">   * Stocke le nom de notre ville</span>
<span class="c">   */</span>
  <span class="kd">protected</span> <span class="n">String</span> <span class="n">nomVille</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le nom du pays de notre ville</span>
<span class="c">   */</span>
  <span class="kd">protected</span> <span class="n">String</span> <span class="n">nomPays</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le nombre d'habitants de notre ville</span>
<span class="c">   */</span>
  <span class="kd">protected</span> <span class="kt">int</span> <span class="n">nbreHabitant</span><span class="o">;</span>
  <span class="c">/**</span>
<span class="c">   * Stocke le type de notre ville</span>
<span class="c">   */</span>
  <span class="kd">protected</span> <span class="kt">char</span> <span class="n">categorie</span><span class="o">;</span>
  
  <span class="c">/**</span>
<span class="c">   * Constructeur par défaut</span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="nf">Ville</span><span class="o">(){</span>
          <span class="c">//On incrémente nos variables à chaque appel au constructeur</span>
          <span class="n">nbreInstance</span><span class="o">++;</span>
          <span class="n">nbreInstanceBis</span><span class="o">++;</span>
          
          <span class="n">nomVille</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="s">"Inconnu"</span><span class="o">;</span>
          <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
          <span class="k">this</span><span class="o">.</span><span class="na">setCategorie</span><span class="o">();</span>
  <span class="o">}</span>
 
  <span class="c">/**</span>
<span class="c">   * Constructeur d'initialisation</span>
<span class="c">   * @param pNom </span>
<span class="c">   *                    Nom de la Ville</span>
<span class="c">   *  @param pNbre</span>
<span class="c">   *                    Nombre d'habitants</span>
<span class="c">   *  @param pPays</span>
<span class="c">   *                    Nom du pays</span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="nf">Ville</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pNbre</span><span class="o">,</span> <span class="n">String</span> <span class="n">pPays</span><span class="o">)</span>
  <span class="o">{</span>  
          
          <span class="n">nbreInstance</span><span class="o">++;</span>
          <span class="n">nbreInstanceBis</span><span class="o">++;</span>
          
          <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
          <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">pNbre</span><span class="o">;</span>
          <span class="k">this</span><span class="o">.</span><span class="na">setCategorie</span><span class="o">();</span>
  <span class="o">}</span>
        
  
  <span class="c">//*****************************************************************************************</span>
  <span class="c">//                                    ACCESSEURS</span>
  <span class="c">//*****************************************************************************************</span>
  
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getNombreInstanceBis</span><span class="o">()</span>
  <span class="o">{</span>
          <span class="k">return</span> <span class="n">nbreInstanceBis</span><span class="o">;</span>
  <span class="o">}</span>
  
  <span class="c">/**</span>
<span class="c">   * Retourne le nom de la ville</span>
<span class="c">   * @return le nom de la ville</span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getNom</span><span class="o">()</span>
  <span class="o">{</span>
          <span class="k">return</span> <span class="n">nomVille</span><span class="o">;</span>
  <span class="o">}</span>
  
  <span class="c">/**</span>
<span class="c">   * Retourne le nom du pays</span>
<span class="c">   * @return le nom du pays</span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getNomPays</span><span class="o">()</span>
  <span class="o">{</span>
          <span class="k">return</span> <span class="n">nomPays</span><span class="o">;</span>
  <span class="o">}</span>
  
  <span class="c">/**</span>
<span class="c">   * Retourne le nombre d'habitants</span>
<span class="c">   * @return nombre d'habitants</span>
<span class="c">   */</span>
 <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNombreHabitant</span><span class="o">()</span>
 <span class="o">{</span>
         <span class="k">return</span> <span class="n">nbreHabitant</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="c">/**</span>
<span class="c">  * Retourne la catégorie de la ville</span>
<span class="c">  * @return catégorie de la ville  </span>
<span class="c">  */</span>
 <span class="kd">public</span> <span class="kt">char</span> <span class="nf">getCategorie</span><span class="o">()</span>
 <span class="o">{</span>
         <span class="k">return</span> <span class="n">categorie</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="c">//*****************************************************************************************</span>
 <span class="c">//                                    MUTATEURS</span>
 <span class="c">//*****************************************************************************************</span>
 
 <span class="c">/**</span>
<span class="c">  * Définit le nom de la ville</span>
<span class="c">  * @param pNom</span>
<span class="c">  *             nom de la ville</span>
<span class="c">  */</span>
 <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNom</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">)</span>
 <span class="o">{</span>
          <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="c">/**</span>
<span class="c">  * Définit le nom du pays</span>
<span class="c">  * @param pPays</span>
<span class="c">  *             nom du pays</span>
<span class="c">  */</span>
 <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNomPays</span><span class="o">(</span><span class="n">String</span> <span class="n">pPays</span><span class="o">)</span>
 <span class="o">{</span>
          <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
 <span class="o">}</span>
 
 <span class="c">/**</span>
<span class="c">  * Définit le nombre d'habitants</span>
<span class="c">  * @param nbre</span>
<span class="c">  *             nombre d'habitants</span>
<span class="c">  */</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNombreHabitant</span><span class="o">(</span><span class="kt">int</span> <span class="n">nbre</span><span class="o">)</span>
<span class="o">{</span>
         <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">nbre</span><span class="o">;</span>
         <span class="k">this</span><span class="o">.</span><span class="na">setCategorie</span><span class="o">();</span>
<span class="o">}</span>
 
 
 
<span class="c">//*****************************************************************************************</span>
<span class="c">//                                    METHODES DE CLASSE</span>
<span class="c">//*****************************************************************************************</span>
 
 
 
  <span class="c">/**</span>
<span class="c">   * Définit la catégorie de la ville</span>
<span class="c">   */</span>
  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">setCategorie</span><span class="o">()</span> <span class="o">{</span>
 
      
      <span class="kt">int</span> <span class="n">bornesSuperieures</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1000</span><span class="o">,</span> <span class="mi">10000</span><span class="o">,</span> <span class="mi">100000</span><span class="o">,</span> <span class="mi">500000</span><span class="o">,</span> <span class="mi">1000000</span><span class="o">,</span> <span class="mi">5000000</span><span class="o">,</span> <span class="mi">10000000</span><span class="o">};</span>
        <span class="kt">char</span> <span class="n">categories</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="sc">'?'</span><span class="o">,</span> <span class="sc">'A'</span><span class="o">,</span> <span class="sc">'B'</span><span class="o">,</span> <span class="sc">'C'</span><span class="o">,</span> <span class="sc">'D'</span><span class="o">,</span> <span class="sc">'E'</span><span class="o">,</span> <span class="sc">'F'</span><span class="o">,</span> <span class="sc">'G'</span><span class="o">,</span> <span class="sc">'H'</span><span class="o">};</span>

        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">bornesSuperieures</span><span class="o">.</span><span class="na">length</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="o">.</span><span class="na">nbreHabitant</span> <span class="o">&gt;=</span> <span class="n">bornesSuperieures</span><span class="o">[</span><span class="n">i</span><span class="o">])</span>
                <span class="n">i</span><span class="o">++;</span>

        <span class="k">this</span><span class="o">.</span><span class="na">categorie</span> <span class="o">=</span> <span class="n">categories</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>

 
  <span class="o">}</span>
 
  <span class="c">/**</span>
<span class="c">   * Retourne la description de la ville</span>
<span class="c">   * @return description ville</span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">decrisToi</span><span class="o">(){</span>
      <span class="k">return</span> <span class="s">"\t"</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nomVille</span><span class="o">+</span><span class="s">" est une ville de "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nomPays</span><span class="o">+</span><span class="s">", elle comporte : "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nbreHabitant</span><span class="o">+</span>
              <span class="s">" =&gt; elle est donc de catégorie : "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">categorie</span><span class="o">;</span>
  <span class="o">}</span>
 
  <span class="c">/**</span>
<span class="c">   * Retourne une chaîne de caractères selon le résultat de la comparaison</span>
<span class="c">   * @param v1</span>
<span class="c">   *            objet Ville</span>
<span class="c">   * @return comparaison de deux ville</span>
<span class="c">   */</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">comparer</span><span class="o">(</span><span class="n">Ville</span> <span class="n">v1</span><span class="o">){</span>
      <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">();</span>
     
      <span class="k">if</span> <span class="o">(</span><span class="n">v1</span><span class="o">.</span><span class="na">getNombreHabitant</span><span class="o">()</span> <span class="o">&gt;</span> <span class="k">this</span><span class="o">.</span><span class="na">nbreHabitant</span><span class="o">)</span>
          <span class="n">str</span> <span class="o">=</span> <span class="n">v1</span><span class="o">.</span><span class="na">getNom</span><span class="o">()+</span><span class="s">" est une ville plus peuplée que "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nomVille</span><span class="o">;</span>
     
      <span class="k">else</span>
          <span class="n">str</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">nomVille</span><span class="o">+</span><span class="s">" est une ville plus peuplée que "</span><span class="o">+</span><span class="n">v1</span><span class="o">.</span><span class="na">getNom</span><span class="o">();</span>
     
      <span class="k">return</span> <span class="n">str</span><span class="o">;</span>
     
  <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
Un point important avant de continuer.<br>
<div class="rmq erreur"><span class="gros">Contrairement au C++, Java ne gère pas les héritages multiples : une classe dérivée (ou encore <span class="italique">classe fille</span>) ne peut hériter que d'une seule classe mère !</span></div><br>
Vous n'aurez donc <span class="rouge"><span class="tgros">JAMAIS</span></span> ce genre de classe :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="syntax"><pre><span class="kd">class</span> <span class="nc">Toto</span> <span class="kd">extends</span> <span class="n">Titi</span><span class="o">,</span> <span class="n">Tutu</span><span class="o">{</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
À présent, continuons la construction de notre objet hérité !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10353">Construction d'un objet hérité</h2>
		<div class="ss_part_texte">
		Il va de soi que cette opération va se concrétiser avec nos chers constructeurs.<br>
Notre classe <strong><span class="courrier">Ville</span></strong> ne changera plus d'un poil, mais nous allons par contre agrémenter notre classe <span class="courrier">Capitale</span>.<br>
<br>
Comme je vous l'avais dit, ce qui différenciera nos objets <strong><span class="courrier">Capitale</span></strong> de nos objets <strong><span class="courrier">Ville</span></strong> sera la présence d'un champ nouveau : le nom du président. Ce qui signifie que nous devons créer un constructeur par défaut et un constructeur d'initialisation pour notre objet <span class="courrier">Capitale</span>.<br>
<br>
Avant de foncer tête baissée, il faut que vous sachiez que nous pouvons faire appel aux variables de la classe mère dans nos constructeurs... Et ceci grâce au mot-clé <span class="violet"><strong><span class="courrier">super</span></strong></span>. Ce qui aura pour effet de récupérer les éléments de l'objet de base, et de les envoyer à notre objet hérité.<br>
<br>
Démonstration :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">Capitale</span> <span class="k">extends</span> <span class="n">Ville</span> <span class="o">{</span>
 
<span class="k">private</span> <span class="n">String</span> <span class="n">president</span><span class="o">;</span>
 
 <span class="c">/**</span>
<span class="c">  *Constructeur par défaut</span>
<span class="c">  */</span>
  <span class="k">public</span> <span class="nf">Capitale</span><span class="o">(){</span>
    <span class="c">//Ce mot clé appelle le constructeur de la classe mère.  </span>
    <span class="k">super</span><span class="o">();</span>
    <span class="n">president</span> <span class="o">=</span> <span class="s">"aucun"</span><span class="o">;</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Si vous testez à nouveau le petit exemple que je vous avais montré un peu plus haut, vous vous apercevrez que le constructeur par défaut fonctionne toujours... Et pour cause, car ici, <span class="violet"><strong><span class="courrier">super()</span></strong></span> appelle le constructeur par défaut de l'objet <span class="courrier">Ville</span> dans notre constructeur de <span class="courrier">Capitale</span>, puis nous avons rajouté le président par défaut.<br>
<br>
Mais la méthode <strong><span class="courrier">decrisToi()</span></strong> ne prend pas en compte le nom du président... <img src="./java_files/huh.png" alt=":o" class="smilies"> <br>
Eh bien le mot-clé <span class="violet"><strong><span class="courrier">super()</span></strong></span> fonctionne aussi pour les méthodes de classe. Ce qui nous donne une méthode <strong><span class="courrier">decrisToi()</span></strong> un peu différente...  car nous allons rajouter le champ président dans notre description.<br>
<br>
Voyez plutôt :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">Capitale</span> <span class="k">extends</span> <span class="n">Ville</span> <span class="o">{</span>
 
<span class="k">private</span> <span class="n">String</span> <span class="n">president</span><span class="o">;</span>
 
 <span class="c">/**</span>
<span class="c">  *Constructeur par défaut</span>
<span class="c">  */</span>
  <span class="k">public</span> <span class="nf">Capitale</span><span class="o">(){</span>
    <span class="c">//Ce mot clé appel le constructeur de la classe mère.  </span>
    <span class="k">super</span><span class="o">();</span>
    <span class="n">president</span> <span class="o">=</span> <span class="s">"aucun"</span><span class="o">;</span>
  <span class="o">}</span>
 
  <span class="c">/**</span>
<span class="c">   *Description d'une capitale</span>
<span class="c">   */</span>
   <span class="k">public</span> <span class="n">String</span> <span class="nf">decrisToi</span><span class="o">(){</span>
      <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="k">super</span><span class="o">.</span><span class="na">decrisToi</span><span class="o">()</span> <span class="o">+</span> <span class="s">"\n \t ==&gt;&gt;"</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">president</span> <span class="o">+</span> <span class="s">" est son président"</span><span class="o">;</span>
      <span class="c">//Pour bien vous montrer, j'ai ajouté la ligne ci-dessous, mais vous n'êtes pas obligés...</span>
      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Invocation de super.decrisToi()"</span><span class="o">);</span>
      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="k">super</span><span class="o">.</span><span class="na">decrisToi</span><span class="o">());</span>
      <span class="k">return</span> <span class="n">str</span><span class="o">;</span>
   <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Si vous relancez les mêmes instructions présentes dans le <span class="courrier">main</span>, depuis le début, vous aurez quelque chose comme ça :<br>
<br>
<div class="centre"><img src="./java_files/103211.png" alt="Image utilisateur"></div><br>
<br>
Il y a du mieux, non ?  <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
Bon, d'accord, nous n'avons toujours pas fait le constructeur d'initialisation de <span class="courrier">Capitale</span>... Eh bien ? Qu'est-ce que nous attendons ?<br>
<br>
<h4>Code complet de notre classe</h4><span class="gros"> <strong><span class="courrier">Capitale</span></strong></span><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Capitale</span> <span class="k">extends</span> <span class="n">Ville</span> <span class="o">{</span>
 
         
        <span class="k">private</span> <span class="n">String</span> <span class="n">president</span><span class="o">;</span>
         
         <span class="c">/**</span>
<span class="c">          *Constructeur par défaut</span>
<span class="c">          */</span>
          <span class="k">public</span> <span class="nf">Capitale</span><span class="o">(){</span>
            <span class="c">//Ce mot clé appelle le constructeur de la classe mère.  </span>
            <span class="k">super</span><span class="o">();</span>
            <span class="n">president</span> <span class="o">=</span> <span class="s">"aucun"</span><span class="o">;</span>
          <span class="o">}</span>
          
          <span class="c">/**</span>
<span class="c">           * Constructeur d'initialisation de capitale</span>
<span class="c">           */</span>
          <span class="k">public</span> <span class="nf">Capitale</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">,</span> <span class="kt">int</span> <span class="n">hab</span><span class="o">,</span> <span class="n">String</span> <span class="n">pays</span><span class="o">,</span> <span class="n">String</span> <span class="n">president</span><span class="o">){</span>
          <span class="k">super</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">hab</span><span class="o">,</span> <span class="n">pays</span><span class="o">);</span>
          <span class="k">this</span><span class="o">.</span><span class="na">president</span> <span class="o">=</span> <span class="n">president</span><span class="o">;</span>
          <span class="o">}</span>
         
          <span class="c">/**</span>
<span class="c">           *Description d'une capitale</span>
<span class="c">           */</span>
           <span class="k">public</span> <span class="n">String</span> <span class="nf">decrisToi</span><span class="o">(){</span>
              <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="k">super</span><span class="o">.</span><span class="na">decrisToi</span><span class="o">()</span> <span class="o">+</span> <span class="s">"\n \t ==&gt;&gt;"</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">president</span> <span class="o">+</span> <span class="s">" est son président"</span><span class="o">;</span>
              <span class="k">return</span> <span class="n">str</span><span class="o">;</span>
           <span class="o">}</span>
 
        <span class="c">/**</span>
<span class="c">         * @return le nom du président</span>
<span class="c">         */</span>
        <span class="k">public</span> <span class="n">String</span> <span class="nf">getPresident</span><span class="o">()</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">president</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="c">/**</span>
<span class="c">         * Définit le nom du président</span>
<span class="c">         * @param president</span>
<span class="c">         */</span>
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">setPresident</span><span class="o">(</span><span class="n">String</span> <span class="n">president</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">this</span><span class="o">.</span><span class="na">president</span> <span class="o">=</span> <span class="n">president</span><span class="o">;</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Donc : dans le constructeur d'initialisation de notre <span class="courrier">Capitale</span>, vous remarquez la présence de <strong><span class="courrier">super(nom, hab, pays);</span></strong>. Difficile de ne pas le voir...<br>
Ici, cette ligne de code joue le même rôle que pour le constructeur par défaut. Sauf qu'ici, le constructeur auquel <span class="courrier">super</span> fait référence prend trois paramètres... donc <span class="courrier">super</span> doit prendre ces paramètres.<br>
<br>
<div class="rmq attention">Si vous ne lui mettez aucun paramètre, <span class="courrier">super()</span> renverra le constructeur par défaut de la classe <span class="courrier">Ville</span>...</div><br>
<br>
Testez ce code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="syntax"><pre><span class="n">Capitale</span> <span class="n">cap</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Capitale</span><span class="o">(</span><span class="s">"Paris"</span><span class="o">,</span> <span class="mi">654987</span><span class="o">,</span> <span class="s">"France"</span><span class="o">,</span> <span class="s">"Sarko"</span><span class="o">);</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n"</span><span class="o">+</span><span class="n">cap</span><span class="o">.</span><span class="na">decrisToi</span><span class="o">());</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous devriez voir apparaître sous vos yeux ébahis : <img src="./java_files/waw.png" alt=":waw:" class="smilies"> :<br>
<br>
<div class="centre"><img src="./java_files/103212.png" alt="Image utilisateur"></div><br>
<br>
Je vais encore vous interpeler mais... ce que vous venez de faire sur la méthode <strong><span class="courrier">decrisToi()</span></strong> s'appelle : <strong><span class="bleu">une méthode polymorphe</span></strong>, ce qui nous conduit tout de suite à la suite <img src="./java_files/rire.gif" alt=":lol:" class="smilies"> !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10352">Le polymorphisme</h2>
		<div class="ss_part_texte">
		Voici encore un des concepts fondamentaux de la programmation orientée objet : <span class="gros"><span class="bleu">Le polymorphisme</span></span>. <br>
Ce concept complète parfaitement celui de l'héritage. <br>
<br>
Comme vous l'avez vu, le polymorphisme n'est pas si compliqué qu'il pourrait sembler l'être !<br>
<div class="rmq information">Nous pouvons le caractériser en disant qu'il permet de manipuler des objets sans vraiment connaître leur type.</div><br>
<br>
Dans notre exemple, vous avez vu qu'il suffisait d'utiliser la méthode <strong><span class="courrier">decrisToi()</span></strong> sur un objet <strong><span class="courrier">Ville</span></strong> ou sur un objet <strong><span class="courrier">Capitale</span></strong>, et cela sans se soucier de leur type. On pourrait construire un tableau d'objets, et appeler la <strong><span class="courrier">decrisToi()</span></strong> sans se soucier de son contenu : villes, capitales, ou les deux.<br>
<br>
D'ailleurs nous allons le faire. Essayez ce code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Def d'un tableau de ville null</span>
   <span class="n">Ville</span><span class="o">[]</span> <span class="n">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">[</span><span class="mi">6</span><span class="o">];</span>
        
   <span class="c">//Définition d'un tableau de noms de Villes et d'un tableau de nombres d'habitants</span>
   <span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Marseille"</span><span class="o">,</span> <span class="s">"lille"</span><span class="o">,</span> <span class="s">"caen"</span><span class="o">,</span> <span class="s">"lyon"</span><span class="o">,</span> <span class="s">"paris"</span><span class="o">,</span> <span class="s">"nantes"</span><span class="o">};</span>
   <span class="kt">int</span><span class="o">[]</span> <span class="n">tab2</span> <span class="o">=</span> <span class="o">{</span><span class="mi">123456</span><span class="o">,</span> <span class="mi">78456</span><span class="o">,</span> <span class="mi">654987</span><span class="o">,</span> <span class="mi">75832165</span><span class="o">,</span> <span class="mi">1594</span><span class="o">,</span><span class="mi">213</span><span class="o">};</span>
         
   <span class="c">/* Les 3 premiers éléments du tableau seront des Villes,</span>
<span class="c">      et le reste, des capitales</span>
<span class="c">   */</span>
   <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
     <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span><span class="mi">3</span><span class="o">){</span>
       <span class="n">Ville</span> <span class="n">V</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="n">tab</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">tab2</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="s">"france"</span> <span class="o">);</span>
       <span class="n">tableau</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">V</span><span class="o">;</span>
     <span class="o">}</span>
         
     <span class="k">else</span><span class="o">{</span>
       <span class="n">Capitale</span> <span class="n">C</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Capitale</span><span class="o">(</span><span class="n">tab</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">tab2</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="s">"france"</span><span class="o">,</span> <span class="s">"Sarko"</span><span class="o">);</span>
       <span class="n">tableau</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">C</span><span class="o">;</span>
     <span class="o">}</span>
   <span class="o">}</span>
                 
   <span class="c">//il ne nous reste plus qu'à décrire tout notre tableau !</span>
   <span class="k">for</span><span class="o">(</span><span class="n">Ville</span> <span class="n">v</span> <span class="o">:</span> <span class="n">tableau</span><span class="o">){</span>
     <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">decrisToi</span><span class="o">()+</span><span class="s">"\n"</span><span class="o">);</span>
   <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat :<br>
<br>
<div class="centre"><img src="./java_files/103216.png" alt="Image utilisateur"></div><br>
<br>
Une petite nouveauté, la création d'un tableau d'un certain nombre d'entrées <strong>vides</strong>. Rien de bien compliqué à cela, vous voyez que la syntaxe est toute simple.<br>
Nous créons un tableau de villes, avec des villes et des capitales (nous avons le droit de faire ça, car les objets <span class="courrier">Capitale</span> sont aussi des objets <span class="courrier">Ville</span>... <img src="./java_files/langue.png" alt=":p" class="smilies"> ), dans notre première boucle <strong><span class="courrier">for</span></strong>.<br>
Dans la seconde, nous affichons la description de ces objets... et vous voyez que la méthode <strong><span class="italique">polymorphe</span> <span class="courrier">decrisToi()</span></strong> fait bien son travail !<br>
<br>
<div class="rmq question">Dans ta boucle, tu n'utilises que des objets <strong><span class="courrier">Ville</span></strong>.</div><br>
Tout à fait. On appelle ceci la <strong><span class="bleu">covariance des variables</span></strong> !<br>
Cela signifie qu'une variable objet peut contenir un objet qui hérite du type de cette variable. Dans notre cas, un objet de type <strong><span class="courrier">Ville</span></strong> peut contenir un objet de type <strong><span class="courrier">Capitale</span></strong>. Dans ce cas, on dit que <strong><span class="courrier">Ville</span></strong> est la <strong>super classe</strong> par rapport à <strong><span class="courrier">Capitale</span></strong>.<br>
La covariance est efficace dans le cas où la classe héritant redéfinit certaines des méthodes de sa super classe.<br>
<br>
<div class="rmq attention">Attention à ne pas confondre la <strong>surcharge de méthode</strong> avec <strong>une méthode polymorphe</strong>.</div><br>
Pour dire les choses simplement :<br>
<ul>
<li>une méthode surchargée a des paramètres que la méthode de base n'a pas, ou a le même nombre de paramètres, mais de types différents ;</li>
<li>une méthode polymorphe a un squelette identique à celle de base, mais un traitement différent. Celle-ci fait référence à une autre classe et donc, par extension, à une autre instance de cette classe. <span class="gros"><strong>On peut dire que les méthodes polymorphes sont typiques des classes héritées !</strong></span></li>
</ul><br>
<br>
Vous devez savoir encore une chose sur l'héritage. Lorsque vous créez une classe (<span class="courrier">Ville</span> par exemple), celle-ci est une classe héritée de la classe <span class="courrier">Object</span> présente dans Java. <br>
Cette écriture est donc tout à fait correcte :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="kd">class</span> <span class="nc">Ville</span> <span class="kd">extends</span> <span class="n">Object</span><span class="o">{</span>
<span class="o">..........</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Toutes nos classes héritent donc des méthodes de la classe <span class="courrier">Object</span>, comme <strong><span class="courrier">equals()</span></strong>, qui prend un objet en paramètre, et qui permet de tester l'égalité d'objets. Vous vous en êtes d'ailleurs servis pour tester l'égalité de <span class="courrier">String()</span> dans la première partie de ce tuto.<br>
Donc, si nous redéfinissons une méthode de la classe <strong><span class="courrier">Object</span></strong> dans la classe <strong><span class="courrier">Ville</span></strong>, nous pourrions utiliser la covariance.<br>
<br>
La méthode de la classe <strong><span class="courrier">Object</span></strong> qui est le plus souvent redéfinie est la méthode <strong><span class="courrier">toString()</span></strong>, qui retourne un <strong><span class="violet"><span class="courrier">String</span></span></strong> et qui a pour rôle de décrire l'objet en question (tout comme notre méthode <strong><span class="courrier">decrisToi()</span></strong>). Nous allons donc faire un copier / coller de notre procédure de la méthode <strong><span class="courrier">decrisToi()</span></strong> dans une nouvelle méthode de la classe <strong><span class="courrier">Ville</span></strong> : <strong><span class="courrier">toString()</span></strong>.<br>
<br>
Voici : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">(){</span>
  <span class="k">return</span> <span class="s">"\t"</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nomVille</span><span class="o">+</span><span class="s">" est une ville de "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nomPays</span><span class="o">+</span><span class="s">", elle comporte : "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">nbreHabitant</span><span class="o">+</span>
        <span class="s">" =&gt; elle est donc de catégorie : "</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">categorie</span><span class="o">;</span>
 <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Nous faisons de même dans la classe <strong><span class="courrier">Capitale</span></strong> :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">(){</span>
    <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="kd">super</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span> <span class="o">+</span> <span class="s">"\n \t ==&gt;&gt;"</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">president</span> <span class="o">+</span> <span class="s">" est son président"</span><span class="o">;</span>
    <span class="k">return</span> <span class="n">str</span><span class="o">;</span>
  <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Maintenant, testez ce code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Def d'un tableau de ville null</span>
   <span class="n">Ville</span><span class="o">[]</span> <span class="n">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">[</span><span class="mi">6</span><span class="o">];</span>
        
   <span class="c">//Définition d'un tableau de noms de Villes et d'un tableau de nombres d'habitants</span>
   <span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Marseille"</span><span class="o">,</span> <span class="s">"lille"</span><span class="o">,</span> <span class="s">"caen"</span><span class="o">,</span> <span class="s">"lyon"</span><span class="o">,</span> <span class="s">"paris"</span><span class="o">,</span> <span class="s">"nantes"</span><span class="o">};</span>
   <span class="kt">int</span><span class="o">[]</span> <span class="n">tab2</span> <span class="o">=</span> <span class="o">{</span><span class="mi">123456</span><span class="o">,</span> <span class="mi">78456</span><span class="o">,</span> <span class="mi">654987</span><span class="o">,</span> <span class="mi">75832165</span><span class="o">,</span> <span class="mi">1594</span><span class="o">,</span><span class="mi">213</span><span class="o">};</span>
         
   <span class="c">/* Les 3 premiers éléments du tableau seront des Villes</span>
<span class="c">      et le reste des capitales</span>
<span class="c">   */</span>
   <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
     <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span><span class="mi">3</span><span class="o">){</span>
       <span class="n">Ville</span> <span class="n">V</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="n">tab</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">tab2</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="s">"france"</span> <span class="o">);</span>
       <span class="n">tableau</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">V</span><span class="o">;</span>
     <span class="o">}</span>
         
     <span class="k">else</span><span class="o">{</span>
       <span class="n">Capitale</span> <span class="n">C</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Capitale</span><span class="o">(</span><span class="n">tab</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">tab2</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="s">"france"</span><span class="o">,</span> <span class="s">"Sarko"</span><span class="o">);</span>
       <span class="n">tableau</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">C</span><span class="o">;</span>
     <span class="o">}</span>
   <span class="o">}</span>
                 
   <span class="c">//il ne nous reste plus qu'à décrire tout notre tableau !</span>
   <span class="k">for</span><span class="o">(</span><span class="n">Object</span> <span class="n">obj</span> <span class="o">:</span> <span class="n">tableau</span><span class="o">){</span>
     <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">obj</span><span class="o">.</span><span class="na">toString</span><span class="o">()+</span><span class="s">"\n"</span><span class="o">);</span>
   <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous pouvez constater qu'il fait exactement la même chose que le précédent ; nous n'avons pas à nous soucier du type d'objet pour afficher sa description. Je pense que vous commencez à apercevoir la puissance de Java ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
<div class="rmq attention"><strong>ATTENTION :</strong> si vous ne redéfinissez pas ou ne polymorphez pas une méthode d'une classe mère dans une classe fille (exemple de <strong><span class="courrier">toString()</span></strong>), à l'appel de celle-ci avec un objet fille, c'est la méthode de la classe mère qui sera invoquée ! !</div><br>
Une précision : si vous avez un objet <strong><span class="courrier">v</span></strong> de type <strong><span class="courrier">Ville</span></strong> par exemple, que vous n'avez pas redéfini la méthode <strong><span class="courrier">toString()</span></strong> et que vous testez ce code :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Cette instruction appelle automatiquement la méthode <strong><span class="courrier">toString()</span></strong> de la classe <strong><span class="violet"><span class="courrier">Object </span></span></strong>! Mais vu que vous avez redéfini la méthode <strong><span class="courrier">toString()</span></strong> dans votre classe <strong><span class="violet"><span class="courrier">Ville</span></span></strong>, ces deux instructions sont équivalentes :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="c">//Est équivalent à</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Pour plus de clarté, je conserverai la première syntaxe ! Mais vous devez savoir ceci !<br>
En clair, vous avez accès aux méthodes <strong><span class="violet"><span class="courrier">public</span></span></strong> et <strong><span class="violet"><span class="courrier">protected</span></span></strong> de la classe <strong><span class="violet"><span class="courrier">Object</span></span></strong> dès que vous créez une classe objet (héritage tacite).<br>
Vous pouvez donc utiliser les dites méthodes ; mais si vous ne les redéfinissez pas... l'invocation se fera sur la classe mère avec les traitements de la classe mère.<br>
<br>
Si vous voulez un bel exemple de ce que je viens de vous dire, vous n'avez qu'à retirer la redéfinition de la méthode <strong><span class="violet"><span class="courrier">toString()</span></span></strong> dans les classes <strong><span class="courrier">Ville</span></strong> et <strong><span class="courrier">Capitale</span></strong> : vous verrez que le code de la méthode <strong><span class="violet"><span class="courrier">main</span></span></strong> fonctionne toujours, mais le résultat n'est plus du tout le même car, à l'appel de la méthode <strong><span class="violet"><span class="courrier">toString()</span></span></strong>, la JVM va regarder si celle-ci existe dans la classe appelante et, si elle ne la trouve pas, elle remonte dans la hiérarchie jusqu'à arriver à la classe <strong><span class="violet"><span class="courrier">Object</span></span></strong>...<br>
<br>
<div class="rmq attention"><strong>Attention 2 :</strong> ce code fonctionne bien mais, si vous remplacez la méthode <strong><span class="courrier">toString()</span></strong> par la méthode <strong><span class="courrier">decrisToi()</span></strong>, le programme ne fonctionne plus... <img src="./java_files/waw.png" alt=":waw:" class="smilies"> Et cela pour une bonne raison : la méthode <strong><span class="courrier">decrisToi()</span></strong> n'existe pas dans la classe <strong><span class="courrier">Object</span></strong>.</div><br>
<div class="rmq information">Vous devez savoir qu'une méthode est invoquable par un objet QUE si celui-ci définit la dite méthode !</div><br>
<br>
Donc, ce code ne fonctionne pas :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Sdz1</span> <span class="o">{</span>
   
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
                 
                <span class="c">//Def d'un tableau de ville null</span>
                   <span class="n">Ville</span><span class="o">[]</span> <span class="n">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">[</span><span class="mi">6</span><span class="o">];</span>
                 
                   <span class="c">//Définition d'un tableau de noms de Villes et d'un tableau de nombres d'habitants</span>
                   <span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Marseille"</span><span class="o">,</span> <span class="s">"lille"</span><span class="o">,</span> <span class="s">"caen"</span><span class="o">,</span> <span class="s">"lyon"</span><span class="o">,</span> <span class="s">"paris"</span><span class="o">,</span> <span class="s">"nantes"</span><span class="o">};</span>
                   <span class="kt">int</span><span class="o">[]</span> <span class="n">tab2</span> <span class="o">=</span> <span class="o">{</span><span class="mi">123456</span><span class="o">,</span> <span class="mi">78456</span><span class="o">,</span> <span class="mi">654987</span><span class="o">,</span> <span class="mi">75832165</span><span class="o">,</span> <span class="mi">1594</span><span class="o">,</span><span class="mi">213</span><span class="o">};</span>
                 
                   <span class="c">/* Les 3 premiers éléments du tableau seront des Villes,</span>
<span class="c">                       et le reste, des capitales</span>
<span class="c">                        */</span>
                   <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
                     <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span><span class="mi">3</span><span class="o">){</span>
                       <span class="n">Ville</span> <span class="n">V</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="n">tab</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">tab2</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="s">"france"</span> <span class="o">);</span>
                       <span class="n">tableau</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">V</span><span class="o">;</span>
                     <span class="o">}</span>
                 
                     <span class="k">else</span><span class="o">{</span>
                       <span class="n">Capitale</span> <span class="n">C</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Capitale</span><span class="o">(</span><span class="n">tab</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">tab2</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="s">"france"</span><span class="o">,</span> <span class="s">"Sarko"</span><span class="o">);</span>
                       <span class="n">tableau</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">C</span><span class="o">;</span>
                     <span class="o">}</span>
                   <span class="o">}</span>
                 
                   <span class="c">//il ne nous reste plus qu'à décrire tout notre tableau !</span>
                   <span class="k">for</span><span class="o">(</span><span class="n">Object</span> <span class="n">v</span> <span class="o">:</span> <span class="n">tableau</span><span class="o">){</span>
                     <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">decrisToi</span><span class="o">()+</span><span class="s">"\n"</span><span class="o">);</span>
                   <span class="o">}</span>
                   
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Pour que cela fonctionne, vous devez dire à la JVM que la référence de type <strong><span class="courrier">Object</span></strong> est en fait une référence de type <strong><span class="courrier">Ville</span></strong>. Comme ceci : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Sdz1</span> <span class="o">{</span>
   
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
                 
                <span class="c">//Def d'un tableau de ville null</span>
                   <span class="n">Ville</span><span class="o">[]</span> <span class="n">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">[</span><span class="mi">6</span><span class="o">];</span>
                 
                   <span class="c">//Définition d'un tableau de noms de Villes et d'un tableau de nombres d'habitants</span>
                   <span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Marseille"</span><span class="o">,</span> <span class="s">"lille"</span><span class="o">,</span> <span class="s">"caen"</span><span class="o">,</span> <span class="s">"lyon"</span><span class="o">,</span> <span class="s">"paris"</span><span class="o">,</span> <span class="s">"nantes"</span><span class="o">};</span>
                   <span class="kt">int</span><span class="o">[]</span> <span class="n">tab2</span> <span class="o">=</span> <span class="o">{</span><span class="mi">123456</span><span class="o">,</span> <span class="mi">78456</span><span class="o">,</span> <span class="mi">654987</span><span class="o">,</span> <span class="mi">75832165</span><span class="o">,</span> <span class="mi">1594</span><span class="o">,</span><span class="mi">213</span><span class="o">};</span>
                 
                   <span class="c">/* Les 3 premiers éléments du tableau seront des Villes,</span>
<span class="c">                       et le reste, des capitales</span>
<span class="c">                        */</span>
                   <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
                     <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span><span class="mi">3</span><span class="o">){</span>
                       <span class="n">Ville</span> <span class="n">V</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="n">tab</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">tab2</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="s">"france"</span> <span class="o">);</span>
                       <span class="n">tableau</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">V</span><span class="o">;</span>
                     <span class="o">}</span>
                 
                     <span class="k">else</span><span class="o">{</span>
                       <span class="n">Capitale</span> <span class="n">C</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Capitale</span><span class="o">(</span><span class="n">tab</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">tab2</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="s">"france"</span><span class="o">,</span> <span class="s">"Sarko"</span><span class="o">);</span>
                       <span class="n">tableau</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">C</span><span class="o">;</span>
                     <span class="o">}</span>
                   <span class="o">}</span>
                 
                   <span class="c">//il ne nous reste plus qu'à décrire tout notre tableau !</span>
                   <span class="k">for</span><span class="o">(</span><span class="n">Object</span> <span class="n">v</span> <span class="o">:</span> <span class="n">tableau</span><span class="o">){</span>
                     <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(((</span><span class="n">Ville</span><span class="o">)</span><span class="n">v</span><span class="o">).</span><span class="na">decrisToi</span><span class="o">()+</span><span class="s">"\n"</span><span class="o">);</span>
                   <span class="o">}</span>
                   
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous transtypez la référence <strong><span class="courrier">v</span></strong> en <strong><span class="courrier">Ville</span></strong> par cette syntaxe :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="o">((</span><span class="n">Ville</span><span class="o">)</span><span class="n">v</span><span class="o">).</span><span class="na">decrisToi</span><span class="o">();</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ici, l'ordre des opérations s'effectue comme ceci :<br>
<ul>
<li>vous transtypez la référence <strong><span class="courrier">v</span></strong> en <strong><span class="courrier">Ville</span></strong></li>
<li>vous appliquez la méthode <strong><span class="courrier">decrisToi()</span></strong> à la référence appelante, ici, une référence <strong><span class="courrier">Object</span></strong> changée en <strong><span class="courrier">Ville</span></strong>.</li>
</ul><br>
<br>
Vous voyez donc l'intérêt des méthodes polymorphes. Avec celles-ci, vous n'avez plus à vous soucier du type de variable appelante ; cependant, n'utilisez le type <strong><span class="courrier"><span class="violet">Object</span></span></strong> qu'avec parcimonie.<br>
<br>
Il existe encore un type de méthode dont je ne vous ai pas encore parlé. Il s'agit des méthodes dites <strong><span class="violet"><span class="courrier">final</span></span></strong>. Ces méthodes sont figées et vous ne pourrez <strong><span class="rouge">JAMAIS</span></strong> redéfinir une méthode déclarée <strong><span class="violet"><span class="courrier">final</span></span></strong>. Un exemple de ce type de méthode est la méthode <strong><span class="violet"><span class="courrier">getClass()</span></span></strong> de la classe <strong><span class="violet"><span class="courrier">Object</span></span></strong> : vous ne pourrez pas redéfinir cette méthode et heureusement, car celle-ci retourne un objet <strong><span class="courrier"><span class="violet">Capitale</span></span></strong> dans le fonctionnement de Java (nous verrons cela plus tard).<br>
<br>
<div class="rmq information">Il existe aussi des classes déclarées <strong><span class="courrier">final</span></strong>. Vous avez compris que ces classes sont immuables... Et vous ne pouvez donc pas faire hériter un objet d'une classe déclarée <strong><span class="courrier">final</span></strong> !</div><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10351">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		Encore un petit topo des familles. Je pense qu'avec ce genre de chapitre, ce n'est pas du luxe...<br>
<br>
<ul>
<li>Une classe hérite d'une autre classe par le biais du mot clé <strong><span class="violet"><span class="courrier">extends</span></span></strong>.</li>
<li><strong><span class="rouge">Une classe ne peut hériter que d'une seule et unique classe !</span></strong></li>
<li>Si nous ne définissons pas de constructeur dans nos classes, <strong>la JVM se charge d'en créer un à l'interprétation</strong>.</li>
<li>Si aucun constructeur n'est défini dans une classe fille, <strong>la JVM en créera un et appellera automatiquement le constructeur de la classe mère.</strong></li>
<li>La classe fille hérite de toutes les propriétés et méthodes <strong><span class="violet"><span class="courrier">public</span></span></strong> et <strong><span class="violet"><span class="courrier">protected</span></span></strong> de la classe mère.</li>
<li>Les méthodes et propriétés <strong><span class="violet"><span class="courrier">private</span></span></strong> d'une classe mère ne sont pas accessibles dans la classe fille.</li>
<li>On peut redéfinir (changer tout le code) d'une méthode héritée.</li>
<li>On peut utiliser le polymorphisme sur une méthode par le biais du mot clé <strong><span class="violet"><span class="courrier">super</span></span></strong>.</li>
<li>Le polymorphisme permet, entre autres, d'ajouter des traitements spécifiques à une méthode en continuant d'utiliser les traitements déjà définis (utilisation de <strong><span class="courrier">super</span></strong>).</li>
<li>Grâce à l'héritage et au polymorphisme, nous pouvons utiliser la <strong><span class="bleu">covariance</span></strong> des variables !</li>
<li>Si une méthode d'une classe mère n'est pas redéfinie ou polymorphée, à l'appel de cette méthode par le biais d'un objet enfant,<strong> c'est la méthode de la classe mère qui sera appelée !</strong></li>
<li>Vous ne pouvez pas hériter d'une classe déclarée <strong><span class="violet"><span class="courrier">final</span></span></strong>.</li>
<li>Une méthode déclarée <strong><span class="violet"><span class="courrier">final</span></span></strong> est <strong><span class="rouge">non redéfinissable</span></strong>.</li>
</ul><br>
<br>
Je crois que vous êtes prêts pour un petit QCM... Mais prenez le temps de digérer tout ceci !<br>
Faites des essais, testez, comparez, c'est le meilleur moyen de bien comprendre les choses.
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Si vous êtes prêts pour la suite, allons tout de suite voir ce qui se passe : <strong><span class="italique">Apprendre à modéliser</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10363">Apprendre à modéliser</h1>
	<div id="chap_intro">
	Dans ce chapitre nous allons voir le principe de modélisation d'objet.<br>
Ne vous leurrez pas, ça sera assez indigeste, mais faites-moi confiance... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>

	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10362">UML, mais qu'est-ce donc ?</h2>
		<div class="ss_part_texte">
		UML est le sigle signifiant <strong>U</strong>nified <strong>M</strong>odeling <strong>L</strong>anguage : traduisez par "<span class="italique">langage de modélisation unifié</span>".<br>
Il ne s'agit pas d'un langage de programmation mais plutôt d'une méthodologie de modélisation comme la méthode <span class="italique"><a href="http://fr.wikipedia.org/wiki/Merise_%28informatique%29">merise</a></span>, etc.<br>
<br>
<div class="rmq question">À quoi ça sert ?</div><br>
Je sais que vous êtes des Zér0s avertis en matière de programmation, ainsi qu'en informatique en général, mais mettez-vous dans la peau d'une personne totalement dénuée de toute connaissance dans le domaine. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Il fallait trouver un langage commun entre les commerciaux, les responsables de projets informatiques, les développeurs afin que tout ce petit monde se comprenne. Avec UML, c'est le cas.<br>
<br>
En fait, avec UML, vous pouvez modéliser toutes les parties de développement d'une application informatique, de sa conception à la mise en route, tout ceci grâce à des diagrammes. Il est vrai que certains de ces diagrammes sont plus adaptés à des informaticiens, mais il en existe qui permettent de voir comment interagit l'application dans son contexte de fonctionnement... Et dans ce genre de cas, la connaissance de l'entreprise pour laquelle l'application est prévue est de mise. On utilise donc un mode de communication commun à tout le monde : UML.<br>
<br>
Il existe bien sûr des outils de modélisation afin de créer de tels diagrammes. Personnellement, j'utilise <a href="http://argouml.tigris.org/">argoUML</a> mais il en existe d'autres, comme :<br>
<ul>
<li>boUML</li>
<li>Together</li>
<li>Poseidon</li>
<li>Pyut</li>
<li>...</li>
</ul><br>
<br>
ArgoUML a le mérite d'être gratuit et fait en Java... donc multi-plates-formes. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Avec ces outils, vous pouvez réaliser les différents types de diagrammes qu'UML vous propose : <br>
<ul>
<li>diagramme de <strong><span class="italique">use case</span></strong> (cas d'utilisation) : permet de déterminer les différents cas d'utilisation d'un programme informatique ;</li>
<li>diagramme de classes : celui dont nous allons nous servir ; permet de modéliser des classes ainsi que les interactions entre elles ;</li>
<li>des diagrammes de séquences : permettent de visualiser le déroulement d'une application dans un contexte donné ;</li>
<li>et d'autres encore... </li>
</ul><br>
<br>
Voici un exemple de diagramme de classe : <br>
<br>
<div class="centre"><img src="./java_files/103309.png" alt="Image utilisateur"></div><br>
<br>
Vous avez dû remarquer qu'il s'agissait des classes que nous avons utilisées lors des chapitres précédents. Je ne vous cache pas non plus qu'il s'agit d'une version simplifiée... En effet, vous pouvez constater que je n'ai pas mis toutes les méthodes déclarées <strong><span class="courrier">public</span></strong> de la classe <strong><span class="violet"><span class="courrier">Object</span></span></strong> ainsi que des classes que nous avons codées.<br>
Je ne vais pas vous apprendre à utiliser argoUML non plus, mais plutôt à savoir lire un diagramme car, dans certains cas, il s'avère pratique de modéliser les classes et l'interaction entres celles-ci. Ne serait-ce que pour avoir plus de recul sur notre travail. Mais aussi parce qu'il y a des concepts de programmation qu'il est plus facile d'expliquer avec un diagramme qu'avec de longs discours... <img src="./java_files/langue.png" alt=":p" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10361">Modéliser un objet</h2>
		<div class="ss_part_texte">
		À présent, nous allons apprendre à lire un diagramme de classes.<br>
Vous avez deviné qu'une classe est modélisée sous cette forme : <br>
<div class="centre"><img src="./java_files/103312.png" alt="Image utilisateur"></div><br>
<br>
Voici une classe nommée <strong><span class="courrier">ObjetA</span></strong> qui a comme attributs :<br>
<ul>
<li><span class="courrier">numero</span> de type <strong><span class="violet"><span class="courrier">int</span></span></strong></li>
<li><span class="courrier">nom</span> de type <strong><span class="violet"><span class="courrier">String</span></span></strong></li>
<li>et <span class="courrier">bool</span> de type <strong><span class="violet"><span class="courrier">boolean</span></span></strong>.</li>
</ul><br>
Et comme méthodes :<br>
<ul>
<li><span class="courrier">getNom()</span> qui retourne une chaîne de caractères</li>
<li><span class="courrier">setNom()</span> qui ne renvoie rien</li>
<li><span class="courrier">afficher()</span> qui renvoie elle aussi une chaîne de caractères.</li>
</ul><br>
La portée des attributs et des méthodes n'est pas modélisée ici...<br>
Vous voyez que la modélisation d'un objet est toute simple et très compréhensible ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Maintenant, voyons les interactions entre objets.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10360">Modéliser les interactions entre objets</h2>
		<div class="ss_part_texte">
		Vous allez voir que les interactions sont aussi très simples à modéliser.<br>
En fait, comme vous avez pu le voir sur l'exemple, les interactions sont modélisées par des flèches de types différents. Nous allons voir maintenant celles que nous pouvons d'ores et déjà utiliser, dans l'état actuel de nos connaissances (au fur et à mesure, nous verrons d'autres flèches).<br>
<br>
Regardez ceci : <br>
<br>
<div class="centre"><img src="./java_files/103314.png" alt="Image utilisateur"></div><br>
<br>
Sur ce diagramme, vous pouvez voir un deuxième objet qui a lui aussi des paramètres. Mais ne vous y trompez pas, <strong><span class="courrier">ObjetB</span></strong> possède aussi les attributs et les méthodes de la classe <strong><span class="courrier">ObjectA</span></strong>. Et d'après vous, pourquoi ?<br>
Car la flèche qui relie nos deux objets signifie "<strong><span class="violet"><span class="courrier">extends</span></span></strong>". En gros, vous pouvez lire ce diagramme comme suit :<br>
<div class="centre">l'<strong><span class="courrier">ObjetB</span></strong> <strong><span class="vertf">hérite de</span></strong> l'<strong><span class="courrier">ObjetA</span></strong>, ou encore <strong><span class="courrier">ObjetB</span></strong> <strong><span class="vertf">est un</span></strong> <strong><span class="courrier">objetA</span></strong>.</div><br>
<br>
Nous allons voir une autre flèche d'interaction. Je sais que nous n'avons pas encore vu ce cas de figure, mais il est simple à comprendre.<br>
Comme nous pouvons mettre des objets de type <strong><span class="violet"><span class="courrier">String</span></span></strong> dans des classes que nous développons, nous pouvons aussi mettre comme variable d'instance, ou de classe, un objet que nous avons codé. Voici un diagramme modélisant ce cas de figure : <br>
<br>
<div class="centre"><img src="./java_files/103315.png" alt="Image utilisateur"></div><br>
<br>
Dans cet exemple simpliste, vous voyez que nous avons toujours notre héritage entre un objet A et un objet B mais dans ce cas, l'<strong><span class="courrier">ObjetA</span></strong> (et donc l'<strong><span class="courrier">ObjetB</span></strong>) ont une variable de classe de type <strong><span class="courrier">ObjetC</span></strong>, ainsi qu'une méthode ayant un type de retour <strong><span class="courrier">ObjetC</span></strong> (car la méthode va retourner un <strong><span class="courrier">ObjetC</span></strong>).<br>
Vous pouvez lire ce diagramme comme suit :<br>
<div class="centre">l'<strong><span class="courrier">ObjetA</span></strong> <strong><span class="vertf">a un</span></strong> <strong><span class="courrier">ObjetC</span></strong>. <br>
Ici, il n'y a qu'un seul <strong><span class="courrier">objetC</span></strong> : "<strong>a UN</strong>".</div><br>
<br>
Voici le code Java correspondant à ce diagramme.<br>
 <br>
<h4>Fichier <span class="bleu">ObjetA.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ObjetA</span><span class="o">{</span>
   <span class="kd">protected</span> <span class="n">ObjetC</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjetC</span><span class="o">();</span>
   
   <span class="kd">public</span> <span class="n">ObjetC</span> <span class="nf">getObject</span><span class="o">(){</span>
     <span class="k">return</span> <span class="n">obj</span><span class="o">;</span>
   <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Fichier <span class="bleu">ObjetB.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ObjetB</span> <span class="kd">extends</span> <span class="n">ObjetA</span><span class="o">{</span>
  
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Fichier <span class="bleu">ObjetC.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ObjetC</span><span class="o">{</span>
  
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Il y a encore une dernière flèche que nous pouvons voir car <strong><span class="rouge">elle ne diffère</span></strong> que légèrement de la première.<br>
Voici un diagramme la mettant en oeuvre :<br>
<br>
<div class="centre"><img src="./java_files/103319.png" alt="Image utilisateur"></div><br>
<br>
Nous avons ici le même diagramme que précédemment, à l'exception de l'<strong><span class="courrier">ObjetD</span></strong>. Ici, nous devons lire le diagramme comme suit : <br>
<div class="centre">l'<strong><span class="courrier">ObjetA</span></strong> <strong><span class="vertf">est composé d'</span></strong><strong><span class="courrier">ObjetD</span></strong>. <br>
Ici, il y aura plusieurs d'instances d'<strong><span class="courrier">ObjetD</span></strong> dans <strong><span class="courrier">ObjetA</span></strong>. </div><br>
Vous pouvez d'ailleurs remarquer que la variable d'instance correspondante est de type tableau...  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
<br>
Voici le code Java correspondant : <br>
<br>
<h4>Fichier <span class="bleu">ObjetA.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ObjetA</span><span class="o">{</span>
   <span class="kd">protected</span> <span class="n">ObjetC</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjetC</span><span class="o">();</span>
   <span class="kd">protected</span> <span class="n">ObjetD</span><span class="o">[]</span> <span class="n">objD</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjetD</span><span class="o">[</span><span class="mi">10</span><span class="o">];</span>
 
   <span class="kd">public</span> <span class="n">ObjetC</span> <span class="nf">getObject</span><span class="o">(){</span>
     <span class="k">return</span> <span class="n">obj</span><span class="o">;</span>
   <span class="o">}</span>
 
   <span class="kd">public</span> <span class="n">ObjectD</span><span class="o">[]</span> <span class="nf">getObjectD</span><span class="o">(){</span>
      <span class="k">return</span> <span class="n">objD</span><span class="o">;</span>
   <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Fichier <span class="bleu">ObjetB.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ObjetB</span> <span class="kd">extends</span> <span class="n">ObjetA</span><span class="o">{</span>
  
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Fichier <span class="bleu">ObjetC.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ObjetC</span><span class="o">{</span>
  
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Fichier <span class="bleu">ObjetD.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ObjetD</span><span class="o">{</span>
  
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Il est bien évident que ces classes ne font strictement rien.. Mais je les ai utilisées à titre d'exemple pour la modélisation... <img src="./java_files/langue.png" alt=":p" class="smilies"></div><br>
<br>
Voilà, c'en est fini pour le moment. Attendez-vous donc à avoir des diagrammes dans vos prochains chapitres... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Il n'y aura pas de QCM car j'estime qu'il n'y a rien de difficile ici.
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Après ce que nous avons vu au cours de ce chapitre et des précédents, nous allons tout de suite voir les <strong><span class="italique">classes abstraites</span> </strong>!
	</div>
	
	<hr>
	<h1 id="chap_10373">Les classes abstraites</h1>
	<div id="chap_intro">
	Nous voici de retour dans l'un des fondements du langage Java.<br>
En effet, vous verrez ici que les classes abstraites sont vraiment pratiques. <br>
Sans plus attendre : let's go !  <img src="./java_files/clin.png" alt=";)" class="smilies"> 
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10372">Qu'est-ce que c'est ?</h2>
		<div class="ss_part_texte">
		Ne vous en faites pas... Ici <span class="italique"><strong>abstraite</strong></span> n'a rien de commun avec un certain mouvement de peinture. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
En fait, une classe <strong><span class="italique">abstraite</span></strong> est quasiment comme une classe normale. Oui, comme une classe que vous avez maintenant l'habitude de coder.<br>
Ceci dit, elle a tout de même une particularité : <br>
<strong><span class="rouge"><span class="gros">vous ne pouvez pas l'instancier !</span></span></strong>  <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
<br>
Vous avez bien entendu <img src="./java_files/hihi.png" alt="^^" class="smilies"> . Imaginons que nous ayons une classe <strong><span class="courrier">A</span></strong> déclarée <strong>abstraite</strong>. Ce code ne compilera pas : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span><span class="o">{</span>
 
   <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
      
       <span class="n">A</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="n">A</span><span class="o">();</span><span class="c1">//Erreur de compilation ! ! </span>
 
   <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq question">À quoi ça sert, alors ?</div><br>
J'attendais cette question... C'est pour ça que je n'ai pas commencé directement par un exemple de classe abstraite.<br>
Tout d'abord, je vais vous donner un exemple de situation (de programme, en fait).<br>
Imaginez que vous êtes en train de réaliser un programme qui gère différents types d'animaux (oui, je sais : l'exemple est bête, mais il a le mérite d'être simple à comprendre).<br>
<br>
Dans ce programme, vous avez : <br>
<ul>
<li>des loups</li>
<li>des chiens</li>
<li>des chats</li>
<li>des lions</li>
<li>des tigres.</li>
</ul><br>
<br>
Je pense tout de même que vous n'allez pas faire toutes vos classes bêtement... il va de soi que tous ces animaux ont des choses en commun ! Et qui dit chose en commun... dit héritage.<br>
Que pouvons-nous définir de commun à tous ces animaux, sinon :<ul>
<li>une couleur</li>
<li>un poids</li>
<li>qu'ils crient</li>
<li>qu'ils se déplacent</li>
<li>qu'ils mangent</li>
<li>qu'ils boivent.</li>
</ul> <br>
<br>
Nous pouvons donc faire une classe mère, appelons-la <strong><span class="courrier">Animal</span></strong>.<br>
Avec ce que nous avons dégagé de commun, nous pouvons lui définir des attributs et des méthodes. Voici donc à quoi pourraient ressembler nos classes pour le moment :<br>
<br>
<div class="centre"><img src="./java_files/103322.png" alt="Image utilisateur"> </div><br>
<br>
Nous avons bien notre classe mère <strong><span class="courrier">Animal</span></strong> et nos animaux qui en héritent.<br>
À présent, laissez-moi vous poser une question.<br>
<br>
<div class="rmq question">Vu que notre classe <strong><span class="courrier">Animal</span></strong> est <span class="courrier">public</span> dans notre cas, qu'est-ce qu'est censé faire un objet <strong><span class="courrier">Animal</span></strong> ? Quel est son poids, sa couleur, que mange-t-il ?</div><br>
Si nous avons un morceau de code qui ressemble à ceci : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span><span class="o">{</span>
   <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
      <span class="n">Animal</span> <span class="n">ani</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Animal</span><span class="o">();</span>
      <span class="n">ani</span><span class="o">.</span><span class="na">manger</span><span class="o">();</span><span class="c1">//Que doit-il faire ? ?</span>
   <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
...personnellement, je ne sais pas comment mange un objet <strong><span class="courrier">Animal</span></strong>...<br>
<strong>Vous conviendrez que toutes les classes ne sont pas bonnes à être instanciées !</strong><br>
<br>
C'est là que rentrent en jeu nos classes abstraites. En fait, ces classes servent à définir une <strong><span class="italique">super classe</span></strong>.<br>
<br>
<div class="rmq question">D'accord, mais comment on empêche une classe d'être instanciable puisque tu nous a dit que la JVM déclare un constructeur par défaut... On ne peut donc pas omettre le constructeur !</div><br>
Tout à fait. Pour répondre à cette question : suivez le guide ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10371">Une classe Animal très abstraite</h2>
		<div class="ss_part_texte">
		En fait, il existe une règle pour qu'une classe soit considérée comme abstraite. Elle doit être déclarée avec le mot clé <strong><span class="violet"><span class="courrier">abstract</span></span></strong>.<br>
<br>
Voici un exemple illustrant mes dires : <br>
<br>
Classe déclarée abstraite : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Animal</span><span class="o">{</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Une telle classe peut avoir le même contenu qu'une classe normale. Ses enfants pourront utiliser tous ses éléments déclarés (attributs et méthodes) <strong><span class="violet"><span class="courrier">public</span></span></strong>. Cependant, ce type de classe permet de définir des méthodes abstraites. Ces méthodes ont une particularité ; elles n'ont pas de corps ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
En voici un exemple : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Animal</span><span class="o">{</span>
   <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">manger</span><span class="o">();</span><span class="c1">//une méthode abstraite</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous voyez pourquoi on dit "<strong><span class="italique">méthode abstraite</span></strong>", difficile de voir ce que cette méthode sait faire...<br>
<br>
<div class="rmq information">Retenez bien qu'une méthode abstraite n'est composée que de l'entête de la méthode suivie d'un point-virgule : <strong><span class="tgros">;</span></strong></div><br>
<br>
<div class="rmq question">Jusque-là ça va, mais concrètement, à quoi ça sert ?</div><br>
Tout d'abord, vous devez savoir qu'une méthode abstraite ne peut exister que dans une classe abstraite. Si dans une classe, vous avez une méthode déclarée abstraite, vous <strong><span class="rouge">DEVEZ DÉCLARER CETTE CLASSE COMME ETANT ABSTRAITE</span></strong>.<br>
<br>
Maintenant voyons à quoi cela peut servir. Vous avez vu les avantages de l'héritage et du polymorphisme. Dans ce cas, nos classes enfants hériteront aussi des classes abstraites mais, vu que celles-ci n'ont pas de corps, nos classes enfants seront <strong><span class="rouge">OBLIGÉES</span> de redéfinir ces méthodes !</strong><br>
De ce fait, nos classes enfants auront des méthodes polymorphes en leur sein et donc, la covariance des variables repointe le bout de son nez... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
La covariance appliquée aux classes abstraites donne ceci : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span><span class="o">{</span>
 
   <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[]){</span>
 
     <span class="n">Animal</span> <span class="n">loup</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Loup</span><span class="o">();</span>
     <span class="n">Animal</span> <span class="n">chien</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Chien</span><span class="o">();</span>
     <span class="n">loup</span><span class="o">.</span><span class="na">manger</span><span class="o">();</span>
     <span class="n">chien</span><span class="o">.</span><span class="na">crier</span><span class="o">();</span>
 
   <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq question">Attends ! Tu nous as dit qu'on ne pouvait instancier de classe abstraites ?</div><br>
Et je maintiens mes dires. Ici, nous n'avons pas instancié notre classe abstraite. Nous avons instancié un objet <strong><span class="courrier">Loup</span></strong> que nous avons mis dans un objet de type <strong><span class="courrier">Animal</span></strong> : il en va de même pour l'instanciation de la classe <strong><span class="courrier">Chien</span></strong>.<br>
<div class="rmq attention">Vous devez vous rappeler que l'instance se crée avec le mot clé <strong><span class="violet"><span class="courrier">new</span></span></strong>. En aucun cas le fait de déclarer une variable d'un type de classe donnée (ici, <span class="courrier">Animal</span>) est une instanciation ! Ici nous instancions un <strong><span class="courrier">Loup</span></strong> et un <strong><span class="courrier">Chien</span></strong>.</div><br>
<br>
Vous pouvez aussi utiliser une variable de type <strong><span class="violet"><span class="courrier">Object</span></span></strong> comme référence pour un objet <strong><span class="courrier">Loup</span></strong>, un objet <strong><span class="courrier">Chien</span></strong>...<br>
Vous savez déjà que ce code fonctionne : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span><span class="o">{</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
     <span class="n">Object</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Loup</span><span class="o">();</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Par contre, ceci pose problème :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span><span class="o">{</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
     <span class="n">Object</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Loup</span><span class="o">();</span>
     <span class="n">Loup</span> <span class="n">l</span> <span class="o">=</span> <span class="n">obj</span><span class="o">;</span><span class="c1">//Problème de référence</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div> <br>
<br>
Eh oui ! Vous essayez ici de mettre une référence de type <strong><span class="violet"><span class="courrier">Object</span></span></strong> dans une référence de type <strong><span class="courrier">Loup </span></strong>. Pour avertir la JVM que la référence que vous voulez mettre dans votre objet de type <strong><span class="courrier">Loup</span></strong> est un <strong><span class="courrier">Loup</span></strong>, vous devez utiliser le transtypage !<br>
Revoyons notre code : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span><span class="o">{</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
     <span class="n">Object</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Loup</span><span class="o">();</span>
     <span class="n">Loup</span> <span class="n">l</span> <span class="o">=</span> <span class="o">(</span><span class="n">Loup</span><span class="o">)</span><span class="n">obj</span><span class="o">;</span><span class="c1">//Vous prévenez la JVM que la référence que vous passez est de type Loup</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pourrez bien évidemment instancier directement un objet <strong><span class="courrier">Loup</span></strong>, un objet <strong><span class="courrier">Chien</span></strong> ou tout autre.<br>
<br>
<div class="rmq information">Pour le moment, nous n'avons aucun code dans aucune classe ! Les exemples que je vous ai fournis ne font rien du tout, mais ils seront censés fonctionner lorsque nous aurons mis des morceaux de code dans nos classes. <img src="./java_files/heureux.png" alt=":D" class="smilies"></div><br>
À présent, étoffons nos classes et notre diagramme avant d'avoir un code qui fonctionne bien ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10370">Étoffons notre exemple</h2>
		<div class="ss_part_texte">
		Nous allons donc rajouter des morceaux de code à nos classes.<br>
Tout d'abord, voyons le topo de ce que nous savons.<br>
<ul>
<li>Nos objets auront tous une couleur et un poids différents. Nos classes auront donc le droit de modifier ceux-ci.</li>
<li>Ici, nous partons du principe que tous nos animaux mangeront de la viande. La méthode <strong><span class="courrier">manger()</span></strong> sera donc définie dans la classe Animal.</li>
<li>Idem pour la méthode <strong><span class="courrier">boire()</span></strong>. Ils boiront tous de l'eau <img src="./java_files/heureux.png" alt=":D" class="smilies"> .</li>
<li>Par contre, ils ne crient pas et ne se déplaceront pas de la même manière. Nous ferons donc des méthodes polymorphes et déclarerons les méthodes <strong><span class="courrier">crier()</span></strong> et <strong><span class="courrier">deplacement()</span></strong> <span class="souligne">abstraites</span> dans la classe <span class="courrier">Animal</span>.</li>
</ul><br>
<br>
Voici ce que donneraient nos classes : <br>
<br>
<div class="centre"><img src="./java_files/103486.png" alt="Image utilisateur"></div><br>
<br>
J'ai colorié la classe abstraite en bleu mais il y un autre moyen de savoir si une classe est abstraite : <br>
<strong>le nom de celle-ci est en italique.</strong><br>
Je ne sais pas si c'est une convention ou non, mais argoUML la différencie de cette façon ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Nous voyons bien que notre classe <span class="courrier">Animal</span> est déclarée abstraite et que nos classes filles héritent de celle-ci. De plus, nos classes filles ne redéfinissent que deux méthodes sur quatre, on en conclut ici que ces deux méthodes doivent être abstraites.<br>
Nous ajouterons deux constructeurs à nos classes filles, un par défaut, ainsi qu'un avec les deux paramètres d'initialisation. À ceci nous ajouterons aussi les accesseurs d'usage. Cependant... nous pouvons améliorer un peu cette architecture, sans pour autant rentrer dans les détails !<br>
<br>
Vu les animaux présents, nous aurions pu faire une sous-classe <strong><span class="courrier">Carnivore</span></strong>, ou encore <strong><span class="courrier">AnimalDomestique</span></strong> et <strong><span class="courrier">AnimalSauvage</span></strong>... Ici, nous allons nous contenter de faire deux sous-classes <strong><span class="courrier">Canin</span></strong> et <strong><span class="courrier">Felin</span></strong> qui hériteront d'<strong><span class="courrier">Animal</span></strong> et dont nos objets hériteront ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Nous allons redéfinir la méthode <strong><span class="courrier">deplacement()</span></strong> dans cette classe car nous allons partir du principe que les félins se déplacent d'une certaine façon, et les canins d'une autre. Avec cet exemple, nous réviserons le polymorphisme... <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Voilà notre diagramme mis à jour : <br>
<div class="centre"><img src="./java_files/103495.png" alt="Image utilisateur"></div><br>
<br>
Vous avez vu ? J'ai ajouté une méthode <strong><span class="courrier">toString() </span></strong>:D.<br>
<br>
Voici les codes Java correspondant :<br>
<br>
<h4><span class="bleu">Animal.java</span></h4> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="syntax"><pre><span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Animal</span> <span class="o">{</span>
 
        <span class="c">/**</span>
<span class="c">         * La couleur de l'animal</span>
<span class="c">         */</span>
        <span class="kd">protected</span> <span class="n">String</span> <span class="n">couleur</span><span class="o">;</span>
        <span class="c">/**</span>
<span class="c">         * Le poids</span>
<span class="c">         */</span>
        <span class="kd">protected</span> <span class="kt">int</span> <span class="n">poids</span><span class="o">;</span>
        
        <span class="c">/**</span>
<span class="c">         * La méthode manger</span>
<span class="c">         */</span> 
        <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">manger</span><span class="o">(){</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je mange de la viande"</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="c">/**</span>
<span class="c">         * La méthode boire</span>
<span class="c">         */</span>
        <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">boire</span><span class="o">(){</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je bois de l'eau !"</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="c">/**</span>
<span class="c">         * La méthode de déplacement</span>
<span class="c">         */</span>
        <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">deplacement</span><span class="o">();</span>
        <span class="c">/**</span>
<span class="c">         * La méthode de cri </span>
<span class="c">         */</span>
        <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">crier</span><span class="o">();</span>
        
        <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">(){</span>
                
                <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"Je suis un objet de la "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">getClass</span><span class="o">()</span> <span class="o">+</span> <span class="s">", je suis "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">couleur</span> <span class="o">+</span> <span class="s">", je pèse "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">poids</span><span class="o">;</span>
                <span class="k">return</span> <span class="n">str</span><span class="o">;</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="bleu">Felin.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Felin</span> <span class="kd">extends</span> <span class="n">Animal</span> <span class="o">{</span>
 
        <span class="nd">@Override</span>
        <span class="kt">void</span> <span class="nf">deplacement</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me déplace seul !"</span><span class="o">);</span>
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="bleu">Canin.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Canin</span> <span class="kd">extends</span> <span class="n">Animal</span> <span class="o">{</span>
 
        <span class="nd">@Override</span>
        <span class="kt">void</span> <span class="nf">deplacement</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me déplace en meute !"</span><span class="o">);</span>
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="bleu">Chien.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Chien</span> <span class="kd">extends</span> <span class="n">Canin</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="nf">Chien</span><span class="o">(){</span>
                
        <span class="o">}</span>
        <span class="kd">public</span> <span class="nf">Chien</span><span class="o">(</span><span class="n">String</span> <span class="n">couleur</span><span class="o">,</span> <span class="kt">int</span> <span class="n">poids</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">couleur</span> <span class="o">=</span> <span class="n">couleur</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">poids</span> <span class="o">=</span> <span class="n">poids</span><span class="o">;</span>
        <span class="o">}</span>       
 
        
        <span class="kt">void</span> <span class="nf">crier</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"J'aboie sans raison ! "</span><span class="o">);</span>
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="bleu">Loup.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Loup</span> <span class="kd">extends</span> <span class="n">Canin</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="nf">Loup</span><span class="o">(){</span>
                
        <span class="o">}</span>
        <span class="kd">public</span> <span class="nf">Loup</span><span class="o">(</span><span class="n">String</span> <span class="n">couleur</span><span class="o">,</span> <span class="kt">int</span> <span class="n">poids</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">couleur</span> <span class="o">=</span> <span class="n">couleur</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">poids</span> <span class="o">=</span> <span class="n">poids</span><span class="o">;</span>
        <span class="o">}</span>       
 
        <span class="kt">void</span> <span class="nf">crier</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"J'hurle à la lune en faisant ouhouh ! ! "</span><span class="o">);</span>                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="bleu">Lion.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Lion</span> <span class="kd">extends</span> <span class="n">Felin</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="nf">Lion</span><span class="o">(){</span>
                
        <span class="o">}</span>
        <span class="kd">public</span> <span class="nf">Lion</span><span class="o">(</span><span class="n">String</span> <span class="n">couleur</span><span class="o">,</span> <span class="kt">int</span> <span class="n">poids</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">couleur</span> <span class="o">=</span> <span class="n">couleur</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">poids</span> <span class="o">=</span> <span class="n">poids</span><span class="o">;</span>
        <span class="o">}</span>       
 
        <span class="kt">void</span> <span class="nf">crier</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je rugis dans la savane !"</span><span class="o">);</span>
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="bleu">Tigre.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Tigre</span> <span class="kd">extends</span> <span class="n">Felin</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="nf">Tigre</span><span class="o">(){</span>
                
        <span class="o">}</span>
        <span class="kd">public</span> <span class="nf">Tigre</span><span class="o">(</span><span class="n">String</span> <span class="n">couleur</span><span class="o">,</span> <span class="kt">int</span> <span class="n">poids</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">couleur</span> <span class="o">=</span> <span class="n">couleur</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">poids</span> <span class="o">=</span> <span class="n">poids</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="kt">void</span> <span class="nf">crier</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je grogne très fort !"</span><span class="o">);</span>
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="bleu">Chat.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Chat</span> <span class="kd">extends</span> <span class="n">Felin</span> <span class="o">{</span>
 
        
        <span class="kd">public</span> <span class="nf">Chat</span><span class="o">(){</span>
                
        <span class="o">}</span>
        <span class="kd">public</span> <span class="nf">Chat</span><span class="o">(</span><span class="n">String</span> <span class="n">couleur</span><span class="o">,</span> <span class="kt">int</span> <span class="n">poids</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">couleur</span> <span class="o">=</span> <span class="n">couleur</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">poids</span> <span class="o">=</span> <span class="n">poids</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="kt">void</span> <span class="nf">crier</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je miaule sur les toits !"</span><span class="o">);</span>
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq question">Dis donc ! Une classe abstraite ne doit pas avoir une méthode abstraite ?</div><br>
Je n'ai jamais dis ça ! Une classe déclarée abstraite n'est plus instanciable, mais elle n'est nullement obligée d'avoir des méthodes abstraites !<br>
<strong><span class="rouge">En revanche, une classe ayant une méthode abstraite doit être déclarée abstraite ! </span></strong><br>
<br>
Maintenant que vous avez toutes vos classes,<br>
 faites des tests. Autant que vous le voulez.<br>
Dans cet esprit : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="c">/**</span>
<span class="c">         * @param args</span>
<span class="c">         */</span>
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">Loup</span> <span class="n">l</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Loup</span><span class="o">(</span><span class="s">"Gris bleuté"</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
                <span class="n">l</span><span class="o">.</span><span class="na">boire</span><span class="o">();</span>
                <span class="n">l</span><span class="o">.</span><span class="na">manger</span><span class="o">();</span>
                <span class="n">l</span><span class="o">.</span><span class="na">deplacement</span><span class="o">();</span>
                <span class="n">l</span><span class="o">.</span><span class="na">crier</span><span class="o">();</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">l</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voilà le jeu d'essai de ce code : <br>
<br>
<div class="centre"><img src="./java_files/110012.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Dans la méthode <strong><span class="courrier">toString()</span></strong> de la classe <strong><span class="courrier">Animal</span></strong>, j'ai utilisé la méthode <strong><span class="courrier"><span class="violet">getClass()</span></span></strong> qui -<span class="italique">je vous le donne en mille</span>- est dans la classe <strong><span class="courrier">Object</span></strong>. Celle-ci retourne "<span class="courrier">class &lt;nom de la classe&gt;</span>".</div><br>
<br>
Dans cet exemple, nous pouvons voir que nous avons un objet <strong><span class="courrier">Loup</span></strong>.<br>
<ul>
<li>À l'appel de la méthode <strong><span class="courrier">boire()</span></strong> : l'objet appelle la méthode de la classe <strong><span class="courrier">Animal</span></strong>.</li>
<li>À l'appel de la méthode <strong><span class="courrier">manger()</span></strong> : idem.</li>
<li>À l'appel de la méthode <strong><span class="courrier">toString()</span></strong> : idem.</li>
<li>À l'appel de la methode <strong><span class="courrier">deplacement()</span></strong> : c'est la méthode de la classe <span class="courrier"><strong>Canin</strong></span> qui est invoquée ici.</li>
<li>À l'appel de la méthode <strong><span class="courrier">crier()</span></strong> : c'est la méthode de la classe <strong><span class="courrier">Loup</span></strong> qui est appelée.</li>
</ul><br>
<br>
Remplacez le type de référence (ici, <span class="courrier">Loup</span>) par <strong><span class="courrier">Animal</span></strong> ou <span class="courrier"><strong>Object</strong></span>. Essayez avec des objets <strong><span class="courrier">Chien</span></strong>, etc. Et vous verrez que tout fonctionne, excepté que vous ne pourrez pas instancier d'<span class="courrier"><strong>Object</strong></span>, de <span class="courrier"><strong>Felin</strong></span> ou de <span class="courrier"><strong>Canin</strong></span> !<br>
<br>
Avant de partir en quête d'un QCM, je crois qu'une nouvelle astuce d'eclispe est disponible ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10375">Astuce d'Eclipse</h2>
		<div class="ss_part_texte">
		Lorsque vous créez votre classe et plus particulièrement vos classes héritées, Eclipse peut gérer la gestion des mots clé.<br>
Il peut :<br>
<ul>
<li>ajouter le mot clé <span class="courrier">extends</span> avec la classe mère</li>
<li>ajouter les méthodes à redéfinir dans le cas d'une classe abstraite.</li>
</ul><br>
<br>
Voyez comment faire. Nous allons faire une classe <strong><span class="courrier">Panthere</span></strong> héritée de <strong><span class="courrier">Felin</span></strong>.<br>
Une fois que vous avez inscrit le nom de votre classe, regardez plus bas : vous pouvez voir le nom de la super classe de votre nouvelle classe : <br>
<br>
<div class="centre"><img src="./java_files/103498.png" alt="Image utilisateur"></div><br>
<br>
En cochant la case <span class="impact">abstract</span>, votre nouvelle classe sera abstraite. Et, comme vous pouvez le voir, votre classe hérite par défaut de <strong><span class="courrier">Object</span></strong>. Pour changer ceci, cliquez sur <span class="impact">Browse</span>. Vous arrivez sur cette fenêtre ; ici, il vous suffit de mettre le nom de la classe mère, comme ceci :<br>
<br>
<div class="centre"><img src="./java_files/103500.png" alt="Image utilisateur"></div><br>
<br>
Vous devez taper le nom complet de votre classe. Ici, comme nous n'avons pas encore utilisé de <strong><span class="italique">package</span></strong>, il suffit de taper <strong><span class="courrier">Felin</span></strong>. En plus, Eclipse gère l'auto-complétion, ce qui signifie qu'il termine tous les noms des classes en vous proposant une liste exhaustive. Il vous suffit donc de choisir la classe mère, et de valider. <br>
<div class="rmq information">Lorsque la classe mère est dans un package, vous devez saisir le nom complet de la classe. Par exemple, si vous voulez faire une classe héritée de la classe <strong><span class="violet"><span class="courrier">Scanner</span></span></strong>, vous devrez commencer par saisir :<strong> <span class="courrier">java.util.Scanner</span></strong>.</div><br>
<br>
Terminez l'étape et voici le résultat :<br>
<br>
<div class="centre"><img src="./java_files/103501.png" alt="Image utilisateur"></div><br>
<br>
Vous voyez que l'héritage est bon et que les méthodes de la classe abstraite sont mises automatiquement ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Pratique, n'est-ce pas ? <br>
<br>
<div class="rmq question">Et au fait, que veut dire @Override ?</div><br>
L'annotation <span class="courrier"><span class="violet">@Override</span></span> doit être utilisée lorsqu'une méthode redéfinit la méthode de la super classe.<br>
Celle-ci existe dans la classe mère mais on redéfinit son contenu dans la classe fille. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Cependant, dans notre exemple, c'est Eclipse qui rajoute automatiquement cette annotation, mais, si vous redéfinissez une méthode d'une classe mère manuellement, vous pouvez l'ajouter vous même, tout en sachant que <strong>ceci n'est pas obligatoire</strong> !<br>
<br>
Allez, en avant pour le topo.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10374">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		Avec les classes abstraites, vous devez vous rappelez ceci : <br>
<ul>
<li>une classe est définie comme abstraite avec le mot clé <strong><span class="violet"><span class="courrier">abstract</span></span></strong>.</li>
<li>Une classe abstraite <strong><span class="rouge">ne peut pas être instanciée</span></strong>.</li>
<li>Une classe abstraite n'est pas obligée de contenir de méthode abstraite.</li>
<li>Si une classe contient une méthode abstraite, cette classe doit alors être déclarée abstraite.</li>
<li>Une méthode abstraite n'a pas de corps.</li>
<li>Les classes abstraites sont à utiliser lorsque qu'une classe mère ne doit pas être instanciée.</li>
</ul><br>
<br>
Un petit topo ici... Bon... Un QCM vous attend. <img src="./java_files/heureux.png" alt=":D" class="smilies">
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Maintenant, veuillez aller à la partie suivante :<strong><span class="vertf"> Les interfaces.</span></strong>
	</div>
	
	<hr>
	<h1 id="chap_10387">Les interfaces</h1>
	<div id="chap_intro">
	Voici donc l'un des autres fondements du langage : les <strong>interfaces</strong> !<br>
<br>
Il ne s'agit pas ici d'interfaces graphiques... <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
Mais vous allez apercevoir ce que les programmeurs Java appellent le nec plus ultra du polymorphisme !<br>
Je suis sûr que vous devez être impatients de voir ce point... Alors, qu'attendons nous ? <img src="./java_files/heureux.png" alt=":D" class="smilies">
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10386">Une petite devinette</h2>
		<div class="ss_part_texte">
		L'un des atouts majeurs, pour ne pas dire l'atout majeur, de la programmation orientée objet est la réutilisabilité de vos objets.<br>
Il est bien commode de pouvoir utiliser un objet, voire même une architecture que nous avons développée dans une application nouvelle.<br>
<br>
Admettons que l'architecture que nous avons développée dans les chapitres précédents forme une bonne base. Que se passerait-il si un autre développeur vous demande la possibilité d'utiliser vos objets dans un autre type d'application ?<br>
Dans la nôtre, nous ne nous sommes occupés que de l'aspect générique des animaux que nous avons créés. Cependant, la personne qui vous a contacté, lui, développe une application pour un chenil. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
La principale contrainte, c'est que vos chiens vont devoir apprendre à faire de nouvelles choses comme : <br>
<ul>
<li>faire le beau,</li>
<li>faire des calins,</li>
<li>faire une léchouille.</li>
</ul><br>
<br>
<div class="rmq question">Je ne vois pas le problème ! Tu n'as qu'à ajouter ces méthodes dans la classe <strong><span class="courrier">Animal</span></strong>.</div><br>
Oula ! Vous vous rendez bien compte que vous allez avoir des lions qui vont faire le beau ? <img src="./java_files/blink.gif" alt="o_O" class="smilies"> <br>
<br>
<div class="rmq question">Dans ce cas, on n'a qu'à mettre ces méthodes dans la classe <strong><span class="courrier">Chien </span></strong>!</div><br>
Ceci pourrait être une solution, mais j'y vois deux contre-indications :<br>
<ul>
<li>vous allez devoir mettre en oeuvre une convention de nommage entre vous et le programmeur qui va utiliser vos objets... Vous ne devrez pas utiliser une méthode <strong><span class="italique">faireCalin()</span></strong> alors que le programmeur utilise une méthode <strong><span class="courrier">faireUnCalin()</span></strong> ;</li>
<li>si vous faites ceci. <strong><span class="rouge">ADIEU LE POLYMORPHISME</span></strong> ! Vous ne pourrez pas appeler vos objets par le biais d'un super type. Pour pouvoir accéder à ces méthodes, vous devrez obligatoirement passer par une référence à un objet <strong><span class="courrier">Chien</span></strong>. Pas terrible, tout ça...</li>
</ul><br>
<br>
<div class="rmq question">Tu nous as dit que pour utiliser au mieux le polymorphisme, nous devions définir les méthodes au plus haut niveau de la hiérarchie.</div><br>
Tout à fait.<br>
<div class="rmq question">Alors du coup, il faut redéfinir un super type pour pouvoir utiliser le polymorphisme !</div><br>
Oui, et je vous rappelle que l'héritage multiple est interdit en Java. Et quand je dis interdit, je veux dire que Java ne gère pas ça !<br>
Nous sommes sur la bonne voie. Il faudrait pouvoir développer un nouveau super type et s'en servir dans nos classes <strong><span class="courrier">Chien</span></strong>.<br>
Eh bien nous pouvons faire cela avec des <strong><span class="bleu">interfaces</span></strong>.<br>
<br>
En fait, les interfaces permettent de créer un nouveau super type ; on peut même en ajouter autant que nous le souhaitons dans une seule classe ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
En plus, concernant l'utilisation de nos objets, la convention est toute trouvée... Pourquoi ? Parce qu'une interface n'est rien d'autre qu'une classe 100 % abstraite !<br>
Allez : venons-en au fait ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10385">Votre première interface</h2>
		<div class="ss_part_texte">
		Pour définir une interface, au lieu d'écrire : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">A</span><span class="o">{</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
il vous suffit de faire : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">interface</span> <span class="n">I</span><span class="o">{</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voilà, vous venez d'apprendre à déclarer une interface. Maintenant, tant qu'à y ajouter des méthodes, vu qu'une interface est une classe 100 % abstraite, vous n'avez qu'à y mettre des méthodes abstraites. Mais sans mettre le mot clé <strong><span class="violet"><span class="courrier">abstract</span></span></strong>.<br>
Voici des exemples d'interfaces : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">interface</span> <span class="n">I</span><span class="o">{</span>
 
   <span class="k">public</span> <span class="kt">void</span> <span class="nf">A</span><span class="o">();</span>
   <span class="k">public</span> <span class="n">String</span> <span class="nf">B</span><span class="o">();</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">interface</span> <span class="n">I2</span><span class="o">{</span>
 
   <span class="k">public</span> <span class="kt">void</span> <span class="nf">C</span><span class="o">();</span>
   <span class="k">public</span> <span class="n">String</span> <span class="nf">D</span><span class="o">();</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et pour faire en sorte qu'une classe utilise une interface, il suffit d'utiliser le mot clé <strong><span class="violet"><span class="courrier">implements</span></span></strong>.<br>
Ce qui nous donnerait :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">X</span> <span class="k">implements</span> <span class="n">I</span><span class="o">{</span>
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">A</span><span class="o">(){</span>
      <span class="c">//.......</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="n">String</span> <span class="nf">B</span><span class="o">(){</span>
      <span class="c">//.......</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Voilà, c'est tout. <strong>On dit que la classe X implémente l'interface I</strong>.<br>
Et donc, comme je vous le disais, vous pouvez implémenter plusieurs interfaces, voilà donc comment ça se passe :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">X</span> <span class="k">implements</span> <span class="n">I</span><span class="o">,</span> <span class="n">I2</span><span class="o">{</span>
   <span class="k">public</span> <span class="kt">void</span> <span class="nf">A</span><span class="o">(){</span>
      <span class="c">//.......</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="n">String</span> <span class="nf">B</span><span class="o">(){</span>
      <span class="c">//.......</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">C</span><span class="o">(){</span>
      <span class="c">//.......</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="n">String</span> <span class="nf">D</span><span class="o">(){</span>
      <span class="c">//.......</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq attention">Par contre, lorsque vous implémentez une ou plusieurs interfaces, vous <strong>DEVEZ OBLIGATOIREMENT</strong> redéfinir leurs méthodes !</div><br>
Et ainsi, avec le polymorphisme, vous pouvez faire ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span><span class="o">{</span>
 
   <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
      <span class="n">I</span> <span class="n">var</span> <span class="o">=</span> <span class="k">new</span> <span class="n">X</span><span class="o">();</span><span class="c">//Avec cette référence, vous pouvez utiliser de façon polymorphe les méthodes de l'interface I</span>
      <span class="n">I2</span> <span class="n">var2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">X</span><span class="o">();</span><span class="c">//Avec cette référence, vous pouvez utiliser de façon polymorphe les méthodes de l'interface I2</span>
      <span class="n">var</span><span class="o">.</span><span class="na">A</span><span class="o">();</span>
      <span class="n">var2</span><span class="o">.</span><span class="na">C</span><span class="o">();</span>
   
   <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Maintenant que vous savez cela, attelons-nous à notre programme. <img src="./java_files/heureux.png" alt=":D" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10384">Implémentation de l'interface Rintintin</h2>
		<div class="ss_part_texte">
		<h4>Voilà où nous en sommes</h4>  <br>
<ul>
<li>Nous voulons que nos chiens puissent être amicaux.</li>
<li>Nous voulons définir un super type pour pouvoir utiliser le polymorphisme.</li>
<li>Nous voulons pouvoir continuer à utiliser nos objets comme avant.</li>
</ul><br>
<br>
Comme le titre de cette sous-partie le stipule, nous allons créer l'interface <strong><span class="courrier">Rintintin</span></strong> pour ensuite l'implémenter dans notre objet <strong><span class="courrier">Chien</span></strong>.<br>
<br>
Sous Eclipse, vous pouvez faire <span class="impact">File</span> / <span class="impact">New</span> / <span class="impact">Interface</span>, ou simplement cliquer sur la flèche noire à côté du C pour la création de classe, et choisir <span class="impact">interface</span>.<br>
<div class="centre"><img src="./java_files/103573.png" alt="Image utilisateur"></div><br>
<br>
Voici son code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Rintintin</span><span class="o">{</span>
 
   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">faireCalin</span><span class="o">();</span>
   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">faireLechouille</span><span class="o">();</span>
   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">faireLeBeau</span><span class="o">();</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
À présent, il ne nous reste plus qu'à implémenter l'interface dans notre classe <strong><span class="courrier">Chien</span></strong>. Ce qui nous donne : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Chien</span> <span class="kd">extends</span> <span class="n">Canin</span> <span class="kd">implements</span> <span class="n">Rintintin</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="nf">Chien</span><span class="o">(){</span>
                
        <span class="o">}</span>
        <span class="kd">public</span> <span class="nf">Chien</span><span class="o">(</span><span class="n">String</span> <span class="n">couleur</span><span class="o">,</span> <span class="kt">int</span> <span class="n">poids</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">couleur</span> <span class="o">=</span> <span class="n">couleur</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">poids</span> <span class="o">=</span> <span class="n">poids</span><span class="o">;</span>
        <span class="o">}</span>       
 
        
        <span class="kt">void</span> <span class="nf">crier</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"J'aboie sans raison ! "</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">faireCalin</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je te fais un GROS CÂLIN"</span><span class="o">);</span>
                
        <span class="o">}</span>
        
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">faireLeBeau</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je fais le beau !"</span><span class="o">);</span>
                
        <span class="o">}</span>
        
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">faireLechouille</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je fais de grosses léchouilles..."</span><span class="o">);</span>
                
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq erreur"><strong><span class="gros">L'ordre des déclarations est PRIMORDIAL. Vous DEVEZ mettre l'expression d'héritage AVANT l'expression d'implémentation, SINON votre code ne compilera pas !</span></strong></div><br>
<br>
Voici un code que vous pouvez utiliser pour tester le polymorphisme de notre implémentation : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="cm">/**</span>
<span class="cm">         * @param args</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                <span class="c1">//Les méthodes d'un chien </span>
                <span class="n">Chien</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Chien</span><span class="o">(</span><span class="s">"Gris bleuté"</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
                <span class="n">c</span><span class="o">.</span><span class="na">boire</span><span class="o">();</span>
                <span class="n">c</span><span class="o">.</span><span class="na">manger</span><span class="o">();</span>
                <span class="n">c</span><span class="o">.</span><span class="na">deplacement</span><span class="o">();</span>
                <span class="n">c</span><span class="o">.</span><span class="na">crier</span><span class="o">();</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"--------------------------------------------"</span><span class="o">);</span>
                <span class="c1">//Les méthodes de l'interface</span>
                <span class="n">c</span><span class="o">.</span><span class="na">faireCalin</span><span class="o">();</span>
                <span class="n">c</span><span class="o">.</span><span class="na">faireLeBeau</span><span class="o">();</span>
                <span class="n">c</span><span class="o">.</span><span class="na">faireLechouille</span><span class="o">();</span>
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"--------------------------------------------"</span><span class="o">);</span>
                <span class="c1">//Utilisons le polymorphisme de notre interface</span>
                <span class="n">Rintintin</span> <span class="n">r</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Chien</span><span class="o">();</span>
                <span class="n">r</span><span class="o">.</span><span class="na">faireLeBeau</span><span class="o">();</span>
                <span class="n">r</span><span class="o">.</span><span class="na">faireCalin</span><span class="o">();</span>
                <span class="n">r</span><span class="o">.</span><span class="na">faireLechouille</span><span class="o">();</span>
                
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Objectif atteint ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Nous avons réussi à définir deux super classes afin de les utiliser comme super types et de jouir  pleinement du polymorphisme !<br>
Nous allons voir au chapitre suivant qu'il y a une façon d'utiliser les interfaces très intéressante ! Mais pour le moment, voyons un peu à quoi ressemble notre diagramme, à présent :<br>
<br>
<div class="centre"><img src="./java_files/103576.png" alt="Image utilisateur"></div><br>
<br>
Nous voyons bien notre interface <strong><span class="courrier">Rintintin</span></strong> ainsi que ses méthodes, et notre flèche pointillée qui se dirige vers notre interface signifie "<strong>implémente</strong>".<br>
Nous pouvons lire <strong><span class="courrier">Chien</span> <span class="bleu">implemente</span> <span class="courrier">Rintintin</span></strong>.<br>
<br>
Bon : c'est l'heure d'une petite astuce de notre IDE préféré, il me semble... <img src="./java_files/clin.png" alt=";)" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10383">Astuce d'Eclipse</h2>
		<div class="ss_part_texte">
		<h4><span class="souligne">Astuce 1</span></h4><br>
<br>
Je vous ai expliqué comment créer directement une interface.<br>
 Mais vous avez sans doute remarqué qu'une erreur persistante apparaît lorsque vous saisissez <strong><span class="courrier">implements Rintintin</span></strong> après la déclaration de votre classe.<br>
<br>
Je pense même que vous devez avoir une zolie croix rouge à côté du nom de la classe, comme celle-ci :<br>
<div class="centre"><img src="./java_files/103579.png" alt="Image utilisateur"></div><br>
<div class="rmq information"><strong>Cette erreur est dûe au fait que vous n'avez pas implémenté les méthodes de l'interface !</strong></div><br>
Cliquez sur cette croix rouge et choisissez l'option <span class="impact">add unimplemented method</span> : Eclipse ajoutera automatiquement toutes les méthodes à implémenter par la classe. <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
<div class="centre"><img src="./java_files/103580.png" alt="Image utilisateur"></div><br>
<br>
<h4><span class="souligne">Astuce 2</span></h4> <br>
<br>
Je vais vous demander de faire appel à de vieux souvenirs provenant du chapitre précédent. Rappelez-vous l'astuce d'Eclipse afin de définir la super classe pour l'héritage. Eh bien Eclipse fait la même chose pour les interfaces... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Si, si, je vous assure. Regardez plutôt comment on crée une classe <strong><span class="courrier">ChienSauvage</span></strong> héritant d' <strong><span class="courrier">Animal</span></strong> et implémentant <strong><span class="courrier">Rintintin</span></strong>.<br>
On crée une nouvelle classe héritant d'<strong><span class="courrier">Animal</span></strong> (vous savez faire) et avant de valider, regardez juste en dessous :<br>
<div class="centre"><img src="./java_files/103581.jpeg" alt="Image utilisateur"></div><br>
<br>
Cliquez à présent sur <span class="impact">Add</span>, vous arrivez sur une fenêtre où il vous est demandé quelle interface vous voulez implémenter. Commencez à taper <strong><span class="courrier">Rintintin</span></strong> et, grâce à l'autocomplétion, Eclipse vous fait une sélection des interfaces disponibles dont <strong><span class="courrier">Rintintin</span></strong>. Voyez plutôt :<br>
<br>
<div class="centre"><img src="./java_files/103582.jpeg" alt="Image utilisateur"></div><br>
<br>
Il ne vous reste plus qu'à cliquer sur <span class="impact">OK</span>, et voyez le résulat :<br>
<br>
<div class="centre"><img src="./java_files/103583.jpeg" alt="Image utilisateur"></div><br>
<br>
Votre classe implémente l'interface <strong><span class="courrier">Rintintin</span></strong>.<br>
Terminez l'opération : vous avez une classe qui hérite d'<strong><span class="courrier">Animal</span></strong> ET qui implémente <strong><span class="courrier">Rintintin</span></strong>. Celle-ci redéfinit toutes les méthodes abstraites de la classe abstraite ainsi que toutes les méthodes de l'interface. <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
On dit merci qui ?<br>
Bon : je crois qu'un topo est indispensable. <img src="./java_files/hihi.png" alt="^^" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10382">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		Alors, ici, la nouveauté vient de l'interface... Mais récapitulons un peu ce que nous avons vu.<br>
<ul>
<li>Une interface est une classe <strong>100 % abstraite</strong>.</li>
<li>Toutes les méthodes d'une interface n'ont pas de corps.</li>
<li>Une interface sert à définir un <strong>super type et à utiliser le polymorphisme</strong>.</li>
<li>Une interface s'implémente dans une classe en utilisant le mot clé <strong><span class="violet"><span class="courrier">implements</span></span></strong>.</li>
<li>Vous pouvez implémenter autant d'interfaces que vous voulez dans vos classes.</li>
<li><strong><span class="rouge">Vous devez redéfinir toutes les méthodes de l'interface (ou les interfaces) dans votre classe</span></strong>.</li>
</ul><br>
<br>
Allez, c'est l'heure du QCM !
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Prenez bien le temps de comprendre les deux chapitres que nous venons de voir. <br>
Ceux-ci forment l'un des gros blocs du langage et vous verrez, lorsque nous aborderons les interfaces graphiques, que ces deux concepts sont omniprésents ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Pour le moment, nous allons continuer de voir les fondements de la programmation orientée objet, et poursuivons tout de suite par <strong><span class="vertf">les exceptions</span></strong> !
	</div>
	
	<hr>
	<h1 id="chap_10399">Les exceptions</h1>
	<div id="chap_intro">
	Voici encore une notion très importante en programmation Java.<br>
<br>
<div class="rmq information"><span class="gros"><span class="souligne">Exception</span></span> : erreur se produisant dans un programme conduisant le plus souvent à l'arrêt de celui-ci.<br>
</div><br>
Il vous est sûrement déjà arrivé d'avoir un gros message affiché en rouge dans la console d'eclipse : eh bien ceci a été généré par une exception... qui n'a pas été <strong><span class="bleu">capturée</span></strong>. La gestion des exceptions s'appelle aussi la <span class="bleu">capture d'exception</span> !<br>
<br>
Le principe consiste à repérer un morceau de code qui pourrait générer une exception (une division par zéro, par exemple), de capturer l'exception correspondante, et enfin de gérer celle-ci, c'est-à-dire d'afficher un message personnalisé et de continuer le traitement.<br>
<br>
Bon : vous voyez maintenant ce que nous allons aborder durant ce chapitre... Donc, allons-y !  <img src="./java_files/heureux.png" alt=":D" class="smilies">  
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10398">Premier exemple d'exception et le bloc try{....} catch{...}</h2>
		<div class="ss_part_texte">
		Pour vous faire comprendre le principe des exceptions, je dois tout d'abord vous dire que Java contient une classe nommée <strong><span class="bleu">Exception</span></strong>, où sont répertoriés différents cas d'erreurs. La division par zéro dont je vous parlais tout à l'heure en fait partie !<br>
<br>
<div class="rmq information">Toutes les classes de Java possèdent des exceptions : par exemple, la classe <strong><span class="courrier">java.io</span></strong>, qui gère les entrées - sorties, a, entre autres, l'exception <strong><span class="courrier">IOException</span></strong>.</div><br>
<br>
Je ne peux malheureusement pas vous en faire toute la liste, mais.... je peux vous donner une astuce pour savoir de laquelle il s'agit... Et ainsi pouvoir la capturer, et afficher un message personnalisé, sans que votre programme ne s'arrête. <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"> <br>
<br>
Créez un nouveau projet avec seulement la classe <span class="courrier"><strong>main</strong></span>, et mettez-y le code suivant :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">20</span><span class="o">,</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">j</span><span class="o">/</span><span class="n">i</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"coucou toi !"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Vous devriez avoir un zoli message d'erreur Java (en rouge) comme celui-ci :<br>
<br>
<div class="centre"><img src="./java_files/103637.png" alt="Image utilisateur"></div><br>
<br>
Mais surtout, vous devez vous rendre compte que lorsque l'exception a été levée, <strong><span class="rouge">le programme s'est arrêté</span></strong> !<br>
Dans ce message, le nom de l'exception qui a été déclenchée est <span class="rouge"><span class="courrier">ArithmeticException</span></span>. Nous savons donc maintenant qu'une division par zéro est une <span class="rouge"><span class="courrier">ArithmeticException</span></span>. Nous allons pouvoir la capturer, et réaliser un traitement en conséquence.<br>
<br>
<div class="rmq information">Une exception se capture grâce à un bloc <strong><span class="courrier">try {</span></strong><span class="italique">ici, le code susceptible de générer une exception</span><strong><span class="courrier">}</span></strong> ; le traitement associé, lorsque le bloc <span class="courrier">try{...}</span> capture une exception, se trouve dans un bloc <strong><span class="courrier">catch {</span></strong><span class="italique">ici, ce que le programme doit faire si une exception est capturée</span><strong><span class="courrier">}</span></strong>.</div><br>
<br>
Ce que je vous propose maintenant, c'est de capturer l'exception de notre division par zéro, et d'afficher un message personnalisé. Pour ce faire, tapez le code suivant dans votre <span class="courrier"><strong>main</strong></span> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="c">/**</span>
<span class="c">         * @param args</span>
<span class="c">         */</span>
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">20</span><span class="o">,</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="k">try</span> <span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">j</span><span class="o">/</span><span class="n">i</span><span class="o">);</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ArithmeticException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c">// TODO Auto-generated catch block</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Division par zéro !"</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"coucou toi !"</span><span class="o">);</span>
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Si vous exécutez ce code, vous devez avoir ceci sous les yeux :<br>
<br>
<img src="./java_files/103638.png" alt="Image utilisateur"><br>
<br>
Je tiens tout d'abord à vous féliciter : vous venez de capturer votre première exception en Java ! <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
<br>
<span class="souligne">Voyons un peu ce qui se passe</span> :<br>
<ul>
<li>nous initialisons deux variables de type <span class="italique">int</span>, l'une à 0, et l'autre à un chiffre quelconque.</li>
<li>Ensuite, nous isolons le code susceptible de générer une exception, ici : <strong><span class="courrier">System.out.println(j/i);</span></strong>.</li>
<li>Lorsque le programme atteint cette ligne, une exception de type <strong><span class="courrier">ArithmeticException</span></strong> est levée.</li>
<li>Notre bloc <span class="courrier">catch</span> contient justement un objet de type <strong><span class="courrier">ArithmeticException</span></strong> en paramètre. Nous l'avons appelé <strong><span class="arial">e</span></strong>.</li>
<li>L'exception étant capturée, l'instruction du bloc <span class="courrier">catch</span> s'exécute !</li>
<li>Notre message d'erreur personnalisé s'affiche alors à l'écran.</li>
</ul><br>
<br>
<div class="rmq information">Lorsque nous capturons une exception, nous pouvons aussi dire que nous levons une exception...</div><br>
<br>
<div class="rmq question">D'accord, mais le paramètre de notre bloc <span class="courrier">catch</span>, il sert à quoi, au juste ?</div><br>
<br>
Il sert à savoir quel type d'exception doit être capturé. Et l'objet -<span class="italique">ici, <strong><span class="arial">e</span></strong></span>- peut servir à agrémenter notre message, grâce à l'appel de la méthode <strong><span class="courrier">getMessage()</span></strong>.<br>
Faites à nouveau ce même test, en remplaçant l'instruction du <span class="courrier">catch</span> par celle-ci :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Division par zéro !"</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous devez maintenant avoir ceci :<br>
<br>
<div class="centre"><img src="./java_files/103639.png" alt="Image utilisateur"></div><br>
<br>
Voilà ce que vous renvoie la fonction <strong><span class="courrier">getMessage()</span></strong>.<br>
Je vous disais aussi que le principe de capture d'exception permettait de ne pas arrêter l'exécution du programme. Et vous avez pu le constater par vous-mêmes ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Lorsque nous capturons une exception, le code présent dans le bloc <strong><span class="courrier">catch(){<span class="italique">...</span>}</span></strong> est exécuté mais le programme poursuit son cours !<br>
Mais ce que vous ignorez sûrement, c'est que nous pouvons créer et intercepter nos propres exceptions !<br>
<br>
Si nous passions tout de suite à la prochaine partie de ce chapitre ? <img src="./java_files/langue.png" alt=":p" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10397">Les exceptions personnalisées</h2>
		<div class="ss_part_texte">
		À partir de maintenant, nous allons nous servir à nouveau de notre projet <span class="courrier">Ville</span> (celui que vous avez utilisé dans les premiers chapitres...).<br>
Nous allons perfectionner un peu la gestion de nos objets <strong><span class="courrier">Ville</span></strong> et <strong><span class="courrier">Capitale</span></strong>... Comment ? Eh bien je vois bien une exception qui pourrait être créée... Et je suis sûr que certains petits malins se sont déjà amusés à créer des villes ou des capitales avec un nombres d'habitants négatif.... <img src="./java_files/siffle.png" alt=":-°" class="smilies"> <br>
<br>
Je vous propose simplement de mettre en oeuvre une exception de notre cru, ceci afin de pouvoir interdire l'instanciation d'objet <strong><span class="courrier">Ville</span></strong> ou <strong><span class="courrier">Capitale</span></strong> ayant un nombre négatif d'habitants.<br>
<br>
La procédure pour faire ce tour de force est un peu particulière :<br>
<img src="./java_files/103655.jpg" alt="Image utilisateur"><ol class="liste_1">
<li> Nous devons créer une classe héritée de la classe <span class="courrier">Exception</span> : appelons-la <strong><span class="bleu"><span class="courrier">NombreHabitantException</span></span></strong>. Par convention, les exceptions ont un nom se terminant par <strong><span class="courrier">Exception</span></strong>.</li>
<li> Nous devons renvoyer l'exception levée à notre classe <strong><span class="courrier"><span class="bleu">NombreHabitantException</span></span></strong>.</li>
<li> Ensuite, gérer celle-ci dans notre classe <strong><span class="courrier"><span class="bleu">NombreHabitantException</span></span></strong>.</li></ol><br>
<div class="rmq question">Comment faire tout ça ?</div><br>
Eh bien je vais vous apprendre encore deux autres mots clés ! <img src="./java_files/pinch.png" alt="&gt;_&lt;" class="smilies"> <br>
Non, ne grimacez pas... Je vous assure que si vous en retenez un, vous allez retenir l'autre...<br>
<br>
<h4><span class="souligne">Le premier mot clé</span></h4> <br>
<br>
<strong><span class="bleu"><span class="courrier">throws</span></span></strong><br>
<br>
Ce mot clé permet de dire à une instruction Java (condition, déclaration de variable...) ou à une classe entière qu'une exception potentielle sera gérée par une classe -<span class="italique">souvent une classe personnalisée</span>- mais ce peut être la classe <strong><span class="courrier">Exception</span></strong> elle-même. Ce mot clé est suivi du nom de la classe qui va gérer l'exception. Ceci a pour but de définir le type d'exception qui risque d'être générée par l'instruction, ou la classe qui précède le mot clé <strong><span class="courrier">throws</span></strong>.<br>
<br>
<h4><span class="souligne">Le deuxième mot clé</span></h4> <br>
<br>
<strong><span class="bleu"><span class="courrier">throw</span></span></strong><br>
<br>
Celui-ci permet d'instancier un objet dans la classe suivant l'instruction <strong><span class="courrier">throws</span></strong>. Cette instruction est suivie du mot clé <span class="bleu"><span class="courrier">new</span></span> ainsi que d'un objet cité avec <strong><span class="courrier">throws</span></strong>. En fait, il lance une exception, tout simplement.<br>
<br>
<div class="rmq erreur">Faites surtout bien attention à ne pas confondre ces deux mots clé.</div><br>
<br>
Pour pouvoir mettre en pratique ce système, nous devons commencer par créer une classe qui va gérer nos exceptions. Celle-ci, je vous le rappelle, doit être héritée d'<strong><span class="courrier">Exception</span></strong>. Pour commencer, inutile de créer un constructeur, ce qui nous donnerait une classe <span class="courrier">Erreur</span>, héritée de <span class="courrier">Exception</span>, vide.<br>
Comme ceci :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">class</span> <span class="nc">NombreHabitantException</span> <span class="kd">extends</span> <span class="n">Exception</span><span class="o">{</span>
 
   <span class="kd">public</span> <span class="nf">NombreHabitantException</span><span class="o">(){</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Vous essayez d'instancier une classe Ville avec un nombre d'habitants négatif !"</span><span class="o">);</span>
        <span class="o">}</span>
  
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Reprenez votre projet avec vos classes <strong><span class="courrier">Ville</span></strong>, <strong><span class="courrier">Capitale</span></strong> et créez maintenant une classe <strong><span class="courrier">NombreHabitantException</span></strong>, comme je viens de le faire !<br>
<br>
Maintenant, c'est dans le constructeur de nos objets que nous allons mettre une condition qui, si elle est remplie, lève une exception de type <span class="courrier">NombreHabitantException</span>. <br>
<br>
<span class="souligne">En gros, nous devons dire à notre constructeur de ville</span> : "<span class="italique">Si l'utilisateur crée une instance ville avec un nombre d'habitants négatif, créer un objet de type </span><span class="courrier">NombreHabitantException</span> <span class="italique">(hérité d'</span><span class="courrier">Exception</span>).<br>
<br>
<span class="souligne">Le constructeur d'initialisation de ville doit ressembler à ce qui suit, maintenant.</span><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="nf">Ville</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pNbre</span><span class="o">,</span> <span class="n">String</span> <span class="n">pPays</span><span class="o">)</span> <span class="kd">throws</span>  <span class="n">NombreHabitantException</span>
  <span class="o">{</span>  
          <span class="k">if</span><span class="o">(</span><span class="n">pNbre</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span>
                  <span class="k">throw</span> <span class="k">new</span> <span class="nf">NombreHabitantException</span><span class="o">();</span>
          <span class="k">else</span>
          <span class="o">{</span>
                  <span class="n">nbreInstance</span><span class="o">++;</span>  
                  <span class="n">nbreInstanceBis</span><span class="o">++;</span>
                  
                  <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
                  <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
                  <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">pNbre</span><span class="o">;</span>
                  <span class="k">this</span><span class="o">.</span><span class="na">setCategorie</span><span class="o">();</span>
          <span class="o">}</span>
  <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<span class="bleu"><span class="courrier">throws NombreHabitantException</span></span> nous indique que si une erreur est capturée, celle-ci sera traitée en tant qu'objet de la classe <span class="courrier">NombreHabitantException</span> ! Ce qui, au final, nous renseigne sur le type de l'erreur en question.<br>
<br>
<span class="bleu"><span class="courrier">throw new NombreHabitantException();</span></span> instancie la classe <strong><span class="courrier">NombreHabitantException</span></strong> si la condition <strong><span class="courrier">if(nbre &lt; 0)</span></strong> est remplie.<br>
<br>
Maintenant que vous avez fait cette petite modification, retournez dans votre classe <strong><span class="courrier">main</span></strong>, effacez son contenu, puis créez un objet <span class="courrier">ville</span> de votre choix !<br>
Et à présent, vous devez voir une erreur persistante ; c'est tout à fait normal, ce qui doit vous donner ceci :<br>
<br>
<div class="centre"><img src="./java_files/103642.jpg" alt="Image utilisateur"></div><br>
<br>
Ceci signifie qu'à partir de maintenant, dû aux changements dans le constructeur, vous devrez gérer les exceptions possibles sur cette instruction. Avec un bloc <strong><span class="courrier">try{} catch{}</span></strong>.<br>
<div class="rmq information">On dit aussi que votre constructeur est devenu une <strong>méthode à risque</strong>, et vous avez laissé le soin au développeur de gérer l'exception potentielle !</div><br>
<br>
Donc, pour que l'erreur disparaisse, il nous faut entourer notre instanciation avec un bloc <strong><span class="violet"><span class="courrier">try{...}catch{...}</span></span></strong>.<br>
Comme ceci : <br>
<br>
<div class="centre"><img src="./java_files/103643.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez constater que l'erreur a disparu et que notre code compile et s'exécute correctement. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Par contre, il faut que vous soyez préparés à une chose. Le code que j'ai utilisé ci-dessus fonctionne très bien, mais ce code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Sdz1</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
        <span class="o">{</span>
                <span class="k">try</span> <span class="o">{</span>                   
                        <span class="n">Ville</span> <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"Rennes"</span><span class="o">,</span> <span class="mi">12000</span><span class="o">,</span> <span class="s">"France"</span><span class="o">);</span>         
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NombreHabitantException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
        
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="o">}</span>       
          
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
ne fonctionnera pas et pour appuyer mes dires, voici le témoignage de quelqu'un d'intègre :<br>
<br>
<div class="centre"><img src="./java_files/103645.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez constater qu'Eclipse n'aime pas du tout notre code ! <br>
<br>
<div class="rmq question">Pourquoi cela ?</div><br>
Tout simplement car la déclaration de votre objet <strong><span class="courrier">Ville</span></strong> est faite dans un sous-bloc d'instructions, celui du bloc <strong><span class="violet"><span class="courrier">try{}</span></span></strong>. Et rappelez-vous :<br>
<br>
<div class="rmq information"><strong>Une variable déclarée dans un bloc d'instructions n'existe que dans ce bloc d'instructions !</strong></div><br>
Donc, ici, notre objet <strong><span class="courrier">v</span></strong>, n'existe pas en dehors de l'instruction <strong><span class="violet"><span class="courrier">try{}</span></span></strong>. Pour <strong><span class="rouge">pallier ce problème</span></strong>, il nous suffit de <strong><span class="bleu"><span class="gros">déclarer</span> notre objet en dehors du bloc <span class="courrier">try{}</span> et de <span class="gros">l'instancier</span> à l'intérieur</span></strong> !<br>
<br>
Nous pouvons faire ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Sdz1</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
        <span class="o">{</span>
                <span class="n">Ville</span> <span class="n">v</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                <span class="k">try</span> <span class="o">{</span>                   
                        <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"Rennes"</span><span class="o">,</span> <span class="mi">12000</span><span class="o">,</span> <span class="s">"France"</span><span class="o">);</span>               
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NombreHabitantException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
        
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="o">}</span>       
          
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et ce code nous donne :  <br>
<span class="code">Code : Console - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 console"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre></pre></td><td class="code"><div class="syntax"><pre>Rennes&nbsp;est&nbsp;une&nbsp;ville&nbsp;de&nbsp;France,&nbsp;elle&nbsp;comporte&nbsp;:&nbsp;12000&nbsp;=&gt;&nbsp;elle&nbsp;est&nbsp;donc&nbsp;de&nbsp;catégorie&nbsp;:&nbsp;C</pre></div></td></tr></tbody></table></div><br>
<br>
Mais si nous déclarons une Ville avec un nombre d'habitants négatif pour tester notre exception ?<br>
Avec ce code, par exemple :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Sdz1</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
        <span class="o">{</span>
                <span class="n">Ville</span> <span class="n">v</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                <span class="k">try</span> <span class="o">{</span>                   
                        <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"Rennes"</span><span class="o">,</span> <span class="mi">12000</span><span class="o">,</span> <span class="s">"France"</span><span class="o">);</span>               
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NombreHabitantException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
        
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="o">}</span>       
          
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Voici ce que nous obtenons :<br>
<br>
<div class="centre"><img src="./java_files/103647.jpg" alt="Image utilisateur"></div><br>
<br>
Voyons ce qu'il s'est passé.<br>
<ul>
<li>Nous avons bien déclaré notre objet en dehors du bloc d'instructions.</li>
<li>Au moment d'instancier celui-ci, une exception est levée ! L'instanciation échoue lamentablement ! <img src="./java_files/triste.png" alt=":(" class="smilies"></li>
<li>La clause <strong><span class="violet"><span class="courrier">catch{}</span></span></strong> est exécutée et notre objet <strong><span class="courrier">NombreHabitantException</span></strong> est instancié. Écriture du message.</li>
<li>Et lorsque nous arrivons sur l'instruction "<strong><span class="courrier">System.out.println(v.toString());</span></strong>", notre objet est <strong><span class="violet"><span class="courrier">null</span></span></strong> !</li>
<li>Une <strong><span class="violet"><span class="courrier">NullPointerException</span></span></strong> est levée !</li>
</ul><br>
<br>
<br>
Ce qui signifie que si notre instanciation a échoué dans notre bloc <strong><span class="violet"><span class="courrier">try{}</span></span></strong>, le programme plantera !  <img src="./java_files/huh.png" alt=":o" class="smilies"> <br>
<br>
<div class="rmq question">Comment empêcher cela, alors ?</div><br>
Vous allez voir, c'est très simple. Il suffit d'instancier un objet <span class="courrier">Ville</span> par défaut dans notre bloc <strong><span class="violet"><span class="courrier">catch{}</span></span></strong>. Grâce à cela, si notre instanciation avec valeur échoue, on fait une instanciation par défaut qui, elle, n'est pas une méthode à risque !<br>
Voyez plutôt : <br>
<br>
<div class="centre"><img src="./java_files/103649.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir que l'exception est bien levée et que notre objet est instancié mais, surtout, que notre programme ne plante plus ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Maintenant que nous avons vu la création d'exception, il serait de bon ton que nous puissions avoir de plus amples renseignements concernant celle-ci. <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Par exemple, il serait peut-être bon de réafficher le nombre d'habitants que l'objet a reçu...<br>
Pour faire ceci, nous n'avons qu'à créer un deuxième constructeur dans notre classe <strong><span class="courrier">NombreHabitantException</span></strong>, qui prend un nombre d'habitants en paramètre. Un peu comme ça :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="nf">NombreHabitantException</span><span class="o">(</span><span class="kt">int</span> <span class="n">nbre</span><span class="o">)</span>
<span class="o">{</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Instanciation avec un nombre d'habitants négatif"</span><span class="o">);</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\t =&gt; "</span> <span class="o">+</span> <span class="n">nbre</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Il vous suffit maintenant de définir cette construction de notre objet hérité d'<span class="courrier"><strong>Exception</strong></span> dans votre classe <strong><span class="courrier"><span class="courrier">Ville</span></span></strong>. Comme ça :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="nf">Ville</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pNbre</span><span class="o">,</span> <span class="n">String</span> <span class="n">pPays</span><span class="o">)</span> <span class="kd">throws</span>  <span class="n">NombreHabitantException</span>
  <span class="o">{</span>  
          <span class="k">if</span><span class="o">(</span><span class="n">pNbre</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span>
                  <span class="k">throw</span> <span class="k">new</span> <span class="nf">NombreHabitantException</span><span class="o">(</span><span class="n">pNbre</span><span class="o">);</span> <span class="c1">// on appelle le nouveau constructeur</span>
          <span class="k">else</span>
          <span class="o">{</span>
                  <span class="n">nbreInstance</span><span class="o">++;</span>  
                  <span class="n">nbreInstanceBis</span><span class="o">++;</span>
                  
                  <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
                  <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
                  <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">pNbre</span><span class="o">;</span>
                  <span class="k">this</span><span class="o">.</span><span class="na">setCategorie</span><span class="o">();</span>
          <span class="o">}</span>
          
  <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et si vous exécutez le même code que précédemment, vous obtiendrez ceci :<br>
<br>
<div class="centre"><img src="./java_files/103655.jpg" alt="Image utilisateur"></div><br>
<br>
C'est pas mal, avouez-le ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Mais vous devez savoir que l'objet passé en paramètre de la clause <strong><span class="violet"><span class="courrier">catch</span></span></strong> a des méthodes héritées de la classe <strong><span class="violet"><span class="courrier">Exception</span></span></strong>. Regardez :<br>
<br>
<div class="centre"><img src="./java_files/103656.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez les utiliser si vous le voulez et surtout, si vous en avez l'utilité...<br>
Nous utiliserons certaines de ces méthodes dans les prochains chapitres...<br>
<br>
<div class="rmq information">Ici, la méthode <span class="courrier"><strong>printStackTrace()</strong></span> permet de voir ou se situe l'exception dans notre code ! Elle vous informe sur le nom de la classe levant l'exception et le numéro de ligne ou se trouve le code l'ayant levée.</div><br>
<br>
Je vais vous faire peur : ici, nous avons capturé une exception mais nous pouvons en capturer plusieurs... <img src="./java_files/pirate.png" alt=":pirate:" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10396">La gestion de plusieurs exceptions</h2>
		<div class="ss_part_texte">
		Bien entendu, ceci est valable pour toutes sortes d'exceptions, qu'elles soient personnalisées, ou faisant partie de Java !<br>
Disons que nous voulons lever une exception, si le nom de la ville fait moins de 3 caractères.<br>
<br>
Nous allons répéter les premières étapes vues précédemment, c'est-à-dire créer une classe <strong><span class="courrier">NomVilleException</span></strong>:<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">NomVilleException</span> <span class="k">extends</span> <span class="n">Exception</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="nf">NomVilleException</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">){</span>
                <span class="k">super</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous avez remarqué que nous avons utilisé <strong><span class="violet"><span class="courrier">super</span></span></strong>. Avec cette redéfinition, nous pourrons afficher notre message d'erreur en utilisant la méthode <strong><span class="courrier">getMessage()</span></strong>.<br>
Vous allez voir.<br>
<br>
Maintenant ajoutez une condition dans notre constructeur <strong>Ville </strong>:<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="nf">Ville</span><span class="o">(</span><span class="n">String</span> <span class="n">pNom</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pNbre</span><span class="o">,</span> <span class="n">String</span> <span class="n">pPays</span><span class="o">)</span> <span class="k">throws</span>  <span class="n">NombreHabitantException</span><span class="o">,</span> <span class="n">NomVilleException</span>
  <span class="o">{</span>  
          <span class="k">if</span><span class="o">(</span><span class="n">pNbre</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span>
                  <span class="k">throw</span> <span class="k">new</span> <span class="nf">NombreHabitantException</span><span class="o">(</span><span class="n">pNbre</span><span class="o">);</span>
          
          <span class="k">if</span><span class="o">(</span><span class="n">pNom</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="o">)</span>
                  <span class="k">throw</span> <span class="k">new</span> <span class="nf">NomVilleException</span><span class="o">(</span><span class="s">"le nom de la ville est inférieur à 3 caractères ! nom = "</span> <span class="o">+</span> <span class="n">pNom</span><span class="o">);</span>
          <span class="k">else</span>
          <span class="o">{</span>
                  <span class="n">nbreInstance</span><span class="o">++;</span>  
                  <span class="n">nbreInstanceBis</span><span class="o">++;</span>
                  
                  <span class="n">nomVille</span> <span class="o">=</span> <span class="n">pNom</span><span class="o">;</span>
                  <span class="n">nomPays</span> <span class="o">=</span> <span class="n">pPays</span><span class="o">;</span>
                  <span class="n">nbreHabitant</span> <span class="o">=</span> <span class="n">pNbre</span><span class="o">;</span>
                  <span class="k">this</span><span class="o">.</span><span class="na">setCategorie</span><span class="o">();</span>
          <span class="o">}</span>
          
  <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous remarquez que les différentes erreurs dans l'instruction <span class="bleu"><span class="courrier">throws</span></span> sont séparées par une virgule !<br>
Maintenant, nous sommes parés pour la capture de deux exceptions personnalisées. Regardez comment on gère deux exceptions sur une instruction :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="syntax"><pre><span class="n">Ville</span> <span class="n">v</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                <span class="k">try</span> <span class="o">{</span>                   
                        <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"Re"</span><span class="o">,</span> <span class="mi">12000</span><span class="o">,</span> <span class="s">"France"</span><span class="o">);</span>           
                <span class="o">}</span>
                <span class="c">//Gestion de l'exception sur le nombre d'habitants</span>
                <span class="k">catch</span> <span class="o">(</span><span class="n">NombreHabitantException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">();</span>
                <span class="o">}</span>
                <span class="c">//Gestion de l'exception sur le nom de la ville</span>
                <span class="k">catch</span><span class="o">(</span><span class="n">NomVilleException</span> <span class="n">e2</span><span class="o">){</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e2</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
                        <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">();</span>
                <span class="o">}</span>
        
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Vous pouvez voir comment utiliser la méthode <strong><span class="courrier">getMessage()</span></strong> à présent. C'est tout bête, avouez-le !</div><br>
<br>
Vous pouvez constater qu'un deuxième bloc <strong><span class="courrier">catch{}</span></strong> s'est glissé... Eh bien c'est comme ceci que nous gérerons plusieurs exceptions ! <br>
Vous avez aussi remarqué que j'ai aussi changé le code afin que l'exception sur le nom soit levée et non plus l'exception sur le nombre d'habitants...<br>
<br>
Vous aurez ceci :<br>
<br>
<div class="centre"><img src="./java_files/103660.jpg" alt="Image utilisateur"></div><br>
<br>
<br>
Si vous mettez un nom de ville de moins de 3 caractères, et un nombre d'habitants négatif, c'est l'exception du nombre d'habitants qui sera levée en premier ! Et pour cause... il s'agit de notre première condition dans notre constructeur...<br>
<br>
<div class="rmq information">Lorsque plusieurs exceptions sont gérées par une portion de code, pensez bien à mettre les blocs <span class="courrier">catch</span> du plus pertinent au moins pertinent. En fait, il s'agit des erreurs capturées à mettre par ordre de pertinence. Dans notre premier exemple d'exception, sur la division par zéro, si nous avions mis un bloc <span class="courrier"><strong>catch(Exception ex){}</strong></span> avant le bloc <span class="courrier"><strong>catch(ArithmeticException e){}</strong></span>, une erreur se serait produite à la compilation, car <strong><span class="courrier">Exception</span></strong> est plus générique que <span class="courrier"><strong>ArithmeticException</strong></span>.</div><br>
<br>
Il y a une instruction dont je ne vous ai pas encore parlé... Il s'agit de la clause <strong><span class="violet"><span class="courrier">finally</span></span></strong>. Celle-ci est une clause se positionnant après les clauses <strong><span class="violet"><span class="courrier">catch</span></span></strong>.<br>
En fait, ce qui se trouve dans cette clause sera <strong>TOUJOURS</strong> exécuté. <strong>Qu'une exception soit levée ou non</strong>.<br>
<br>
Exemple :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Sdz1</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
        <span class="o">{</span>
                <span class="n">Ville</span> <span class="n">v</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                <span class="k">try</span> <span class="o">{</span>                   
                        <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">(</span><span class="s">"Re"</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="s">"France"</span><span class="o">);</span>             
                <span class="o">}</span>
                <span class="c">//Gestion de l'exception sur le nombre d'habitants</span>
                <span class="k">catch</span> <span class="o">(</span><span class="n">NombreHabitantException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">();</span>
                <span class="o">}</span>
                <span class="c">//Gestion de l'exception sur le nom de la ville</span>
                <span class="k">catch</span><span class="o">(</span><span class="n">NomVilleException</span> <span class="n">e2</span><span class="o">){</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e2</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
                        <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ville</span><span class="o">();</span>
                <span class="o">}</span>
        
                <span class="c">//La fameuse clause finally</span>
                <span class="k">finally</span><span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n---------------------------------------------"</span><span class="o">);</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Voici le code qui est toujours exécuté ! ! ! "</span><span class="o">);</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"---------------------------------------------\n"</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="o">}</span>                 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Quoi qu'il se passe dans la classe <strong><span class="violet"><span class="courrier">try</span></span></strong> ou <strong><span class="violet"><span class="courrier">catch</span></span></strong>, les instructions de la clause <strong><span class="violet"><span class="courrier">finally</span></span></strong> seront TOUJOURS exécutées ! Et vous pouvez faire autant de tests que vous le voulez.<br>
<br>
<div class="rmq question">Euh... d'accord. Mais à quoi ça peut bien nous servir ? On ne peut pas mettre l'instanciation de notre objet ici ! </div><br>
Très juste ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Par contre, vous allez apprendre dans les chapitres suivants à ouvrir des flux de données. Ce genre de code regorge d'exceptions en tout genre et vous serez ravis de pouvoir fermer votre flux, quoiqu'il arrive ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Bon : je crois qu'un récapitulatif s'impose mais avant ceci, voici notre rubrique "<strong>Astuce d'Eclipse</strong>".
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10395">Astuce d'Eclipse</h2>
		<div class="ss_part_texte">
		Il y a plusieurs manières de procéder, mais toutes font la même chose.<br>
L'astuce ici réside dans le fait de générer les blocs <strong><span class="violet"><span class="courrier">try{} catch{}</span></span></strong> automatiquement. Bien sûr, il faut que les clauses de déclenchement soient définies au préalable !<br>
<br>
Si vous reprenez le code de votre méthode <strong><span class="courrier">main</span></strong>, si vous effacez le contenu et ajoutez une instanciation de l'objet <span class="courrier">Ville</span> sans les clauses <strong><span class="courrier"><span class="violet">try{} catch{}</span></span></strong>, vous avez l'erreur persistante dont je vous parlais au début du chapitre.<br>
<br>
Si vous cliquez sur la croix rouge, située à gauche de votre zone de saisie, vous obtenez ceci :<br>
<br>
<div class="centre"><img src="./java_files/103664.jpg" alt="Image utilisateur"></div><br>
<br>
Choisissez l'option <span class="impact">Surround with try/catch</span> et vous avez votre code, tout beau tout propre ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
La deuxième méthode consiste à sélectionner votre (ou vos) ligne(s) de code à risque et de faire : <span class="impact">Source / Surround with / try/catch block</span> ou d'utiliser le raccourci clavier <strong><span class="italique">Shift + Alt + Z</span></strong> :<br>
<br>
Voici l'image en utilisant le menu :<br>
<br>
<div class="centre"><img src="./java_files/103666.jpg" alt="Image utilisateur"></div><br>
<br>
Voici l'image en utilisant le raccourci clavier :<br>
<br>
<div class="centre"><img src="./java_files/103667.jpg" alt="Image utilisateur"></div><br>
<br>
<br>
Voilà, maintenant, rendez-vous au topo habituel ! <img src="./java_files/langue.png" alt=":p" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10394">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>La super classe qui gère les exceptions s'appelle : <strong><span class="violet"><span class="courrier">Exception</span></span></strong>.</li>
<li>Lorsqu'un événement que la JVM ne sait pas gérer apparaît, une exception est levée (ex : division par zéro) !</li>
<li>Vous pouvez créer une classe d'exception personnalisée en créant une classe héritant de la classe <strong><span class="violet"><span class="courrier">Exception</span></span></strong>.</li>
<li>L'instruction qui permet de capturer des exceptions est le bloc <strong><span class="violet"><span class="courrier">try{} catch{}</span></span></strong>.</li>
<li>Si une exception est levée dans le bloc <strong><span class="violet"><span class="courrier">try</span></span></strong>, les instructions figurant dans le bloc <strong><span class="violet"><span class="courrier">catch</span></span></strong> seront exécutées si celui-ci capture l'exception levée !</li>
<li>Vous pouvez ajouter autant de blocs <strong><span class="violet"><span class="courrier">catch</span></span></strong> que vous le voulez à la suite d'un bloc <strong><span class="violet"><span class="courrier">try</span></span></strong>. Mais respectez l'ordre de pertinence. <strong>Du plus pertinent au moins pertinent</strong> !</li>
<li>Dans une classe objet, vous pouvez prévenir la JVM qu'une méthode est dite "<strong><span class="italique">à risque</span></strong>", ceci grâce au mot clé <strong><span class="violet"><span class="courrier">throws</span></span></strong>.</li>
<li>Vous pouvez définir plusieurs risques d'exceptions sur une même méthode. Il suffit de séparer les déclarations par une virgule !</li>
<li>Dans cette méthode, vous pouvez définir les conditions d'instanciation d'une exception et lancer cette dernière grâce au mot clé <strong><span class="violet"><span class="courrier">throw</span></span></strong> suivie de l'instanciation.</li>
<li>Une instanciation lancée par le biais de l'instruction <strong><span class="violet"><span class="courrier">throw</span></span></strong> <strong><span class="rouge">DOIT ÊTRE DÉCLARÉE</span></strong> avec <strong><span class="violet"><span class="courrier">throws</span></span></strong> au préalable ! !</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Je me doute que vous avez dû avoir pas mal de sueurs froides à la lecture de ce chapitre...<br>
<br>
Vous devez savoir aussi que vous pouvez imbriquer des blocs de captures d'exceptions comme ceci : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="k">try</span><span class="o">{</span>
   <span class="c">// Le code sensible pouvant lever une Exception1</span>
 
   <span class="k">try</span><span class="o">{</span>
       <span class="c">//Code sensible pouvant lever une Exception2</span>
   <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="n">Exception2</span> <span class="n">e2</span><span class="o">){}</span>
    
  
<span class="o">}</span>
<span class="k">catch</span><span class="o">(</span><span class="n">Exception1</span> <span class="n">e</span><span class="o">){</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Je vous propose maintenant de voir <strong><span class="vertf">les collections</span></strong> !<br>
<br>
Faites tout de même une pause pour bien comprendre le fonctionnement des exceptions ; pour les avides de connaissances, rendez-vous au chapitre suivant ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
	</div>
	
	<hr>
	<h1 id="chap_10409">Les collections d'objets</h1>
	<div id="chap_intro">
	Voici une partie qui va sans doute plaire...<br>
Ici nous allons voir qu'il est possible de stocker des données autrement qu'avec des tableaux !<br>
Et je dirais même plus, ces fameux objets collections sont dynamiques... en gros, ils n'ont pas de taille à pré-définir. On ne peut donc pas dépasser leur capacité ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
<div class="rmq information">Je ne passerai pas en revue tous les types et tous les objets <span class="courrier">collection</span>... J'ajouterai aussi qu'il s'agit d'une présentation succinte des collections d'objets. Je préfère vous prévenir à l'avance ! <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
<br>
Je sens que vous êtes impatients. Allons-y, alors !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10408">L'objet LinkedList</h2>
		<div class="ss_part_texte">
		Une liste chaînée est une liste dont chaque élément est relié au suivant par une référence à ce dernier, sa taille n'est pas fixe : on peut ajouter et enlever des éléments selon nos besoins. <br>
Les <span class="courrier">LinkedList</span> acceptent tout type d'objet.<br>
Chaque élément contient une référence sur l'élément suivant sauf pour le dernier : son suivant est en fait <strong><span class="violet"><span class="courrier">null</span></span></strong>.<br>
Cette classe se trouve dans le package <strong><span class="violet"><span class="courrier">java.util</span></span></strong>.<br>
<br>
Voici un petit code pour appuyer mes dires :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.ListIterator</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
         
                <span class="n">List</span> <span class="n">l</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedList</span><span class="o">();</span>
                <span class="n">l</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">12</span><span class="o">);</span>
                <span class="n">l</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"toto ! !"</span><span class="o">);</span>
                <span class="n">l</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mf">12.20f</span><span class="o">);</span>
                
                
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">l</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Élément à l'index "</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span> <span class="s">" = "</span> <span class="o">+</span> <span class="n">l</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pourrez constater que tous les éléments s'affichent !<br>
Maintenant, vous devez savoir autre chose sur ce genre d'objet. Ceux-ci implémentent l'interface <strong><span class="violet"><span class="courrier">Iterator</span></span></strong>. Ceci signifie que nous pouvons utiliser cette interface pour lister notre <strong><span class="violet"><span class="courrier">LinkedList</span></span></strong>.<br>
Dans le code suivant, j'ai rajouté le parcours avec un itérateur :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.ListIterator</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
         
                <span class="n">List</span> <span class="n">l</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedList</span><span class="o">();</span>
                <span class="n">l</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">12</span><span class="o">);</span>
                <span class="n">l</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"toto ! !"</span><span class="o">);</span>
                <span class="n">l</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mf">12.20f</span><span class="o">);</span>
                
                
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">l</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Élément à l'index "</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span> <span class="s">" = "</span> <span class="o">+</span> <span class="n">l</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
                
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n \tParcours avec un itérateur "</span><span class="o">);</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"-----------------------------------"</span><span class="o">);</span>
                <span class="n">ListIterator</span> <span class="n">li</span> <span class="o">=</span> <span class="n">l</span><span class="o">.</span><span class="na">listIterator</span><span class="o">();</span>
                
                <span class="k">while</span><span class="o">(</span><span class="n">li</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">li</span><span class="o">.</span><span class="na">next</span><span class="o">());</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez constater que les deux manières de procéder sont analogues !<br>
Cependant, je dois vous dire quelques choses sur les listes chaînées. Vu que les éléments ont une référence à leur élément suivant, ce type de listes peut être particulièrement lourd lorsqu'elles deviennent volumineuses !  <img src="./java_files/unsure.gif" alt=":euh:" class="smilies"> <br>
À utiliser avec précaution. Si vous voulez en savoir plus, <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/LinkedList.html">c'est par là</a>.<br>
Nous allons voir un autre objet de la même famille : les <strong><span class="violet"><span class="courrier">ArrayList</span></span></strong>.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10407">L'objet ArrayList</h2>
		<div class="ss_part_texte">
		Voici un objet bien pratique.<br>
Un <strong><span class="violet"><span class="courrier">ArrayList</span></span></strong> est donc un de ces objets qui n'ont pas de taille limite, et en plus, ils acceptent n'importe quel type de données ! <strong><span class="violet"><span class="courrier">null </span></span></strong>y compris ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
<br>
Dans un <strong><span class="violet"><span class="courrier">ArrayList</span></span></strong>, nous pouvons mettre tout ce que nous voulons. Vous devez par contre importer la classe <strong><span class="violet"><span class="courrier">ArrayList</span></span></strong>. Elle se trouve dans le package <strong><span class="violet"><span class="courrier">java.util</span></span></strong>. Mais vous connaissez une bonne technique pour importer vos classes !<br>
<br>
Pour preuve, voici un morceau de code qui le met en œuvre :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
         
                <span class="n">ArrayList</span> <span class="n">al</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">();</span>
                <span class="n">al</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">12</span><span class="o">);</span>
                <span class="n">al</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"Une chaîne de caractères !"</span><span class="o">);</span>
                <span class="n">al</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mf">12.20f</span><span class="o">);</span>
                <span class="n">al</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="sc">'d'</span><span class="o">);</span>
                
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">al</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span>
                <span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"donnée à l'indice "</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span> <span class="s">" = "</span> <span class="o">+</span> <span class="n">al</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
                <span class="o">}</span>               
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Si vous exécutez ce code, vous aurez : <br>
<br>
<div class="centre"><img src="./java_files/103710.jpg" alt="Image utilisateur"></div><br>
<br>
Je pense que vous voyez déjà les avantages des <strong><span class="courrier">ArrayList</span></strong>.<br>
Vous devez savoir aussi qu'il existe tout un panel de méthodes dans cet objet :  <br>
<ul>
<li><strong><span class="courrier">add()</span></strong> : permet d'ajouter un élément.</li>
<li><strong><span class="courrier">get(int index)</span></strong> : retourne l'élément à l'index demandé.</li>
<li><strong><span class="courrier">remove(int index)</span></strong> : efface l'entrée à l'indice demandé.</li>
<li><strong><span class="courrier">isEmpty()</span></strong> : renvoie "vrai" si l'objet est vide.</li>
<li><strong><span class="courrier">removeAll()</span></strong>: efface tout le contenu de l'objet.</li>
<li><strong><span class="courrier">contains(Object element)</span></strong>: retourne "vrai" si l'élément passé en paramètre est dans l'objet.</li>
<li>...</li>
</ul><br>
<br>
Si vous voulez en savoir plus, <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/ArrayList.html">c'est par là</a>.<br>
<br>
Un autre objet pratique, les <strong><span class="violet"><span class="courrier">Hashtable</span></span></strong>.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10406">L'objet Hashtable</h2>
		<div class="ss_part_texte">
		<span class="italique">Table de hachage</span>, si vous traduisez mot à mot...<br>
Ce type d'objet rentre dans la catégorie des <strong><span class="violet"><span class="courrier">Map</span></span></strong>. Entendez par là qu'ils rangent leurs éléments avec un système  "<strong><span class="italique">clé-valeur</span></strong>". La clé est unique, mais la valeur, elle, peut être associée à plusieurs clés !<br>
<br>
On parcourt ces objets grâce aux clés qu'ils contiennent. Vu que notre mémoire peut être défaillante, il existe un moyen de parcours très simple. En utilisant la classe <strong><span class="violet"><span class="courrier">Enumeration</span></span></strong>. L'objet obtient tout le contenu de notre <strong><span class="violet"><span class="courrier">Hashtable </span></span></strong>et permet de le parcourir très simplement. Regardez, le code suivant insère les saisons avec des clés qui ne se suivent pas, et notre énumération récupère seulement les valeurs :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.util.Enumeration</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Hashtable</span><span class="o">;</span>
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
         
                <span class="n">Hashtable</span> <span class="n">ht</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Hashtable</span><span class="o">();</span>
                <span class="n">ht</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="s">"printemps"</span><span class="o">);</span>
                <span class="n">ht</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="s">"été"</span><span class="o">);</span>
                <span class="n">ht</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">12</span><span class="o">,</span> <span class="s">"automne"</span><span class="o">);</span>
                <span class="n">ht</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">45</span><span class="o">,</span> <span class="s">"hiver"</span><span class="o">);</span>
                
                <span class="n">Enumeration</span> <span class="n">e</span> <span class="o">=</span> <span class="n">ht</span><span class="o">.</span><span class="na">elements</span><span class="o">();</span>
                
                <span class="k">while</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">hasMoreElements</span><span class="o">())</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">nextElement</span><span class="o">());</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous constaterez que le code marche très bien et qu'il est très simple d'utilisation.<br>
Cet objet nous offre lui aussi tout un panel de méthodes utiles :<br>
<ul>
<li><strong><span class="courrier">isEmpty()</span></strong> : retourne "vrai" si l'objet est vide.</li>
<li><strong><span class="courrier">contains(Object value)</span></strong> : retourne "vrai" si la valeur est présente. Identique à <strong><span class="courrier">containsValue(Object value)</span></strong>.</li>
<li><strong><span class="courrier">containsKey(Object key)</span></strong> : retourne "vrai" si la clé passée en paramètre est présente.</li>
<li><strong><span class="courrier">put(Object key, Object value)</span></strong> : ajoute le couple <span class="courrier">key/value</span> dans l'objet.</li>
<li><strong><span class="courrier">elements()</span></strong> : retoune une énumération des éléments de l'objet.</li>
<li><strong><span class="courrier">keys()</span></strong> : retourne la liste des clés sous forme d'énumération.</li>
<li>...</li>
</ul><br>
<br>
Vous devez savoir qu'il existe un autre objet de type <strong><span class="violet"><span class="courrier">Map</span></span></strong> : il s'agit du <strong><span class="violet"><span class="courrier">HashMap</span></span></strong> ; son utilisation ne diffère que très peu du <strong><span class="violet"><span class="courrier">Hashtable</span></span></strong>. Je n'en parlerai donc pas...  <img src="./java_files/huh.png" alt=":o" class="smilies"> <br>
<br>
Si vous voulez en savoir plus sur les <strong><span class="violet"><span class="courrier">Hashtable</span></span></strong>, <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Hashtable.html">c'est par là</a>.<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10405">L'objet HashSet</h2>
		<div class="ss_part_texte">
		Un <span class="courrier">Set</span> est une collection qui n'accepte pas les doublons. Elle n'accepte qu'une seule fois la valeur <strong><span class="violet"><span class="courrier">null</span></span></strong>, car deux fois cette valeur est considérée comme un doublon.<br>
On peut dire que cet objet n'a que des éléments différents en son sein !<br>
Certains <span class="courrier">Set</span> sont plus restrictifs que d'autres, n'acceptent pas <span class="courrier">null</span> ou un certain type d'objet. <br>
On peut parcourir ce type de collection avec un objet <strong><span class="violet"><span class="courrier">Iterator</span></span></strong> ou, cet objet peut retourner un tableau d'<strong><span class="violet"><span class="courrier">Object</span></span></strong>.<br>
Voici un code simple :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.util.HashSet</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Iterator</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
         
                <span class="n">HashSet</span> <span class="n">hs</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="o">();</span>
                <span class="n">hs</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"toto"</span><span class="o">);</span>
                <span class="n">hs</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">12</span><span class="o">);</span>
                <span class="n">hs</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="sc">'d'</span><span class="o">);</span>
                
                <span class="n">Iterator</span> <span class="n">it</span> <span class="o">=</span> <span class="n">hs</span><span class="o">.</span><span class="na">iterator</span><span class="o">();</span>
                <span class="k">while</span><span class="o">(</span><span class="n">it</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">it</span><span class="o">.</span><span class="na">next</span><span class="o">());</span>
 
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nParcours avec un tableau d'objet"</span><span class="o">);</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"-----------------------------------"</span><span class="o">);</span>
                
                <span class="n">Object</span><span class="o">[]</span> <span class="n">obj</span> <span class="o">=</span> <span class="n">hs</span><span class="o">.</span><span class="na">toArray</span><span class="o">();</span>
                <span class="k">for</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span> <span class="o">:</span> <span class="n">obj</span><span class="o">)</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">o</span><span class="o">);</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici une liste des méthodes que l'on peut trouver dans cet objet :<br>
<ul>
<li><strong><span class="courrier">add()</span></strong> : ajoute un élément.</li>
<li><strong><span class="courrier">contains(Object value)</span></strong> : retourne "vrai" si l'objet contient <span class="courrier">value</span>.</li>
<li><strong><span class="courrier">isEmpty()</span></strong> : retourne "vrai" si l'objet est vide.</li>
<li><strong><span class="courrier">iterator()</span></strong>: renvoie un objet de type <span class="courrier">Iterator</span>.</li>
<li><strong><span class="courrier">remove(Object o)</span></strong> : retire l'objet o de la collection.</li>
<li><strong><span class="courrier">toArray()</span></strong> : retourne un tableau d'<span class="courrier">Object</span>.</li>
<li>...</li>
</ul><br>
<br>
Pour en savoir plus sur les HashSet, <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/HashSet.html">c'est par là</a>.<br>
<br>
Voilà : nous avons vu quelque chose d'assez intéressant. Je ne pense pas qu'un QCM soit de mise pour cette partie... <img src="./java_files/heureux.png" alt=":D" class="smilies"> Profitez-en !<br>
Allez ! Zou... <img src="./java_files/hihi.png" alt="^^" class="smilies">
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Voici encore un chapitre important !<br>
Surtout prenez bien le temps de faire des tests, de voir comment se comporte chaque objet...<br>
<br>
Le principal problème qui va se poser maintenant, c'est :<br>
<div class="rmq question">Quelle collection utiliser ?</div><br>
Pour ceci, je ne peux pas vous aider... cela dépendra du type de besoin que vous aurez... <br>
Personnellement, je me sers le plus souvent d'<strong><span class="violet"><span class="courrier">ArrayList</span></span></strong> et de <strong><span class="violet"><span class="courrier">Hashtable</span></span></strong>.<br>
<br>
Dès que vous vous sentez prêts, en avant pour la <strong><span class="vertf">généricité en Java</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10421">La généricité en Java</h1>
	<div id="chap_intro">
	Pour ce concept, ajouté au JDK depuis sa version 1.5, nous allons surtout travailler avec des exemples tout au long de ce chapitre.<br>
Le principe de la généricité est de faire des classes qui n'acceptent qu'un certain type d'objet ou de donnée, mais de façon dynamique ! :D.<br>
<br>
Avec ce que nous avons vu au chapitre précédent, vous avez sûrement poussé un soupir de soulagement lorsque vous avez vu que ces objets acceptent tous types de données ! <br>
Par contre, un problème de taille se pose : lorsque vous voudrez travailler avec ces données, vous allez devoir faire un <strong><span class="courrier">cast</span></strong> ! Et peut-être même un <strong><span class="courrier">cast</span></strong> de <strong><span class="courrier">cast</span></strong>, voire même un <strong><span class="courrier">cast</span></strong> de <strong><span class="courrier">cast</span></strong> de <strong><span class="courrier">cast</span></strong>...<br>
<br>
C'est là que se situe le problème... Mais comme je vous le disais, depuis la version 1.5 du JDK, la généricité est là pour vous aider ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10420">Notion de base</h2>
		<div class="ss_part_texte">
		Bon, pour vous montrer la puissance de la généricité, nous allons tout de suite voir un exemple de classe qui ne l'utilise pas ! <img src="./java_files/huh.png" alt=":o" class="smilies"> <br>
Ne vous en faites pas... Ayez confiance en moi...<br>
<br>
Il y a un exemple très simple, que vous pourrez retrouver aisément sur le net, car il s'agit d'un des cas les plus simples pour expliquer les bases de la généricité. Nous allons coder une classe <strong><span class="courrier">Solo</span></strong>. Celle-ci va travailler avec des références de type <strong><span class="violet"><span class="courrier">String</span></span></strong>.<br>
Voici le diagramme de classe :<br>
<br>
<div class="centre"><img src="./java_files/103831.png" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir que le code de cette classe est très rudimentaire ! On affecte une valeur, on peut la mettre à jour et la récupérer...  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
Maintenant, si je vous demande de me faire une classe qui permette de travailler avec n'importe quel type de données, j'ai une vague idée de ce que vous allez faire... Ce ne serait pas un truc comme ça :<br>
<br>
<div class="centre"><img src="./java_files/103832.png" alt="Image utilisateur"></div><br>
<br>
J'en étais sûr... :D.  Créez-la et créez-vous aussi une classe avec une méthode <strong><span class="courrier">main</span></strong> ! <br>
Mais si vous voulez utiliser les données de l'objet <strong><span class="courrier">Solo</span></strong>, vous allez devoir faire un <strong><span class="courrier">cast</span></strong>.<br>
Testez ce code dans votre <span class="courrier">main</span> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">Solo</span> <span class="n">val</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Solo</span><span class="o">(</span><span class="mi">12</span><span class="o">);</span>
                <span class="kt">int</span> <span class="n">nbre</span> <span class="o">=</span> <span class="n">val</span><span class="o">.</span><span class="na">getValeur</span><span class="o">();</span>             
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
Vous constatez que vous tentez vainement de mettre un objet de type <strong><span class="violet"><span class="courrier">Object</span></span></strong> dans un objet de type <strong><span class="violet"><span class="courrier">Integer</span></span></strong>. Ceci est interdit ! !<br>
La classe <strong><span class="violet"><span class="courrier">Object</span></span></strong> est plus globale que la classe <strong><span class="violet"><span class="courrier">Integer</span></span></strong>, vous ne pouvez donc pas faire cette manipulation, sauf si vous "castez" votre objet en <strong><span class="violet"><span class="courrier">Integer</span></span></strong>, comme ceci :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">Solo</span> <span class="n">val</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Solo</span><span class="o">(</span><span class="mi">12</span><span class="o">);</span>
                <span class="kt">int</span> <span class="n">nbre</span> <span class="o">=</span> <span class="o">(</span><span class="n">Integer</span><span class="o">)</span><span class="n">val</span><span class="o">.</span><span class="na">getValeur</span><span class="o">();</span>            
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Pour le moment, on peut dire que votre classe peut travailler avec tous les types de données, mais les choses se corsent un peu à l'utilisation... Vous serez peut-être tentés de faire une classe par type de donnée (<span class="courrier">SoloInt</span>, <span class="courrier">SoloString</span>).<br>
Et c'est là que la généricité est pratique. Car avec ceci, vous allez pouvoir savoir ce que contient votre objet <strong><span class="courrier">Solo</span></strong>, et vous n'aurez qu'une seule classe à développer !  <img src="./java_files/huh.png" alt=":o" class="smilies"> <br>
Voilà le diagramme de classe de cet objet :<br>
<br>
<div class="centre"><img src="./java_files/103837.png" alt="Image utilisateur"></div><br>
<br>
Et voici son code :<br>
<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Solo</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>
 
        <span class="cm">/**</span>
<span class="cm">         * Variable d'instance</span>
<span class="cm">         */</span>
        <span class="kd">private</span> <span class="n">T</span> <span class="n">valeur</span><span class="o">;</span>
        
        <span class="cm">/**</span>
<span class="cm">         * Constructeur par défaut</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="nf">Solo</span><span class="o">(){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="cm">/**</span>
<span class="cm">         * Constructeur avec paramètre</span>
<span class="cm">         * Inconnu pour l'instant</span>
<span class="cm">         * @param val</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="nf">Solo</span><span class="o">(</span><span class="n">T</span> <span class="n">val</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur</span> <span class="o">=</span> <span class="n">val</span><span class="o">;</span>
        <span class="o">}</span>
        
        
        <span class="cm">/**</span>
<span class="cm">         * Définit la valeur avec le paramètre</span>
<span class="cm">         * @param val</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setValeur</span><span class="o">(</span><span class="n">T</span> <span class="n">val</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur</span> <span class="o">=</span> <span class="n">val</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="cm">/**</span>
<span class="cm">         * retourne la valeur déjà "castée" par la signature de la méthode !</span>
<span class="cm">         * @return</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="n">T</span> <span class="nf">getValeur</span><span class="o">(){</span>
                <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">valeur</span><span class="o">;</span>
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Impressionnant, n'est-ce pas ?<br>
Dans cette classe, le <strong><span class="courrier">T</span></strong> n'est pas encore défini. Vous le ferez à l'instanciation de cette classe. Par contre, une fois instancié avec un type, l'objet ne pourra travailler qu'avec le type de données que vous lui avez spécifié ! Exemple de code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                <span class="c1">// TODO Auto-generated method stub</span>
                <span class="n">Solo</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">val</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Solo</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;(</span><span class="mi">12</span><span class="o">);</span>
                <span class="kt">int</span> <span class="n">nbre</span> <span class="o">=</span> <span class="n">val</span><span class="o">.</span><span class="na">getValeur</span><span class="o">();</span>             
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ce code fonctionne très bien, mais si vous essayez de faire ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                <span class="c1">// TODO Auto-generated method stub</span>
                <span class="n">Solo</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">val</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Solo</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;(</span><span class="s">"toto"</span><span class="o">);</span> <span class="c1">//Ici on essaie de mettre une chaîne de caractère à la place d'un entier</span>
                <span class="kt">int</span> <span class="n">nbre</span> <span class="o">=</span> <span class="n">val</span><span class="o">.</span><span class="na">getValeur</span><span class="o">();</span>             
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
...ou encore ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                <span class="c1">// TODO Auto-generated method stub</span>
                <span class="n">Solo</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">val</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Solo</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;(</span><span class="mi">12</span><span class="o">);</span>
                <span class="n">val</span><span class="o">.</span><span class="na">setValeur</span><span class="o">(</span><span class="mf">12.2f</span><span class="o">);</span>   <span class="c1">//Ici on essaie de mettre un float à la place d'un entier        </span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
...vous verrez une erreur dans votre zone de saisie. Ceci vous indique que votre objet ne reçoit pas le bon type d'argument, ou que votre réceptacle n'a pas le bon type de données ! Dans tous les cas de figure, il y a conflit entre le type de données que vous avez passé à votre instance lors de sa création et le type de données que vous essayez d'utiliser avec celle-ci !<br>
<div class="rmq information">Par contre, vous devez savoir que cette classe ne fonctionne pas seulement avec des <strong><span class="courrier">Integer</span></strong>. Vous pouvez utiliser tous les types que vous souhaitez !</div><br>
<br>
Voici une démonstration de mes dires :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                <span class="c1">// TODO Auto-generated method stub</span>
                <span class="n">Solo</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">val</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Solo</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;();</span>
                <span class="n">Solo</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">valS</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Solo</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;(</span><span class="s">"TOTOTOTO"</span><span class="o">);</span>
                <span class="n">Solo</span><span class="o">&lt;</span><span class="n">Float</span><span class="o">&gt;</span> <span class="n">valF</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Solo</span><span class="o">&lt;</span><span class="n">Float</span><span class="o">&gt;(</span><span class="mf">12.2f</span><span class="o">);</span>
                <span class="n">Solo</span><span class="o">&lt;</span><span class="n">Double</span><span class="o">&gt;</span> <span class="n">valD</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Solo</span><span class="o">&lt;</span><span class="n">Double</span><span class="o">&gt;(</span><span class="mf">12.202568</span><span class="o">);</span>                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Vous devez avoir remarqué que je n'ai pas utilisé ici les types de données que vous utilisez pour déclarer des variables de type primitif ! Ce sont les classes de ces types primitifs !</div><br>
En effet, lorsque vous déclarez une variable de type primitif, vous pouvez utiliser leurs classes de définition, mais c'est rarement utilisé car très lourd à la lecture. Par exemple :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span><span class="o">{</span>
 
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
 
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Integer</span><span class="o">(</span><span class="mi">12</span><span class="o">);</span> <span class="c1">// est équivalent à int i = 12;</span>
        <span class="kt">double</span> <span class="n">d</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Double</span><span class="o">(</span><span class="mf">12.2586</span><span class="o">);</span> <span class="c1">// est équivalent à double d = 12.2586;</span>
        <span class="c1">//...</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Bon ! Maintenant que vous avez un bel exemple de généricité, nous allons complexifier un peu les choses !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10419">Plus loin dans la généricité !</h2>
		<div class="ss_part_texte">
		Vous devez savoir que la généricité peut être multiple !<br>
Nous avons créé une classe <strong><span class="courrier">Solo</span></strong>, mais rien ne vous empêche de créer une classe <strong><span class="courrier">Duo</span></strong>, qui elle, prend deux paramètres génériques ! Voici la modélisation de cette classe :<br>
<br>
<div class="centre"><img src="./java_files/103841.png" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir que cette classe prend deux types de références non encore définies !<br>
Voilà le code source de cette classe :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Duo</span><span class="o">&lt;</span><span class="n">T</span><span class="o">,</span> <span class="n">S</span><span class="o">&gt;</span> <span class="o">{</span>
 
        <span class="cm">/**</span>
<span class="cm">         * Variable d'instance de type T</span>
<span class="cm">         */</span>
        <span class="kd">private</span> <span class="n">T</span> <span class="n">valeur1</span><span class="o">;</span>
        <span class="cm">/**</span>
<span class="cm">         * Variable d'instance de type S</span>
<span class="cm">         */</span>
        <span class="kd">private</span> <span class="n">S</span> <span class="n">valeur2</span><span class="o">;</span>
        
        <span class="cm">/**</span>
<span class="cm">         * Constructeur par défaut</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="nf">Duo</span><span class="o">(){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur1</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur2</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="cm">/**</span>
<span class="cm">         * Constructeur avec paramètres</span>
<span class="cm">         * @param val1</span>
<span class="cm">         * @param val2</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="nf">Duo</span><span class="o">(</span><span class="n">T</span> <span class="n">val1</span><span class="o">,</span> <span class="n">S</span> <span class="n">val2</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur1</span> <span class="o">=</span> <span class="n">val1</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur2</span> <span class="o">=</span> <span class="n">val2</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="cm">/**</span>
<span class="cm">         * Méthodes d'initialisation des deux valeurs</span>
<span class="cm">         * @param val1</span>
<span class="cm">         * @param val2</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setValeur</span><span class="o">(</span><span class="n">T</span> <span class="n">val1</span><span class="o">,</span> <span class="n">S</span> <span class="n">val2</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur1</span> <span class="o">=</span> <span class="n">val1</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur2</span> <span class="o">=</span> <span class="n">val2</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="cm">/**</span>
<span class="cm">         * Retourne la valeur T</span>
<span class="cm">         * @return</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="n">T</span> <span class="nf">getValeur1</span><span class="o">()</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">valeur1</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="cm">/**</span>
<span class="cm">         * Définit la valeur T</span>
<span class="cm">         * @param valeur1</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setValeur1</span><span class="o">(</span><span class="n">T</span> <span class="n">valeur1</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur1</span> <span class="o">=</span> <span class="n">valeur1</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="cm">/**</span>
<span class="cm">         * retourne la valeur S</span>
<span class="cm">         * @return</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="n">S</span> <span class="nf">getValeur2</span><span class="o">()</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">valeur2</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="cm">/**</span>
<span class="cm">         * définit la valeur S</span>
<span class="cm">         * @param valeur2</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setValeur2</span><span class="o">(</span><span class="n">S</span> <span class="n">valeur2</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur2</span> <span class="o">=</span> <span class="n">valeur2</span><span class="o">;</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici un code que vous pouvez tester :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">Duo</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Boolean</span><span class="o">&gt;</span> <span class="n">dual</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Duo</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Boolean</span><span class="o">&gt;(</span><span class="s">"toto"</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Valeur de l'objet dual: val1 = "</span> <span class="o">+</span> <span class="n">dual</span><span class="o">.</span><span class="na">getValeur1</span><span class="o">()</span> <span class="o">+</span> <span class="s">", val2 = "</span> <span class="o">+</span> <span class="n">dual</span><span class="o">.</span><span class="na">getValeur2</span><span class="o">());</span>
                
                <span class="n">Duo</span><span class="o">&lt;</span><span class="n">Double</span><span class="o">,</span> <span class="n">Character</span><span class="o">&gt;</span> <span class="n">dual2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Duo</span><span class="o">&lt;</span><span class="n">Double</span><span class="o">,</span> <span class="n">Character</span><span class="o">&gt;(</span><span class="mf">12.25895</span><span class="o">,</span> <span class="sc">'C'</span><span class="o">);</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Valeur de l'objet dual2: val1 = "</span> <span class="o">+</span> <span class="n">dual2</span><span class="o">.</span><span class="na">getValeur1</span><span class="o">()</span> <span class="o">+</span> <span class="s">", val2 = "</span> <span class="o">+</span> <span class="n">dual2</span><span class="o">.</span><span class="na">getValeur2</span><span class="o">());</span> 
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Et voici le résultat :<br>
<div class="centre"><img src="./java_files/103844.jpg" alt="Image utilisateur"></div><br>
<br>
Vous voyez qu'il n'y a rien de bien méchant ici. Ce principe fonctionne exactement comme l'exemple précédent. La seule différence est dans le fait qu'il n'y a pas un, mais deux paramètres génériques !<br>
<div class="rmq question">Attends une minute... Lorsque je déclare une référence de type <strong><span class="courrier">Duo&lt;String, Boolean&gt;</span></strong>,  je ne peux plus la changer en un autre type !</div><br>
En fait, avec ce que je vous ai fait voir, non.<br>
Pour le moment, si vous faites :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">Duo</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Boolean</span><span class="o">&gt;</span> <span class="n">dual</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Duo</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Boolean</span><span class="o">&gt;(</span><span class="s">"toto"</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Valeur de l'objet dual: val1 = "</span> <span class="o">+</span> <span class="n">dual</span><span class="o">.</span><span class="na">getValeur1</span><span class="o">()</span> <span class="o">+</span> <span class="s">", val2 = "</span> <span class="o">+</span> <span class="n">dual</span><span class="o">.</span><span class="na">getValeur2</span><span class="o">());</span>
                <span class="n">dual</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Duo</span><span class="o">&lt;</span><span class="n">Double</span><span class="o">,</span> <span class="n">Character</span><span class="o">&gt;();</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
vous violez la contrainte que vous avez émise lors de la déclaration du type de référence ! Mais il existe un moyen de contourner ça. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Tout simplement en disant, à la déclaration, que votre objet va accepter tous types de références ! Comment en utilisant ce qu'on appelle le <strong><span class="violet"><span class="courrier">wildcard</span></span></strong> : <strong><span class="violet"><span class="courrier">?</span></span></strong>.<br>
Comme ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">Duo</span><span class="o">&lt;?,</span> <span class="o">?&gt;</span> <span class="n">dual</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Duo</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Boolean</span><span class="o">&gt;(</span><span class="s">"toto"</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Valeur de l'objet dual: val1 = "</span> <span class="o">+</span> <span class="n">dual</span><span class="o">.</span><span class="na">getValeur1</span><span class="o">()</span> <span class="o">+</span> <span class="s">", val2 = "</span> <span class="o">+</span> <span class="n">dual</span><span class="o">.</span><span class="na">getValeur2</span><span class="o">());</span>
                <span class="n">dual</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Duo</span><span class="o">&lt;</span><span class="n">Double</span><span class="o">,</span> <span class="n">Character</span><span class="o">&gt;();</span>
                <span class="n">dual</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Duo</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Float</span><span class="o">&gt;();</span>
                <span class="n">dual</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Duo</span><span class="o">&lt;</span><span class="n">Solo</span><span class="o">,</span> <span class="n">Solo</span><span class="o">&gt;();</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Avec ce type de déclaration, votre objet accepte bien n'importe quel type de référence !<br>
Intéressant, non ?<br>
Donc si vous suivez bien, on va pouvoir encore corser la chose ! <img src="./java_files/pirate.png" alt=":pirate:" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10418">Généricité et collection</h2>
		<div class="ss_part_texte">
		Vous pouvez aussi utiliser la généricité sur les objets servant à gérer des collections.<br>
C'est même l'un des points les plus utiles de la généricité ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
En effet, lorsque vous listiez le contenu d'un <strong><span class="violet"><span class="courrier">ArrayList</span></span></strong> par exemple, vous n'étiez JAMAIS sûrs à 100 % de savoir sur quel type de référence vous alliez tomber... Eh bien ce calvaire est terminé et le polymorphisme va pouvoir réapparaître, plus puissant que jamais !<br>
<br>
Voyez comment utiliser (même si vous l'aviez deviné) la généricité avec les collections :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
 
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Liste de String"</span><span class="o">);</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"------------------------------"</span><span class="o">);</span>
                <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">listeString</span><span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
                <span class="n">listeString</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"Une chaîne"</span><span class="o">);</span>
                <span class="n">listeString</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"Une Autre"</span><span class="o">);</span>
                <span class="n">listeString</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"Encore une autre"</span><span class="o">);</span>
                <span class="n">listeString</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"Allez, une dernière"</span><span class="o">);</span>
                
                <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">listeString</span><span class="o">)</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
                
                
 
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nListe de float"</span><span class="o">);</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"------------------------------"</span><span class="o">);</span>
                
                <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Float</span><span class="o">&gt;</span> <span class="n">listeFloat</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Float</span><span class="o">&gt;();</span>
                <span class="n">listeFloat</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mf">12.25f</span><span class="o">);</span>
                <span class="n">listeFloat</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mf">15.25f</span><span class="o">);</span>
                <span class="n">listeFloat</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mf">2.25f</span><span class="o">);</span>
                <span class="n">listeFloat</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mf">128764.25f</span><span class="o">);</span>
                
                <span class="k">for</span><span class="o">(</span><span class="kt">float</span> <span class="n">f</span> <span class="o">:</span> <span class="n">listeFloat</span><span class="o">)</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">f</span><span class="o">);</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici le résultat de ce code :<br>
<div class="centre"><img src="./java_files/103852.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq erreur"><strong>La généricité sur les listes est régie par les mêmes lois vues précédemment !</strong><br>
Pas de type <strong><span class="violet"><span class="courrier">float</span></span></strong> dans un <strong><span class="violet"><span class="courrier">ArrayList&lt;String&gt;</span></span></strong>. <br>
</div><br>
Vu qu'on y va <span class="italique">crescendo</span>, on pimente à nouveau le tout !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10417">Héritage et généricité</h2>
		<div class="ss_part_texte">
		Là où les choses sont pernicieuses, c'est quand vous utilisez des classes usant de la généricité avec des objets usant de la notion d'héritage !<br>
L'héritage dans la généricité est une des choses les plus complexes à comprendre en Java. Pourquoi ? Tout simplement parce qu'elle va à l'encontre de ce que vous avez appris jusqu'à présent...  <img src="./java_files/blink.gif" alt="o_O" class="smilies"> <br>
<br>
<h4><span class="souligne">Acceptons le postulat suivant</span></h4><br>
Nous avons une classe <strong><span class="courrier">Voiture</span></strong> dont hérite une autre classe <strong><span class="courrier">VoitureSansPermis</span></strong>, ce qui nous donnerait le diagramme suivant :<br>
<br>
<div class="centre"><img src="./java_files/103850.png" alt="Image utilisateur"></div><br>
<br>
Jusque-là, c'est simplissime. <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
Maintenant, ça se complique :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
 
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Voiture</span><span class="o">&gt;</span> <span class="n">listVoiture</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Voiture</span><span class="o">&gt;();</span>
                <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">VoitureSansPermis</span><span class="o">&gt;</span> <span class="n">listVoitureSP</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">VoitureSansPermis</span><span class="o">&gt;();</span>
                
                <span class="n">listVoiture</span> <span class="o">=</span> <span class="n">listVoitureSP</span><span class="o">;</span><span class="c1">//Interdit ! ! ! ! </span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Je sais que même si vous aviez l'habitude de la covariance des variables, ceci n'existe pas sous cette forme avec la généricité !<br>
<div class="rmq question">Pourquoi cela ?</div><br>
Imaginez deux secondes que l'instruction interdite soit permise !<br>
Dans <strong><span class="courrier">listVoiture</span></strong>, vous avez le contenu de la liste des voitures sans permis, et rien ne vous empêche d'ajouter une voiture... Là où le problème prend toute son envergure, c'est lorsque vous allez vouloir sortir toutes les voitures sans permis de votre variable <strong><span class="courrier">listVoiture</span></strong>, eh oui ! Vous y avez rajouté une voiture !  <img src="./java_files/huh.png" alt=":o" class="smilies"> <br>
Lors du balayage de la liste vous aurez, à un moment, une référence de type <strong><span class="courrier">VoitureSansPermis</span></strong> à qui vous tentez d'affecter une référence de type <strong><span class="courrier">Voiture</span></strong>. Voilà pourquoi ceci est INTERDIT ! !<br>
<br>
L'une des solutions consiste à utiliser le <strong><span class="courrier">wildcard</span></strong>.<br>
<br>
Je vais maintenant vous indiquer quelque chose d'important !<br>
Avec la généricité, vous pouvez aller encore plus loin... Nous avons vu comment restreindre le contenu d'une de nos listes. Mais nous pouvons aussi élargir son contenu ! Si je veux par exemple qu'un <strong><span class="violet"><span class="courrier">ArrayList</span></span></strong> puisse avoir toutes les instances de <strong><span class="courrier">Voiture</span></strong> et de ses classes filles. <strong>Comment faire ?</strong><br>
<br>
<div class="rmq information"><strong>Ce qui suit s'applique aussi aux interfaces susceptibles d'être implémentées par une classe !</strong></div><br>
<br>
Attention les yeux, ça pique :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                <span class="c1">//Voici un ArrayList n'acceptant que des instances de Voiture ou de ses sous-classes</span>
                <span class="n">ArrayList</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">Voiture</span><span class="o">&gt;</span> <span class="n">listVoitureSP</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">VoitureSansPermis</span><span class="o">&gt;();</span>           
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Et une application de ceci consiste à faire des méthodes génériques, comme par exemple avoir une méthode qui permette de lister toutes les valeurs de notre <strong><span class="violet"><span class="courrier">ArrayList</span></span></strong> citée précédemment. Voici :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">ArrayList</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">Voiture</span><span class="o">&gt;</span> <span class="n">listVoitureSP</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">VoitureSansPermis</span><span class="o">&gt;();</span> 
                <span class="n">afficher</span><span class="o">(</span><span class="n">listVoitureSP</span><span class="o">);</span>          
        <span class="o">}</span>
        
        <span class="cm">/**</span>
<span class="cm">         * Méthode générique !</span>
<span class="cm">         * @param &lt;T&gt;</span>
<span class="cm">         * @param list</span>
<span class="cm">         */</span>
        <span class="kd">static</span> <span class="kt">void</span> <span class="nf">afficher</span><span class="o">(</span><span class="n">ArrayList</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">Voiture</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">){</span>
                <span class="k">for</span><span class="o">(</span><span class="n">Voiture</span> <span class="n">v</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq question"><br>
Eh ! Attends, on a voulu ajouter des objets dans notre collection et le programme ne compile plus !</div><br>
<br>
Oui, alors, ce que je ne vous avait pas dis, c'est que, dès que vous utilisez le wildcard combiné avec le mot clé <span class="violet"><span class="courrier"><strong>extends</strong></span></span>, vos listes seront verrouillées en insertion : <strong>Elles se transforment en collections en lecture seule...</strong><br>
<br>
<div class="rmq question">Pourquoi ça ?</div><br>
En fait, il faut déjà savoir que c'est à la compilation du programme que Java ne vous laisse pas faire. <br>
Le verrou vient du fait que, vu que le wilcard signifie "<span class="italique"><strong>tout objet</strong></span>" combiné avec <strong><span class="violet"><span class="courrier">extends</span></span></strong> signifiant "<strong><span class="italique">héritant</span></strong>", au moment de la compilation, Java n'a aucune idée de l'objet qu'on vient d'assigner à notre collection : les concepteurs ont donc préféré bloquer ce mode d'utilisation.<br>
<br>
Par contre, ce type d'utilisation fonctionne à merveille pour la lecture : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		
		<span class="c1">//Liste de voiture</span>
		<span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Voiture</span><span class="o">&gt;</span> <span class="n">listVoiture</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Voiture</span><span class="o">&gt;();</span>
		<span class="n">listVoiture</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Voiture</span><span class="o">());</span>
		<span class="n">listVoiture</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Voiture</span><span class="o">());</span>
		
		<span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">VoitureSansPermis</span><span class="o">&gt;</span> <span class="n">listVoitureSP</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">VoitureSansPermis</span><span class="o">&gt;();</span>
		<span class="n">listVoitureSP</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">VoitureSansPermis</span><span class="o">());</span>
		<span class="n">listVoitureSP</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">VoitureSansPermis</span><span class="o">());</span>
		
		<span class="n">affiche</span><span class="o">(</span><span class="n">listVoiture</span><span class="o">);</span>
		<span class="n">affiche</span><span class="o">(</span><span class="n">listVoitureSP</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="cm">/**</span>
<span class="cm">	 * Avec cette méthode, on accepte aussi bien les collections de Voiture </span>
<span class="cm">	 * que les collection de VoitureSansPermis</span>
<span class="cm">	 * @param list</span>
<span class="cm">	 */</span>
	<span class="kd">static</span> <span class="kt">void</span> <span class="nf">affiche</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">Voiture</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">){</span>

		<span class="k">for</span><span class="o">(</span><span class="n">Voiture</span> <span class="n">v</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Avant que vous ne posiez la question : NON ! Déclarer la méthode comme ceci <span class="code2 java"><span class="n">affiche</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Voiture</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">)</span>
</span> ne vous permet pas de parcourir des listes de <strong><span class="violet"><span class="courrier">VoitureSansPermis</span></span></strong>, même si celle-ci hérite de la classe <strong><span class="violet"><span class="courrier">Voiture</span></span></strong>. <br>
<strong>Les méthodes déclarées avec un type générique sont verrouillées afin de n'être utilisées qu'avec ce type bien précis, toujours pour les mêmes raisons que ci-dessus !</strong><br>
<br>
<div class="rmq question">Pfiou ! C'est bien compliqué tout ça...</div><br>
Attendez, ce n'est pas encore fini. Nous avons vu comment élargir le contenu de nos collections (pour la lecture), nous allons voir comment restreindre les collections acceptées par nos méthodes.<br>
La méthode :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">static</span> <span class="kt">void</span> <span class="nf">affiche</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">Voiture</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">){</span>

  <span class="k">for</span><span class="o">(</span><span class="n">Voiture</span> <span class="n">v</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span>
	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Autorise un objet de type <strong><span class="violet"><span class="courrier">List</span></span></strong> de n'importe quel type dont <strong><span class="violet"><span class="courrier">Voiture </span></span></strong>est la super classe.<br>
<br>
L'instruction suivante signifie : <br>
La méthode autorise un objet de type <strong><span class="violet"><span class="courrier">List</span></span></strong> de n'importe quel super classe de la classe <strong><span class="violet"><span class="courrier">Voiture</span></span></strong>, <strong><span class="violet"><span class="courrier">Voiture </span></span></strong> y compris.<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">static</span> <span class="kt">void</span> <span class="nf">affiche</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?</span> <span class="kd">super</span> <span class="n">Voiture</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">){</span>

  <span class="k">for</span><span class="o">(</span><span class="n">Object</span> <span class="n">v</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span>
	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce code fonctionne donc parfaitement : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		
		<span class="c1">//Liste de voiture</span>
		<span class="n">List</span><span class="o">&lt;</span><span class="n">Voiture</span><span class="o">&gt;</span> <span class="n">listVoiture</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Voiture</span><span class="o">&gt;();</span>
		<span class="n">listVoiture</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Voiture</span><span class="o">());</span>
		<span class="n">listVoiture</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Voiture</span><span class="o">());</span>
		
		<span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">listVoitureSP</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;();</span>
		<span class="n">listVoitureSP</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Object</span><span class="o">());</span>
		<span class="n">listVoitureSP</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Object</span><span class="o">());</span>
		
		<span class="n">affiche</span><span class="o">(</span><span class="n">listVoiture</span><span class="o">);</span>		
	<span class="o">}</span>
	
	<span class="cm">/**</span>
<span class="cm">	 * Avec cette méthode, on accepte aussi bien les collections de Voiture </span>
<span class="cm">	 * que les collection d' Object : super classe de toutes les classes</span>
<span class="cm">	 * @param list</span>
<span class="cm">	 */</span>
	<span class="kd">static</span> <span class="kt">void</span> <span class="nf">affiche</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?</span> <span class="kd">super</span> <span class="n">Voiture</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">){</span>

		<span class="k">for</span><span class="o">(</span><span class="n">Object</span> <span class="n">v</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
	<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
Je conçois bien que ceci est un peu ardu à comprendre... Mais vous en aurez sûrement besoin dans une de vos prochaines applications !<br>
<br>
Bon : je crois que nous avons fait un bon tour du sujet même si nous n'avons pas tout abordé... Allez, le topo classique.  <img src="./java_files/hihi.png" alt="^^" class="smilies"> 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10416">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>La généricité est apparue depuis le JDK 1.5.</li>
<li>Ce concept est très utile pour développer des objets pouvant travailler avec plusieurs types de données.</li>
<li>Vous passerez donc <strong>moins de temps à développer</strong> des classes pour traiter de façon identique des données différentes.</li>
<li>La généricité permet de <strong>ré-utiliser le polymorphisme</strong> sans risque avec les collections.</li>
<li>Cela vous permet une meilleure <strong>robustesse du code</strong>.</li>
<li>Vous pouvez coupler les collections avec la généricité !</li>
<li>Le <strong><span class="violet"><span class="courrier">wildcard (?)</span></span></strong> permet de dire que <strong><span class="italique">n'importe quel type peut être traité</span></strong> et donc accepté !</li>
<li>Dès que le <strong><span class="violet"><span class="courrier">wildcard (?)</span></span></strong> est utilisé sur une collection, <strong><span class="rouge">cela revient à rendre la dite collection en lecture seule !</span></strong></li>
<li>Vous pouvez élargir le champ d'acceptation d'une collection générique grâce au mot clé <strong><span class="violet"><span class="courrier">extends</span></span></strong>.</li>
<li> L'instruction <span class="code2 java"><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">MaClasse</span><span class="o">&gt;</span>
</span> autorise toutes les collections de classes ayant pour super type <strong><span class="violet"><span class="courrier">MaClasse</span></span></strong>.</li>
<li> L'instruction <span class="code2 java"><span class="o">&lt;?</span> <span class="kd">super</span> <span class="n">MaClasse</span><span class="o">&gt;</span>
</span> autorise toutes les collections de classes ayant pour type <strong><span class="violet"><span class="courrier">MaClasse</span></span></strong> et tous ses supers types !</li>
<li>Pour ce genre de cas, les<strong> méthodes génériques</strong> sont particulièrement adaptées et <strong>permettent d'utiliser le polymorphisme dans toute sa splendeur</strong> !</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	J'espère que ce chapitre n'a été trop... lourd...<br>
En attendant, nous avons presque terminé cette seconde partie... La programmation d'interface graphique se rapproche !<br>
Mais il nous reste une dernière chose à aborder qui peut s'avérer importante ! <strong><span class="vertf">La réflexivité</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10431">Java et la réflexivité</h1>
	<div id="chap_intro">
	Voici un chapitre qui, je pense, ne vous servira pas tout de suite.<br>
Cependant, il me semble important d'en parler... <br>
<br>
La réflexivité n'est en fait que le moyen de connaître toutes les informations concernant une classe donnée. Vous pourrez même créer des instances de classe de façon dynamique grâce à ceci.<br>
Je pense faire une partie sur les <strong><span class="italique">design pattern</span></strong> après celle sur les interfaces graphiques ! Et, à ce moment, vous aurez sans doute besoin des connaissances de ce chapitre, surtout lorsque nous aborderons le <strong><span class="italique">pattern factory</span></strong>.<br>
<br>
En attendant, je pense que ce chapitre va tout de même vous intéresser ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Alors, allons-y...
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10430">Commençons par le commencement</h2>
		<div class="ss_part_texte">
		La <strong>réflexivité</strong>, aussi appelée <strong>introspection</strong>, consiste à découvrir de façon dynamique des informations propres à une classe Java ou à un objet. Ceci est notamment utilisé au niveau de la machine virtuelle Java lors de l'exécution de votre programme. En gros, votre machine virtuelle stocke les informations relatives à une classe dans un objet.<br>
<br>
<h4><span class="souligne">Concrètement, que se passe-t-il ?</span></h4> <br>
<br>
Au chargement d'une classe Java, votre <acronym title="Java Virtual Machine">JVM</acronym> crée automatiquement un objet. Celui-ci récupère toutes les caractéristiques de votre classe ! Il s'agit d'un objet <strong><span class="violet"><span class="courrier">Class</span></span></strong>.<br>
<span class="italique"><span class="souligne">Exemple</span>:</span> si vous avez créé trois nouvelles classes Java, à l'exécution de votre programme, la <acronym title="Java Virtual Machine">JVM</acronym> va créer un objet <strong><span class="violet"><span class="courrier">Class</span></span></strong> pour chacune d'elles. <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Comme vous devez vous en douter, cet objet possède une multitude de méthodes qui permettent d'avoir tous les renseignements possibles et imaginables sur une classe.<br>
<br>
Dans ce chapitre, nous allons visiter la classe <strong><span class="violet"><span class="courrier">String</span></span></strong>.<br>
Créez un nouveau projet ainsi qu'une classe contenant la méthode <strong><span class="courrier">main</span></strong>.<br>
Voici deux façons de récupérer un objet <strong><span class="violet"><span class="courrier">Class</span></span></strong> :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
 
              <span class="n">Class</span> <span class="n">c</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">;</span>
              <span class="n">Class</span> <span class="n">c2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">().</span><span class="na">getClass</span><span class="o">();</span>
              <span class="c">/*La fameuse méthode finale dont je vous parlais dans le chapitre sur l'héritage</span>
<span class="c">               Cette méthode vient de la classe Object</span>
<span class="c">              */</span>
         <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Maintenant que vous savez récupérer un objet <strong><span class="violet"><span class="courrier">Class</span></span></strong>, nous allons tout de suite voir ce qu'il sait faire ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10429">Interroger un objet Class</h2>
		<div class="ss_part_texte">
		Dans ce sous-chapitre, nous allons voir une partie des choses que sait faire un objet <strong><span class="violet"><span class="courrier">Class</span></span></strong>. Je ne vais pas tout vous montrer... De toute façon, je pense que vous êtes à même de chercher et de trouver tous seuls maintenant. Vous avez l'habitude de manipuler des objets, à présent...<br>
<br>
<h4><span class="marron"><span class="souligne">Connaître la super classe d'une classe</span></span></h4><br>
<br>
Ce qui nous donne :<br>
<br>
<div class="centre"><img src="./java_files/103881.jpg" alt="Image utilisateur"></div><br>
<br>
La classe <strong><span class="violet"><span class="courrier">Object</span></span></strong> n'a pas de super-classe...  <img src="./java_files/triste.png" alt=":(" class="smilies"> <br>
<br>
Voyez plutôt :<br>
<br>
<div class="centre"><img src="./java_files/103880.jpg" alt="Image utilisateur"></div><br>
<br>
<h4><span class="marron"><span class="souligne">Connaître la liste des interfaces</span></span></h4><br>
<br>
Vous pouvez tester ce code :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                        
                <span class="c">//On récupère un objet Class</span>
                <span class="n">Class</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">().</span><span class="na">getClass</span><span class="o">();</span>
                <span class="c">//La méthode getInterfaces retourne un tableau de Class</span>
                <span class="n">Class</span><span class="o">[]</span> <span class="n">faces</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">getInterfaces</span><span class="o">();</span>
                <span class="c">//Pour voir le nombre d'interfaces</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Il y a "</span> <span class="o">+</span> <span class="n">faces</span><span class="o">.</span><span class="na">length</span> <span class="o">+</span> <span class="s">" interfaces implémentées"</span><span class="o">);</span>
                <span class="c">//On parcourt le tableau d'interfaces</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">faces</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">faces</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donne :<br>
<div class="centre"><img src="./java_files/103884.jpg" alt="Image utilisateur"></div><br>
<br>
<h4><span class="marron"><span class="souligne">Connaître la liste des méthodes de la classe</span></span></h4><br>
<br>
La méthode <strong><span class="courrier">getMethods()</span></strong> de l'objet <strong><span class="violet"><span class="courrier">Class</span></span></strong> nous retourne un tableau d'objets <strong><span class="courrier"><span class="violet">Method</span></span></strong> présents dans le <strong><span class="violet"><span class="courrier">package java.lang.reflect</span></span></strong>.<br>
Vous pouvez soit faire l'import à la main, soit déclarer un tableau d'objets <strong><span class="courrier"><span class="violet">Method</span></span></strong> et utiliser le raccourci <strong><span class="italique">Ctrl + Shift + O</span></strong>.<br>
Voici un code qui retourne la liste des méthodes de la classe <strong><span class="violet"><span class="courrier">String</span></span></strong> :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.lang.reflect.Method</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>                
                
                <span class="n">Class</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">().</span><span class="na">getClass</span><span class="o">();</span>
                <span class="n">Method</span><span class="o">[]</span> <span class="n">m</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">getMethods</span><span class="o">();</span>
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Il y a "</span> <span class="o">+</span> <span class="n">m</span><span class="o">.</span><span class="na">length</span> <span class="o">+</span> <span class="s">" méthodes dans cette classe"</span><span class="o">);</span>
                <span class="c">//On parcourt le tableau de méthodes</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">m</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">m</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Voici un morceau du résultat car, comme vous pourrez le voir, il y a beaucoup de méthodes dans la classe <strong><span class="violet"><span class="courrier">String</span></span></strong>.<br>
<br>
<div class="centre"><img src="./java_files/103886.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez constater que l'objet <span class="violet"><span class="courrier">Method</span></span> regorge lui aussi de méthodes intéressantes. Voici un code qui affiche la liste des méthodes ainsi que la liste des attributs qu'elles prennent :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.lang.reflect.Method</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>                
                
                <span class="n">Class</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">().</span><span class="na">getClass</span><span class="o">();</span>
                <span class="n">Method</span><span class="o">[]</span> <span class="n">m</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">getMethods</span><span class="o">();</span>
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Il y a "</span> <span class="o">+</span> <span class="n">m</span><span class="o">.</span><span class="na">length</span> <span class="o">+</span> <span class="s">" méthodes dans cette classe"</span><span class="o">);</span>
                <span class="c">//On parcourt le tableau de méthodes</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">m</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
                <span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">m</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                        
                        <span class="n">Class</span><span class="o">[]</span> <span class="n">p</span> <span class="o">=</span> <span class="n">m</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getParameterTypes</span><span class="o">();</span>
                        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">p</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span>
                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">p</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">getName</span><span class="o">());</span>
                        
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"----------------------------------------\n"</span><span class="o">);</span>
                <span class="o">}</span>
                                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voilà :<br>
<br>
<div class="centre"><img src="./java_files/103888.jpg" alt="Image utilisateur"></div><br>
<br>
<h4><span class="marron"><span class="souligne">Connaître la liste des champs (variable de classe ou d'instance) de la classe</span></span></h4><br>
<br>
Ici, nous allons appliquer la même méthodologie que pour la liste des méthodes sauf que cette fois, la méthode invoquée retourne un tableau d'objets <strong><span class="violet"><span class="courrier">Field</span></span></strong>. Voici un code qui affiche la liste des champs de la classe <strong><span class="violet"><span class="courrier">String</span></span></strong>.<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.lang.reflect.Field</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>                
                
                <span class="n">Class</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">().</span><span class="na">getClass</span><span class="o">();</span>
                <span class="n">Field</span><span class="o">[]</span> <span class="n">m</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">getFields</span><span class="o">();</span>
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Il y a "</span> <span class="o">+</span> <span class="n">m</span><span class="o">.</span><span class="na">length</span> <span class="o">+</span> <span class="s">" champs dans cette classe"</span><span class="o">);</span>
                <span class="c">//On parcourt le tableau de méthodes</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">m</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">m</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getName</span><span class="o">());</span>
                                                        
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="marron"><span class="souligne">Connaître la liste des constructeurs de la classe</span></span></h4><br>
Ici, nous utiliserons un objet <strong><span class="violet"><span class="courrier">Constructor</span></span></strong> pour lister les constructeurs de la classe :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.lang.reflect.Constructor</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>                
                
                <span class="n">Class</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">().</span><span class="na">getClass</span><span class="o">();</span>
                <span class="n">Constructor</span><span class="o">[]</span> <span class="n">construc</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">getConstructors</span><span class="o">();</span>   
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Il y a "</span> <span class="o">+</span> <span class="n">construc</span><span class="o">.</span><span class="na">length</span> <span class="o">+</span> <span class="s">" constructeurs dans cette classe"</span><span class="o">);</span>
                <span class="c">//On parcourt le tableau des constructeur</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">construc</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">construc</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getName</span><span class="o">());</span>
                        
                        <span class="n">Class</span><span class="o">[]</span> <span class="n">param</span> <span class="o">=</span> <span class="n">construc</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getParameterTypes</span><span class="o">();</span>
                        
                        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">param</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span>
                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">param</span><span class="o">[</span><span class="n">j</span><span class="o">]);</span>
                        
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"------------------------------------\n"</span><span class="o">);</span>
                <span class="o">}</span>
                                                        
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez donc constater que l'objet <strong><span class="violet"><span class="courrier">Class</span></span></strong> regorge de méthodes en tout genre !<br>
Maintenant, si nous essayons d'exploiter un peu plus celles-ci... <img src="./java_files/heureux.png" alt=":D" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10428">Instanciation dynamique</h2>
		<div class="ss_part_texte">
		Nous allons voir une petite partie de la puissance de cette classe (pour l'instant).<br>
Dans un premier temps, créez un nouveau projet avec une méthode <strong><span class="courrier">main</span></strong>, ainsi qu'une classe correspondant à ceci :<br>
<br>
<div class="centre"><img src="./java_files/103906.png" alt="Image utilisateur"></div><br>
<br>
Voici son code Java :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Paire</span> <span class="o">{</span>
 
        <span class="k">private</span> <span class="n">String</span> <span class="n">valeur1</span><span class="o">,</span> <span class="n">valeur2</span><span class="o">;</span>
        
        <span class="k">public</span> <span class="nf">Paire</span><span class="o">(){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur1</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur2</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Instanciation ! !"</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="k">public</span> <span class="nf">Paire</span><span class="o">(</span><span class="n">String</span> <span class="n">val1</span><span class="o">,</span> <span class="n">String</span> <span class="n">val2</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur1</span> <span class="o">=</span> <span class="n">val1</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur2</span> <span class="o">=</span> <span class="n">val2</span><span class="o">;</span>
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Instanciation avec des paramètres ! !"</span><span class="o">);</span>
                
        <span class="o">}</span>
        
        <span class="k">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">(){</span>
                <span class="k">return</span>  <span class="s">"Je suis un objet qui a pour valeur : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">valeur1</span> <span class="o">+</span> <span class="s">" - "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">valeur2</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="n">String</span> <span class="nf">getValeur1</span><span class="o">()</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">valeur1</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">setValeur1</span><span class="o">(</span><span class="n">String</span> <span class="n">valeur1</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur1</span> <span class="o">=</span> <span class="n">valeur1</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="n">String</span> <span class="nf">getValeur2</span><span class="o">()</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">valeur2</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">setValeur2</span><span class="o">(</span><span class="n">String</span> <span class="n">valeur2</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">this</span><span class="o">.</span><span class="na">valeur2</span> <span class="o">=</span> <span class="n">valeur2</span><span class="o">;</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Le but du jeu maintenant consiste à créer un objet <strong><span class="courrier">Paire</span></strong> sans utiliser l'opérateur <strong><span class="violet"><span class="courrier">new</span></span></strong>.<br>
<br>
Pour instancier un nouvel objet <strong><span class="courrier">Paire</span></strong>, nous allons tout d'abord récupérer ses constructeurs. Ensuite, nous allons préparer un tableau contenant les données à insérer. Puis nous invoquerons la méthode <strong><span class="courrier">toString()</span></strong>.<br>
<br>
Regardez comment procéder ; par contre, il y a moultes exceptions :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.lang.reflect.Constructor</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.lang.reflect.InvocationTargetException</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>                
                
                <span class="n">String</span> <span class="n">nom</span> <span class="o">=</span> <span class="n">Paire</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">();</span>
                
                
                        <span class="k">try</span> <span class="o">{</span>
                                <span class="c">//On crée un objet Class</span>
                                <span class="n">Class</span> <span class="n">cl</span> <span class="o">=</span> <span class="n">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>
                                <span class="c">//Nouvelle instance de la classe Paire</span>
                                <span class="n">Object</span> <span class="n">o</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
                                
                                <span class="c">//On crée les paramètres du constructeur</span>
                                <span class="n">Class</span><span class="o">[]</span> <span class="n">types</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Class</span><span class="o">[]{</span><span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">};</span>
                                <span class="c">//On récupère le constructeur avec les deux paramètres</span>
                                <span class="n">Constructor</span> <span class="n">ct</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="na">getConstructor</span><span class="o">(</span><span class="n">types</span><span class="o">);</span>                      
                                <span class="c">//On instancie l'objet avec le constructeur surchargé !</span>
                                <span class="n">Object</span> <span class="n">o2</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="na">newInstance</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">"valeur 1 "</span><span class="o">,</span> <span class="s">"valeur 2"</span><span class="o">}</span> <span class="o">);</span>
                                
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">SecurityException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalArgumentException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InstantiationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalAccessException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NoSuchMethodException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InvocationTargetException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat donne :<br>
<div class="centre"><img src="./java_files/103911.png" alt="Image utilisateur"></div><br>
<br>
Nous pouvons maintenant appeler la méthode <strong><span class="courrier">toString()</span></strong> du deuxième objet... oh et soyons fous, sur les deux :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.lang.reflect.Constructor</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.lang.reflect.InvocationTargetException</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.lang.reflect.Method</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>                
                
                <span class="n">String</span> <span class="n">nom</span> <span class="o">=</span> <span class="n">Paire</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">();</span>
                
                
                        <span class="k">try</span> <span class="o">{</span>
                                <span class="c">//On crée un objet Class</span>
                                <span class="n">Class</span> <span class="n">cl</span> <span class="o">=</span> <span class="n">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>
                                <span class="c">//Nouvelle instance de la classe Paire</span>
                                <span class="n">Object</span> <span class="n">o</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
                                
                                <span class="c">//On crée les paramètres du constructeur</span>
                                <span class="n">Class</span><span class="o">[]</span> <span class="n">types</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Class</span><span class="o">[]{</span><span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">};</span>
                                <span class="c">//On récupère le constructeur avec les deux paramètres</span>
                                <span class="n">Constructor</span> <span class="n">ct</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="na">getConstructor</span><span class="o">(</span><span class="n">types</span><span class="o">);</span>                      
                                <span class="c">//On instancie l'objet avec le constructeur surchargé !</span>
                                <span class="n">Object</span> <span class="n">o2</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="na">newInstance</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">"valeur 1 "</span><span class="o">,</span> <span class="s">"valeur 2"</span><span class="o">}</span> <span class="o">);</span>
                                
                                <span class="c">//On va chercher la méthode toString, elle n'a aucun paramètre</span>
                                <span class="n">Method</span> <span class="n">m</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="na">getMethod</span><span class="o">(</span><span class="s">"toString"</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
                                <span class="c">//La méthode invoke exécute la méthode sur l'objet passé en paramètre,</span>
                                <span class="c">// pas de paramètre, donc null en deuxième paramètre de la méthode invoke !</span>
                                
                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"---------------------------------------------"</span><span class="o">);</span>
                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Méthode "</span> <span class="o">+</span> <span class="n">m</span><span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">" sur o2: "</span> <span class="o">+</span><span class="n">m</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">o2</span><span class="o">,</span> <span class="kc">null</span><span class="o">));</span>
                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Méthode "</span> <span class="o">+</span> <span class="n">m</span><span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">" sur o: "</span> <span class="o">+</span><span class="n">m</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">o</span><span class="o">,</span> <span class="kc">null</span><span class="o">));</span>
                                
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">SecurityException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalArgumentException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InstantiationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalAccessException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NoSuchMethodException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InvocationTargetException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Et le résultat <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"> :<br>
<div class="centre"><img src="./java_files/103913.png" alt="Image utilisateur"></div><br>
<br>
Voilà : nous venons de créer deux instances d'une classe sans passer par l'opérateur <strong><span class="violet"><span class="courrier">new</span></span></strong>. Mieux encore ! Car nous avons même pu appeler une méthode de nos instances ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Je ne vais pas m'attarder trop longtemps sur ce sujet... Mais gardez en tête que cette façon de faire, même si elle est très lourde, pourrait vous être utile. Et là, je repense à mon <strong><span class="italique">pattern factory</span></strong>. En quelques mots, il s'agit d'une classe Java qui ne fait que créer des instances ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Bon. Je crois que vous avez bien mérité une pause. Les deux derniers chapitres ont été assez éprouvants...<br>
Un petit topo et en route pour la partie 3 !  <img src="./java_files/siffle.png" alt=":-°" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10427">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Lorsque votre JVM interprète votre programme, elle crée automatiquement un objet <strong><span class="violet"><span class="courrier">Class</span></span></strong> pour chaque classe chargée.</li>
<li>Avec un tel objet, vous pouvez connaître absolument tout sur votre classe.</li>
<li>L'objet <strong><span class="violet"><span class="courrier">Class</span></span></strong> utilise des sous-objets comme <strong><span class="violet"><span class="courrier">Method</span></span></strong>, <strong><span class="violet"><span class="courrier">Field</span></span></strong>, <strong><span class="violet"><span class="courrier">Constructor</span></span></strong>... qui permettent de travailler avec vos différents objets, mais aussi avec ceux présents dans Java.</li>
<li>Avec cet objet, vous pouvez créer des instances de vos classes Java sans utiliser <strong><span class="violet"><span class="courrier">new</span></span></strong>.</li>
<li><strong>Par contre, vous devez savoir que les performances restent médiocres.</strong></li>
</ul><br>
<br>
Allez : je vous fais grâce d'un QCM... Une fois n'est pas coutume ! <img src="./java_files/hihi.png" alt="^^" class="smilies">
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Voilà, c'était le dernier chapitre de cette partie !<br>
Il y a eu pas mal de choses vues ici...<br>
<br>
Je ne vais faire de long discours maintenant que vous êtes si près de la programmation événementielle...<br>
Alors... Rendez-vous dans la troisième partie. <img src="./java_files/clin.png" alt=";)" class="smilies">
	</div>
	
<div>
<br>
J'espère que cette partie vous a plu et que vous avez appris plein de bonne choses !<br>
J'ai volontairement omis de parler des <span class="italique"><strong>flux</strong></span> et des <strong><span class="italique">threads</span></strong> dans cette partie. Je préfère avoir des cas bien concrets à vous soumettre pour ça...<br>
<br>
Bon : je sais que beaucoup d'entre vous l'attendent avec impatience, alors voici la partie sur la <strong><span class="vertf"><span class="gros">programmation événementielle </span></span></strong>!
</div>

<hr>
<h2>Partie 3 : Java et la programmation événementielle</h2>
<div>
Dans cette partie, nous aborderons la programmation événementielle comme le stipule le titre.<br>
Par là, entendez <strong><span class="italique">programmation d'interface graphique</span></strong>, ou <acronym title="Interfaces Hommes Machines">IHM</acronym>, ou encore <acronym title="Graphicals Users Interfaces">GUI</acronym>.<br>
<br>
Nous utiliserons essentiellement les bibliothèques <strong><span class="violet"><span class="courrier">Swing</span></span></strong> et <strong><span class="violet"><span class="courrier"><acronym title="Abstract Window Toolkit">AWT</acronym> </span></span></strong>présentes d'office dans Java. <br>
<br>
Nous verrons ce qui forme, je pense, les fondements de base ! Nous n'entrerons pas dans les détails, enfin pas trop... <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
Je ne vais pas faire de long discours maintenant, je sais que vous êtes impatients... alors go !
</div>
	
	<hr>
	<h1 id="chap_10444">Votre première fenêtre</h1>
	<div id="chap_intro">
	Dans ce chapitre, nous allons apprendre à nous servir de l'objet <strong><span class="violet"><span class="courrier">JFrame</span></span></strong>, présent dans le package <strong><span class="violet"><span class="courrier">Swing</span></span></strong>. <br>
<br>
À la fin du chapitre, vous serez à même de créer une fenêtre, de choisir sa taille...<br>
Trêve de bavardage inutile, commençons tout de suite !  <img src="./java_files/langue.png" alt=":p" class="smilies"> 
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10443">L'objet JFrame</h2>
		<div class="ss_part_texte">
		Nous y voilà... Avant de nous lancer à corps perdu, vous devez savoir ce que nous allons utiliser...<br>
Vu que nous allons développer des interfaces avec <span class="courrier">swing</span>, vous devez savoir que toutes les classes <span class="courrier">swing</span> se trouvent dans le package <strong><span class="violet"><span class="courrier">javax.swing</span></span></strong>. Mais ne vous y trompez pas, nous allons utiliser aussi des objets <strong><span class="violet"><span class="courrier">awt (java.awt)</span></span></strong>, mais pas de composants !<br>
Pour faire simple, un composant peut être un bouton, une zône de texte, une case à cocher... Bref, tout ce qui peut interagir avec vous !<br>
<br>
<div class="rmq erreur"><strong>Il est très fortement recommandé de ne pas mélanger les composants <span class="courrier">swing</span> et <span class="courrier">awt</span> ! ! Ceci pour cause de conflit ! Si vous faites ceci vous aurez de très grandes difficultés à faire une IHM stable et valide ! En effet, pour faire simple, <span class="courrier">swing</span> et <span class="courrier">awt</span> se basent sur les mêmes fondements mais diffèrent sur l'utilisation de ces fondements...</strong></div><br>
<br>
Pourquoi ? <br>
Tout simplement car les objets de ces deux packages ne sont pas construits de la même façon et que des conflits peuvent survenir (superposition de composants...).<br>
<br>
Je ne vous demande pas de créer un projet avec une classe <strong><span class="courrier">main</span></strong>, celui-ci doit être prêt depuis des lustres, facile !<br>
<br>
Pour utiliser une fenêtre de type <strong><span class="violet"><span class="courrier">JFrame</span></span></strong>, vous devez instancier celui-ci. Comme ceci :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
        
                <span class="n">JFrame</span> <span class="n">fenetre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFrame</span><span class="o">();</span>
                
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq question">Eh ! Lorsque j'exécute mon code, rien ne s'affiche !</div><br>
Oui, parce que par défaut, votre <strong><span class="violet"><span class="courrier">JFrame </span></span></strong>n'est pas visible...  <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
Pour pouvoir l'afficher à l'écran, vous devez lui dire "<strong><span class="italique">sois visible</span></strong>", comme ça :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
        
                <span class="n">JFrame</span> <span class="n">fenetre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFrame</span><span class="o">();</span>
                <span class="n">fenetre</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Et lorsque vous exécuterez votre code, vous pourrez voir ceci :<br>
<div class="centre"><img src="./java_files/103914.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq question">Eh, mais tu te moques de nous ! Elle est minuscule !</div><br>
Bienvenue dans le monde de la programmation événementielle ! Il faut que vous vous y fassiez... Vos composants ne sont pas intelligents : il va falloir leur dire tout ce qu'ils doivent faire !<br>
<br>
Bon, pour avoir une fenêtre plus conséquente, il faudrait :<br>
<ul>
<li>qu'elle soit plus grande ; en effet, c'est mieux ;</li>
<li>qu'elle ait un titre (c'est pas du luxe !) ;</li>
<li>si elle pouvait être centrée au milieu de mon écran, ce serait parfait ! <img src="./java_files/heureux.png" alt=":D" class="smilies"></li>
</ul><br>
<div class="rmq information">Par contre, vous ne l'avez peut-être pas remarqué mais, lorsque vous cliquez sur la croix rouge (pour fermer votre fenêtre), cette action ne termine pas le processus dans Eclipse !</div><br>
Pour réellement terminer le processus de l'application, vous devrez ajouter une autre instruction.<br>
<br>
Pour chacune des choses que je viens d'énumérer, il y a aura une méthode à appeler pour que votre <strong><span class="violet"><span class="courrier">JFrame</span></span></strong> sache à quoi s'en tenir !<br>
Voici un code qui reprend toutes nos doléances :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
        
                <span class="n">JFrame</span> <span class="n">fenetre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFrame</span><span class="o">();</span>
                
                <span class="c1">//Définit un titre pour votre fenêtre</span>
                <span class="n">fenetre</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Ma première fenêtre java"</span><span class="o">);</span>
                <span class="c1">//Définit une taille pour celle-ci ; ici, 400 px de large et 500 px de haut</span>
                <span class="n">fenetre</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">400</span><span class="o">,</span> <span class="mi">500</span><span class="o">);</span>
                <span class="c1">//Nous allons maintenant dire à notre objet de se positionner au centre</span>
                <span class="n">fenetre</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
                <span class="c1">//Terminer le processus lorsqu'on clique sur "Fermer"</span>
                <span class="n">fenetre</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
                
                <span class="n">fenetre</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voici le résultat :<br>
<div class="centre"><img src="./java_files/103915.jpg" alt="Image utilisateur"></div><br>
<br>
Par contre, je pense qu'il vaudrait mieux que nous ayons notre propre objet. Comme ça, on n'aura pas à redéfinir les attributs à chaque fois... Donc créons notre propre classe !  <img src="./java_files/clin.png" alt=";)" class="smilies">  
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10442">Votre fenêtre héritée</h2>
		<div class="ss_part_texte">
		Pour commencer, effacez tout le code que vous avez écrit dans votre méthode <strong><span class="courrier">main</span></strong>. Ensuite, créez une classe que nous appellerons "<strong><span class="violet"><span class="courrier">Fenetre</span></span></strong>", et faites-la hériter de <strong><span class="violet"><span class="courrier">JFrame</span></span></strong>.<br>
Voilà le code de cette classe pour le moment :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Nous allons maintenant créer notre constructeur et, dans celui-ci, nous mettrons nos instructions à l'intérieur.<br>
Ce qui nous donne :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
   
     <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
         <span class="c">//Définit un titre pour votre fenêtre</span>
         <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Ma première fenêtre java"</span><span class="o">);</span>
         <span class="c">//Définit une taille pour celle-ci ; ici, 400 px de large et 500 px de haut</span>
         <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">400</span><span class="o">,</span> <span class="mi">500</span><span class="o">);</span>
         <span class="c">//Nous allons maintenant dire à notre objet de se positionner au centre</span>
         <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
         <span class="c">//Ferme-toi lorsqu'on clique sur "Fermer" !</span>
         <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
             
         <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
     <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ensuite, vous avez le choix, soit :<br>
<ul>
<li>vous conservez votre classe contenant la méthode <span class="courrier">main</span> et vous créez une instance de <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong></li>
<li>vous effacez cette classe, et vous mettez votre méthode <span class="courrier">main</span> dans votre classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong>. Vous devez tout de même créer une instance de votre <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong>...</li>
</ul><br>
<br>
Personnellement, je préfère sortir ma méthode <span class="courrier">main</span> dans une classe à part... Mais je ne vous force à rien ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Quelque soit l'emplacement de votre <strong><span class="courrier">main</span></strong>, la ligne de code qui suit doit y figurer :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
</pre></div>
</td></tr></tbody></table></div><br>
Exécutez votre nouveau code et... vous avez exactement la même chose que précédemment !  <img src="./java_files/siffle.png" alt=":-°" class="smilies"> <br>
Vous conviendrez que c'est tout de même plus pratique de ne plus écrire les même choses à chaque fois... Comme ça, vous avez une classe qui va se charger de l'affichage de votre programme futur !<br>
Faisons un léger tour d'horizon de cette classe.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10441">Des méthodes et encore des méthodes</h2>
		<div class="ss_part_texte">
		Je vais vous faire une petite liste des méthodes que vous serez susceptibles d'utiliser.<br>
<br>
<h4><span class="marron"><span class="souligne">Positionner sa fenêtre à l'écran</span></span></h4><br>
<br>
Déjà, nous avons centré notre fenêtre, mais vous auriez peut-être voulu la positionner ailleurs. Pour faire ceci, vous avez la méthode <strong><span class="courrier">setLocation(int x, int y)</span></strong>. <br>
Avec cette méthode, vous pouvez spécifier où doit se situer votre fenêtre sur votre écran. Les coordonnées, exprimées en pixels, sont basées sur un repère prenant le coin supérieur gauche comme origine.<br>
<div class="centre"><img src="./java_files/103956.jpg" alt="Image utilisateur"></div><br>
<br>
La première valeur de la méthode vous positionne sur l'axe X, 0 correspondant à l'origine ; les valeurs positives déplacent la fenêtre vers la droite, et les valeurs négatives vous font sortir de l'écran vers la gauche. La même règle s'applique pour les valeurs Y, excepté que les valeurs positives font descendre la fenêtre en commençant par l'origine, et les valeurs négatives font sortir la fenêtre par le haut !<br>
<br>
<h4><span class="marron"><span class="souligne">Empêcher le redimensionnement de la fenêtre</span></span></h4><br>
<br>
Pour faire ceci, il vous suffit d'invoquer la méthode <strong><span class="courrier">setResizable(false);</span></strong>, et de le repasser à <strong><span class="courrier">setResizable(true)</span></strong> pour le rendre actif !<br>
<br>
<h4><span class="marron"><span class="souligne">Faire que votre fenêtre soit toujours au premier plan</span></span></h4><br>
<br>
Il s'agit là encore d'une méthode qui prend un booléen en paramètre. Passer <span class="courrier">true</span> mettra votre fenêtre au premier plan quoi qu'il advienne, et passer <span class="courrier">false</span> annulera le statut. Cette méthode est <strong><span class="courrier">setAlwaysOnTop(boolean b)</span></strong>.<br>
<br>
<h4><span class="marron"><span class="souligne">Retirer les contours et les boutons de contrôles</span></span></h4><br>
<br>
Pour ce faire, il vous suffit d'utiliser la méthode <strong><span class="courrier">setUndecorated(Boolean b)</span></strong>.<br>
<br>
Je ne vais pas faire le tour de toutes les méthodes maintenant... De toute façon, nous allons nous servir de pas mal d'autres dans un futur très proche...<br>
<div class="rmq question">C'est bien joli tout ça, mais on aimerait bien pouvoir mettre des trucs dans notre fenêtre !</div><br>
Bien sûr : mais avant, il vous faut encore apprendre une bricole... En fait votre fenêtre, telle qu'elle apparaît, vous cache quelques petites choses...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10440">Ce que vous cache votre fenêtre</h2>
		<div class="ss_part_texte">
		Vous pensez, et c'est légitime, que votre fenêtre est toute simple, dépourvue de tout composant (hormis les contours).<br>
Eh bien vous vous trompez !<br>
Une <strong><span class="violet"><span class="courrier">JFrame</span></span></strong> est découpée en plusieurs parties :<br>
<ul>
<li><strong>la fenêtre</strong>,</li>
<li>le <strong><span class="courrier">RootPane</span></strong>, le <span class="italique"><strong>container</strong></span> (<span class="italique">conteneur</span>) principal qui contient les autres composants,</li>
<li>le <strong><span class="courrier">LayeredPane</span></strong>, qui forme juste un panneau composé du <span class="courrier">ContentPane</span> et de la barre de menu (<span class="courrier">MenuBar</span>),</li>
<li>la <strong><span class="courrier">MenuBar</span></strong>, la barre de menu quand il y en a une...</li>
<li>le <strong><span class="courrier">ContentPane</span></strong> ; c'est dans celui-ci que nous mettrons nos composants,</li>
<li>et le <strong><span class="courrier">GlassPane</span></strong>, couche utilisée pour intercepter les actions de l'utilisateur avant qu'elles ne parviennent aux composants.</li>
</ul><br>
Pas de panique... <img src="./java_files/hihi.png" alt="^^" class="smilies"> Nous n'allons nous servir que du <span class="courrier">contentPane</span> et, pour le récupérer, nous n'avons qu'à utiliser la méthode <strong><span class="courrier">getContentPane()</span></strong> de la classe <strong><span class="violet"><span class="courrier">JFrame</span></span></strong>.<br>
<br>
Cependant, nous allons utiliser un composant autre que le <span class="courrier">contentPane</span>. Nous utiliserons un <strong><span class="violet"><span class="courrier">JPanel</span></span></strong>.<br>
<br>
<div class="rmq information">Il existe d'autres types de fenêtres. La <strong><span class="violet"><span class="courrier">JWindow</span></span></strong>, une <strong><span class="violet"><span class="courrier">JFrame</span></span></strong> sans bord  et non <span class="italique">draggable</span> (déplaçable), et la <strong><span class="violet"><span class="courrier">JDialog</span></span></strong>, une fenêtre non redimensionnable. Mais nous n'en parlerons pas ici...</div><br>
<br>
Bon : qu'est-ce qu'on attend ?<br>
Ah oui ! Le topo et le QCM... <img src="./java_files/clin.png" alt=";)" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10439">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Les composants <strong><span class="violet"><span class="courrier">swing</span></span></strong> se trouvent dans <strong><span class="violet"><span class="courrier">javax.swing</span></span></strong>, et les <strong><span class="violet"><span class="courrier">awt</span></span></strong> dans <strong><span class="violet"><span class="courrier">java.awt</span></span></strong>.</li>
<li>Il ne faut pas mélanger les composants <strong><span class="violet"><span class="courrier">swing</span></span></strong> et <strong><span class="violet"><span class="courrier">awt</span></span></strong> ! !</li>
<li>Une <strong><span class="violet"><span class="courrier">JFrame</span></span></strong> est constituée de plusieurs composants.</li>
<li>Par défaut, une fenêtre a une taille minimale, et n'est pas visible.</li>
<li>Un composant doit être bien paramétré pour qu'il fonctionne à notre convenance.</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	J'ose espérer que ce premier chapitre était à votre goût... <br>
Il n'était pas trop difficile pour commencer. Mais les choses vont vite se compliquer...<br>
<br>
Continuons avec <strong><span class="vertf">les conteneurs</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10456">Une histoire de conteneur</h1>
	<div id="chap_intro">
	Dans cette partie, nous allons aborder la notion de conteneur, et plus particulièrement le <span class="courrier">JPanel</span> (pour l'instant...)<br>
Vous verrez pas mal de choses qui vous seront très utiles plus tard, enfin j'espère.<br>
Mais surtout, à la fin de cette partie, nous pourrons presque commencer à mettre des composants sur nos fenêtres... <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
<br>
Allez, je vous sens impatients...
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10455">Créez un conteneur pour votre fenêtre</h2>
		<div class="ss_part_texte">
		Comme je vous l'ai dit auparavant, nous allons utiliser un <strong><span class="violet"><span class="courrier">JPanel</span></span></strong>, composant de type <span class="italique">container</span>, dont la vocation est d'accueillir d'autres objets de même type, ou des objets de type composant (bouton, case à cocher...).<br>
<div class="rmq information">Mais dans l'absolu, n'importe quel composant peut accueillir un autre composant ! Nous verrons ça...</div><br>
<br>
<h4>Voici la marche à suivre</h4><br>
<ul>
<li>Nous allons importer la classe <strong><span class="violet"><span class="courrier">javax.swing.JPanel</span></span></strong> dans notre classe héritée de <strong><span class="violet"><span class="courrier">JFrame</span></span></strong>.</li>
<li>Nous allons instancier un <strong><span class="violet"><span class="courrier">JPanel</span></span></strong>, lui spécifier une couleur de fond pour pouvoir mieux le voir !</li>
<li>Dire à notre <strong><span class="violet"><span class="courrier">JFrame</span></span></strong> que ce sera notre <strong><span class="violet"><span class="courrier">JPanel</span></span></strong> qui sera son <strong><span class="courrier">contentPane</span></strong>.</li>
</ul><br>
Rien de bien sorcier en somme. Qu'attendons-nous ?<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Ma première fenêtre java"</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">400</span><span class="o">,</span> <span class="mi">500</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>               
 
                <span class="c">//Instanciation d'un objet JPanel</span>
                <span class="n">JPanel</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
                <span class="c">//Définition de sa couleur de fond</span>
                <span class="n">pan</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">ORANGE</span><span class="o">);</span>        
                <span class="c">//On prévient notre JFrame que ce sera notre JPanel qui sera son contentPane</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">pan</span><span class="o">);</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voici le résultat :<br>
<div class="centre"><img src="./java_files/104046.png" alt="Image utilisateur"></div><br>
<br>
C'est un bon début, mais je vois que vous êtes frustrés car il n'y a pas beaucoup de changement par rapport à la dernière fois...  <img src="./java_files/unsure.gif" alt=":euh:" class="smilies"> <br>
Eh bien c'est maintenant que les choses deviennent intéressantes !<br>
Avant de vous faire utiliser des composants comme des boutons ou autre chose, nous allons nous amuser avec notre panneau. Plus particulièrement avec un objet qui a pour rôle de dessiner et de peindre notre composant... Ça vous tente ? Alors, Go ! <img src="./java_files/pirate.png" alt=":pirate:" class="smilies"><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10454">L'objet Graphics</h2>
		<div class="ss_part_texte">
		Cet objet a une particularité de taille ! <strong>Vous ne pouvez l'utiliser que si, et seulement si le système vous l'a donné !</strong><br>
Et pour bien comprendre le mode de fonctionnement de vos futurs containers (ou composants), nous allons faire une classe héritée de <strong><span class="violet"><span class="courrier">JPanel</span></span></strong> : appelons-la <strong><span class="courrier">Panneau</span></strong> ; nous allons faire petit tour d'horizon du fonctionnement de celle-ci !<br>
<br>
Voici le code de cette classe :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
              <span class="c">//Vous pourrez voir cette phrase à chaque fois que la méthode est invoquée !</span>
               <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je suis exécutée ! ! !"</span><span class="o">);</span> 
               <span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="mi">20</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">75</span><span class="o">,</span> <span class="mi">75</span><span class="o">);</span>
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq question">Hop là ! Qu'est-ce que c'est que cette méthode ?</div><br>
Cette méthode est celle que l'objet appelle pour se peindre sur notre fenêtre, et si vous réduisez cette dernière et que vous l'affichez de nouveau, c'est encore cette méthode qui est appelée pour afficher notre composant ! Idem si vous redimensionnez votre fenêtre... En plus, on n'a même pas à redéfinir de constructeur, cette méthode est appelée automatiquement !<br>
<br>
Pour personnaliser des composants, ceci est très pratique car vous n'aurez <strong><span class="rouge">JAMAIS</span></strong> à l'appeler de vous-mêmes, <strong><span class="vertf">ceci est automatique</span></strong> ! Tout ce que vous pourrez faire, c'est forcer l'objet à se repeindre, mais ce n'est pas cette méthode que vous invoquerez... Nous y reviendrons !<br>
<br>
Vous aurez constaté que cette méthode possède un argument et qu'il s'agit du fameux objet <strong><span class="violet"><span class="courrier">Graphics</span></span></strong> tant convoité. Nous reviendrons sur l'instruction <strong><span class="courrier">g.fillOval(20, 20, 75, 75);</span></strong> mais vous verrez ce qu'elle fait lorsque vous exécuterez votre programme... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Et maintenant, dans notre classe <strong><span class="courrier">Fenetre</span></strong> :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Ma première fenêtre java"</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">100</span><span class="o">,</span> <span class="mi">150</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>               
                <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="k">new</span> <span class="n">Panneau</span><span class="o">());</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq information">J'ai réduit la taille de ma fenêtre car mes <span class="italique">screenshots</span> devenaient vraiment encombrants... <img src="./java_files/hihi.png" alt="^^" class="smilies"></div><br>
Exécutez votre <strong><span class="courrier">main</span></strong>, et vous devriez avoir ceci :<br>
<div class="centre"><img src="./java_files/104063.png" alt="Image utilisateur"></div><br>
<br>
Une fois votre fenêtre affichée, étirez-la, réduisez-la...<br>
À présent, vous pouvez voir ce qu'il se passe lorsque vous interagissez avec votre fenêtre ! <strong>Celle-ci met à jour ses composants à chaque changement d'état ou de statut !</strong> Et l'intérêt d'avoir une classe héritée d'un container ou d'un composant, c'est que nous pouvons redéfinir la façon dont est peint ce composant sur la fenêtre ! <br>
<br>
Donc, après cette mise en bouche... Si nous explorions un peu plus les capacités de notre objet <strong><span class="violet"><span class="courrier">Graphics</span></span></strong> ? <img src="./java_files/smile.png" alt=":)" class="smilies"> <br>
<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10453">Plus loin dans le Graphics</h2>
		<div class="ss_part_texte">
		Comme vous avez pu le voir, l'objet Graphics permet, entre autres, de tracer des ronds... Mais cet objet possède tout un tas de méthodes plus pratiques et amusantes les unes que les autres...<br>
Nous ne les verrons pas toutes mais vous aurez déjà de quoi faire...<br>
<br>
Pour commencer, reprenons la méthode que j'ai utilisée précédemment : <strong><span class="courrier">g.fillOval(20, 20, 75, 75);</span></strong>.<br>
Si nous avions à traduire cette instruction en français, ça donnerait :<br>
"<strong><span class="italique">Trace un rond plein en commençant à dessiner sur l'axe x à 20 pixels, sur l'axe y à 20 pixels, et fais en sorte que mon rond fasse 75 pixels de large et 75 pixels de haut.</span></strong>"<br>
<br>
C'est simple à comprendre, n'est-ce pas ?<br>
<div class="rmq question">Oui, mais si je veux que mon rond soit centré et qu'il y reste ?</div><br>
C'est dans ce genre de cas qu'il est intéressant d'avoir une classe héritée ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Vu que nous sommes dans notre objet <strong><span class="violet"><span class="courrier">JPanel</span></span></strong>, nous avons accès à ses données et j'ajouterais, pile au bon moment : lorsque nous allons le dessiner !<br>
<br>
En effet, il y a des méthodes dans les objets composants qui nous retournent sa largeur (<strong><span class="courrier">getWidth()</span></strong>) et sa hauteur (<strong><span class="courrier">getHeight()</span></strong>) !<br>
Par contre, réussir à centrer un rond dans un <span class="courrier">JPanel</span> en toute circonstance demande un peu de calcul mathématique de base, une pincée de connaissances et un soupçon de logique ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Reprenons notre fenêtre telle qu'elle est en ce moment. Vous pourrez constater que les coordonnées de départ ne correspondent pas au départ du cercle en lui-même, mais au point de départ du carré qui entoure ce cercle ! <br>
<br>
<div class="centre"><img src="./java_files/104087.png" alt="Image utilisateur"></div><br>
<br>
Ceci signifie que, si nous voulons que notre cercle soit centré à tout moment, il faut que notre carré soit centré et donc, que le centre de celui-ci corresponde au centre de notre fenêtre ! J'ai essayé de faire un schéma représentant ce que nous devons obtenir.<br>
<br>
<div class="centre"><img src="./java_files/104089.png" alt="Image utilisateur"></div><br>
<br>
Ainsi, le principe est de prendre la largeur et la longueur de notre composant ainsi que la largeur et la longueur du carré qui englobe notre rond ! Facile, jusqu'à présent...<br>
Maintenant, pour trouver où se situe le point où doit commencer le dessin, il faut prendre la moitié de la largeur de notre composant, moins la moitié de la largeur de notre rond, tout ceci pour l'axe x et y.<br>
<div class="rmq information">Pour que notre rond soit le plus optimisé, nous allons prendre pour taille de notre carré la moitié de notre fenêtre !</div><br>
Donc, pour simplifier le tout, nous nous retrouvons à calculer la moitié de la moitié de la largeur et de la hauteur... Ce qui revient, au final, à diviser la largeur et la hauteur par 4...  <img src="./java_files/siffle.png" alt=":-°" class="smilies"> <br>
<br>
Voici le code qui fait ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="kt">int</span> <span class="n">x1</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">4</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">y1</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">4</span><span class="o">;</span>
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"largeur = "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">+</span> <span class="s">",  longueur = "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">" coordonnée de début d'affichage x1 = "</span> <span class="o">+</span> <span class="n">x1</span> <span class="o">+</span> <span class="s">" y1 = "</span> <span class="o">+</span> <span class="n">y1</span><span class="o">);</span>
                
                <span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">x1</span><span class="o">,</span> <span class="n">y1</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">2</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">2</span><span class="o">);</span>
        <span class="o">}</span>       
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donne :<br>
<div class="centre"><img src="./java_files/104101.png" alt="Image utilisateur"></div><br>
<br>
Bon, l'objet <strong><span class="violet"><span class="courrier">Graphics</span></span></strong> sait plein d'autres choses : peindre des ronds vides, par exemple. <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Sans rire... Maintenant que vous avez vu un peu comment fonctionne cet objet, nous allons utiliser ses méthodes...<br>
<br>
<h4><span class="souligne">La méthode </span></h4><span class="souligne"><strong><span class="courrier">drawOval(<span class="violet">int</span> x1, <span class="violet">int</span> y1, <span class="violet">int</span> width, <span class="violet">int</span> height)</span></strong></span><br>
<br>
Il s'agit de la méthode qui permet de dessiner un rond vide. Celle-ci fonctionne exactement de la même manière que la méthode <strong><span class="courrier">fillOval</span></strong>.<br>
Voici un code mettant en oeuvre cette méthode :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="kt">int</span> <span class="n">x1</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">4</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">y1</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">4</span><span class="o">;</span>
                
                <span class="n">g</span><span class="o">.</span><span class="na">drawOval</span><span class="o">(</span><span class="n">x1</span><span class="o">,</span> <span class="n">y1</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">2</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">2</span><span class="o">);</span>
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat :<br>
<div class="centre"><img src="./java_files/104194.png" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Si vous spécifiez une largeur différente de la hauteur, ces méthodes dessineront une forme ovale !</div><br>
<br>
<h4><span class="souligne">La méthode </span></h4><span class="souligne"><strong><span class="courrier">drawRect(<span class="violet">int</span> x1, <span class="violet">int</span> y1, <span class="violet">int</span> width, <span class="violet">int</span> height)</span></strong></span><br>
<br>
Cette méthode permet de dessiner des rectangles vides. Bien sûr, son homologue <strong><span class="courrier">fillRect</span></strong> existe. Ces deux méthodes fonctionnent aussi comme les précédentes, voyez plutôt ce code :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="n">g</span><span class="o">.</span><span class="na">drawRect</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">60</span><span class="o">);</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">65</span><span class="o">,</span> <span class="mi">65</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">40</span><span class="o">);</span>
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat :<br>
<div class="centre"><img src="./java_files/104196.png" alt="Image utilisateur"></div><br>
<br>
<h4><span class="souligne">La méthode </span></h4><span class="souligne"><strong><span class="courrier">drawRoundRect(<span class="violet">int</span> x1, <span class="violet">int</span> y1, <span class="violet">int</span> width, <span class="violet">int</span> height, <span class="violet">int</span> arcWidth, <span class="violet">int</span> arcHeight)</span></strong></span><br>
<br>
Il s'agit de la même chose que précédemment, mis à part que le rectangle sera arrondi. Arrondi défini par les valeurs passées dans les deux derniers paramètres. <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="n">g</span><span class="o">.</span><span class="na">drawRoundRect</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillRoundRect</span><span class="o">(</span><span class="mi">55</span><span class="o">,</span> <span class="mi">65</span><span class="o">,</span> <span class="mi">55</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">5</span><span class="o">);</span>
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat :<br>
<div class="centre"><img src="./java_files/104198.png" alt="Image utilisateur"></div><br>
<br>
<h4><span class="souligne">La méthode </span></h4><span class="souligne"><strong><span class="courrier">drawLine(<span class="violet">int</span> x1, <span class="violet">int</span> y1, <span class="violet">int</span> x2, <span class="violet">int</span> y2)</span></strong></span><br>
<br>
Celle-ci vous permet de tracer des lignes droites ! Il vous suffit de lui spécifier les coordonnées de départ et d'arrivée de la ligne... Simple aussi, n'est-ce pas ?<br>
<br>
Dans ce code, je trace les diagonales de notre conteneur :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="mi">0</span><span class="o">);</span>
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat :<br>
<div class="centre"><img src="./java_files/104197.png" alt="Image utilisateur"></div><br>
<br>
<h4><span class="souligne">La méthode </span></h4><span class="souligne"><strong><span class="courrier">drawPolygon(<span class="violet">int[]</span> x, <span class="violet">int[]</span> y, <span class="violet">int</span> nbrePoints)</span></strong></span><br>
<br>
Avec cette méthode, vous pourrez dessiner des polygones de votre composition. Eh oui... C'est à vous de définir les coordonnées de tous les points qui forment votre polygone ! <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
Le dernier paramètre de cette méthode est le nombre de points formant votre polygone. Ainsi, vous ne serez pas obligés de créer deux fois le point d'origine pour boucler votre figure. Java fermera celle-ci automatiquement en reliant le dernier point de votre tableau au premier... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Je vous conseille vivement de faire un schéma pour vous aider... Cette méthode a aussi son homologue pour dessiner les polygones remplis : <strong><span class="courrier">fillPolygon</span></strong>.<br>
<br>
Code :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="kt">int</span> <span class="n">x</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="mi">20</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">20</span><span class="o">};</span>
                <span class="kt">int</span> <span class="n">y</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="mi">30</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">50</span><span class="o">};</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawPolygon</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="mi">8</span><span class="o">);</span>
                
                <span class="kt">int</span> <span class="n">x2</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="mi">50</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">80</span><span class="o">,</span> <span class="mi">90</span><span class="o">,</span> <span class="mi">90</span><span class="o">,</span> <span class="mi">80</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">50</span><span class="o">};</span>
                <span class="kt">int</span> <span class="n">y2</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="mi">60</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">80</span><span class="o">,</span> <span class="mi">90</span><span class="o">,</span> <span class="mi">90</span><span class="o">,</span> <span class="mi">80</span><span class="o">};</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillPolygon</span><span class="o">(</span><span class="n">x2</span><span class="o">,</span> <span class="n">y2</span><span class="o">,</span> <span class="mi">8</span><span class="o">);</span>
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat :<br>
<div class="centre"><img src="./java_files/104202.png" alt="Image utilisateur"></div><br>
<br>
Vous avez aussi une méthode qui prend exactement les mêmes arguments et qui, elle, trace plusieurs lignes ! Cette méthode s'appelle : <strong><span class="courrier">drawPolyline(<span class="violet">int[]</span> x, <span class="violet">int[]</span>y, <span class="violet">int</span> nbrePoints)</span></strong>. <br>
<br>
Cette méthode va dessiner les lignes correspondant aux coordonnées que vous lui passerez dans les tableaux, sachant que lorsque vous passez à l'indice supérieur dans vos tableaux, la méthode prend automatiquement les valeurs de l'indice précédent comme point d'origine. <br>
<br>
Cette dernière ne fait pas le lien entre la première et la dernière valeur de vos tableaux... Vous pouvez essayer le code précédent, en remplaçant <strong><span class="courrier">drawPolygon</span></strong> par cette méthode et vous verrez... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
<h4><span class="souligne">La méthode </span></h4><span class="souligne"><strong><span class="courrier">drawString(<span class="violet">String</span> str, <span class="violet">int</span> x, <span class="violet">int</span> y)</span></strong></span><br>
<br>
Voici la méthode qui vous permet d'écrire du texte... Elle est très simple à comprendre puisqu'il vous suffit de lui passer la phrase à écrire et de lui spécifier à quelles coordonnées commencer !<br>
<br>
Code :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="n">g</span><span class="o">.</span><span class="na">drawString</span><span class="o">(</span><span class="s">"Tiens ! le Site du Zér0 ! ! !"</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
                
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat :<br>
<div class="centre"><img src="./java_files/104203.png" alt="Image utilisateur"></div><br>
<br>
Vous pouvez modifier la couleur (et ça s'applique aussi pour les autres méthodes) et la police d'écriture... Pour redéfinir la police d'écriture, vous devez créer un objet <strong><span class="violet"><span class="courrier">Font</span></span></strong>. Regardez comment faire :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="n">Font</span> <span class="n">font</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Courier"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
                <span class="n">g</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">font</span><span class="o">);</span>
                
                <span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>          
                <span class="n">g</span><span class="o">.</span><span class="na">drawString</span><span class="o">(</span><span class="s">"Tiens ! le Site du Zér0 ! ! !"</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
                
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat :<br>
<div class="centre"><img src="./java_files/104206.png" alt="Image utilisateur"></div><br>
<br>
<h4><span class="souligne">La méthode </span></h4><span class="souligne"><strong><span class="courrier">drawImage(<span class="violet">Image</span> img,<span class="violet">int</span> x, <span class="violet">int</span> y, <span class="violet">Observer</span> obs);</span></strong></span><br>
<br>
Ici, vous devrez charger votre image grâce à trois objets :<br>
<ul>
<li>un objet <strong><span class="violet"><span class="courrier">Image</span></span></strong></li>
<li>un objet <strong><span class="violet"><span class="courrier">ImageIO</span></span></strong></li>
<li>un objet <strong><span class="violet"><span class="courrier">File</span></span></strong>.</li>
</ul><br>
Vous allez voir que l'utilisation de ces objets est très simple... Nous déclarons un objet de type <strong><span class="violet"><span class="courrier">Image</span></span></strong>, nous allons l'initialiser en utilisant une méthode statique de l'objet <strong><span class="violet"><span class="courrier">ImageIO</span></span></strong>, qui, elle, prend un objet <strong><span class="violet"><span class="courrier">File</span></span></strong> en paramètre. Ça paraît compliqué comme ça, mais vous allez voir... <strong>Par contre, notre image sera stockée à la racine de notre projet !</strong><br>
<br>
Et en ce qui concerne le dernier paramètre de notre méthode <strong><span class="courrier">drawImage</span></strong>, il s'agit de l'objet qui est censé observer l'image. Ici, nous allons mettre notre objet <strong><span class="courrier">Panneau</span></strong>, donc <strong><span class="violet"><span class="courrier">this</span></span></strong>.<br>
<br>
<div class="rmq information">Avec cette méthode, l'image sera dessinée avec ses propres dimensions... Si vous voulez que l'image prenne l'intégralité de votre container, il faut utiliser le constructeur suivant : <span class="courrier">drawImage(<strong>Image </strong>img, <strong>int </strong>x, <strong>int </strong>y, <strong>int </strong>width, <strong>int </strong>height, <strong>Observer </strong>obs)</span>.</div><br>
<br>
Code :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Image</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                <span class="k">try</span> <span class="o">{</span>
                        <span class="n">Image</span> <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"images.jpg"</span><span class="o">));</span>
                        <span class="n">g</span><span class="o">.</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">);</span>
                        <span class="c">//Pour une image de fond</span>
                        <span class="c">//g.drawImage(img, 0, 0, this.getWidth(), this.getHeight(), this);</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Pour bien vous montrer la différence, j'ai ajouté une couleur de fond rouge. Et, si vous vous demandez comment j'ai fait... j'ai mis un rectangle de couleur rouge de la taille de mon composant... <img src="./java_files/langue.png" alt=":p" class="smilies"></div><br>
Voici les résultats selon ce que vous avez choisi :<br>
<div class="centre"><img src="./java_files/104217.png" alt="Image utilisateur">                               <img src="./java_files/104218.png" alt="Image utilisateur"></div><br>
<br>
Maintenant, je pense qu'il est temps de vous présenter le petit cousin de notre objet <strong><span class="violet"><span class="courrier">Graphics</span></span></strong> ! <img src="./java_files/langue.png" alt=":p" class="smilies"><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10452">Le cousin caché : l'objet Graphics2D</h2>
		<div class="ss_part_texte">
		Voici une amélioration de l'objet <strong><span class="violet"><span class="courrier">Graphics</span></span></strong>, et vous allez vite comprendre pourquoi...<br>
<br>
Pour utiliser cet objet, il nous suffit de caster l'objet <strong><span class="violet"><span class="courrier">Graphics</span></span></strong> en <strong><span class="violet"><span class="courrier">Graphics2D</span></span></strong>, et surtout de ne pas oublier d'importer sa classe !<br>
Celle-ci se trouve dans le package <strong><span class="violet"><span class="courrier">java.awt</span></span></strong>.<br>
<br>
Voilà notre début de code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span><span class="o">{</span>
  
     <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
        
        <span class="n">Graphics2D</span> <span class="n">g2d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Graphics2D</span><span class="o">)</span> <span class="n">g</span><span class="o">;</span>
     <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
L'une des possibilités qu'offre cet objet n'est autre que la possibilité de peindre des objets avec des dégradés de couleurs...<br>
Cette opération n'est pas du tout difficile à effectuer. Pour ce faire, il vous suffit d'utiliser un objet <strong><span class="violet"><span class="courrier">GradientPaint</span></span></strong> et une méthode de l'objet <strong><span class="violet"><span class="courrier">Graphics2D</span></span></strong>.<br>
<br>
Nous n'allons pas reprendre tous les cas que nous avons vus jusqu'à présent... Juste deux ou trois pour que vous voyez bien la différence.<br>
<br>
Commençons par notre objet <strong><span class="violet"><span class="courrier">GradientPaint</span></span></strong>, voici comme l'initialiser :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">cyan</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq information">Vous devrez mettre à jour vos imports... Vous devez ajouter ici : import <strong><span class="courrier">java.awt.GradientPaint;</span></strong></div><br>
<br>
Alors, que veut dire tout ceci ? Voici le détail du constructeur utilisé ici :<br>
<ul>
<li>paramètre 1 : la coordonnée x où doit commencer la couleur 1 ;</li>
<li>paramètre 2 : la coordonnée y où doit commencer la couleur 1 ;</li>
<li>paramètre 3 : couleur 1 ;</li>
<li>paramètre 4 : la coordonnée x2 où doit commencer la couleur 2 ;</li>
<li>paramètre 5 : la coordonnée y2 où doit commencer la couleur 2 ;</li>
<li>paramètre 6 : couleur 2 ;</li>
<li>paramètre 7 : booléen pour définir si le dégradé doit se répéter.</li>
</ul><br>
<div class="rmq information">Entre ces deux points se créera le dégradé des deux couleurs spécifiées !</div><br>
Ensuite, pour utiliser ce dégradé dans une forme, il suffit de mettre à jour votre objet <strong><span class="violet"><span class="courrier">Graphics2D</span></span></strong>, comme ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="syntax"><pre><span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">cyan</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
<span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Le code entier de cet exemple est :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Image</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="n">Graphics2D</span> <span class="n">g2d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Graphics2D</span><span class="o">)</span><span class="n">g</span><span class="o">;</span>         
                <span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">cyan</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>                
                <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
                
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici les résultats obtenus, l'un avec le booléen à <strong><span class="violet"><span class="courrier">true</span></span></strong>, et l'autre à <strong><span class="violet"><span class="courrier">false</span></span></strong> :<br>
<div class="centre"><img src="./java_files/104219.png" alt="Image utilisateur">              <img src="./java_files/104220.png" alt="Image utilisateur"></div><br>
<br>
Votre dégradé est oblique (rien ne m'échappe, à moi...). Ce sont les coordonnées choisies qui influent sur la direction du dégradé. Dans notre exemple, nous partons du point de coordonnées (0, 0) vers le point de coordonnées (30, 30). Si vous vouliez un dégradé vertical, il faut juste mettre la valeur de x2 à 0 et voilà :<br>
<div class="centre"><img src="./java_files/104221.png" alt="Image utilisateur"></div><br>
<br>
Un petit cadeau :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="n">Graphics2D</span> <span class="n">g2d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Graphics2D</span><span class="o">)</span><span class="n">g</span><span class="o">;</span>
                
                <span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">magenta</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                <span class="n">GradientPaint</span> <span class="n">gp2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">20</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">magenta</span><span class="o">,</span> <span class="mi">40</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                <span class="n">GradientPaint</span> <span class="n">gp3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">40</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                <span class="n">GradientPaint</span> <span class="n">gp4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">60</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">,</span> <span class="mi">80</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">yellow</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                <span class="n">GradientPaint</span> <span class="n">gp5</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">80</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">yellow</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">orange</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                <span class="n">GradientPaint</span> <span class="n">gp6</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">100</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">orange</span><span class="o">,</span> <span class="mi">120</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                                                
                <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>               
                <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp2</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">20</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp3</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">40</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp4</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">60</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp5</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">80</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp6</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">100</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">40</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
                
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="centre"><img src="./java_files/104228.png" alt="Image utilisateur"></div><br>
<br>
Quelques exemples de dégradés avec d'autre formes :<br>
<br>
<h4><span class="souligne">Avec un cercle</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="n">Graphics2D</span> <span class="n">g2d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Graphics2D</span><span class="o">)</span><span class="n">g</span><span class="o">;</span>
                
                <span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">20</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">yellow</span><span class="o">,</span> <span class="mi">95</span><span class="o">,</span> <span class="mi">95</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">4</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">4</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">2</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">2</span><span class="o">);</span>
                
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="centre"><img src="./java_files/104229.png" alt="Image utilisateur"></div><br>
<br>
<h4><span class="souligne">Avec un rectangle arrondi</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="n">Graphics2D</span> <span class="n">g2d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Graphics2D</span><span class="o">)</span><span class="n">g</span><span class="o">;</span>
                
                <span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">20</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">,</span> <span class="mi">55</span><span class="o">,</span> <span class="mi">75</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">orange</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">fillRoundRect</span><span class="o">(</span><span class="mi">30</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">75</span><span class="o">,</span> <span class="mi">75</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>
                
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="centre"><img src="./java_files/104231.png" alt="Image utilisateur"></div><br>
<br>
<h4><span class="souligne">Un peu de texte pour finir</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                <span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">);</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
                
                <span class="n">Graphics2D</span> <span class="n">g2d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Graphics2D</span><span class="o">)</span><span class="n">g</span><span class="o">;</span>         
                <span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">cyan</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">pink</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
                
                <span class="n">Font</span> <span class="n">font</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Comics Sans MS"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">14</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">font</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">drawString</span><span class="o">(</span><span class="s">"On s'amuse les ZérOs !"</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">15</span><span class="o">);</span>
                
                <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(-</span><span class="mi">40</span><span class="o">,</span> <span class="o">-</span><span class="mi">40</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
                
                <span class="n">font</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial Black"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">PLAIN</span><span class="o">,</span> <span class="mi">16</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">font</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">drawString</span><span class="o">(</span><span class="s">"Moi j'aime bien..."</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">65</span><span class="o">);</span>
        <span class="o">}</span>               
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="centre"><img src="./java_files/104235.png" alt="Image utilisateur"></div><br>
<br>
<br>
Nous avons fait un bon petit tour, là...<br>
Pour les curieux, je vous conseille d'aller voir la page des <a href="http://java.sun.com/docs/books/tutorial/2d/index.html">tutos de Sun Microsystems</a> sur l'objet <strong><span class="violet"><span class="courrier">Graphics2D</span></span></strong>.<br>
<br>
Bon, je pense qu'un topo serait le bienvenu... <img src="./java_files/langue.png" alt=":p" class="smilies"><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10451">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>L'objet <strong><span class="violet"><span class="courrier">JPanel</span></span></strong> se trouve dans le package <strong><span class="violet"><span class="courrier">javax.swing</span></span></strong>.</li>
<li><strong>Un <span class="violet"><span class="courrier">JPanel</span></span> peux contenir des composants ou d'autres containers ! !</strong></li>
<li>Lorsque vous ajoutez un <strong><span class="violet"><span class="courrier">JPanel</span></span></strong> principal à votre fenêtre, n'oubliez pas de dire à votre fenêtre que ce dernier sera son <strong><span class="courrier">contentPane</span></strong>.</li>
<li>Pour redéfinir la façon dont l'objet est dessiné sur notre fenêtre, nous devons utiliser la méthode <strong><span class="courrier">paintComponent</span></strong> en créant une classe héritée.</li>
<li>Cette méthode prend un paramètre, un objet <strong><span class="violet"><span class="courrier">Graphics</span></span></strong>.</li>
<li><strong>Cet objet doit nous être fourni par le système </strong>!</li>
<li>C'est lui que nous allons utiliser pour dessiner dans notre container. <img src="./java_files/heureux.png" alt=":D" class="smilies"></li>
<li>Pour des dessins plus évolués, vous devrez utiliser l'objet <strong><span class="violet"><span class="courrier">Graphics2D</span></span></strong> qui s'obtient en faisant un cast sur l'objet <strong><span class="violet"><span class="courrier">Graphics</span></span></strong>.</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Et voilà, encore une partie rondement menée.<br>
Maintenant que nous savons comment ajouter un conteneur sur notre fenêtre, nous allons voir comment positionner des composants !<br>
<br>
Eh oui : si vous ne dites pas à vos composants où ils doivent aller, ils se mettront à la queue-leu-leu !<br>
Bon : on y va ?<br>
<br>
C'est parti pour : <strong><span class="vertf">Faire une animation simple</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10466">Faire une animation simple</h1>
	<div id="chap_intro">
	Dans ce chapitre, nous allons voir comment créer une animation simple.<br>
<br>
Vous ne pourrez pas faire de jeu à la fin, mais je pense que vous aurez de quoi vous amuser un peu...<br>
<br>
Let's go alors... <img src="./java_files/heureux.png" alt=":D" class="smilies">
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10465">Les déplacements : principe</h2>
		<div class="ss_part_texte">
		Voilà le compte rendu de ce que nous avons :<br>
<ul>
<li>une classe héritée de <strong><span class="violet"><span class="courrier">JFrame</span></span></strong></li>
<li>une classe héritée de <strong><span class="violet"><span class="courrier">JPanel</span></span></strong> dans laquelle nous faisons de zolis dessins. Un rond en l'occurrence...</li>
</ul><br>
<br>
Avec ces deux classes, nous allons pouvoir créer un effet de déplacement.<br>
Vous avez bien entendu <img src="./java_files/hihi.png" alt="^^" class="smilies"> : j'ai dit un <span class="italique"><strong>effet de déplacement </strong></span>!<br>
En réalité, le principe réside dans le fait que vous allez donner des coordonnées différentes à votre rond, et vous allez forcer votre objet <strong><span class="violet"><span class="courrier">Panneau</span></span></strong> à se redessiner ! Tout ceci, <span class="italique">vous l'aviez deviné</span>, dans une boucle !<br>
<br>
Nous allons donc nous préparer à ces nouveautés !<br>
Jusqu'à présent, nous avons utilisé des valeurs fixes pour les coordonnées de notre rond, et il va falloir  dynamiser tout ça... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Nous allons donc créer deux variables privées de type <strong><span class="violet"><span class="courrier">int</span></span></strong> dans notre classe <strong><span class="violet"><span class="courrier">Panneau</span></span></strong> : appelons-les <strong><span class="courrier">posX</span></strong> et <strong><span class="courrier">posY</span></strong>.<br>
Pour l'animation que nous allons travailler, notre rond devra provenir de l'extérieur de notre fenêtre. Partons du principe que celui-ci va faire 50 pixels de diamètre : il faudra donc que notre panneau peigne ce rond en dehors de sa zone d'affichage, nous initialiserons donc nos deux variables d'instance à <strong>-50</strong>. <br>
<br>
Voilà à quoi ressemble notre classe, maintenant :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BasicStroke</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">private</span> <span class="kt">int</span> <span class="n">posX</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span>
        <span class="k">private</span> <span class="kt">int</span> <span class="n">posY</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span>
        
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                <span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>         
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="kt">int</span> <span class="nf">getPosX</span><span class="o">()</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">posX</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">setPosX</span><span class="o">(</span><span class="kt">int</span> <span class="n">posX</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">this</span><span class="o">.</span><span class="na">posX</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="kt">int</span> <span class="nf">getPosY</span><span class="o">()</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">posY</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">setPosY</span><span class="o">(</span><span class="kt">int</span> <span class="n">posY</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">this</span><span class="o">.</span><span class="na">posY</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Il ne nous reste plus qu'à faire en sorte que notre rond se déplace : il nous faut donc un moyen de changer les coordonnées de celui-ci, le tout dans une boucle. Nous allons ainsi ajouter une méthode privée dans notre classe <strong><span class="courrier"><span class="violet">Fenetre</span></span></strong> afin de gérer tout cela ; nous appellerons celle-ci en dernier dans notre constructeur. Voici donc à quoi ressemble notre classe <strong><span class="courrier"><span class="violet">Fenetre</span></span></strong> : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
        <span class="k">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">pan</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                
                <span class="n">go</span><span class="o">();</span>
        <span class="o">}</span>
        
        <span class="k">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
                
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span>
                <span class="o">{</span>
                        <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">(),</span> <span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
                        <span class="n">x</span><span class="o">++;</span>
                        <span class="n">y</span><span class="o">++;</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(</span><span class="n">x</span><span class="o">);</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(</span><span class="n">y</span><span class="o">);</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>  
                        <span class="k">try</span> <span class="o">{</span>
                                <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                <span class="o">}</span>
                
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq question">Hep ! Qu'est-ce que c'est que ces deux instructions à la fin de la méthode <strong><span class="courrier">go()</span></strong> ?</div><br>
<br>
Tout d'abord, je pense que, les deux dernières instructions mises à part, vous ne devez pas avoir trop de mal à comprendre ce code.<br>
<br>
La première des deux nouvelles instructions est <strong><span class="courrier">pan.repaint()</span></strong>. Cette dernière donne l'ordre à votre composant, ici un <strong><span class="violet"><span class="courrier">JPanel</span></span></strong>, <strong>de se redessiner</strong>.<br>
La toute première fois, dans le constructeur de notre classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong>, votre composant invoque la méthode <strong><span class="courrier">paintComponent</span></strong> et dessine un rond aux coordonnées que vous lui avez spécifiées. La méthode <strong><span class="courrier">repaint()</span></strong> ne fait rien d'autre que de faire à nouveau appel à la méthode <strong><span class="courrier">paintComponent</span></strong> ; mais avant, vous avez changé les coordonnées du rond par le biais des accesseurs créés précédemment. Donc à chaque tour de boucle, les coordonnées de notre rond vont changer.<br>
<br>
La deuxième instruction est en fait un moyen de <strong>faire une pause dans votre code</strong>... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Celle-ci met en attente votre programme pendant un laps de temps défini dans la méthode <strong><span class="courrier">sleep()</span></strong>, ce temps est exprimé en millièmes de secondes (plus le temps d'attente est court, plus votre animation sera rapide <img src="./java_files/clin.png" alt=";)" class="smilies"> ). <strong><span class="violet"><span class="courrier">Thread</span></span></strong> est en fait un objet qui permet de créer un nouveau processus dans un programme, ou de gérer le processus principal.<br>
Dans tous les programmes, <strong>il y a au moins un processus</strong>, celui qui est en cours d'exécution. Mais vous verrez plus tard qu'il est possible de diviser certaines tâches en plusieurs processus afin de ne pas avoir de perte de temps et de performances dans vos programmes. Pour le moment, sachez que vous pouvez faire des pauses dans vos programmes avec cette instruction :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="k">try</span><span class="o">{</span>
<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">1000</span><span class="o">);</span><span class="c">//Ici une pause d'une seconde</span>
<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq information">Cette instruction est dite "à risque", vous devez donc l'entourer d'un bloc <strong><span class="courrier">try{}catch(){}</span></strong> afin de capturer les exceptions potentielles ! <strong>Sinon : ERREUR DE COMPILATION !</strong></div><br>
<br>
Maintenant que toute la lumière est faite sur cette affaire, exécutez votre code, et vous obtenez :<br>
<br>
<div class="centre"><img src="./java_files/105806.jpg" alt="Image utilisateur"></div><br>
<br>
Bien sûr, cette image est le résultat final, vous devriez avoir vu votre rond bouger mais au lieu d'être clair, il a laissé une trainée derrière lui...<br>
<br>
<div class="rmq question">Pourquoi ?</div><br>
C'est simple : vous avez demandé à votre objet <strong><span class="violet"><span class="courrier">Panneau</span></span></strong> de se redessiner, mais il a gardé les précédents passages de votre rond sur lui-même ! Pour résoudre ce problème, il suffit d'effacer ceux-ci avant de redessiner votre rond. <br>
<br>
<div class="rmq question">Comment fait-on ça ?</div><br>
Il vous suffit de dessiner un rectangle, d'une quelconque couleur, prenant toute la surface disponible, avant de dessiner votre rond. Voici le code de notre classe <strong><span class="violet"><span class="courrier">Panneau </span></span></strong>mis à jour :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BasicStroke</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">private</span> <span class="kt">int</span> <span class="n">posX</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span>
        <span class="k">private</span> <span class="kt">int</span> <span class="n">posY</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span>
        
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                <span class="c">//On décide d'une couleur de fond pour notre rectangle</span>
                <span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
                <span class="c">//On dessine celui-ci afin qu'il prenne tout la surface</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
                <span class="c">//On redéfinit une couleur pour notre rond</span>
                <span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
                <span class="c">//On le dessine aux coordonnées souhaitées</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>         
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="kt">int</span> <span class="nf">getPosX</span><span class="o">()</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">posX</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">setPosX</span><span class="o">(</span><span class="kt">int</span> <span class="n">posX</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">this</span><span class="o">.</span><span class="na">posX</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="kt">int</span> <span class="nf">getPosY</span><span class="o">()</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">posY</span><span class="o">;</span>
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">setPosY</span><span class="o">(</span><span class="kt">int</span> <span class="n">posY</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">this</span><span class="o">.</span><span class="na">posY</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici trois captures d'écran prises à différents moments de l'animation :<br>
<br>
<div class="centre"><img src="./java_files/105808.jpg" alt="Image utilisateur">    <img src="./java_files/105809.jpg" alt="Image utilisateur">    <img src="./java_files/105810.jpg" alt="Image utilisateur"></div><br>
<br>
Je pense qu'il est temps d'améliorer encore notre animation... Est-ce que ça vous dirait que celle-ci continue tant que vous ne fermez pas votre fenêtre ? <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Oui ? Alors continuons. <img src="./java_files/clin.png" alt=";)" class="smilies"><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10464">Continue, ne t'arrêtes pas si vite !</h2>
		<div class="ss_part_texte">
		Voici l'un des moments délicats que j'attendais... Si vous vous rappelez bien ce que je vous ai dit sur le fonctionnement des boucles, vous devez vous souvenir de mon avertissement sur les boucles infinies ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
Eh bien ce que nous allons faire ici, c'est un exemple d'utilisation d'une boucle infinie... <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
Si vous y réfléchissez deux secondes, comment dire à une boucle de ne pas s'arrêter à moins qu'elle ne s'arrête jamais ?<br>
<div class="rmq information">Dans l'exemple que nous allons utiliser pour le moment, nous allons simplifier les choses, mais nous améliorerons cela lorsque nous commencerons à interagir avec notre application...</div><br>
<br>
Il y a plusieurs manières de faire une boucle infinie : vous avez le choix entre une boucle <strong><span class="courrier">for, while</span></strong> ou <strong><span class="courrier">do...while</span></strong>. Regardez ces déclarations :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Exemple avec un boucle while</span>
<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
 <span class="c">// Ce code se répètera à l'infini car la condition est TOUJOURS vraie !</span>
<span class="o">}</span>
 
<span class="c">//Exemple avec une boucle for</span>
<span class="k">for</span><span class="o">(;;)</span>
<span class="o">{</span>
   <span class="c">// Idem que précédemment, ici il n'y a pas d'incrément =&gt; donc la boucle ne se terminera jamais</span>
<span class="o">}</span>
 
<span class="c">//Exemple avec do...while</span>
<span class="k">do</span><span class="o">{</span>
   <span class="c">//Encore une boucle que ne se terminera pas !</span>
<span class="o">}</span><span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Nous allons donc remplacer notre boucle finie par une boucle infinie dans la méthode <strong><span class="courrier">go()</span></strong> de notre objet <strong><span class="courrier"><span class="violet">Fenetre</span></span></strong>. Ce qui nous donne : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="syntax"><pre><span class="kd">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
                
                <span class="k">for</span><span class="o">(;;)</span>
                <span class="o">{</span>
                        <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">(),</span> <span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
                        <span class="n">x</span><span class="o">++;</span>
                        <span class="n">y</span><span class="o">++;</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(</span><span class="n">x</span><span class="o">);</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(</span><span class="n">y</span><span class="o">);</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>  
                        <span class="k">try</span> <span class="o">{</span>
                                <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Par contre, si vous avez exécuté notre nouvelle version, vous avez dû vous rendre compte qu'il reste un problème à gérer ! Eh oui. Votre rond ne se replace pas au départ lorsqu'il atteint l'autre côté de notre fenêtre. <div class="rmq information"><br>
Si vous ajoutez une instruction <strong><span class="courrier">System.out.println()</span></strong> dans la méthode <strong><span class="courrier">paintComponent</span></strong> inscrivant les coordonnées de notre rond, vous devez voir que celles-ci ne cessent de croître ! </div><br>
<br>
Le premier objectif est atteint mais il nous reste à gérer ce dernier problème. <br>
Il faut donc réinitialiser les coordonnées de notre rond si celles-ci arrivent au bout de notre composant.<br>
Voici donc notre méthode <strong><span class="courrier">go()</span></strong> revue et corrigée :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="syntax"><pre><span class="kd">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
                
                <span class="k">for</span><span class="o">(;;)</span>
                <span class="o">{</span>
                        <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">(),</span> <span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
                        <span class="n">x</span><span class="o">++;</span>
                        <span class="n">y</span><span class="o">++;</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(</span><span class="n">x</span><span class="o">);</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(</span><span class="n">y</span><span class="o">);</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>  
                        <span class="k">try</span> <span class="o">{</span>
                                <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                        
                        <span class="c">//Si nos coordonnées arrivent aux bords de notre composant</span>
                        <span class="c">//On réinitialise</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">==</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">||</span> <span class="n">y</span> <span class="o">==</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">())</span>
                        <span class="o">{</span>
                                <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(-</span><span class="mi">50</span><span class="o">);</span>
                                <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(-</span><span class="mi">50</span><span class="o">);</span>
                        <span class="o">}</span>
                        
                <span class="o">}</span>
                
        <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Yes ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
Le code fonctionne parfaitement. En tout cas, comme nous l'avions prévu !<br>
Mais avant de passer au chapitre suivant, nous pouvons encore faire mieux... <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
On y va ?<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10463">Attention aux bords, ne va pas te faire mal...</h2>
		<div class="ss_part_texte">
		Maintenant, nous allons faire en sorte que notre rond puisse détecter les bords de notre <strong><span class="violet"><span class="courrier">Panneau</span></span></strong> et ricoche sur ceux-ci ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Vous devez vous imaginer un code monstrueux, et vous êtes très loin du compte... <br>
<br>
Tout d'abord, jusqu'à maintenant, nous n'attachions aucune importance sur le bord que notre rond dépassait, ceci est terminé. Dorénavant, nous séparerons le dépassement des coordonnées <strong><span class="courrier">posX </span></strong>et <strong><span class="courrier">posY</span></strong> de notre <strong><span class="violet"><span class="courrier">Panneau</span></span></strong>.<br>
<br>
<div class="rmq question">Mais comment lui dire qu'il faut reculer ou avancer sur tel ou tel axe ?</div><br>
<div class="rmq attention">Pour les instructions qui vont suivre, gardez en mémoire que les coordonnées de notre rond sont en fait les coordonnées du <strong>coin supérieur gauche du carré entourant notre rond </strong>! !</div><br>
Voilà la marche à suivre :<br>
<ul>
<li>si la coordonnée x de notre rond est inférieure à la largeur et qu'il avance, on continue d'avancer ;</li>
<li>sinon, on recule.</li>
</ul><br>
Et nous allons faire de même pour la coordonnée y. <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Comment savoir si on doit avancer ou reculer ? Avec un booléen. <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
Au tout début de notre application, deux booléens seront initialisés à <strong><span class="violet"><span class="courrier">false</span></span></strong> et si la coordonnée x est supérieure à la largeur du <strong><span class="violet"><span class="courrier">Panneau</span></span></strong>, alors on recule ; sinon, on avance, idem pour la coordonnée y.<br>
<br>
<div class="rmq information">Dans ce code, j'utilise deux variables de type <strong><span class="violet"><span class="courrier">int</span></span></strong> pour éviter de rappeler les méthodes <strong><span class="courrier">getPosX()</span></strong> et <strong><span class="courrier">getPosY()</span></strong>.</div><br>
<br>
Voilà notre nouveau code de la méthode <strong><span class="courrier">go()</span></strong> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
                
                <span class="c1">//Les coordonnées de départ de notre rond</span>
                <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">(),</span> <span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
                <span class="c1">//Le booléen pour savoir si on recule ou non sur l'axe X</span>
                <span class="kt">boolean</span> <span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                <span class="c1">//Le booléen pour savoir si on recule ou non sur l'axe Y</span>
                <span class="kt">boolean</span> <span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                
                <span class="c1">//Pour cet exemple, j'utilise une boucle while</span>
                <span class="c1">//Vous verrez qu'elle fonctionne très bien</span>
                <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
                        
                        <span class="c1">//Si la coordonnée x est inférieure à 1, on avance</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                        <span class="c1">//Si la coordonnée x est supérieure à la taille du Panneau</span>
                        <span class="c1">//moins la taille du rond, on recule</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        
                        <span class="c1">//idem pour l'axe Y</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        
                        <span class="c1">//Si on avance, on incrémente la coordonnée</span>
                        <span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span>
                                <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
                        <span class="c1">//Sinon, on décrémente</span>
                        <span class="k">else</span>
                                <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
                        
                        <span class="c1">//Idem pour l'axe Y</span>
                        <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span>
                                <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
                        <span class="k">else</span>
                                <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
                                
                        <span class="c1">//On redessine notre Panneau</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>
                        
                        <span class="c1">//Comme on dit : la pause s'impose ! Ici, 3 millièmes de secondes</span>
                        <span class="k">try</span> <span class="o">{</span>
                                <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c1">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Exécutez votre application et vous devez voir que votre rond ricoche contre les bords de notre <strong><span class="violet"><span class="courrier">Panneau</span></span></strong>. Vous pouvez même étirer la fenêtre, la réduire et ça marche toujours ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
On commence à faire des choses sympa, non ?<br>
Un petit topo vous attend avant un petit QCM, et nous allons passer à la suite ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10462">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>À l'instanciation d'un composant, la méthode <strong><span class="courrier">paintComponent</span></strong> est automatiquement appelée.</li>
<li>Vous pouvez forcer un composant à se redessiner en invoquant la méthode <strong><span class="courrier">repaint()</span></strong>.</li>
<li>Pensez bien à ce que va donner votre composant après être redessiné.</li>
<li>Pour éviter que votre animation bave, réinitialisez le fond de votre composant pour éviter ce phénomène... <img src="./java_files/heureux.png" alt=":D" class="smilies"></li>
<li>Vous verrez que tous les composants fonctionnent de la même manière.</li>
<li>L'instruction <strong><span class="courrier">Thread.sleep()</span></strong>, permet de faire une pause dans votre programme.</li>
<li>Cette méthode prend un entier comme paramètre qui correspond à un temps exprimé en <strong>millièmes de secondes</strong>.</li>
<li>Vous pouvez utiliser des boucles infinies pour faire des animations.</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Encore un chapitre rondement mené !<br>
Maintenant, je pense que vous êtes paré pour : <strong><span class="vertf">Votre premier bouton</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10480">Votre premier bouton</h1>
	<div id="chap_intro">
	Voici l'un des moments que vous attendiez avec impatience !<br>
Vous allez enfin pouvoir mettre un bouton dans votre application... <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
Mais ne chantez pas trop vite. Vous allez effectivement utiliser un bouton, mais voir aussi que les choses se compliquent dès que vous utilisez ce genre de composants... Et encore plus lorsque vous en utilisez plusieurs !<br>
<br>
Toujours prêts ? <br>
Go, alors. <img src="./java_files/langue.png" alt=":p" class="smilies">
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10479">Utiliser la classe JButton</h2>
		<div class="ss_part_texte">
		Comme le titre l'indique, nous allons utiliser un objet <strong><span class="violet"><span class="courrier">JButton</span></span></strong>. Celui-ci se trouve aussi dans le package <strong><span class="violet"><span class="courrier">javax.swing</span></span></strong>.<br>
<br>
Au cours de ce chapitre, nous allons un peu mettre de côté notre objet <strong><span class="violet"><span class="courrier">Panneau</span></span></strong> : en fait, notre projet précédent dans sa globalité sera mis à l'écart...  <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Créez un nouveau projet avec :<br>
<ul>
<li>une classe contenant une méthode <span class="courrier">main</span> : appelons-la <strong><span class="courrier">Test</span></strong> ;</li>
<li>une classe héritée de <span class="courrier">JFrame</span> (avec tout ce qu'on a déjà mis avant, sauf la méthode <strong><span class="courrier">go()</span></strong>) : appelons-la <strong><span class="courrier">Fenetre</span></strong>.</li>
</ul><br>
Je sais, j'aime donner dans l'originalité... <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
<br>
Dans votre classe <strong><span class="courrier">Fenetre</span></strong>, nous allons créer une variable d'instance de type <strong><span class="courrier">JPanel</span></strong> et une de type <strong><span class="courrier">JButton</span></strong>.<br>
Faites de votre <strong><span class="courrier">JPanel</span></strong> le <span class="courrier">contentPane</span> de votre <strong><span class="courrier">Fenetre</span></strong>. Ce qui doit nous donner ceci :<br>
<br>
<h4>Classe Fenetre</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">();</span>
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">pan</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Classe Test</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
                <span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Jusque-là, rien de bien nouveau mis à part l'instance de <strong><span class="courrier"><span class="violet">JButton</span></span></strong>, mais ce genre de choses ne doit plus vous épater, maintenant !  <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
<br>
Définissons à présent un libellé à notre bouton et mettons-le sur... Sur... Ce qui nous sert de <span class="courrier">contentPane</span> ! Notre <strong><span class="violet"><span class="courrier">JPanel</span></span></strong>, en l'occurrence ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Pour donner un libellé à un bouton, il existe deux méthodes, les voici :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Méthode 1 : Instanciation avec le libellé</span>
<span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Mon bouton"</span><span class="o">);</span>
<span class="c">//Méthode 2 : Instanciation puis définition du libellé</span>
<span class="n">JButton</span> <span class="n">bouton2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">();</span>
<span class="n">bouton2</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Mon deuxième bouton"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Personnellement, je préfère la première... Mais là n'est pas la question. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Il ne nous reste plus qu'à ajouter notre bouton sur notre contentPane et ceci, grâce à la méthode <strong><span class="courrier">add()</span></strong> de l'objet <strong><span class="violet"><span class="courrier">JPanel</span></span></strong>.<br>
<br>
Voici donc notre code :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Mon bouton"</span><span class="o">);</span>
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
                
                <span class="c">//Ajout du bouton à notre contentPane</span>
                <span class="n">pan</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">pan</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat :<br>
<div class="centre"><img src="./java_files/105853.jpg" alt="Image utilisateur"></div><br>
<br>
Alors ! Heureux ? <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Je ne sais pas si vous avez remarqué mais... <strong>votre bouton est centré sur votre conteneur !</strong><br>
Ceci vous semble normal ? Sachez tout de même que votre <strong><span class="violet"><span class="courrier">JPanel</span></span></strong> fait de la mise en page par défaut. <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
<div class="rmq question">Qu'est-ce que tu entends par là ?</div><br>
En fait, en java, il existe des objets qui servent à agencer vos composants, et les objets <strong><span class="violet"><span class="courrier">JPanel</span></span></strong> en ont un par défaut !<br>
Pour vous le prouver, je vais vous faire travailler sur le <span class="courrier">contentPane</span> de votre <strong><span class="violet"><span class="courrier">JFrame</span></span></strong>. <br>
<div class="rmq question">Quoi ? On peut faire ça ?</div><br>
Bien sûr, mais il était de bon ton de vous faire découvrir l'objet <strong><span class="violet"><span class="courrier">Graphics</span></span></strong> avant de vous jeter dans la fosse aux lions...<br>
Vous allez voir que pour obtenir le même rendu que précédemment sur le <span class="courrier">contentPane</span> de votre <strong><span class="violet"><span class="courrier">JFrame</span></span></strong>, nous allons être obligés d'utiliser un de ces fameux objets d'agencements ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Tout d'abord, pour utiliser le <span class="courrier">contentPane</span> d'une <strong><span class="violet"><span class="courrier">JFrame</span></span></strong>, on doit appeler la méthode <strong><span class="courrier">getContentPane()</span></strong>, qui retourne ce dernier, auquel nous ajoutons nos composants. Voici le nouveau code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Mon bouton"</span><span class="o">);</span>
       
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
               
                <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Bouton"</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
               
                <span class="c">//On ajoute le bouton au contentPane de la JFrame</span>
                <span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
               
                <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
               
        <span class="o">}</span>      
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voyez que le résultat n'est pas du tout le même :<br>
<div class="centre"><img src="./java_files/105862.jpg" alt="Image utilisateur"></div><br>
<br>
Votre bouton est ÉNORME ! En fait, il prend toute la place disponible, et ceci parce que le <span class="courrier">contentPane</span> de votre <strong><span class="violet"><span class="courrier">JFrame</span></span></strong> ne possède pas d'objet d'agencement...<br>
<br>
<div class="rmq information">Ces fameux objets, dont vous ne pourrez plus vous passer, s'appellent des <strong><span class="italique">layout managers</span></strong>.</div><br>
Faisons un petit tour d'horizon de ces objets et voyons comment ils fonctionnent ! 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10478">Les layout managers</h2>
		<div class="ss_part_texte">
		Bon, vous allez voir qu'il existe plusieurs sortes de <strong><span class="italique">layout managers</span></strong> et que selon votre choix, il sera plus ou moins facile à utiliser... Je vais être méchant <img src="./java_files/diable.png" alt=":diable:" class="smilies"> . Nous verrons le plus simple en dernier ! <br>
Vous devez aussi savoir que tous ces layout managers se trouvent dans la package : <strong><span class="violet"><span class="courrier">java.awt</span></span></strong>.<br>
<br>
<h4><span class="souligne">L'objet </span></h4><span class="souligne"><span class="violet"><span class="courrier">BorderLayout</span></span></span><br>
<br>
Le premier que nous aborderons est le <strong><span class="violet"><span class="courrier">BorderLayout</span></span></strong>. Celui-ci est très pratique si vous voulez placer vos composants de façon simple par rapport à une position <strong><span class="italique">cardinale</span></strong> de votre conteneur.  Si je parle de positionnement cardinal, c'est parce que vous allez utiliser les positions :<br>
<ul>
<li><span class="courrier">NORTH</span></li>
<li><span class="courrier">SOUTH</span></li>
<li><span class="courrier">EAST</span></li>
<li><span class="courrier">WEST</span></li>
<li><span class="courrier">CENTER</span>.</li>
</ul><br>
<br>
Mais je sais qu'un aperçu vaut mieux qu'un exposé sur le sujet. Alors voilà un exemple mettant en oeuvre un <strong><span class="violet"><span class="courrier">BorderLayout</span></span></strong>.<br>
<div class="centre"><img src="./java_files/105867.jpg" alt="Image utilisateur"></div><br>
<br>
Cette fenêtre est composée de cinq <strong><span class="violet"><span class="courrier">JButton</span></span></strong> positionnés aux cinq endroits différents qu'offre un <strong><span class="violet"><span class="courrier">BorderLayout</span></span></strong>.<br>
<br>
Voici le code de cette fenêtre :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"BorderLayout.NORTH"</span><span class="o">);</span>
       
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
               
                <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Bouton"</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
               
                <span class="c">//On définit le layout à utiliser sur le contentPane</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
                
                <span class="c">//On ajoute le bouton au contentPane de la JFrame</span>
                <span class="c">//Au centre</span>
                <span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"CENTER"</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
                <span class="c">//Au nord</span>
                <span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"NORTH"</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
                <span class="c">//Au sud</span>
                <span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"SOUTH"</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
                <span class="c">//À l'ouest</span>
                <span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"WEST"</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">WEST</span><span class="o">);</span>
                <span class="c">//À l'est</span>
                <span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"EAST"</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">EAST</span><span class="o">);</span>
                
               
                <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
               
        <span class="o">}</span>      
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce n'est pas très difficile à comprendre. Vous définissez le <span class="italique">layout</span> à utiliser avec la méthode <strong><span class="courrier">setLayout()</span></strong> de l'objet <strong><span class="violet"><span class="courrier">JFrame</span></span></strong> ; ensuite, pour chaque composant que vous souhaitez positionner avec <strong><span class="courrier">add()</span></strong>, vous utilisez un attribut <strong><span class="violet"><span class="courrier">static </span></span></strong>de la classe <strong><span class="violet"><span class="courrier">BorderLayout</span></span></strong> en deuxième paramètre. <br>
La liste des ces paramètres est celle citée plus haut...<br>
<br>
<div class="rmq information">Avec l'objet <strong><span class="violet"><span class="courrier">BorderLayout</span></span></strong>, vos composants sont soumis à des contraintes. Pour une position <strong><span class="courrier">NORTH</span> </strong>ou <strong><span class="courrier">SOUTH</span></strong>, votre composant <strong>prendra la taille nécessaire en hauteur mais prendra toute la largeur</strong> ! Pour <strong><span class="courrier">WEST</span></strong> et <strong><span class="courrier">EAST</span></strong>, celui-ci prendra <strong>la largeur nécessaire mais toute la hauteur</strong> ! Et bien sûr pour <strong><span class="courrier">CENTER</span></strong>, <strong>tout l'espace est utilisé</strong> !</div><br>
<br>
<h4><span class="souligne">L'objet </span></h4><span class="souligne"><span class="violet"><span class="courrier">GridLayout</span></span></span><br>
<br>
Celui-ci permet d'ajouter des composants suivant une grille définie par un nombre de lignes et de colonnes. Les éléments sont disposés depuis la case située en haut à gauche. Dès qu'une ligne est remplie, on passe à la suivante.<br>
Si nous définissons une grille de 3 lignes et de 2 colonnes, voici ce que nous aurions :<br>
<div class="centre"><img src="./java_files/105873.jpg" alt="Image utilisateur"></div><br>
<br>
Voici le code de cet exemple :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.GridLayout</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"BorderLayout.NORTH"</span><span class="o">);</span>
       
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
               
                <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Bouton"</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
               
                <span class="c">//On définit le layout à utiliser sur le contentPane</span>
                <span class="c">//3 lignes sur 2 colonnes</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">GridLayout</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">));</span>
                
                <span class="c">//On ajoute le bouton au contentPane de la JFrame</span>
                <span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"1"</span><span class="o">));</span>
                <span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"2"</span><span class="o">));</span>
                <span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"3"</span><span class="o">));</span>
                <span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"4"</span><span class="o">));</span>
                <span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"5"</span><span class="o">));</span>
               
                <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
               
        <span class="o">}</span>      
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce code ne diffère pas beaucoup du précédent. Les seules différences résident dans le fait que nous utilisons un autre layout manager et qu'il n'y a pas besoin de définir le positionnement lors de l'ajout du composant avec la méthode <strong><span class="courrier">add()</span></strong>.<br>
<br>
Vous devez aussi savoir que vous pouvez définir le nombre de lignes et le nombre de colonnes avec des méthodes de l'objet : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="syntax"><pre><span class="n">GridLayout</span> <span class="n">gl</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GridLayout</span><span class="o">();</span>
<span class="n">gl</span><span class="o">.</span><span class="na">setColumns</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
<span class="n">gl</span><span class="o">.</span><span class="na">setRows</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
<span class="k">this</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="n">gl</span><span class="o">);</span>
 
<span class="c">// ou en abrégé : GridLayout gl = new GridLayout(3, 2);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez aussi spécifier des espaces entre les colonnes et entre les lignes.<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="syntax"><pre><span class="n">GridLayout</span> <span class="n">gl</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GridLayout</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
<span class="n">gl</span><span class="o">.</span><span class="na">setHgap</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span> <span class="c">// 5 pixels d'espace entre les colonnes (H comme Horizontal)</span>
<span class="n">gl</span><span class="o">.</span><span class="na">setVgap</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span> <span class="c">// 5 pixels d'espace entre les lignes (V comme Vertical)</span>
 
<span class="c">//ou en abrégé : GridLayout gl = new GridLayout(3, 2, 5, 5);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ce qui donnerait :<br>
<div class="centre"><img src="./java_files/105877.jpg" alt="Image utilisateur"></div><br>
<br>
<h4><span class="souligne">L'objet </span></h4><span class="souligne"><span class="violet"><span class="courrier">FlowLayout</span></span></span><br>
<br>
Celui-ci est certainement le plus facile à utiliser ! Il ne fait que centrer les composants dans le conteneur. Regardez plutôt :<br>
<br>
<div class="centre"><img src="./java_files/105879.jpg" alt="Image utilisateur"></div><br>
<br>
Ah ! On dirait bien que nous venons de trouver le layout manager défini par défaut dans les objets <strong><span class="violet"><span class="courrier">JPanel</span></span></strong>. <br>
Si vous mettez plusieurs composants avec ce gestionnaire, dès que la place est devenu trop étroite, il passe à la ligne inférieure. Voyez plutôt :<br>
<br>
<div class="centre"><img src="./java_files/105881.jpg" alt="Image utilisateur"></div><br>
<br>
Il existe encore deux types de layout managers : <br>
<ul>
<li>le <strong><span class="violet"><span class="courrier">CardLayout</span></span></strong></li>
<li>le <strong><span class="violet"><span class="courrier">GridBagLayout</span></span></strong>.</li>
</ul><br>
<br>
Je suis dans l'incapacité de vous en parler car je ne les ai encore jamais utilisés... Sachez seulement que le dernier cité est le plus précis, mais aussi le plus compliqué à utiliser... Si vous êtes intéressés par ces deux gestionnaires, vous pouvez trouver des renseignements <a href="http://java.sun.com/docs/books/tutorial/uiswing/layout/card.html">ici</a> pour le <strong><span class="violet"><span class="courrier">CardLayout</span></span></strong> et <a href="http://java.sun.com/docs/books/tutorial/uiswing/layout/gridbag.html">là</a> pour le <strong><span class="violet"><span class="courrier">GridBagLayout</span></span></strong>.<br>
<br>
Il faut que vous sachiez que les IHM ne sont en fait qu'une imbrication de composants les uns dans les autres, positionnés avec des layout managers. Vous allez voir tout de suite de quoi je veux parler...<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10477">Continuons dans notre lancée</h2>
		<div class="ss_part_texte">
		Vous avez vu comment utiliser les layout managers ; nous allons donc continuer à jouer avec nos composants. <br>
Vous savez :<br>
<ul>
<li>créer une fenêtre</li>
<li>faire un conteneur personnalisé</li>
<li>placer celui-ci dans votre fenêtre</li>
<li>créer un bouton et le placer sur votre fenêtre.</li>
</ul><br>
<br>
Nous allons maintenant utiliser notre conteneur personnalisé et un bouton.<br>
Vous pouvez revenir dans votre projet contenant notre animation créée dans les chapitres précédents.<br>
<br>
Le but est de mettre notre animation au centre de notre fenêtre et un bouton en bas de celle-ci. Comme ceci :<br>
<div class="centre"><img src="./java_files/105891.jpg" alt="Image utilisateur"></div><br>
<br>
Je vous laisse réfléchir quelques minutes, vous avez tous les outils pour y arriver ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
Voilà le nouveau code de notre classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
        <span class="k">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"mon bouton"</span><span class="o">);</span>
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
                
                <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
                <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
                <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
                <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                
                <span class="n">go</span><span class="o">();</span>
        <span class="o">}</span>
        
        
        <span class="k">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
                
                <span class="c">//Les coordonnées de départ de notre rond</span>
                <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">(),</span> <span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
                <span class="c">//Le booléen pour savoir si on recule ou non sur l'axe X</span>
                <span class="kt">boolean</span> <span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                <span class="c">//Le booléen pour savoir si on recule ou non sur l'axe Y</span>
                <span class="kt">boolean</span> <span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                
                <span class="c">//Pour cet exemple, j'utilise une boucle while</span>
                <span class="c">//Vous verrez qu'elle fonctionne très bien</span>
                <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
                        
                        <span class="c">//Si la coordonnée x est inférieure à 1, on avance</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                        <span class="c">//Si la coordonnée x est supérieure à la taille du panneau </span>
                        <span class="c">//moins la taille du rond, on avance</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        
                        <span class="c">//idem pour l'axe Y</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        
                        <span class="c">//Si on avance, on incrémente la coordonnée</span>
                        <span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span>
                                <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
                        <span class="c">//Sinon, on décrémente</span>
                        <span class="k">else</span>
                                <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
                        
                        <span class="c">//Idem pour l'axe Y</span>
                        <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span>
                                <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
                        <span class="k">else</span>
                                <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
                                
                        <span class="c">//On redessine notre panneau</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>
                        
                        <span class="c">//Comme on dit : la pause s'impose ! Ici, 3 centièmes de secondes</span>
                        <span class="k">try</span> <span class="o">{</span>
                                <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
</div></div><br>
<br>
Assez facile... N'est-ce pas ?<br>
Avant de voir comment les boutons interagissent avec l'application, je vous propose de voir comment personnaliser ceux-ci ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10476">Une classe Bouton personnalisée</h2>
		<div class="ss_part_texte">
		Tout comme dans le deuxième chapitre, nous allons faire une classe : appelons-la <strong><span class="violet"><span class="courrier">Bouton</span></span></strong>, héritée (dans notre cas, nous allons faire hériter notre classe de <strong><span class="violet"><span class="courrier">javax.swing.JButton</span></span></strong>), et nous allons redéfinir la méthode <strong><span class="violet"><span class="courrier">paintComponent</span></span></strong>. Vous devriez y arriver tous seuls.<br>
<br>
Pour cet exemple j'ai obtenu ceci :<br>
<div class="centre"><img src="./java_files/105958.png" alt="Image utilisateur"></div><br>
<br>
Voici la classe <strong><span class="violet"><span class="courrier">Bouton</span></span></strong> de cette application :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.FontMetrics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Bouton</span> <span class="k">extends</span> <span class="n">JButton</span> <span class="o">{</span>
 
        <span class="k">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
        
        <span class="k">public</span> <span class="nf">Bouton</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">){</span>
                <span class="k">super</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">str</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                
                <span class="n">Graphics2D</span> <span class="n">g2d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Graphics2D</span><span class="o">)</span><span class="n">g</span><span class="o">;</span>
                
                <span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">cyan</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
                
                <span class="n">g2d</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
                <span class="n">g2d</span><span class="o">.</span><span class="na">drawString</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">-</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">/</span><span class="mi">4</span><span class="o">),</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span><span class="o">)</span> <span class="o">+</span> <span class="mi">5</span><span class="o">);</span>
                
        <span class="o">}</span>
        
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
J'ai aussi fait un bouton personnalisé avec une image de fond (un png...) que voici :<br>
<br>
<div class="centre"><img src="./java_files/105964.png" alt="Image utilisateur"></div><br>
<br>
Et voilà le résultat :<br>
<br>
<div class="centre"><img src="./java_files/105965.jpg" alt="Image utilisateur"></div><br>
<br>
C'est sympa aussi ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
J'ai appliqué l'image sur l'intégralité du fond comme je l'ai montré lorsque nous nous amusions avec notre <strong><span class="violet"><span class="courrier">Panneau</span></span></strong>. Voici le code de la classe <strong><span class="violet"><span class="courrier">Bouton</span></span></strong> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Image</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.MouseListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Bouton</span> <span class="k">extends</span> <span class="n">JButton</span><span class="o">{</span>
 
         <span class="k">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
     <span class="k">private</span> <span class="n">Image</span> <span class="n">img</span><span class="o">;</span>
         
     <span class="k">public</span> <span class="nf">Bouton</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">){</span>
             <span class="k">super</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
             <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">str</span><span class="o">;</span>
             
             <span class="k">try</span> <span class="o">{</span>
                     <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBouton.png"</span><span class="o">));</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                        
 
     <span class="o">}</span>
    
     <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                 
             <span class="n">Graphics2D</span> <span class="n">g2d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Graphics2D</span><span class="o">)</span><span class="n">g</span><span class="o">;</span>
            
             <span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">cyan</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
             <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
            <span class="c">// g2d.fillRect(0, 0, this.getWidth(), this.getHeight());</span>
            <span class="n">g2d</span><span class="o">.</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">(),</span> <span class="k">this</span><span class="o">);</span>
             
             <span class="n">g2d</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">black</span><span class="o">);</span>
             <span class="n">g2d</span><span class="o">.</span><span class="na">drawString</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">-</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">/</span><span class="mi">4</span><span class="o">),</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span><span class="o">)</span> <span class="o">+</span> <span class="mi">5</span><span class="o">);</span>
            
     <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information"><strong>Bien sûr, ladite image est à la racine de mon projet !</strong></div><br>
<br>
Rien de bien compliqué jusqu'à maintenant... Et c'est à partir de là que les choses vont devenir intéressantes ! <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Que diriez-vous si je vous proposais de pouvoir changer l'aspect de votre objet au passage de la souris, lorsque vous cliquez dessus, et même lorsque vous relâchez le clic ? <br>
<br>
<div class="rmq question">On peut faire ça ?</div><br>
Bien entendu ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Il existe des interfaces à implémenter qui permettent de gérer toutes sortes d'événements sur votre IHM.<br>
Le principe de fonctionnement est un peu déroutant au premier abord, mais il est assez simple lorsqu'on a un peu pratiqué. N'attendons pas plus et voyons ça de plus près ! <img src="./java_files/pirate.png" alt=":pirate:" class="smilies"><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10475">Interaction avec la souris : l'interface MouseListener</h2>
		<div class="ss_part_texte">
		Avant de nous lancer dans l'implémentation de cette dernière, nous allons voir ce que nous allons obtenir à la fin :<br>
<br>
<div class="centre"><img src="./java_files/105967.jpg" alt="Image utilisateur">    <img src="./java_files/105968.jpg" alt="Image utilisateur"><br>
</div><br>
<br>
Vous avez vu ce que nous allons obtenir, mais vous allez tout de même passer par un peu de théorie avant d'arriver à ce résultat.<br>
Je ne me suis pas encore attardé sur le sujet (et je ne le ferai toujours pas), mais, pour arriver à détecter les événements qui surviennent à votre composant, Java utilise ce qu'on appelle le <strong><span class="bleu">design pattern Observer</span></strong>. <br>
<br>
Je ne vous l'expliquerai pas dans le détail tout de suite, une partie concernant les <span class="italique">design patterns</span> sera rédigée...<br>
En fait, un <acronym title="Design Pattern"><strong><span class="bleu">dp</span></strong></acronym> est un modèle de conception, une idée directrice afin d'avoir des programmes stables, réutilisables à souhait et paramétrables au possible ! <br>
<br>
Le design pattern <strong>Observer</strong> consiste en un modèle qui permet à des objets de se tenir au courant automatiquement. Ceci se fait par le biais d'interfaces que les objets devant se tenir au courant doivent implémenter.<br>
Pour le moment, retenez qu'un objet observable implémente une interface communément appelée <strong><span class="violet"><span class="courrier">Observable</span></span></strong> et qu'un observateur va, lui, implémenter une interface communément appelée <strong><span class="violet"><span class="courrier">Observer</span></span></strong> (ceci dans le cas où nous utilisons le pattern Observer fourni avec Java ; oui, ces interfaces existent...). Le principe est simple :<br>
<ul>
<li>l'objet observable va avoir un ou plusieurs objets observateurs</li>
<li>lorsqu'une donnée change dans un objet observable, il met tous ses objets observateurs abonnés à sa "<span class="italique">news letter</span>" au courant !</li>
</ul><br>
Ce principe, adapté aux composants <strong><span class="courrier">swing</span></strong>, permet aux objets composants d'être écoutés et donc de pouvoir faire réagir votre application en conséquence ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Ne nous attardons pas sur le sujet, nous y reviendrons. <br>
Maintenant que vous avez une très vague idée de la façon dont Java gère les événements, nous allons commencer à gérer les passages de notre souris sur notre objet ! <br>
<br>
Comme vous l'avez sûrement deviné, vous allez devoir implémenter l'interface <strong><span class="violet"><span class="courrier">MouseListener </span></span></strong>dans votre classe <strong><span class="violet"><span class="courrier">Bouton</span></span></strong>. Utilisez l'astuce d'Eclipse vue lors des implémentations d'interfaces, afin de générer automatiquement les méthodes à implémenter. <br>
<br>
Nous aurons aussi à dire à notre classe <strong><span class="violet"><span class="courrier">Bouton</span></span></strong> qu'elle va devoir tenir quelqu'un au courant de ses changements d'état par rapport à la souris. Ce quelqu'un n'est autre... qu'elle-même ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
Eh oui... Notre classe va s'écouter elle-même, donc ; dès que notre objet observable, notre bouton, va avoir des informations concernant les actions de la souris, il va dire à l'objet qui l'observe, lui-même, ce qu'il doit faire ! <br>
<br>
Ceci se fait grâce à la méthode <strong><span class="courrier">addMouseListener(MouseListener obj)</span></strong> qui prend un objet <strong><span class="violet"><span class="courrier">MouseListener </span></span></strong> en paramètre ; ici, elle prendra <strong><span class="violet"><span class="courrier">this</span></span></strong>. <strong>Rappelez-vous que vous pouvez utiliser le type d'une interface comme super-type : ici, notre classe implémente l'interface <strong><span class="violet"><span class="courrier">MouseListener </span></span></strong>, nous pouvons donc utiliser cet objet comme référence de cette interface !</strong> <br>
<br>
Voici notre classe <span class="courrier">Bouton</span> à présent :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Image</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
 
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Bouton</span> <span class="kd">extends</span> <span class="n">JButton</span> <span class="kd">implements</span> <span class="n">MouseListener</span><span class="o">{</span>
 
         <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
     <span class="kd">private</span> <span class="n">Image</span> <span class="n">img</span><span class="o">;</span>
         
     <span class="kd">public</span> <span class="nf">Bouton</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">){</span>
             <span class="kd">super</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
             <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">str</span><span class="o">;</span>
             
             <span class="k">try</span> <span class="o">{</span>
                                 <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBouton.png"</span><span class="o">));</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c1">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                        
                        <span class="c1">//Avec cette instruction, notre objet va s'écouter lui-même</span>
                        <span class="c1">//Dès qu'un événement de la souris sera intercepté, il sera au courant !</span>
                        <span class="k">this</span><span class="o">.</span><span class="na">addMouseListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
     <span class="o">}</span>
    
     <span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                 
             <span class="n">Graphics2D</span> <span class="n">g2d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Graphics2D</span><span class="o">)</span><span class="n">g</span><span class="o">;</span>
            
             <span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">cyan</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
             <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
            <span class="c1">// g2d.fillRect(0, 0, this.getWidth(), this.getHeight());</span>
            <span class="n">g2d</span><span class="o">.</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">(),</span> <span class="k">this</span><span class="o">);</span>
             
             <span class="n">g2d</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">black</span><span class="o">);</span>
             <span class="n">g2d</span><span class="o">.</span><span class="na">drawString</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">-</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">/</span><span class="mi">4</span><span class="o">),</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span><span class="o">)</span> <span class="o">+</span> <span class="mi">5</span><span class="o">);</span>
            
     <span class="o">}</span>
 
        <span class="cm">/**</span>
<span class="cm">         * Méthode appelée lors du clic de souris</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseClicked</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
        
        <span class="o">}</span>
 
        <span class="cm">/**</span>
<span class="cm">         * Méthode appelée lors du survol de la souris</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseEntered</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                
        <span class="o">}</span>
 
        <span class="cm">/**</span>
<span class="cm">         * Méthode appelée lorsque la souris sort de la zone du bouton</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseExited</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                
        <span class="o">}</span>
 
        <span class="cm">/**</span>
<span class="cm">         * Méthode appelée lorsque l'on presse le clic gauche de la souris</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mousePressed</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                
        <span class="o">}</span>
 
        <span class="cm">/**</span>
<span class="cm">         * Méthode appelée lorsque l'on relâche le clic de souris</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseReleased</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                        
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
C'est par le biais de ces différentes méthodes que nous allons gérer les différentes images à dessiner dans notre objet ! Mais rappelez-vous que : <strong>Même si vous n'utilisez pas toutes les méthodes d'une interface, vous DEVEZ tout de même mettre le squelette des méthodes non utilisées (avec les accolades), et ceci est aussi valable pour les classes abstraites</strong>.<br>
<div class="rmq information">Dans notre cas, la méthode <strong><span class="courrier">repaint()</span></strong> est appelée de façon tacite. <strong>Lorsqu'un événement est déclenché, notre objet se redessine automatiquement !</strong> Comme lorsque vous redimensionnez votre fenêtre dans les premiers chapitres...</div><br>
<br>
Avec cette information, nous n'avons plus qu'à changer notre image selon la méthode invoquée :<br>
<ul>
<li>notre objet aura une teinte jaune lors du survol de la souris</li>
<li>une teinte orangée lorsque l'on pressera le clic gauche</li>
<li>reviendra à la normale si on relâche le clic.</li>
</ul><br>
Pour ce faire, voici les fichiers <span class="bleu">.png</span> dont je me suis servi (mais rien ne vous empêche de les faire vous-mêmes <img src="./java_files/hihi.png" alt="^^" class="smilies"> ).<br>
<div class="centre"><img src="./java_files/105964.png" alt="Image utilisateur">                  <img src="./java_files/105975.png" alt="Image utilisateur">                    <img src="./java_files/105976.png" alt="Image utilisateur"></div><br>
<div class="rmq information"><strong>Je vous rappelle que dans le code qui suit, les fichiers images sont mis à la racine du projet ! !</strong></div><br>
<br>
Maintenant, voici le code de notre classe <strong><span class="violet"><span class="courrier">Bouton </span></span></strong>personnalisée :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Image</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
 
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Bouton</span> <span class="kd">extends</span> <span class="n">JButton</span> <span class="kd">implements</span> <span class="n">MouseListener</span><span class="o">{</span>
 
         <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
     <span class="kd">private</span> <span class="n">Image</span> <span class="n">img</span><span class="o">;</span>
         
     <span class="kd">public</span> <span class="nf">Bouton</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">){</span>
             <span class="kd">super</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
             <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">str</span><span class="o">;</span>
             
             <span class="k">try</span> <span class="o">{</span>
                                 <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBouton.png"</span><span class="o">));</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c1">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                        
                        <span class="k">this</span><span class="o">.</span><span class="na">addMouseListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
     <span class="o">}</span>
    
     <span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                 
             <span class="n">Graphics2D</span> <span class="n">g2d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Graphics2D</span><span class="o">)</span><span class="n">g</span><span class="o">;</span>
            
             <span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">cyan</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
             <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
            <span class="c1">// g2d.fillRect(0, 0, this.getWidth(), this.getHeight());</span>
            <span class="n">g2d</span><span class="o">.</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">(),</span> <span class="k">this</span><span class="o">);</span>
             
             <span class="n">g2d</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">black</span><span class="o">);</span>
             <span class="n">g2d</span><span class="o">.</span><span class="na">drawString</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">-</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">/</span><span class="mi">4</span><span class="o">),</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span><span class="o">)</span> <span class="o">+</span> <span class="mi">5</span><span class="o">);</span>
            
     <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseClicked</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                 <span class="c1">//Pas utile d'utiliser cette méthode ici                      </span>
        <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseEntered</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="c1">//Nous changeons le fond en jaune pour notre image lors du survol</span>
                <span class="c1">//avec le fichier fondBoutonHover.png</span>
                <span class="k">try</span> <span class="o">{</span>
                         <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBoutonHover.png"</span><span class="o">));</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c1">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseExited</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
 
                <span class="c1">//Nous changeons le fond en vert pour notre image lorsqu'on quitte le bouton</span>
                <span class="c1">//avec le fichier fondBouton.png</span>
                <span class="k">try</span> <span class="o">{</span>
                         <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBouton.png"</span><span class="o">));</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c1">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mousePressed</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
 
                <span class="c1">//Nous changeons le fond en orangé pour notre image lors du clic gauche</span>
                <span class="c1">//avec le fichier fondBoutonClic.png</span>
                <span class="k">try</span> <span class="o">{</span>
                         <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBoutonClic.png"</span><span class="o">));</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c1">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseReleased</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="c1">//Nous changeons le fond en orangé pour notre image </span>
                <span class="c1">//lorsqu'on relâche le clic </span>
                <span class="c1">//avec le fichier fondBoutonHover.png</span>
                <span class="k">try</span> <span class="o">{</span>
                         <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBoutonHover.png"</span><span class="o">));</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c1">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>               
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voilà le travail ! Il va de soi que si vous avez fait un <span class="impact">clic-droit / Enregistrer-sous</span> sur mes images, elles ne doivent pas avoir le même nom que sur mon morceau de code... Vous <strong>DEVEZ</strong> mettre le nom que vous leur avez donné... Je sais ça va de soi... Mais on ne sait jamais !<br>
<br>
Et maintenant, vous avez un bouton personnalisé qui réagit aux passages de souris ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
Mais un bémol se profile à l'horizon...<br>
<br>
<div class="rmq question">Lequel ? L'objet marche très bien ! </div><br>
Je sais qu'il va y avoir des p'tits malins qui vont cliquer sur le bouton et relâcher le clic en dehors du bouton ! <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
Dans ce cas, vous devez voir que le fond du bouton est jaune, vu que c'est ce que nous avons demandé de faire à notre méthode <strong><span class="courrier">mouseReleased</span></strong> ! Pour palier à ce problème, nous allons vérifier que, lorsque le clic est relâché, la souris est toujours sur le bouton.<br>
<br>
<div class="rmq question">Comment tu vas réussir à faire ça ? J'ai eu beau regarder dans les méthodes proposées par notre objet, mais il n'y a rien qui nous permette de faire ça !  <img src="./java_files/huh.png" alt=":o" class="smilies"> </div><br>
Je sais... Mais vous n'avez pas regardé au bon endroit !  <br>
Maintenant que nous avons implémenté l'interface <strong><span class="violet"><span class="courrier">MouseListener</span></span></strong>, il y a un autre objet que nous n'avons pas encore utilisé... Vous ne le voyez pas ? C'est le paramètre présent dans toutes les méthodes de cette interface ! Oui, c'est <strong><span class="violet"><span class="courrier">MouseEvent</span></span></strong>.<br>
<br>
Grâce à cet objet, nous pouvons avoir beaucoup de renseignements sur les événements. Nous ne détaillerons pas tout ici mais vous verrez quelques utilités de ces types d'objets tout au long de cette partie !<br>
Dans notre cas, nous pouvons récupérer la position X et Y de notre souris par rapport à notre <strong><span class="violet"><span class="courrier">Bouton</span></span></strong>, tout ceci avec les méthodes <strong><span class="courrier">getX()</span></strong> et <strong><span class="courrier">getY()</span></strong>. Donc, si nous relâchons notre clic de souris en dehors de la zone où se trouve notre objet, la valeur retournée par la méthode <strong><span class="courrier">getY()</span></strong> sera négative !<br>
<br>
Voici enfin le code final de notre classe <strong><span class="courrier"><span class="violet">Bouton</span></span></strong> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Image</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
 
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Bouton</span> <span class="kd">extends</span> <span class="n">JButton</span> <span class="kd">implements</span> <span class="n">MouseListener</span><span class="o">{</span>
 
         <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
     <span class="kd">private</span> <span class="n">Image</span> <span class="n">img</span><span class="o">;</span>
         
     <span class="kd">public</span> <span class="nf">Bouton</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">){</span>
             <span class="kd">super</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
             <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">str</span><span class="o">;</span>
             
             <span class="k">try</span> <span class="o">{</span>
                                 <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBouton.png"</span><span class="o">));</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c1">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                        
                        <span class="k">this</span><span class="o">.</span><span class="na">addMouseListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
     <span class="o">}</span>
    
     <span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                 
             <span class="n">Graphics2D</span> <span class="n">g2d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Graphics2D</span><span class="o">)</span><span class="n">g</span><span class="o">;</span>
            
             <span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">cyan</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
             <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
            <span class="c1">// g2d.fillRect(0, 0, this.getWidth(), this.getHeight());</span>
            <span class="n">g2d</span><span class="o">.</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">(),</span> <span class="k">this</span><span class="o">);</span>
             
             <span class="n">g2d</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">black</span><span class="o">);</span>
             <span class="n">g2d</span><span class="o">.</span><span class="na">drawString</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">-</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">/</span><span class="mi">4</span><span class="o">),</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span><span class="o">)</span> <span class="o">+</span> <span class="mi">5</span><span class="o">);</span>
            
     <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseClicked</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                 <span class="c1">//Pas utile d'utiliser cette méthode ici                      </span>
        <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseEntered</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="c1">//Nous changeons le fond en jaune pour notre image lors du survol</span>
                <span class="c1">//avec le fichier fondBoutonHover.png</span>
                <span class="k">try</span> <span class="o">{</span>
                         <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBoutonHover.png"</span><span class="o">));</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c1">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseExited</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
 
                <span class="c1">//Nous changeons le fond en vert pour notre image lorsqu'on quitte le bouton</span>
                <span class="c1">//avec le fichier fondBouton.png</span>
                <span class="k">try</span> <span class="o">{</span>
                         <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBouton.png"</span><span class="o">));</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c1">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mousePressed</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
 
                <span class="c1">//Nous changeons le fond en orangé pour notre image lors du clic gauche</span>
                <span class="c1">//avec le fichier fondBoutonClic.png</span>
                <span class="k">try</span> <span class="o">{</span>
                         <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBoutonClic.png"</span><span class="o">));</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c1">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseReleased</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="c1">//Nous changeons le fond en orangé pour notre image </span>
                <span class="c1">//lorsqu'on relâche le clic </span>
                <span class="c1">//avec le fichier fondBoutonHover.png   </span>
                
                <span class="c1">//Si on est à l'extérieur de l'objet, on dessine le fond par défaut</span>
                <span class="k">if</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">()</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span>
                <span class="o">{</span>
                        <span class="k">try</span> <span class="o">{</span>
                                 <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBouton.png"</span><span class="o">));</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c1">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                <span class="o">}</span>
                <span class="c1">//Sinon on met le fond jaune, la souris est encore dessus...</span>
                <span class="k">else</span>
                <span class="o">{</span>
                        <span class="k">try</span> <span class="o">{</span>
                                 <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBoutonHover.png"</span><span class="o">));</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c1">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                <span class="o">}</span>               
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Vous allez voir tout au long des chapitres qui suivent qu'il y a différentes interfaces pour les différentes actions possibles sur une IHM ! Sachez seulement qu'il y a une convention aussi pour ces interfaces. <br>
Leur nom commence par le type d'action ensuite suivi du mot <strong><span class="courrier">Listener</span></strong>. Nous avons vu ici les actions de la souris, et voyez le nom de l'interface : <strong><span class="courrier">MouseListener</span></strong></div><br>
<br>
Voilà ! Ce chapitre est clos !<br>
<div class="rmq question">Eh ! Attends... Notre bouton ne sais toujours rien faire !</div><br>
C'est justement le sujet du prochain chapitre. Passez faire un tour sur le topo de cette partie et si vous avez un score raisonnable au QCM, vous pourrez y aller... <img src="./java_files/diable.png" alt=":diable:" class="smilies"><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10474">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Un bouton s'utilise avec la classe <strong><span class="violet"><span class="courrier">JButton </span></span></strong>présente dans le package <strong><span class="violet"><span class="courrier">javax.swing</span></span></strong>.</li>
<li>Pour ajouter un bouton à une fenêtre, vous devez utiliser la méthode <span class="courrier">add()</span> de son <span class="courrier">contentPane</span>.</li>
<li>Il existe des objets afin de pouvoir positionner nos composants sur un <span class="courrier">contentPane</span> ou un conteneur : <strong>les layout managers</strong>.</li>
<li>Les layout managers se trouvent dans le package <strong><span class="violet"><span class="courrier">java.awt</span></span></strong>.</li>
<li>Le layout manager par défaut d'un objet <strong><span class="violet"><span class="courrier">JPanel</span></span></strong> est le <strong><span class="violet"><span class="courrier">FlowLayout</span></span></strong>.</li>
<li>Outre le <strong><span class="violet"><span class="courrier">FlowLayout</span></span></strong>, vous avez aussi le <strong><span class="violet"><span class="courrier">BorderLayout</span></span></strong>, le <strong><span class="violet"><span class="courrier">GridLayout</span></span></strong>, le <strong><span class="violet"><span class="courrier">CardLayout</span></span></strong> et le <strong><span class="violet"><span class="courrier">GridBagLayout</span></span></strong>. Il en existe sûrement d'autres sur le net... mais je ne les connais pas...</li>
<li>On définit un layout sur un conteneur grâce à la méthode <strong><span class="courrier">setLayout()</span></strong>.</li>
<li>Vous pouvez <strong><span class="rouge">interagir sur un composant</span></strong> avec votre souris en implémentant l'interface <strong><span class="violet"><span class="courrier">MouseListener</span></span></strong>.</li>
<li>Lorsque vous implémentez une interface <strong><span class="violet"><span class="courrier">&lt;...&gt;Listener</span></span></strong>, vous dites à votre classe qu'elle doit se préparer à observer des événements du type de l'interface... <strong>Vous devez donc spécifier QUI doit observer et QUE doit-elle observer</strong>, avec les méthodes du type <strong><span class="violet"><span class="courrier">add&lt;...&gt;Listener(&lt;...&gt;Listener)</span></span></strong>.</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Toujours motivés pour continuer ?<br>
Je ne vous ai pas trop fait peur ?<br>
<br>
Très bien, alors voyons : <strong><span class="vertf">Interaction bouton(s) - application</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10492">Interaction bouton(s) - application</h1>
	<div id="chap_intro">
	Nous y voilà !<br>
Dans ce chapitre, votre objet <span class="courrier">Bouton</span> pourra enfin communiquer avec votre application !<br>
Je pense tout de même que le chapitre précédent à dû vous plaire...<br>
<br>
Nous allons voir comment faire, mais aussi qu'il y a plusieurs façons de faire... <br>
Ensuite, il ne tiendra qu'à vous de bien choisir...  <br>
<br>
En avant, moussaillons. <img src="./java_files/pirate.png" alt=":pirate:" class="smilies"><br>

	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10491">Déclencher une action : l'interface ActionListener</h2>
		<div class="ss_part_texte">
		Tout est dans le titre ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Afin de gérer les différentes actions à effectuer selon le bouton sur lequel on clique, nous allons utiliser l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong>.<br>
<br>
Cependant, nous n'allons pas implémenter cette dernière dans notre classe <strong><span class="courrier"><span class="violet">Bouton</span></span></strong>, mais dans notre classe <strong><span class="courrier"><span class="violet">Fenetre</span></span></strong>... Le but étant de faire en sorte que lorsque nous cliquons sur notre bouton, il se passe quelque chose dans notre application comme changer un état, une variable, faire une incrémentation... Enfin n'importe quelle action !<br>
<br>
Comme je vous l'ai expliqué dans la partie précédente, lorsque nous faisons <strong><span class="violet"><span class="courrier">addMouseListener</span></span></strong>, nous prévenons l'objet observé qu'un objet doit être mis au courant ! Ici, nous voulons que ce soit notre application, notre <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong>, qui écoute notre <strong><span class="violet"><span class="courrier">Bouton</span></span></strong>, le but final étant de pouvoir lancer ou d'arrêter l'animation de notre <strong><span class="violet"><span class="courrier">Panneau</span></span></strong>.<br>
<br>
Avant d'en arriver là, nous allons faire plus simple. Nous allons voir dans un premier temps l'implémentation de l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong>. Afin de vous montrer toute la puissance de cette interface, nous allons utiliser un nouvel objet présent dans le package <strong><span class="violet"><span class="courrier">javax.swing</span></span></strong> : le <strong><span class="violet"><span class="courrier">JLabel</span></span></strong>.<br>
Cet objet est en fait comme une étiquette, il est spécialisé dans l'affichage de texte ou d'image... Il est donc parfait pour notre premier exemple !<br>
<br>
Pour l'instanciation ou l'initialisation, il fonctionne un peu comme le <strong><span class="violet"><span class="courrier">JButton</span></span></strong>, voyez plutôt :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="syntax"><pre><span class="n">JLabel</span> <span class="n">label1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">();</span>
<span class="n">label1</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"mon premier JLabel"</span><span class="o">);</span>
<span class="c">//Ou encore</span>
<span class="n">JLabel</span> <span class="n">label2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Mon deuxième JLabel"</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Créez une variable d'instance de type <strong><span class="violet"><span class="courrier">JLabel</span></span></strong> - appelons-la <strong><span class="courrier">label</span></strong> - initialisez-la avec le texte qui vous plaît, puis ajoutez-la avec votre <span class="courrier">contentPane</span> en <strong><span class="courrier">BorderLayout.NORTH</span></strong>. <br>
<br>
Voici le résultat :<br>
<br>
<div class="centre"><img src="./java_files/105983.jpg" alt="Image utilisateur"></div><br>
<br>
Et le code : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
 
    <span class="k">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">Bouton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Bouton</span><span class="o">(</span><span class="s">"mon bouton"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Le JLabel"</span><span class="o">);</span>
   
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
           
            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
           
            <span class="n">go</span><span class="o">();</span>
    <span class="o">}</span>
        
    <span class="c">//...</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez voir le texte en haut à gauche... L'alignement par défaut de cet objet est à gauche mais vous pouvez changer quelques paramètres, comme :<br>
<ul>
<li>l'alignement</li>
<li>la police à utiliser</li>
<li>la couleur de police</li>
<li>...</li>
</ul><br>
<br>
Voilà un code qui met tout ceci en pratique, et son aperçu.<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
            
            <span class="c">//Définition d'une police d'écriture</span>
            <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Tahoma"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">16</span> <span class="o">);</span>
            <span class="c">//On applique celle-ci aux JLabel</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
            <span class="c">//On change la couleur de police</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
            <span class="c">//Et on change l'alignement du texte grâce aux attributs static de la classe JLabel</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
           
            <span class="n">go</span><span class="o">();</span>
    <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Aperçu : <br>
<br>
<div class="centre"><img src="./java_files/105985.jpg" alt="Image utilisateur"></div><br>
<br>
Maintenant que notre étiquette est exactement comme nous le voulons, nous allons pouvoir implémenter l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong>.<br>
Lorsque vous avez implémenté les méthodes de l'interface, vous vous apercevez que celle-ci n'en contient qu'une seule !<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
    <span class="k">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">Bouton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Bouton</span><span class="o">(</span><span class="s">"mon bouton"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Le JLabel"</span><span class="o">);</span>
   
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
            
            <span class="c">//Définition d'une police d'écriture</span>
            <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Tahoma"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">16</span> <span class="o">);</span>
            <span class="c">//On applique celle-ci aux JLabel</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
            <span class="c">//On change la couleur de police</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
            <span class="c">//Et on change l'alignement du texte grâce aux attributs static de la classe JLabel</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
           
            <span class="n">go</span><span class="o">();</span>
    <span class="o">}</span>
        
 <span class="c">//...</span>
 
<span class="c">//*******************************************************************************</span>
<span class="c">//                             LA VOILAAAAAAAAAAAAAA</span>
<span class="c">//*******************************************************************************</span>
        <span class="c">/**</span>
<span class="c">         * C'est la méthode qui sera appelée lors d'un clic sur notre bouton</span>
<span class="c">         */</span>
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                                
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Nous allons maintenant prévenir notre objet <strong><span class="violet"><span class="courrier">Bouton</span></span></strong> que notre objet <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong> l'écoute ! Vous l'avez deviné, nous ajoutons notre objet <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong> à la liste des objets qui écoutent notre <strong><span class="violet"><span class="courrier">Bouton</span></span></strong> grâce à la méthode <strong><span class="courrier">addActionListener(ActionListener obj)</span></strong> invoquée sur la variable <strong><span class="courrier">bouton</span></strong>. Ajoutez cette instruction dans le constructeur, en passant <strong><span class="violet"><span class="courrier">this</span></span></strong> en paramètre (c'est notre <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong> qui écoute notre bouton...).<br>
<br>
Une fois ceci fait, nous allons changer le texte de notre <strong><span class="violet"><span class="courrier">JLabel</span></span></strong> dans la méthode <strong><span class="courrier">actionPerformed</span></strong> ; en fait, nous allons compter combien de fois on clique sur notre bouton... Pour cela, nous ajoutons une variable d'instance de type <strong><span class="violet"><span class="courrier">int</span></span></strong> dans notre classe : appelons-la <strong><span class="italique">compteur</span></strong>. Dans la méthode <strong><span class="courrier">actionPerformed</span></strong>, nous allons incrémenter ce compteur et afficher son contenu dans notre étiquette.<br>
<br>
Voici le code de notre objet mis à jour :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
    <span class="k">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">Bouton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Bouton</span><span class="o">(</span><span class="s">"mon bouton"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Le JLabel"</span><span class="o">);</span>
    <span class="c">/**</span>
<span class="c">     * Compteur de clics !</span>
<span class="c">     */</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
   
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="c">//On ajoute notre Fenetre à la liste des auditeurs de notre Bouton</span>
            <span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
            
            <span class="c">//Définition d'une police d'écriture</span>
            <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Tahoma"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">16</span> <span class="o">);</span>
            <span class="c">//On applique celle-ci aux JLabel</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
            <span class="c">//On change la couleur de police</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
            <span class="c">//Et on change l'alignement du texte grâce aux attributs static de la classe JLabel</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
           
            <span class="n">go</span><span class="o">();</span>
    <span class="o">}</span>
        
        <span class="k">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
        
        <span class="c">//Les coordonnées de départ de notre rond</span>
        <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">(),</span> <span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
        <span class="c">//Le booléen pour savoir si on recule ou non sur l'axe X</span>
        <span class="kt">boolean</span> <span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="c">//Le booléen pour savoir si on recule ou non sur l'axe Y</span>
        <span class="kt">boolean</span> <span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
       
        <span class="c">//Pour cet exemple, j'utilise une boucle while</span>
        <span class="c">//Vous verrez qu'elle fonctionne très bien</span>
        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
               
                <span class="c">//Si la coordonnée x est inférieure à 1, on avance</span>
                <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                <span class="c">//Si la coordonnée x est supérieure à la taille du Panneau</span>
                <span class="c">//moins la taille du rond on avance</span>
                <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
               
                <span class="c">//idem pour l'axe Y</span>
                <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
               
                <span class="c">//Si on avance, on incrémente la coordonnée</span>
                <span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
                <span class="c">//Sinon on décrémente</span>
                <span class="k">else</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
               
                <span class="c">//Idem pour l'axe Y</span>
                <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
                <span class="k">else</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
                       
                <span class="c">//On redessine notre Panneau</span>
                <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>
               
                <span class="c">//Comme on dit : la pause s'impose ! Ici, 3 centièmes de secondes</span>
                <span class="k">try</span> <span class="o">{</span>
                        <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
        <span class="o">}</span>
       
<span class="o">}</span>
 
<span class="c">//*******************************************************************************</span>
<span class="c">//                             LA VOILAAAAAAAAAAAAAA</span>
<span class="c">//*******************************************************************************</span>
        <span class="c">/**</span>
<span class="c">         * C'est la méthode qui sera appelée lors d'un clic sur notre bouton</span>
<span class="c">         */</span>
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                <span class="c">//Lorsque nous cliquons sur notre bouton, on met à jour le JLabel</span>
                <span class="k">this</span><span class="o">.</span><span class="na">compteur</span><span class="o">++;</span>
                <span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Vous avez cliqué "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">compteur</span> <span class="o">+</span> <span class="s">" fois"</span><span class="o">);</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat : <br>
 <br>
<div class="centre"><img src="./java_files/105987.jpg" alt="Image utilisateur"></div><br>
<br>
On commence à faire du sérieux, là ! ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Mais attendez, on ne fait que commencer... Eh oui ! Nous allons maintenant ajouter un deuxième bouton à notre <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong>, à côté de notre premier bouton (vous êtes libres d'utiliser la classe personnalisée ou un <strong><span class="violet"><span class="courrier">JButton</span></span></strong>) ! Personnellement, je vais utiliser des boutons normaux maintenant ; en effet, la façon dont on écrit le nom de notre bouton, dans notre classe personnalisée, n'est pas assez souple et donc l'affichage peut être décevant... <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
<br>
Bref, nous avons maintenant deux boutons écoutés par notre objet <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong>. <br>
<br>
<div class="rmq erreur">Vous devez créer un deuxième <strong><span class="courrier">JPanel </span></strong>qui va contenir nos deux boutons et insérer celui-ci dans le <span class="courrier">contentPane</span> en <strong><span class="courrier">BorderLayout.SOUTH</span></strong>. <br>
<strong>Si vous tentez de mettre deux composants au même endroit avec un <span class="courrier">BorderLayout</span>, seul le dernier composant ajouté apparaîtra !</strong> Eh oui, le composant prend toute la place dans un <strong><span class="courrier">BorderLayout</span></strong> !</div><br>
<br>
Voilà notre nouveau code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
    <span class="k">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"bouton 1"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"bouton 2"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Le JLabel"</span><span class="o">);</span>
    <span class="c">/**</span>
<span class="c">     * Compteur de clics !</span>
<span class="c">     */</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
   
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="c">//On ajoute notre Fenetre à la liste des auditeurs de notre Bouton</span>
            <span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
            <span class="n">bouton2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
            
            <span class="n">JPanel</span> <span class="n">south</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton2</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">south</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
            
            
            <span class="c">//Définition d'une police d'écriture</span>
            <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Tahoma"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">16</span> <span class="o">);</span>
            <span class="c">//On applique celle-ci aux JLabel</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
            <span class="c">//On change la couleur de police</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
            <span class="c">//Et on change l'alignement du texte grâce aux attributs static de la classe JLabel</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
           
            <span class="n">go</span><span class="o">();</span>
    <span class="o">}</span>
        
    <span class="c">//...</span>
 
<span class="c">//*******************************************************************************</span>
<span class="c">//                             LA VOILAAAAAAAAAAAAAA</span>
<span class="c">//*******************************************************************************</span>
        <span class="c">/**</span>
<span class="c">         * C'est la méthode qui sera appelée lors d'un clic sur notre bouton</span>
<span class="c">         */</span>
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                <span class="c">//Lorsque nous cliquons sur notre bouton, on met à jour le JLabel</span>
                <span class="k">this</span><span class="o">.</span><span class="na">compteur</span><span class="o">++;</span>
                <span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Vous avez cliqué "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">compteur</span> <span class="o">+</span> <span class="s">" fois"</span><span class="o">);</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat : <br>
<br>
<div class="centre"><img src="./java_files/105989.jpg" alt="Image utilisateur"></div><br>
<br>
<br>
Le problème maintenant est : <br>
<div class="rmq question">comment faire faire deux choses différentes dans la méthode <strong><span class="courrier">actionPerformed</span></strong> ?</div><br>
En effet ! Si nous laissons la méthode <strong><span class="courrier">actionPerformed</span></strong> telle qu'elle est, les deux boutons auront la même action lorsque nous cliquerons dessus. Essayez, et vous verrez !<br>
<br>
Il existe un moyen de savoir qui a déclenché l'événement, en utilisant l'objet passé en paramètre dans la méthode <strong><span class="courrier">actionPerformed</span></strong>. Nous allons utiliser la méthode <strong><span class="courrier">getSource()</span></strong> de cet objet pour connaître le nom de l'instance qui a généré l'événement. <br>
Testez la méthode <strong><span class="courrier">actionPerformed</span></strong> suivante, et voyez le résultat :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="k">if</span><span class="o">(</span><span class="n">arg0</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">bouton</span><span class="o">)</span>
                        <span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Vous avez cliqué sur le bouton 1"</span><span class="o">);</span>
                
                <span class="k">if</span><span class="o">(</span><span class="n">arg0</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">bouton2</span><span class="o">)</span>
                        <span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Vous avez cliqué sur le bouton 2"</span><span class="o">);</span>
        <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat :<br>
<br>
<div class="centre"><img src="./java_files/106089.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez constater que notre code fonctionne très bien ! Mais cette approche n'est pas très orientée objet... Si vous avez une multitude de boutons sur votre IHM... vous allez avoir une méthode <strong><span class="courrier">actionPerformed</span></strong> très chargée !<br>
Nous pourrions créer deux objets à part, chacun écoutant un bouton, dont le rôle serait de faire un traitement précis par bouton... Cependant, si dans nos traitements nous avons besoin de modifier des données internes à la classe contenant nos boutons, il faudrait passer ces données (ou objets) à cet objet... Pas terrible non plus.<br>
<br>
<div class="rmq question">On commence à te connaître, maintenant ! Tu as une idée derrière la tête...</div><br>
Je suis démasqué !  <img src="./java_files/langue.png" alt=":p" class="smilies"> <br>
Il existe en Java un type de classe particulière. Voyons ça tout de suite !<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10490">Parlez avec votre classe intérieure</h2>
		<div class="ss_part_texte">
		En Java, vous pouvez faire ce qu'on appelle des <strong><span class="bleu">classes internes</span></strong>.<br>
<strong>Ceci consiste à déclarer une classe dans une classe !</strong> Je sais, ça paraît tordu mais vous allez voir que c'est très pratique. <br>
<br>
En effet, ces classes possèdent tous les avantages des classes normales, héritant d'une super-classe ou implémentant une interface, elles bénéficieront donc des bénéfices du polymorphisme et de la covariance des variables ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
En plus, elles ont l'avantage d'avoir accès aux attributs de la classe dans laquelle elle est déclarée !<br>
<br>
Dans le cas qui nous intéresse, ceci permet de faire une implémentation de l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong>, détachée de notre classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong>, mais pouvant utiliser ses attributs !<br>
La déclaration d'une telle classe se fait exactement comme une classe normale, sauf qu'elle est dans une autre classe... Ce qui donne ceci :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">MaClasseExterne</span><span class="o">{</span>
 
     <span class="k">public</span> <span class="nf">MaClasseExterne</span><span class="o">(){</span>
          <span class="c">//....</span>
     <span class="o">}</span>
 
     <span class="k">class</span> <span class="nc">MaClassInterne</span><span class="o">{</span>
 
          <span class="k">public</span> <span class="nf">MaClassInterne</span><span class="o">(){</span>
               <span class="c">//...</span>
          <span class="o">}</span>
     <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Grâce à ceci, nous allons pouvoir faire une classe spécialisée dans l'écoute de composants et qui a un travail précis à faire ! Dans notre exemple, nous allons juste faire deux classes internes implémentant chacune l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong> ; elles redéfiniront donc la méthode <strong><span class="courrier">actionPerformed</span></strong> :<br>
<ul>
<li><strong><span class="violet"><span class="courrier">BoutonListener </span></span></strong>: qui écoutera le premier bouton</li>
<li><strong><span class="violet"><span class="courrier">Bouton2Listener </span></span></strong>: qui écoutera le second !</li>
</ul><br>
Une fois que ceci est fait, il ne nous reste plus qu'à dire à chaque bouton : "<strong><span class="italique">qui l'écoute</span></strong>", avec la méthode <strong><span class="courrier">addActionListener</span></strong>. <br>
<br>
Voici la classe Fenetre mise à jour : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
    <span class="k">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"bouton 1"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"bouton 2"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Le JLabel"</span><span class="o">);</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
   
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="c">//Ce sont maintenant nos classes internes qui écoutent nos boutons </span>
            <span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>
            <span class="n">bouton2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">Bouton2Listener</span><span class="o">());</span>
            
            <span class="n">JPanel</span> <span class="n">south</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton2</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">south</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
            
            <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Tahoma"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">16</span> <span class="o">);</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
           
            <span class="n">go</span><span class="o">();</span>
    <span class="o">}</span>
        
        <span class="k">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
        
        <span class="c">//Les coordonnées de départ de notre rond</span>
        <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">(),</span> <span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
        <span class="c">//Le booléen pour savoir si on recule ou non sur l'axe X</span>
        <span class="kt">boolean</span> <span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="c">//Le booléen pour savoir si on recule ou non sur l'axe Y</span>
        <span class="kt">boolean</span> <span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
       
        <span class="c">//Pour cet exemple, j'utilise une boucle while</span>
        <span class="c">//Vous verrez qu'elle fonctionne très bien</span>
        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
               
            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span><span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>
 
            <span class="k">try</span> <span class="o">{</span>
                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c">// TODO Auto-generated catch block</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>
       
        <span class="o">}</span>
 
 
        <span class="c">/**</span>
<span class="c">         * classe qui écoute notre bouton</span>
<span class="c">         */</span>
        <span class="k">class</span> <span class="nc">BoutonListener</span>  <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="c">/**</span>
<span class="c">                 * Redéfinition de la méthode actionPerformed</span>
<span class="c">                 */</span>
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Vous avez cliqué sur le bouton 1"</span><span class="o">);</span>                     
                <span class="o">}</span>
                
        <span class="o">}</span>
        
        <span class="c">/**</span>
<span class="c">         * classe qui écoute notre bouton2</span>
<span class="c">         */</span>
        <span class="k">class</span> <span class="nc">Bouton2Listener</span>  <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="c">/**</span>
<span class="c">                 * Redéfinition de la méthode actionPerformed</span>
<span class="c">                 */</span>
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Vous avez cliqué sur le bouton 2"</span><span class="o">);</span>                     
                <span class="o">}</span>
                
        <span class="o">}</span>
                
        
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat est parfait : <br>
<br>
<div class="centre"><img src="./java_files/106089.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Vous pouvez même constater que nos classes internes ont accès aux attributs déclarés <strong><span class="courrier">private</span></strong> dans notre classe <strong><span class="courrier">Fenetre</span></strong> !</div><br>
<br>
Nous n'avons plus à nous soucier de qui a déclenché l'événement maintenant, car nous avons une classe qui écoute chaque bouton ! Nous pouvons souffler un peu, une grosse épine vient de nous être retirée du pied.<br>
<br>
<div class="rmq information">Vous le savez, mais vous pouvez faire écouter votre bouton par plusieurs classes... Il vous suffit d'ajouter les classes qui écoutent le boutons avec <strong><span class="courrier">addActionListener</span></strong>.</div><br>
Eh oui, faites le test...<br>
Créez une troisième classe interne, peu importe son nom (moi, je l'appelle <strong><span class="violet"><span class="courrier">Bouton3Listener</span></span></strong>), implémentez l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong> dans celle-ci et contentez-vous de faire un simple <strong><span class="courrier">System.out.println</span></strong> dans la méthode <strong><span class="courrier">actionPerformed</span></strong>. N'oubliez pas d'ajouter cette dernière à la liste des classes qui écoutent votre bouton (n'importe lequel des deux... Moi, j'ai choisi le premier). <br>
<br>
Je ne vous donne que le code ajouté : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Les imports</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
    
     <span class="c">//Les variables d'instance...</span>
      <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="c">//Première classe écoutant mon bouton </span>
            <span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>
            <span class="c">//Deuxième classe écoutant mon bouton</span>
            <span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">Bouton3Listener</span><span class="o">());</span>
            
            <span class="n">bouton2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">Bouton2Listener</span><span class="o">());</span>
            
            <span class="n">JPanel</span> <span class="n">south</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton2</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">south</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
            
            <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Tahoma"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">16</span> <span class="o">);</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
           
            <span class="n">go</span><span class="o">();</span>
    <span class="o">}</span>
 
    <span class="c">//...</span>
 
        <span class="k">class</span> <span class="nc">Bouton3Listener</span>  <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="c">/**</span>
<span class="c">                 * Redéfinition de la méthode actionPerformed</span>
<span class="c">                 */</span>
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ma classe interne numéro 3 écoute bien !"</span><span class="o">);</span>               
                <span class="o">}</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat :<br>
<br>
<div class="centre"><img src="./java_files/106094.jpg" alt="Image utilisateur"></div><br>
<br>
Les classes internes sont vraiment des classes à part entière ! Elles peuvent aussi être héritées d'une super-classe... De ce fait, c'est presque comme si nous avions de l'héritage multiple, ça n'en est pas... Mais ça y ressemble. Donc, ce code est valide : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">MaClasseExterne</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
     <span class="k">public</span> <span class="nf">MaClasseExterne</span><span class="o">(){</span>
          <span class="c">//....</span>
     <span class="o">}</span>
 
     <span class="k">class</span> <span class="nc">MaClassInterne</span> <span class="k">extends</span> <span class="n">JPanel</span><span class="o">{</span>
 
          <span class="k">public</span> <span class="nf">MaClassInterne</span><span class="o">(){</span>
               <span class="c">//...</span>
          <span class="o">}</span>
     <span class="o">}</span>
 
     <span class="k">class</span> <span class="nc">MaClassInterne2</span> <span class="k">extends</span> <span class="n">JButton</span><span class="o">{</span>
 
          <span class="k">public</span> <span class="nf">MaClassInterne</span><span class="o">(){</span>
               <span class="c">//...</span>
          <span class="o">}</span>
     <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Rien ne vous empêche de faire de votre classe <strong><span class="courrier">Panneau</span></strong> une classe interne ! <img src="./java_files/heureux.png" alt=":D" class="smilies"></div><br>
<br>
Vous voyez bien que ce genre de classes peuvent s'avérer très utile... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Bon. Nous avons réglé le problème d'implémentation, nous avons deux boutons qui sont écoutés, il ne nous reste plus qu'à lancer et arrêter notre animation avec ceux-ci !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10489">Contrôler votre animation : lancement et arrêt</h2>
		<div class="ss_part_texte">
		Nous attaquons la dernière ligne droite de ce chapitre. <br>
Donc, pour réussir à gérer le lancement et l'arrêt de notre animation, nous allons devoir modifier un peu le code de notre classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong>.<br>
Il va falloir changer le libellé de ceux-ci, le premier affichera <span class="impact">Go</span> et le deuxième <span class="impact">Stop</span> et, pour éviter d'arrêter l'animation alors que celle-ci n'est pas lancée et ne pas l'animer alors qu'elle l'est déjà, nous allons tantôt activer / désactiver les boutons. Je m'explique.<br>
<ul>
<li>Au lancement, l'animation est lancée. Le bouton <span class="impact">Go</span> ne sera pas cliquable alors que <span class="impact">Stop</span>, oui.</li>
<li>Si l'animation est stoppée, le bouton <span class="impact">Stop</span> ne sera plus cliquable et le bouton <span class="impact">Go</span> le sera.</li>
</ul><br>
<div class="rmq question">Tu ne nous as pas dit comment on fait ça !  <img src="./java_files/mechant.png" alt=":colere2:" class="smilies"> </div><br>
Je sais... Mais je vous cache encore pas mal de choses...  <br>
Ne vous inquiétez pas, c'est très simple à faire ; il existe une méthode pour faire ça :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"bouton"</span><span class="o">);</span>
<span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span> <span class="c1">// Votre bouton n'est plus cliquable !</span>
<span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span> <span class="c1">// Votre bouton de nouveau cliquable !</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
J'ajouterais que vous pouvez faire pas mal de choses avec ces objets ! Soyez curieux et testez les méthodes de ces objets, allez faire un tour sur le site de Sun Microsystems, fouillez, fouinez...<br>
L'une des méthodes qui s'avère souvent utile et qui est utilisable pour tous ces objets (et les objets que nous verrons plus tard) est la méthode de gestion de dimension. Il ne s'agit pas de la méthode <strong><span class="courrier">setSize()</span></strong>, mais la méthode <strong><span class="courrier">setPreferredSize(Dimension preferredSize)</span></strong>. Cette méthode prend un objet <strong><span class="violet"><span class="courrier">Dimension</span></span></strong> en paramètre qui lui, prend <strong>deux entiers</strong> en paramètre.<br>
<br>
Voilà un exemple : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">bouton</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">120</span><span class="o">));</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui donne sur notre application :<br>
<br>
<div class="centre"><img src="./java_files/106124.png" alt="Image utilisateur"></div><br>
<br>
Retournons à nos moutons... <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Afin de bien gérer notre animation, il va falloir améliorer notre méthode <strong><span class="courrier">go()</span></strong>.<br>
Nous allons sortir de cette méthode les deux entiers dont nous nous servions afin de recalculer les coordonnées de notre rond et, concernant la boucle infinie, elle doit dorénavant pouvoir être stoppée ! <br>
Pour réussir ceci, nous allons déclarer une variable d'instance de type booléen qui changera d'état selon le bouton sur lequel nous cliquerons, et nous utiliserons celui-ci comme paramètre de notre boucle.<br>
<br>
Voici le code de notre classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
    <span class="kd">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Go"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JButton</span> <span class="n">bouton2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Stop"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Le JLabel"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">backX</span><span class="o">,</span> <span class="n">backY</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span> <span class="o">;</span>
    
    <span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="c1">//Ce sont maintenant nos classes internes qui écoutent nos boutons </span>
            <span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span> 
            <span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
            <span class="n">bouton2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">Bouton2Listener</span><span class="o">());</span>
            
            <span class="n">JPanel</span> <span class="n">south</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton2</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">south</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
            
            <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Tahoma"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">16</span> <span class="o">);</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
            <span class="n">go</span><span class="o">();</span>
            
    <span class="o">}</span>
        
        <span class="kd">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
        <span class="c1">//Les coordonnées de départ de notre rond</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">();</span>
        <span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
        <span class="c1">//Pour cet exemple, j'utilise une boucle while</span>
        <span class="c1">//Vous verrez qu'elle fonctionne très bien</span>
        <span class="k">while</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">animated</span><span class="o">){</span>
                
            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
            
            
            <span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span><span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>
 
            <span class="k">try</span> <span class="o">{</span>
                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c1">// TODO Auto-generated catch block</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>       
        <span class="o">}</span>
 
 
        <span class="cm">/**</span>
<span class="cm">         * classe qui écoute notre bouton</span>
<span class="cm">         */</span>
        <span class="kd">class</span> <span class="nc">BoutonListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="cm">/**</span>
<span class="cm">                 * Redéfinitions de la méthode actionPerformed</span>
<span class="cm">                 */</span>
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        <span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                        <span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                        <span class="n">go</span><span class="o">();</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
        
        <span class="cm">/**</span>
<span class="cm">         * classe qui écoute notre bouton2</span>
<span class="cm">         */</span>
        <span class="kd">class</span> <span class="nc">Bouton2Listener</span>  <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="cm">/**</span>
<span class="cm">                 * Redéfinitions de la méthode actionPerformed</span>
<span class="cm">                 */</span>
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">animated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>       
                        <span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                        <span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                <span class="o">}</span>
                
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
À l'exécution, vous pouvez voir :<br>
<ul>
<li>que le bouton <span class="impact">Go</span> n'est pas cliquable mais que l'autre l'est</li>
<li>que l'animation se lance</li>
<li>lorsque vous cliquez sur <span class="impact">Stop</span>, que l'animation s'arrête</li>
<li>que le bouton <span class="impact">Go</span> devient cliquable</li>
<li>et lors de votre tentative, que l'animation ne se lance pas !  <img src="./java_files/blink.gif" alt="o_O" class="smilies"> </li>
</ul><br>
<br>
<div class="rmq question">Comment ça se fait ?</div><br>
Comme je vous l'ai dit dans le chapitre sur les conteneurs, notre application, au démarrage de celle-ci, lance un <strong><span class="bleu">thread</span></strong> : <strong>le processus principal de votre programme !</strong><br>
Au démarrage, l'animation est lancée, celle-ci dans le même <span class="courrier">thread</span> que notre objet <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong>.<br>
Lorsque nous lui demandons de s'arrêter, aucun souci : les ressources mémoire sont libérées, on sort de la boucle infinie et l'application continue son court !<br>
Mais lorsque nous redemandons à l'animation de se lancer... L'instruction dans la méthode <strong><span class="courrier">actionPerformed</span></strong> appelle la méthode <strong><span class="courrier">go</span></strong> et, vu que nous sommes dans une boucle infinie : <strong><span class="rouge">on reste dans la méthode <span class="courrier">go</span> et on ne sort plus de la méthode <span class="courrier">actionPerformed </span>de notre bouton !</span></strong> <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
<br>
<h4><span class="souligne"><span class="arial">Voici l'explication de ce phénomène</span></span></h4> <br>
<br>
Java gère les appels aux méthodes selon ce qu'on appelle vulgairement : <strong><span class="gros"><span class="rouge">La pile</span></span></strong> !<br>
<br>
Pour vous expliquer ceci, nous allons prendre un exemple tout bête ; regardez cet objet :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestPile</span> <span class="o">{</span>
 
        <span class="kd">public</span> <span class="nf">TestPile</span><span class="o">(){</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Début constructeur"</span><span class="o">);</span>
                <span class="n">methode1</span><span class="o">();</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Fin constructeur"</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">methode1</span><span class="o">(){</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Début méthode 1"</span><span class="o">);</span>
                <span class="n">methode2</span><span class="o">();</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Fin méthode 1"</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">methode2</span><span class="o">(){</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Début méthode 2"</span><span class="o">);</span>
                <span class="n">methode3</span><span class="o">();</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Fin méthode 2"</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">methode3</span><span class="o">(){</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Début méthode 3"</span><span class="o">);</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Fin méthode 3"</span><span class="o">);</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Si vous instanciez cet objet, vous obtiendrez dans votre console ceci :<br>
<br>
<div class="centre"><img src="./java_files/106194.jpg" alt="Image utilisateur"></div><br>
<br>
Je suppose que vous avez remarqué, avec stupéfaction, que l'ordre des instructions est un peu bizarre !<br>
Voici ce qu'il s'est passé : <br>
<ul>
<li>à l'instanciation, notre objet appelle la <strong><span class="courrier">méthode1</span></strong> ;</li>
<li>cette dernière invoque la <strong><span class="courrier">méthode2</span></strong> ;</li>
<li>celle-ci utilise la <strong><span class="courrier">méthode3</span></strong> et une fois terminée, la JVM retourne dans la <strong><span class="courrier">méthode2</span></strong> ;</li>
<li>celle-ci terminée, on remonte à la fin de la <strong><span class="courrier">méthode1</span></strong>... jusqu'à la dernière instruction appelante : le contructeur.</li>
</ul><br>
<br>
<div class="rmq information"><strong>Lors de tous les appels, on dit que la JVM <span class="gros">empile </span>les invocations sur la pile ! Et, une fois la dernière méthode empilée terminée, la JVM <span class="gros"><span class="rouge">dépile</span></span> celle-ci !</strong></div><br>
<br>
Voilà un schéma résumant la situation : <br>
<br>
<div class="centre"><img src="./java_files/118827.png" alt="Image utilisateur"></div><br>
<br>
Dans notre programme, imaginez que la méthode <strong><span class="courrier">actionPerformed</span></strong> est représentée, dans le schéma ci-dessus, par <strong><span class="courrier">méthode2</span></strong> et que notre méthode <strong><span class="courrier">go</span></strong> soit représentée par <strong><span class="courrier">méthode3</span></strong>. Lorsque nous entrons dans <strong><span class="courrier">méthode3</span></strong>, nous entrons dans une boucle infinie ! La conséquence directe : on ne ressort jamais de cette méthode et la JVM ne <strong><span class="rouge">dépile</span></strong> plus !<br>
<br>
<div class="rmq question">Comment faire, alors ?</div><br>
Nous allons utiliser une nouveau <span class="courrier">thread</span> ! En gros, grâce à ceci, la méthode <strong><span class="courrier">go</span></strong> se trouvera dans une pile à part !<br>
<br>
<div class="rmq question">Attends... On arrive pourtant à arrêter l'animation alors qu'elle est dans une boucle infinie ? Pourquoi ?</div><br>
Tout simplement parce que nous demandons de faire une bête initialisation de variable dans la gestion de notre événement ! Si vous faites une deuxième méthode comprenant une boucle infinie et que vous l'invoquez lors du clic sur <span class="impact">Stop</span>, vous aurez exactement le même problème !<br>
<br>
Je ne vais pas m'éterniser là-dessus tout de suite... Nous allons voir ça au prochain chapitre ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Mais avant, je pense qu'un TP serait le bienvenu... Histoire de réviser un peu !<br>
Vous êtes d'accord ? Alors, direction le topo, le QCM, et en avant pour un TP ! <img src="./java_files/pirate.png" alt=":pirate:" class="smilies"><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10488">Cadeau : votre bouton personnalisé optimisé !</h2>
		<div class="ss_part_texte">
		Vu que je vous ai fait un peu saliver pour rien... je vous donne le code java d'un bouton corrigeant le problème d'écriture du libellé. Je ne ferai pas trop de commentaire à son sujet, tout est dans le code...<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.FontMetrics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Image</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.MouseListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Bouton</span> <span class="k">extends</span> <span class="n">JButton</span> <span class="k">implements</span> <span class="n">MouseListener</span><span class="o">{</span>
 
     <span class="k">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
     <span class="k">private</span> <span class="n">Image</span> <span class="n">img</span><span class="o">;</span>
         
     <span class="k">public</span> <span class="nf">Bouton</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">){</span>
             <span class="k">super</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
             <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">str</span><span class="o">;</span>
             
             <span class="k">try</span> <span class="o">{</span>
                   <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBouton.png"</span><span class="o">));</span>
             <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                   <span class="c">// TODO Auto-generated catch block</span>
                   <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
             <span class="o">}</span>
                        
             <span class="k">this</span><span class="o">.</span><span class="na">addMouseListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
     <span class="o">}</span>
    
     <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
                 
             <span class="n">Graphics2D</span> <span class="n">g2d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Graphics2D</span><span class="o">)</span><span class="n">g</span><span class="o">;</span>
            
             <span class="n">GradientPaint</span> <span class="n">gp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GradientPaint</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">cyan</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
             <span class="n">g2d</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">gp</span><span class="o">);</span>
            <span class="c">// g2d.fillRect(0, 0, this.getWidth(), this.getHeight());</span>
             <span class="n">g2d</span><span class="o">.</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">(),</span> <span class="k">this</span><span class="o">);</span>
             
             <span class="n">g2d</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">black</span><span class="o">);</span>
             
             <span class="c">//Objet qui permet de connaître les propriétés d'une police, dont la taille !</span>
             <span class="n">FontMetrics</span> <span class="n">fm</span> <span class="o">=</span> <span class="n">g2d</span><span class="o">.</span><span class="na">getFontMetrics</span><span class="o">();</span>
             <span class="c">//Hauteur de la police d'écriture</span>
             <span class="kt">int</span> <span class="n">height</span> <span class="o">=</span> <span class="n">fm</span><span class="o">.</span><span class="na">getHeight</span><span class="o">();</span>
             <span class="c">//Largeur totale de la chaîne passée en paramètre</span>
             <span class="kt">int</span> <span class="n">width</span> <span class="o">=</span> <span class="n">fm</span><span class="o">.</span><span class="na">stringWidth</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
             
             <span class="c">//On calcule donc la position du texte dans le bouton, et le tour est joué !</span>
             <span class="n">g2d</span><span class="o">.</span><span class="na">drawString</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">-</span> <span class="o">(</span><span class="n">width</span> <span class="o">/</span> <span class="mi">2</span><span class="o">),</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span><span class="o">)</span> <span class="o">+</span> <span class="o">(</span><span class="n">height</span> <span class="o">/</span> <span class="mi">4</span><span class="o">));</span>
            
     <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">mouseClicked</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                 <span class="c">//Pas utile d'utiliser cette méthode ici                      </span>
        <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">mouseEntered</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="c">//Nous changeons le fond en jaune pour notre image lors du survol</span>
                <span class="c">//avec le fichier fondBoutonHover.png</span>
                <span class="k">try</span> <span class="o">{</span>
                         <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBoutonHover.png"</span><span class="o">));</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">mouseExited</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
 
                <span class="c">//Nous changeons le fond en vert pour notre image lorsqu'on quitte le bouton</span>
                <span class="c">//avec le fichier fondBouton.png</span>
                <span class="k">try</span> <span class="o">{</span>
                         <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBouton.png"</span><span class="o">));</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">mousePressed</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
 
                <span class="c">//Nous changeons le fond en orangé pour notre image lors du clic gauche</span>
                <span class="c">//avec le fichier fondBoutonClic.png</span>
                <span class="k">try</span> <span class="o">{</span>
                         <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBoutonClic.png"</span><span class="o">));</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
 
        <span class="nd">@Override</span>
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">mouseReleased</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="c">//Nous changeons le fond en orangé pour notre image </span>
                <span class="c">//lorsqu'on relâche le clic </span>
                <span class="c">//avec le fichier fondBoutonHover.png   </span>
                
                <span class="c">//Si on est à l'extérieur de l'objet, on dessine le fond par défaut</span>
                <span class="k">if</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span>
                <span class="o">{</span>
                        <span class="k">try</span> <span class="o">{</span>
                                 <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBoutonHover.png"</span><span class="o">));</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                <span class="o">}</span>
                <span class="c">//Sinon on met le fond jaune, la souris est encore dessus...</span>
                <span class="k">else</span>
                <span class="o">{</span>
                        <span class="k">try</span> <span class="o">{</span>
                                 <span class="n">img</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"fondBouton.png"</span><span class="o">));</span>
                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                                <span class="c">// TODO Auto-generated catch block</span>
                                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                        <span class="o">}</span>
                <span class="o">}</span>               
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Essayez et vous verrez ! <img src="./java_files/langue.png" alt=":p" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10487">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>L'interface utilisée dans ce chapitre est : <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong>. Celle-ci est présente dans le package <strong><span class="violet"><span class="courrier">java.awt</span></span></strong>.</li>
<li>La  méthode de cette interface à implémenter est <strong><span class="courrier">actionPerformed</span></strong>.</li>
<li>Lorsque vous avez plusieurs composants pouvant être écoutés, préférez faire un objet écouteur par composants.</li>
<li>Vous pouvez, et c'est conseillé, utiliser des <strong>classes internes</strong> pour écouter vos composants.</li>
<li>Une classe interne est une classe à l'intérieur d'une classe.</li>
<li>Une telle classe a accès à toutes les données et méthodes de sa classe externe.</li>
<li>Ce type de classe peut être déclarée <strong><span class="violet"><span class="courrier">private</span></span></strong>.</li>
<li>La JVM traite les méthodes appelées par une <strong><span class="bleu">pile</span></strong> de méthode, définissant ainsi l'ordre d'exécution de celles-ci.</li>
<li><strong>Une méthode est empilée à l'invocation de celle-ci, mais n'est <span class="rouge">dépilée</span> que lorsque toutes ses intructions sont terminées !</strong></li>
<li>Vous connaissez la méthode permettant d'écrire dans un <strong><span class="violet"><span class="courrier">JLabel</span></span></strong>, vous pouvez aussi récupérer le texte d'un tel objet en utilisant la méthode <strong><span class="courrier">getText()</span></strong>.</li>
</ul><br>
<br>
<div class="rmq question">Une classe interne privée ?</div><br>
Oui, parce que vous pouvez créer une instance de la classe interne à l'extérieur de sa classe externe, comme ceci :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="syntax"><pre><span class="n">Fenetre</span><span class="o">.</span><span class="na">BoutonListener</span> <span class="n">boutonL</span><span class="o">;</span>
<span class="n">boutonL</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">().</span><span class="na">new</span> <span class="n">BoutonListener</span><span class="o">();</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Par contre, vous ne pouvez pas déclarer de variable <strong><span class="violet"><span class="courrier">static </span></span></strong>dans une classe interne... Mais une classe interne peut être déclarée <strong><span class="violet"><span class="courrier">static</span></span></strong>.
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Encore un chapitre de bouclé !<br>
Vous tenez toujours bon ?<br>
<br>
À tout de suite pour votre premier TP en événementiel !
	</div>
	
	<hr>
	<h1 id="chap_10500">TP : une calculatrice</h1>
	<div id="chap_intro">
	Ah ! Ça faisait longtemps... un petit TP... <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
<br>
Dans celui-ci, nous allons - enfin vous allez - pouvoir réviser tout ce que vous avez appris dans cette partie !<br>
<ul>
<li>Fenetre</li>
<li>Conteneur</li>
<li>Bouton</li>
<li><strong><span class="courrier">ActionPerformed</span></strong></li>
<li>Classe interne</li>
<li>Exception. Bon, ça, c'était dans celle d'avant. <img src="./java_files/hihi.png" alt="^^" class="smilies"></li>
</ul><br>
<br>
Allez mes ZérOs, en avant !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10499">Élaboration</h2>
		<div class="ss_part_texte">
		Bon, nous allons voir ce que doit faire notre calculatrice.<br>
<ul>
<li>Un calcul simple : 12 + 3 = </li>
<li>Des calculs à la chaîne... Exemple : 1 + 2 +, lorsque vous cliquez à nouveau sur un opérateur, vous affichez le résultat du calcul précédent !</li>
<li>Donner la possibilté de faire un reset, donc de tout faire recommencer à zéro.</li>
<li>Gérer l'exception pour une division par 0 !</li>
</ul>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10498">Conception</h2>
		<div class="ss_part_texte">
		Voilà ce que vous devriez avoir :<br>
<br>
<div class="centre"><img src="./java_files/106293.png" alt="Image utilisateur"></div><br>
<br>
Maintenant, voyons ce dont nous avons besoin pour réussir ça.<br>
<ul>
<li>Autant de boutons qu'il en faut.</li>
<li>Autant de conteneurs que nécessaire.</li>
<li>Un <strong><span class="violet"><span class="courrier">JLabel</span></span></strong> pour l'affichage.</li>
<li>Un booléen pour savoir si un opérateur a été choisi.</li>
<li>Un booléen pour savoir si nous devons effacer ce qu'il y a à l'écran et écrire un nouveau nombre.</li>
<li>Nous allons utiliser une variable de type <span class="courrier">double</span> pour nos calculs.</li>
<li>Il va falloir des classes internes qui implémenteront l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong>.</li>
<li>Et c'est à peu près tout...</li>
</ul><br>
<br>
<div class="rmq information">Pour alléger le nombre de classes internes, vous pouvez en faire une qui va se charger d'écrire ce qui doit être affiché à l'écran. <br>
Utiliser la méthode <strong><span class="courrier">getSource()</span></strong> pour savoir de quel bouton il s'agit...</div><br>
<br>
Je ne vais pas tout vous dire... Il faut que vous cherchiez par vous-mêmes... La réflexion est très bonne !<br>
Par contre, je vous le dis tout de suite :<br>
<div class="rmq erreur">la correction que je vous fournis n'est pas <strong><span class="gros">LA</span></strong> correction. <br>
Il n'y a pas de bonne solution : si, en fait, considérez un programme qui fonctionne comme une solution. <br>
Je vous propose seulement une <strong>solution POSSIBLE</strong>.</div><br>
<br>
Allez, en avant mes ZérOs !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10502">Correction</h2>
		<div class="ss_part_texte">
		Vous avez bien réfléchi ?<br>
Vous vous êtes brûlé quelques neurones... Vous avez mérité votre correction...<br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<br>
<h4>Classe Main.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
 
        <span class="cm">/**</span>
<span class="cm">         * @param args</span>
<span class="cm">         */</span>
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">Calculatrice</span> <span class="n">calculette</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Calculatrice</span><span class="o">();</span>
 
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Classe Calculatrice.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">javax.swing.BorderFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Calculatrice</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
 
        <span class="kd">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        
        <span class="n">String</span><span class="o">[]</span> <span class="n">tab_string</span> <span class="o">=</span> <span class="o">{</span><span class="s">"1"</span><span class="o">,</span> <span class="s">"2"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">,</span> <span class="s">"4"</span><span class="o">,</span> <span class="s">"5"</span><span class="o">,</span> <span class="s">"6"</span><span class="o">,</span> <span class="s">"7"</span><span class="o">,</span> <span class="s">"8"</span><span class="o">,</span> <span class="s">"9"</span><span class="o">,</span> <span class="s">"0"</span><span class="o">,</span> <span class="s">"."</span><span class="o">,</span> <span class="s">"="</span><span class="o">,</span> <span class="s">"C"</span><span class="o">,</span> <span class="s">"+"</span><span class="o">,</span> <span class="s">"-"</span><span class="o">,</span> <span class="s">"*"</span><span class="o">,</span> <span class="s">"/"</span><span class="o">};</span>
        <span class="n">JButton</span><span class="o">[]</span> <span class="n">tab_button</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">[</span><span class="n">tab_string</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        
        <span class="kd">private</span> <span class="n">JLabel</span> <span class="n">ecran</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">();</span>
        <span class="kd">private</span> <span class="n">Dimension</span> <span class="n">dim</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">50</span><span class="o">,</span> <span class="mi">40</span><span class="o">);</span>
        <span class="kd">private</span> <span class="n">Dimension</span> <span class="n">dim2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">50</span><span class="o">,</span> <span class="mi">31</span><span class="o">);</span>
        <span class="kd">private</span> <span class="kt">double</span> <span class="n">chiffre1</span><span class="o">;</span>
        <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">clicOperateur</span> <span class="o">=</span> <span class="kc">false</span><span class="o">,</span> <span class="n">update</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="kd">private</span> <span class="n">String</span> <span class="n">operateur</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        
        <span class="kd">public</span> <span class="nf">Calculatrice</span><span class="o">(){</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">240</span><span class="o">,</span> <span class="mi">260</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Calculette"</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                <span class="n">initComposant</span><span class="o">();</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initComposant</span><span class="o">(){</span>

                <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
                <span class="n">ecran</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"0"</span><span class="o">);</span>
                <span class="n">ecran</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
                <span class="n">ecran</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">RIGHT</span><span class="o">);</span>
                <span class="n">ecran</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">220</span><span class="o">,</span> <span class="mi">20</span><span class="o">));</span>
                
                <span class="n">JPanel</span> <span class="n">operateur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>        
                <span class="n">operateur</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">55</span><span class="o">,</span> <span class="mi">225</span><span class="o">));</span>
                <span class="n">JPanel</span> <span class="n">chiffre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
                <span class="n">chiffre</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">165</span><span class="o">,</span> <span class="mi">225</span><span class="o">));</span>
                <span class="n">JPanel</span> <span class="n">panEcran</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
                <span class="n">panEcran</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">220</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>

                
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">tab_string</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
                <span class="o">{</span>
                    
                    <span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="n">tab_string</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    <span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="n">dim</span><span class="o">);</span>
                    
                    <span class="k">switch</span><span class="o">(</span><span class="n">i</span><span class="o">){</span>
	                
                    	<span class="k">case</span> <span class="mi">11</span> <span class="o">:</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">EgalListener</span><span class="o">());</span>
                    		<span class="n">chiffre</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    		<span class="k">break</span><span class="o">;</span>
                    	
                    	<span class="k">case</span> <span class="mi">12</span> <span class="o">:</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
	                        <span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ResetListener</span><span class="o">());</span>
	                        <span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="n">dim2</span><span class="o">);</span>
	                        <span class="n">operateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    		<span class="k">break</span><span class="o">;</span>
                    	    
                    	<span class="k">case</span> <span class="mi">13</span> <span class="o">:</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">PlusListener</span><span class="o">());</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="n">dim2</span><span class="o">);</span>
                    		<span class="n">operateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    		<span class="k">break</span><span class="o">;</span>
                    	
                    	<span class="k">case</span> <span class="mi">14</span> <span class="o">:</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MoinsListener</span><span class="o">());</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="n">dim2</span><span class="o">);</span>
                    		<span class="n">operateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    		<span class="k">break</span><span class="o">;</span>	
                    	
                    	<span class="k">case</span> <span class="mi">15</span> <span class="o">:</span>	
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MultiListener</span><span class="o">());</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="n">dim2</span><span class="o">);</span>
                    		<span class="n">operateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    		<span class="k">break</span><span class="o">;</span>
	                    
                    	<span class="k">case</span> <span class="mi">16</span> <span class="o">:</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">DivListener</span><span class="o">());</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="n">dim2</span><span class="o">);</span>
                    		<span class="n">operateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    		<span class="k">break</span><span class="o">;</span>
                    	                    	
                    	<span class="k">default</span> <span class="o">:</span>
                    		<span class="n">chiffre</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ChiffreListener</span><span class="o">());</span>
                    		<span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                    
                <span class="o">}</span>
                
                <span class="n">panEcran</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">ecran</span><span class="o">);</span>
                <span class="n">panEcran</span><span class="o">.</span><span class="na">setBorder</span><span class="o">(</span><span class="n">BorderFactory</span><span class="o">.</span><span class="na">createLineBorder</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">black</span><span class="o">));</span>
 
                <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">panEcran</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
                <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">chiffre</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
                <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">operateur</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">EAST</span><span class="o">);</span>
                
        <span class="o">}</span>
        
        
        <span class="kd">private</span> <span class="kt">void</span> <span class="nf">calcul</span><span class="o">(){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">operateur</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"+"</span><span class="o">))</span>
                <span class="o">{</span>
                        <span class="n">chiffre1</span> <span class="o">=</span> <span class="n">chiffre1</span> <span class="o">+</span> <span class="n">Double</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">ecran</span><span class="o">.</span><span class="na">getText</span><span class="o">()).</span><span class="na">doubleValue</span><span class="o">();</span>
                        <span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">chiffre1</span><span class="o">));</span>
                <span class="o">}</span>
                        
                <span class="k">if</span><span class="o">(</span><span class="n">operateur</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"-"</span><span class="o">))</span>
                <span class="o">{</span>
                        <span class="n">chiffre1</span> <span class="o">=</span> <span class="n">chiffre1</span> <span class="o">-</span> <span class="n">Double</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">ecran</span><span class="o">.</span><span class="na">getText</span><span class="o">()).</span><span class="na">doubleValue</span><span class="o">();</span>
                        <span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">chiffre1</span><span class="o">));</span>
                <span class="o">}</span>               
                
                <span class="k">if</span><span class="o">(</span><span class="n">operateur</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"*"</span><span class="o">))</span>
                <span class="o">{</span>
                        <span class="n">chiffre1</span> <span class="o">=</span> <span class="n">chiffre1</span> <span class="o">*</span> <span class="n">Double</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">ecran</span><span class="o">.</span><span class="na">getText</span><span class="o">()).</span><span class="na">doubleValue</span><span class="o">();</span>
                        <span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">chiffre1</span><span class="o">));</span>
                <span class="o">}</span>       
                        
                <span class="k">if</span><span class="o">(</span><span class="n">operateur</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"/"</span><span class="o">))</span>
                <span class="o">{</span>
                        <span class="k">try</span><span class="o">{</span>
                                <span class="n">chiffre1</span> <span class="o">=</span> <span class="n">chiffre1</span> <span class="o">/</span> <span class="n">Double</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">ecran</span><span class="o">.</span><span class="na">getText</span><span class="o">()).</span><span class="na">doubleValue</span><span class="o">();</span>
                                <span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">chiffre1</span><span class="o">));</span>
                        <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="n">ArithmeticException</span> <span class="n">e</span><span class="o">){</span>
                                <span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"0"</span><span class="o">);</span>
                        <span class="o">}</span>
                <span class="o">}</span>
        <span class="o">}</span>
        
        <span class="kd">class</span> <span class="nc">ChiffreListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="nd">@Override</span>
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c1">//On affiche le chiffre en plus dans le label</span>
                        <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="o">((</span><span class="n">JButton</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">();</span>
                        
                        <span class="k">if</span><span class="o">(</span><span class="n">update</span><span class="o">)</span>
                        <span class="o">{</span>
                                <span class="n">update</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                        <span class="o">}</span>
                        <span class="k">else</span>
                        <span class="o">{</span>
                                <span class="k">if</span><span class="o">(!</span><span class="n">ecran</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"0"</span><span class="o">))</span>
                                        <span class="n">str</span> <span class="o">=</span> <span class="n">ecran</span><span class="o">.</span><span class="na">getText</span><span class="o">()</span> <span class="o">+</span> <span class="n">str</span><span class="o">;</span>
                        <span class="o">}</span>
                        
                        <span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
 
        
        <span class="kd">class</span> <span class="nc">EgalListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="nd">@Override</span>
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">calcul</span><span class="o">();</span>
                        <span class="n">update</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        <span class="n">clicOperateur</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
        
        
        <span class="kd">class</span> <span class="nc">PlusListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="nd">@Override</span>
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                        
                        <span class="k">if</span><span class="o">(</span><span class="n">clicOperateur</span><span class="o">)</span>
                        <span class="o">{</span>
                                <span class="n">calcul</span><span class="o">();</span>
                                <span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">chiffre1</span><span class="o">));</span>
                        <span class="o">}</span>
                        <span class="k">else</span>
                        <span class="o">{</span>
                                <span class="n">chiffre1</span> <span class="o">=</span> <span class="n">Double</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">ecran</span><span class="o">.</span><span class="na">getText</span><span class="o">()).</span><span class="na">doubleValue</span><span class="o">();</span>
                                <span class="n">clicOperateur</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        <span class="o">}</span>
                        <span class="n">operateur</span> <span class="o">=</span> <span class="s">"+"</span><span class="o">;</span>
                        <span class="n">update</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
        
        <span class="kd">class</span> <span class="nc">MoinsListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="nd">@Override</span>
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">clicOperateur</span><span class="o">)</span>
                        <span class="o">{</span>
                                <span class="n">calcul</span><span class="o">();</span>
                                <span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">chiffre1</span><span class="o">));</span>
                        <span class="o">}</span>
                        <span class="k">else</span>
                        <span class="o">{</span>
                                <span class="n">chiffre1</span> <span class="o">=</span> <span class="n">Double</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">ecran</span><span class="o">.</span><span class="na">getText</span><span class="o">()).</span><span class="na">doubleValue</span><span class="o">();</span>
                                <span class="n">clicOperateur</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        <span class="o">}</span>
                        <span class="n">operateur</span> <span class="o">=</span> <span class="s">"-"</span><span class="o">;</span>
                        <span class="n">update</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
        
        
        <span class="kd">class</span> <span class="nc">MultiListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="nd">@Override</span>
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">clicOperateur</span><span class="o">)</span>
                        <span class="o">{</span>
                                <span class="n">calcul</span><span class="o">();</span>
                                <span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">chiffre1</span><span class="o">));</span>
                        <span class="o">}</span>
                        <span class="k">else</span>
                        <span class="o">{</span>
                                <span class="n">chiffre1</span> <span class="o">=</span> <span class="n">Double</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">ecran</span><span class="o">.</span><span class="na">getText</span><span class="o">()).</span><span class="na">doubleValue</span><span class="o">();</span>
                                <span class="n">clicOperateur</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        <span class="o">}</span>
                        <span class="n">operateur</span> <span class="o">=</span> <span class="s">"*"</span><span class="o">;</span>
                        <span class="n">update</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
        
        
        <span class="kd">class</span> <span class="nc">DivListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="nd">@Override</span>
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">clicOperateur</span><span class="o">)</span>
                        <span class="o">{</span>
                                <span class="n">calcul</span><span class="o">();</span>
                                <span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">chiffre1</span><span class="o">));</span>
                        <span class="o">}</span>
                        <span class="k">else</span>
                        <span class="o">{</span>
                                <span class="n">chiffre1</span> <span class="o">=</span> <span class="n">Double</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">ecran</span><span class="o">.</span><span class="na">getText</span><span class="o">()).</span><span class="na">doubleValue</span><span class="o">();</span>
                                <span class="n">clicOperateur</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                                
                        <span class="o">}</span>
                        <span class="n">operateur</span> <span class="o">=</span> <span class="s">"/"</span><span class="o">;</span>
                        <span class="n">update</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
        
        
        <span class="kd">class</span> <span class="nc">ResetListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="nd">@Override</span>
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">clicOperateur</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                        <span class="n">update</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        <span class="n">chiffre1</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                        <span class="n">operateur</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
                        <span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
</div></div><br>
<br>
Je ne m'attarderai pas trop là-dessus, ce code est très simple et je suis sûr que vous trouverez des améliorations <img src="./java_files/smile.png" alt=":)" class="smilies"> .<br>
Regardez bien comment tout interagit, et vous comprendrez comment il fonctionne !<br>
<br>
Je vais vous donner une petite astuce pour faire un<strong> <span class="bleu">.jar</span></strong> exécutable en java...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10501">Astuce Eclipse : faire un jar exécutable</h2>
		<div class="ss_part_texte">
		Tout d'abord, qu'est-ce qu'un <strong><span class="bleu">.jar</span></strong> ?<br>
Un tel fichier est une archive Java (<strong>J</strong>ava <strong>AR</strong>chive). Ce type de fichier contient tout ce dont a besoin la JVM pour lancer votre programme ! Une fois votre archive créée, il vous suffira juste de double cliquer sur celle-ci pour lancer l'application ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
<div class="rmq information"><strong>Ceci sous réserve que vous ayez ajouté les exécutables de votre JRE (présent dans le répertoire <span class="bleu">/bin</span>) dans votre variable d'environnement <span class="courrier">PATH</span> ! </strong><br>
Si ceci n'est pas fait, allez faire un tour <a href="http://www.siteduzero.com/tuto-3-25384-1-votre-premier-programme.html#ss_part_4"><span class="souligne">ici</span></a> en remplaçant le répertoire du JDK par celui du JRE (si vous n'avez pas téléchargé le JDK, sinon, prenez ce dernier...).</div><br>
<br>
Vous allez voir que créer un <strong><span class="bleu">.jar</span></strong> est très simple !<br>
Commencez par faire un clic droit sur votre projet et choisissez l'option <span class="impact">Export</span>, comme ceci :<br>
<br>
<div class="centre"><img src="./java_files/106294.jpg" alt="Image utilisateur"></div><br>
<br>
Vous voici dans la gestion des exports. Eclipse vous demande quel type d'export vous souhaitez faire :<br>
<br>
<div class="centre"><img src="./java_files/106295.jpg" alt="Image utilisateur"></div><br>
<br>
Comme sur l'image ci-dessus, ssélectionnez <span class="impact">JAR File</span> et cliquez sur <span class="impact">Next</span>. Vous voici maintenant dans le section qui vous demande quels fichiers vous voulez mettre dans votre archive.<br>
<br>
<div class="centre"><img src="./java_files/106296.jpg" alt="Image utilisateur"></div><br>
<br>
<ul>
<li>Dans le cadre vert, nous choisissons tous les fichiers qui composeront notre exécutable .jar.</li>
<li>Dans le cadre bleu, nous spécifions à eclipse où créer l'archive et quel nom elle doit avoir.</li>
<li>Ensuite... On clique sur <span class="impact">Next</span>. <img src="./java_files/langue.png" alt=":p" class="smilies"></li>
</ul><br>
<br>
La page suivante n'est pas pertinente ici. Allez hop ! Circulez, y a rien à voir... (Il manque une émoticône gendarme sur le SDZ...)<br>
<br>
La voici tout de même :<br>
<br>
<div class="centre"><img src="./java_files/106297.jpg" alt="Image utilisateur"></div><br>
<br>
Cliquez sur <span class="impact">Next</span> et nous arrivons sur la page qui va nous demander où se trouve la méthode <strong><span class="courrier">main</span></strong> dans notre programme :<br>
<br>
<div class="centre"><img src="./java_files/106298.jpg" alt="Image utilisateur"></div><br>
<br>
Cliquez sur <span class="impact">Browse...</span> ; vous êtes maintenant sur une petite popup qui liste les fichiers de programmes contenant une méthode <strong><span class="courrier">main</span></strong>. Ici, nous n'en avons qu'un... Mais <strong>il est possible d'avoir plusieurs méthodes <span class="courrier">main </span>déclarées <span class="rouge">MAIS SEULEMENT UNE SEULE SERA EXÉCUTÉE !</span></strong><br>
<br>
<div class="centre"><img src="./java_files/106299.jpg" alt="Image utilisateur"></div><br>
<br>
Sélectionnez le point de départ de votre application et validez !<br>
Voici ce que nous avons :<br>
<br>
<div class="centre"><img src="./java_files/106300.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez maintenant cliquez sur <span class="impact">Finish</span> et vous devriez avoir un message du genre...<br>
<br>
<div class="centre"><img src="./java_files/106301.jpg" alt="Image utilisateur"></div><br>
<br>
Ce type de message n'est pas alarmant ! Celui-ci vous dit qu'il existe des choses qu'Eclipse ne juge pas très claires... Mais celles-ci n'empêcheront pas votre application de fonctionner... Contrairement à un message d'erreur... Mais là, vous allez le repérer... Il est rouge.<br>
<br>
Une fois cette étape validée, vous pouvez voir avec joie, qu'un fichier <span class="bleu">.jar</span> a bien été généré dans le dossier spécifié !<br>
<br>
<div class="centre"><img src="./java_files/106303.jpg" alt="Image utilisateur"></div><br>
<br>
Double cliquez sur lui et votre calculatrice se lance ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
Si vous voulez en savoir plus sur les fichiers <span class="bleu">.jar</span>, je vous recommande le <a href="http://www.siteduzero.com/tuto-3-19949-1-creer-une-archive-jar-executable.html">tuto de bartimeus</a>.
		</div>
		<hr>
		
	<div id="chap_conclusion">
	J'espère que ce TP vous a plu !<br>
Je vous le répète encore une fois, mais mon code est loin d'être parfait et vous pouvez vous y attarder pour l'améliorer ! <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Par exemple, vous pourriez créer un objet dont la fonction est de faire les calculs...<br>
Vous pourriez aussi faire une calculette avec plus de fonctionnalités ! Enfin, vous voyez quoi...<br>
<br>
Bon, continuons notre tuto. Nous en étions restés au problème de <span class="courrier">thread</span> évoqué lorsque nous avions essayé de relancer notre animation.<br>
Je pense que vous avez deviné la suite, en avant pour : <strong><span class="vertf">les threads</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10516">Les threads</h1>
	<div id="chap_intro">
	Dans ce chapitre, nous allons voir comment créer une nouvelle pile de fonctions et même plusieurs ; tout ceci avec ce qu'on appelle des threads.<br>
<br>
Il y a une classe <strong><span class="violet"><span class="courrier">Thread</span></span></strong> dans java qui gère cela, mais vous allez voir qu'il y a en fait deux façons de créer un nouveau thread, et donc une nouvelle pile d'invocation de méthodes ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Ne tardons pas... 
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10515">Principes et bases</h2>
		<div class="ss_part_texte">
		Je vous le répète encore mais, lorsque vous lancez votre programme, il y a un thread lancé ! Imaginez que votre thread corresponde à la pile, et, <strong>pour chaque nouveau thread créé, celui-ci donne une nouvelle pile d'exécution.</strong><br>
<br>
Pour le moment, nous n'allons pas travailler avec notre IHM, nous allons revenir en mode console. Créez-vous un nouveau projet et une classe contenant votre méthode <strong><span class="courrier">main</span></strong>. Maintenant, testez ce code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
 
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Le nom du thread principal est "</span> <span class="o">+</span> <span class="n">Thread</span><span class="o">.</span><span class="na">currentThread</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous devriez obtenir ceci :<br>
<span class="code">Code : Console - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 console"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre></pre></td><td class="code"><div class="syntax"><pre>Le&nbsp;nom&nbsp;du&nbsp;thread&nbsp;principal&nbsp;est&nbsp;main</pre></div></td></tr></tbody></table></div><br>
<br>
Oui, vous ne rêvez pas... Il s'agit bien de notre méthode <strong><span class="courrier">main</span></strong>, c'est le thread principal de notre application !<br>
Voyez les threads comme une machine bien huilée capable d'effectuer les tâches que vous lui spécifierez. Une fois instancié, un thread attend son lancement ; une fois celui-ci fait, il invoque sa méthode <strong><span class="courrier">run()</span></strong> ; c'est dans cette méthode que le thread connaît les tâches qu'il a à faire !<br>
<br>
Nous allons maintenant voir comment créer un nouveau thread.<br>
Comme je vous l'ai dit dans l'introduction, il existe deux manières de faire : <br>
<ul>
<li>faire une classe héritée de la classe <strong><span class="violet"><span class="courrier">Thread</span></span></strong> ;</li>
<li>créer une implémentation de l'interface <strong><span class="violet"><span class="courrier">Runnable</span></span></strong> et instancier un objet <strong><span class="violet"><span class="courrier">Thread</span></span></strong> avec une implémentation de cette interface.</li>
</ul><br>
Vous devez avoir les sourcils qui se lèvent, là ... un peu comme ça :  <img src="./java_files/huh.png" alt=":o" class="smilies"> <br>
Ne vous en faites pas, nous allons y aller <span class="italique">crescendo</span>...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10514">Une classe héritée de Thread</h2>
		<div class="ss_part_texte">
		Nous allons commencer par le plus simple à comprendre.<br>
Comme je vous le disais, nous allons créer un classe héritée, et tout ce que nous avons à faire, c'est redéfinir la méthode <strong><span class="courrier">run()</span></strong> de notre objet afin qu'il sache quoi faire... Vu que nous allons en utiliser plusieurs, autant pouvoir les différencier par un nom...<br>
Créez la classe correspondant à ce diagramme : <br>
<br>
<div class="centre"><img src="./java_files/106424.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">On crée ici un constructeur avec un <strong><span class="violet"><span class="courrier">String</span></span></strong> en paramètre pour spécifier le nom du thread... Cette classe a une méthode <strong><span class="courrier">getName()</span></strong> afin de retourner celui-ci. La classe <strong><span class="violet"><span class="courrier">Thread</span></span></strong> se trouve dans la package <strong><span class="violet"><span class="courrier">java.lang</span></span></strong>, aucune instruction <strong><span class="violet"><span class="courrier">import</span></span></strong> n'est nécessaire !</div><br>
<br>
Voilà le code de cette classe : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestThread</span> <span class="kd">extends</span> <span class="n">Thread</span> <span class="o">{</span>
 
                
        <span class="kd">public</span> <span class="nf">TestThread</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">){</span>
                <span class="kd">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(){</span>
                
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
                
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et maintenant, testez ce code plusieurs fois :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
        
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">TestThread</span> <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TestThread</span><span class="o">(</span><span class="s">"A"</span><span class="o">);</span>
                <span class="n">TestThread</span> <span class="n">t2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TestThread</span><span class="o">(</span><span class="s">"  B"</span><span class="o">);</span>
                <span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
                <span class="n">t2</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici quelques screenshots de mes tests consécutifs :<br>
<br>
<div class="centre"><img src="./java_files/106409.jpg" alt="Image utilisateur">         <img src="./java_files/106413.jpg" alt="Image utilisateur">        <img src="./java_files/106416.jpg" alt="Image utilisateur">        <img src="./java_files/106417.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir que l'ordre d'exécution est totalement aléatoire !<br>
Ceci car java utilise un <strong><span class="bleu">ordonnanceur</span></strong>. <br>
Vous devez savoir que si vous utilisez plusieurs threads dans une application, ceux-ci <strong><span class="rouge">ne s'exécutent pas en même temps ! </span></strong> <br>
En fait, l'ordonnanceur gère les différents thread de façon aléatoire : il va en utiliser un, pendant un certain laps de temps, puis un autre, puis revenir au premier... Jusqu'à ce que les threads soit terminés ! Et, lorsque l'ordonnanceur passe d'un thread à un autre, le thread interrompu est mis en <strong><span class="bleu">sommeil</span></strong> pendant que l'autre est en <strong><span class="bleu">éveil </span></strong>!<br>
<br>
Un thread peut avoir plusieurs états : <br>
<ul>
<li><strong><span class="courrier">NEW </span></strong> : lors de sa création.</li>
<li><strong><span class="courrier">RUNNABLE </span></strong> : lorsque vous invoquez la méthode <strong><span class="courrier">start()</span></strong>, celui-ci est prêt à travailler.</li>
<li><strong><span class="courrier">TERMINATED </span></strong> : lorsque celui-ci a terminé toutes ses tâches, on dit aussi que le thread est <strong><span class="bleu">mort</span></strong>. <span class="rouge">Une fois un thread mort, vous ne pouvez plus le relancer avec la méthode <strong><span class="courrier">start()</span></strong> !</span></li>
<li><strong><span class="courrier">TIMED_WAITING</span></strong> : lorsque celui-ci est en pause, quand vous utilisez la méthode <strong><span class="courrier">sleep()</span></strong> par exemple.</li>
<li><strong><span class="courrier">WAITING </span></strong> : en attente indéfinie...</li>
<li><strong><span class="courrier">BLOCKED </span></strong> : lorsque l'ordonnanceur met un thread en sommeil pour en utiliser un autre... Le statut de celui en sommeil est celui-ci.</li>
</ul><br>
<div class="rmq information"><strong>Un thread est considéré comme terminé lorsque la méthode <span class="courrier">run()</span> est dépilée de sa pile d'exécution !</strong></div><br>
<br>
En effet, une nouvelle pile d'exécution a, à sa base, la méthode <strong><span class="courrier">run()</span></strong> de notre thread... Une fois celle-ci dépilée, notre nouvelle pile est détruite !<br>
<br>
Notre thread principal crée un second thread, celui-ci se lance et crée une pile avec comme base sa méthode <strong><span class="courrier">run()</span></strong> ; celle-ci appelle <span class="courrier"><strong>methode</strong></span>, l'empile, fait tous les traitements, et, une fois terminé, dépile cette dernière. La méthode <strong><span class="courrier">run()</span></strong> prend fin, la pile est détruite !<br>
<br>
Nous allons un peu modifier notre classe <span class="violet"><strong><span class="courrier">TestThread</span></strong></span> afin de voir les états de nos threads que nous pouvons récupérer grâce à la méthode <strong><span class="courrier">getState()</span></strong>.<br>
<br>
Voici notre classe <span class="courrier">TestThread</span> modifiée : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestThread</span> <span class="kd">extends</span> <span class="n">Thread</span> <span class="o">{</span>
 
        <span class="n">Thread</span> <span class="n">t</span><span class="o">;</span>
                
        <span class="kd">public</span> <span class="nf">TestThread</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">){</span>
                <span class="kd">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"statut du thread "</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">" = "</span> <span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">getState</span><span class="o">());</span>
                <span class="k">this</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"statut du thread "</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">" = "</span> <span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">getState</span><span class="o">());</span>
        <span class="o">}</span>
        
        <span class="kd">public</span> <span class="nf">TestThread</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">Thread</span> <span class="n">t</span><span class="o">){</span>
                <span class="kd">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">t</span> <span class="o">=</span> <span class="n">t</span><span class="o">;</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"statut du thread "</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">" = "</span> <span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">getState</span><span class="o">());</span>
                <span class="k">this</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"statut du thread "</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">" = "</span> <span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">getState</span><span class="o">());</span>
        <span class="o">}</span>
        
        
        
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(){</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"statut "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">" = "</span> <span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">getState</span><span class="o">());</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">t</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"statut de "</span> <span class="o">+</span> <span class="n">t</span><span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">" pendant le thread "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span><span class="s">" = "</span> <span class="o">+</span><span class="n">t</span><span class="o">.</span><span class="na">getState</span><span class="o">());</span>
                <span class="o">}</span>
        <span class="o">}</span>
        
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setThread</span><span class="o">(</span><span class="n">Thread</span> <span class="n">t</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">t</span> <span class="o">=</span> <span class="n">t</span><span class="o">;</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ainsi que notre <span class="courrier">main</span> :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
        
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">TestThread</span> <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TestThread</span><span class="o">(</span><span class="s">"A"</span><span class="o">);</span>
                <span class="n">TestThread</span> <span class="n">t2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TestThread</span><span class="o">(</span><span class="s">"  B"</span><span class="o">,</span> <span class="n">t</span><span class="o">);</span>
                                
                <span class="k">try</span> <span class="o">{</span>
                        <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">1000</span><span class="o">);</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c1">// TODO Auto-generated catch block</span>
                        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"statut du thread "</span> <span class="o">+</span> <span class="n">t</span><span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">" = "</span> <span class="o">+</span> <span class="n">t</span><span class="o">.</span><span class="na">getState</span><span class="o">());</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"statut du thread "</span> <span class="o">+</span> <span class="n">t2</span><span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">" = "</span> <span class="o">+</span><span class="n">t2</span><span class="o">.</span><span class="na">getState</span><span class="o">());</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et un jeu d'essai représentatif :<br>
<br>
<div class="centre"><img src="./java_files/106423.jpg" alt="Image utilisateur"></div><br>
<br>
Alors, dans notre classe <strong><span class="violet"><span class="courrier">TestThread</span></span></strong>, nous avons ajouté quelques instructions d'affichage afin de voir l'état en cours de nos objets, mais nous avons aussi ajouté un constructeur avec un <strong><span class="violet"><span class="courrier">Thread</span></span></strong> en paramètre supplémentaire, ceci afin de voir l'état de notre premier thread lors de l'exécution du second !<br>
<br>
Dans notre jeu d'essai vous pouvez voir les différents statuts qu'ont pris nos threads... Et vous pouvez voir que le premier est <strong><span class="courrier">BLOCKED </span></strong>lorsque le second est en cours de traitement, ce qui justifie ce dont je vous parlais :<br>
<div class="centre"><strong><span class="rouge"><span class="gros">les threads ne s'exécutent pas en même temps !</span></span></strong></div><br>
<br>
Vous pouvez voir aussi que les traitements effectués par nos threads sont en fait codés dans la méthode <strong><span class="courrier">run()</span></strong>. Reprenez l'image que j'ai utilisée :<br>
"<strong><span class="italique">un thread est une machine bien huilée capable d'effectuer les tâches que vous lui spécifierez</span></strong>".<br>
Le fait de faire un objet hérité de <strong><span class="violet"><span class="courrier">Thread</span></span></strong> permet de créer un nouveau thread très facilement. Cependant, vous pouvez procéder autrement, en redéfinissant uniquement ce que doit faire le nouveau thread, ceci grâce à l'interface <strong><span class="violet"><span class="courrier">Runnable</span></span></strong>. Et dans ce cas, ma métaphore prend tout son sens : <br>
<strong>vous ne redéfinissez que ce que doit faire la machine et non pas la machine tout entière !</strong>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10513">Utiliser l'interface Runnable</h2>
		<div class="ss_part_texte">
		Le fait de ne redéfinir que ce que doit faire notre nouveau thread a aussi un autre avantage... Le fait d'avoir une classe qui n'hérite d'aucune autre ! Eh oui : dans notre précédent test, notre classe <strong><span class="violet"><span class="courrier">TestThread</span></span></strong> ne pourra plus jamais hériter d'une classe ! Tandis qu'avec une implémentation de <strong><span class="violet"><span class="courrier">Runnable</span></span></strong>, rien n'empêche votre classe d'hériter de JFrame, par exemple...<br>
<br>
Trêve de bavardages : codons notre implémentation de <strong><span class="violet"><span class="courrier">Runnable</span></span></strong> ; vous ne devriez avoir aucun problème à faire ceci sachant qu'il n'y a que la méthode <strong><span class="courrier">run()</span></strong> à redéfinir...<br>
<br>
Pour cet exemple, nous allons utiliser un exemple que j'ai trouvé intéressant lorsque j'ai appris à me servir des threads...<br>
Vous allez créer un objet <strong><span class="violet"><span class="courrier">CompteEnBanque</span></span></strong> avec une somme d'argent par défaut, disons 50, et une méthode pour retirer de l'argent (<strong><span class="courrier">retraitArgent</span></strong>) et une méthode qui retourne le solde (<strong><span class="courrier">getSolde</span></strong>).<br>
Mais avant de retirer de l'argent, nous irons vérifier que nous ne sommes pas à découvert... <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Notre thread va faire autant d'opérations que nous le souhaitons. Voici un petit diagramme de classe résumant la situation :<br>
<br>
<div class="centre"><img src="./java_files/106428.png" alt="Image utilisateur"></div><br>
<br>
Je résume.<br>
<ul>
<li>Notre application peut avoir 1 ou plusieurs objets <strong><span class="violet"><span class="courrier">Thread</span></span></strong>.</li>
<li>Ceux-ci ne peuvent avoir qu'un objet de type <strong><span class="violet"><span class="courrier">Runnable</span></span></strong>.</li>
<li>Dans notre cas, nos objets Thread auront une implémentation de <strong><span class="violet"><span class="courrier">Runnable</span></span></strong> : <strong><span class="violet"><span class="courrier">RunImpl</span></span></strong>.</li>
<li>Celui-ci à un objet <strong><span class="violet"><span class="courrier">CompteEnBanque</span></span></strong>.</li>
</ul><br>
<br>
Voici les codes source :<br>
<br>
<h4>RunImpl.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">RunImpl</span> <span class="k">implements</span> <span class="n">Runnable</span> <span class="o">{</span>
 
        <span class="k">private</span> <span class="n">CompteEnBanque</span> <span class="n">cb</span><span class="o">;</span>
        
        <span class="k">public</span> <span class="nf">RunImpl</span><span class="o">(</span><span class="n">CompteEnBanque</span> <span class="n">cb</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">cb</span> <span class="o">=</span> <span class="n">cb</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
                
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">25</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
                                                
                        <span class="k">if</span><span class="o">(</span><span class="n">cb</span><span class="o">.</span><span class="na">getSolde</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">){</span>
                                <span class="n">cb</span><span class="o">.</span><span class="na">retraitArgent</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Retrait effectué"</span><span class="o">);</span>
                                                       
                        <span class="o">}</span>                       
                <span class="o">}</span>               
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>CompteEnBanque.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">CompteEnBanque</span> <span class="o">{</span>
 
        <span class="k">private</span> <span class="kt">int</span> <span class="n">solde</span> <span class="o">=</span> <span class="mi">100</span><span class="o">;</span>
        
        <span class="k">public</span> <span class="kt">int</span> <span class="nf">getSolde</span><span class="o">(){</span>
                <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">solde</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Vous êtes à découvert !"</span><span class="o">);</span>
                
                <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">solde</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">retraitArgent</span><span class="o">(</span><span class="kt">int</span> <span class="n">retrait</span><span class="o">){</span>
                <span class="n">solde</span> <span class="o">=</span> <span class="n">solde</span> <span class="o">-</span> <span class="n">retrait</span><span class="o">;</span> 
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Solde = "</span> <span class="o">+</span> <span class="n">solde</span><span class="o">);</span>                 
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Test.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
        
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">CompteEnBanque</span> <span class="n">cb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CompteEnBanque</span><span class="o">();</span>
                
                <span class="n">Thread</span> <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">RunImpl</span><span class="o">(</span><span class="n">cb</span><span class="o">));</span>
                <span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donne : <br>
<br>
<div class="centre"><img src="./java_files/106432.jpg" alt="Image utilisateur"></div><br>
<br>
Rien d'extraordinaire ici... Une simple boucle aurait fait la même chose... <br>
Ajoutons un nom à notre implémentation et créez un deuxième thread utilisant un deuxième compte.<br>
Pensez à modifier votre implémentation afin que nous puissions voir sur quel thread nous sommes. <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Bon : je suis sympa, voici les codes :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">RunImpl</span> <span class="k">implements</span> <span class="n">Runnable</span> <span class="o">{</span>
 
        <span class="k">private</span> <span class="n">CompteEnBanque</span> <span class="n">cb</span><span class="o">;</span>
        <span class="k">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
        
        <span class="k">public</span> <span class="nf">RunImpl</span><span class="o">(</span><span class="n">CompteEnBanque</span> <span class="n">cb</span><span class="o">,</span> <span class="n">String</span> <span class="n">name</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">cb</span> <span class="o">=</span> <span class="n">cb</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
                
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">50</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
                                                
                        <span class="k">if</span><span class="o">(</span><span class="n">cb</span><span class="o">.</span><span class="na">getSolde</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">){</span>
                                <span class="n">cb</span><span class="o">.</span><span class="na">retraitArgent</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Retrait effectué par "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>                       
                        <span class="o">}</span>                       
                <span class="o">}</span>               
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
        
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">CompteEnBanque</span> <span class="n">cb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CompteEnBanque</span><span class="o">();</span>
                <span class="n">CompteEnBanque</span> <span class="n">cb2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CompteEnBanque</span><span class="o">();</span>
                                
                <span class="n">Thread</span> <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">RunImpl</span><span class="o">(</span><span class="n">cb</span><span class="o">,</span> <span class="s">"Cysboy"</span><span class="o">));</span>
                <span class="n">Thread</span> <span class="n">t2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">RunImpl</span><span class="o">(</span><span class="n">cb2</span><span class="o">,</span> <span class="s">"ZérO"</span><span class="o">));</span>
                <span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
                <span class="n">t2</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Pour vérifier que nos threads fonctionnent, voici une partie de mon résultat :<br>
<br>
<div class="centre"><img src="./java_files/106433.jpg" alt="Image utilisateur"></div><br>
<br>
<br>
Jusqu'ici, rien de perturbant... Nous avons utilisé deux instances distinctes de <strong><span class="violet"><span class="courrier">RunImpl</span></span></strong> utilisant deux instances distinctes de <strong><span class="violet"><span class="courrier">CompteEnBanque</span></span></strong>.<br>
<strong>Mais d'après vous, que ce passerait-il si nous utilisions le même instance de <strong><span class="violet"><span class="courrier">CompteEnBanque</span></span></strong> dans deux threads différents ?</strong> Essayez plusieurs fois ce code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
        
        <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="n">CompteEnBanque</span> <span class="n">cb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CompteEnBanque</span><span class="o">();</span>
                                                
                <span class="n">Thread</span> <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">RunImpl</span><span class="o">(</span><span class="n">cb</span><span class="o">,</span> <span class="s">"Cysboy"</span><span class="o">));</span>
                <span class="n">Thread</span> <span class="n">t2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">RunImpl</span><span class="o">(</span><span class="n">cb</span><span class="o">,</span> <span class="s">"ZérO"</span><span class="o">));</span>
                <span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
                <span class="n">t2</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici juste deux morceaux de résultats obtenus lors de l'exécution :<br>
<br>
<div class="centre"><img src="./java_files/106435.jpg" alt="Image utilisateur">       <img src="./java_files/106436.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir des incohérences monumentales ! <br>
J'imagine que vous avez été comme moi au départ, vous pensiez que le compte aurait été débité de deux en deux jusqu'à la fin, sans avoir ce genre d'abérrations, vu que nous utilisons le même objet... Eh bien non !<br>
Pourquoi ? Tout simplement parce que l'ordonnanceur de java met les threads en sommeil quand il le veut et, lorsque celui qui était en sommeil se réveille, il reprend le travail où il s'était arrêté !<br>
<br>
Voyons comment résoudre le problème. <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10512">Synchronisez vos threads</h2>
		<div class="ss_part_texte">
		Tout est dans le titre ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
En gros, ce qu'il faut faire, c'est prévenir la JVM qu'un thread est en train d'utiliser des données qu'un autre thread est susceptible d'utiliser ! <br>
<br>
Ainsi, lorsque l'ordonnanceur met un thread en sommeil et que celui-ci traitait des données utilisables par un autre thread, ce thread garde la priorité sur les données, et tant que celui-ci n'a pas terminé son travail, les autres threads n'ont pas la possibilité d'y toucher. <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
<strong><span class="vertf">Ceci s'appelle synchroniser les threads.</span></strong><br>
<br>
<div class="rmq question">Comment fait-on ça ? Je sens que ça va être encore un truc tordu !</div><br>
Cette opération est très délicate et demande beaucoup de compétences en programmation...<br>
Voici à quoi ressemble votre méthode <strong><span class="courrier">retraitArgent</span></strong> synchronisée :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">CompteEnBanque</span> <span class="o">{</span>
 
        <span class="k">private</span> <span class="kt">int</span> <span class="n">solde</span> <span class="o">=</span> <span class="mi">100</span><span class="o">;</span>
        
        <span class="k">public</span> <span class="kt">int</span> <span class="nf">getSolde</span><span class="o">(){</span>
                <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">solde</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Vous êtes à découvert !"</span><span class="o">);</span>
                
                <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">solde</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">public</span> <span class="k">synchronized</span> <span class="kt">void</span> <span class="nf">retraitArgent</span><span class="o">(</span><span class="kt">int</span> <span class="n">retrait</span><span class="o">){</span>
                <span class="n">solde</span> <span class="o">=</span> <span class="n">solde</span> <span class="o">-</span> <span class="n">retrait</span><span class="o">;</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Solde = "</span> <span class="o">+</span> <span class="n">solde</span><span class="o">);</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Il vous suffit d'ajouter le mot clé <strong><span class="violet"><span class="courrier">synchronized</span></span></strong> dans la déclaration de votre méthode !<br>
<strong><span class="vertf">Grâce à ce mot clé, cette méthode est inaccessible à un thread si celle-ci est déjà utilisée par un autre thread ! Les threads cherchant à utiliser des méthodes déjà prises en charge par un autre thread sont mises dans une "<span class="italique">liste d'attente</span>".</span></strong><br>
<br>
Je récapitule encore une fois, voici un contexte ludique.<br>
Je serai représenté par le thread A, vous par le thread B et notre boulangerie favorite par la méthode synchronisée M. Voici ce qu'il se passe :<br>
<ul>
<li>le thread A (moi) appelle la méthode M ;</li>
<li>je commence par demander une baguette, la boulangère me la pose sur le comptoir et commence à calculer le montant ;</li>
<li>c'est là que le thread B (vous) cherche aussi à utiliser la méthode M, cependant, elle est déjà prise par un thread (moi...) ;</li>
<li>vous êtes donc mis en attente ;</li>
<li>l'action revient sur moi (thread A) ; au moment de payer, je dois chercher de la monnaie dans ma poche...</li>
<li>au bout de quelques instant, je m'endors...</li>
<li>l'action revient sur le thread B (vous)... Mais la méthode M n'est toujours pas libérée du thread A... Remise en attente ;</li>
<li>on revient sur le thread A qui arrive enfin à payer et à quitter la boulangerie, la méthode M est libérée !</li>
<li>le thread B (vous) peut enfin utiliser la méthode M ;</li>
<li>et là, les threads C, D, E, F, G, H, I, J entrent dans la boulangerie...</li>
<li>etc.</li>
</ul><br>
<br>
Je pense qu'avec ceci vous avez dû comprendre... <br>
Dans un contexte informatique, il peut être pratique et sécurisé d'utiliser des threads et des méthodes synchronisées lors d'accès à des services distants tel qu'un serveur d'application, ou encore un SGBD...<br>
Les threads, pour soulager le thread principal et ne pas bloquer l'application pendant une tâche et des méthodes synchronisées, pour la sécurité et l'intégrité des données !<br>
<br>
Je vous propose maintenant de retourner à notre animation qui n'attend qu'un petit thread pour pouvoir fonctionner correctement ! <img src="./java_files/hihi.png" alt="^^" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10511">Contrôlez votre animation</h2>
		<div class="ss_part_texte">
		À partir de là, il n'y a rien de bien compliqué...<br>
Il nous suffit de créer un nouveau thread lorsqu'on clique sur le bouton <span class="impact">Go</span> en lui passant une implémentation de <strong><span class="violet"><span class="courrier">Runnable </span></span></strong>qui, elle, va appeler la méthode <strong><span class="courrier">go()</span></strong> (ne pas oublier de remettre le booléen de controle à <strong><span class="violet"><span class="courrier">true</span></span></strong>).<br>
<br>
<div class="rmq information">Pour l'implémentation de l'interface <strong><span class="courrier">Runnable</span></strong>, une classe interne est toute indiquée !</div><br>
<br>
Voici le code de notre classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong> avec le thread :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
        <span class="k">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Go"</span><span class="o">);</span>
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Stop"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Le JLabel"</span><span class="o">);</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">backX</span><span class="o">,</span> <span class="n">backY</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span> <span class="o">;</span>
    <span class="k">private</span> <span class="n">Thread</span> <span class="n">t</span><span class="o">;</span>
    
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="c">//Ce sont maintenant nos classes internes qui écoutent nos boutons </span>
            <span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span> 
            
            <span class="n">bouton2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">Bouton2Listener</span><span class="o">());</span>
            <span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
            
            <span class="n">JPanel</span> <span class="n">south</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton2</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">south</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
            
            <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Tahoma"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">16</span> <span class="o">);</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
            <span class="n">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                        
    <span class="o">}</span>
        
        <span class="k">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
        <span class="c">//Les coordonnées de départ de notre rond</span>
                <span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">();</span>
                <span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
        <span class="c">//Pour cet exemple, j'utilise une boucle while</span>
        <span class="c">//Vous verrez qu'elle marche très bien</span>
        <span class="k">while</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">animated</span><span class="o">){</span>
                
                <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
            
            
                <span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span><span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>
 
            <span class="k">try</span> <span class="o">{</span>
                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c">// TODO Auto-generated catch block</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>       
        <span class="o">}</span>
 
 
        <span class="c">/**</span>
<span class="c">         * classe qui écoute notre bouton</span>
<span class="c">         */</span>
        <span class="k">public</span> <span class="k">class</span> <span class="nc">BoutonListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="c">/**</span>
<span class="c">                 * Redéfinitions de la méthode actionPerformed</span>
<span class="c">                 */</span>
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">PlayAnimation</span><span class="o">());</span>
                        <span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
                        <span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                        <span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                        
                <span class="o">}</span>
                
        <span class="o">}</span>
        
        <span class="c">/**</span>
<span class="c">         * classe qui écoute notre bouton2</span>
<span class="c">         */</span>
        <span class="k">class</span> <span class="nc">Bouton2Listener</span>  <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="c">/**</span>
<span class="c">                 * Redéfinitions de la méthode actionPerformed</span>
<span class="c">                 */</span>
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">animated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>       
                        <span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                        <span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                <span class="o">}</span>
                
        <span class="o">}</span>       
        
        <span class="k">class</span> <span class="nc">PlayAnimation</span> <span class="k">implements</span> <span class="n">Runnable</span><span class="o">{</span>
 
                <span class="nd">@Override</span>
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
                        <span class="n">go</span><span class="o">();</span>                   
                <span class="o">}</span>               
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez tester et tester encore, ce code fonctionne très bien ! Vous avez enfin le contrôle sur votre animation ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
Ceci fait, nous pouvons allez faire un tour sur le topo, et je crois qu'un QCM vous attend...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10510">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li><strong>Un nouveau thread permet de créer une nouvelle pile d'exécution</strong>.</li>
<li>La classe <strong><span class="violet"><span class="courrier">Thread </span></span></strong>et l'interface <strong><span class="violet"><span class="courrier">Runnable </span></span></strong>se trouvent dans le package <strong><span class="violet"><span class="courrier">java.lang</span></span></strong>, donc aucun import spécifique est nécessaire pour leur utilisation.</li>
<li>Un thread se lance lorsqu'on invoque la méthode <strong><span class="courrier">start()</span></strong>.</li>
<li>Cette dernière invoque automatiquement la méthode <strong><span class="courrier">run()</span></strong>.</li>
<li>Les traitements que vous souhaitez mettre dans une autre pile d'exécution sont à mettre dans la méthode <span class="courrier">run()</span>, qu'il s'agisse d'une classe héritée de <strong><span class="violet"><span class="courrier">Thread </span></span></strong>ou d'une implémentation de <strong><span class="violet"><span class="courrier">Runnable</span></span></strong>.</li>
<li>Pour protéger l'intégrité de vos données accessibles à plusieurs threads, utilisez le mot clé <strong><span class="violet"><span class="courrier">synchronized </span></span></strong>dans la déclaration de vos méthodes.</li>
<li><strong><span class="rouge">Un thread est déclaré mort lorsque celui-ci a dépilé sa méthode <span class="courrier">run()</span> de sa pile d'exécution !</span></strong></li>
<li>Les threads peuvent avoir plusieurs états : <strong><span class="courrier">BLOCKED, NEW, TERMINATED, WAITING, RUNNABLE</span> et <span class="courrier">TIMED_WATING</span></strong>.</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Voilà encore un gros chapitre, et très important qui plus est !<br>
Prenez le temps de bien assimiler les choses et de faire des tests, plein de tests : c'est la meilleure façon de bien comprendre les choses...<br>
<br>
Pour ceux qui se sentent d'attaque, en avant pour : <strong><span class="vertf">les listes.</span></strong>
	</div>
	
	<hr>
	<h1 id="chap_10526">Les listes : l'objet JComboBox</h1>
	<div id="chap_intro">
	Nous allons continuer à explorer les objets que nous propose <span class="courrier">swing</span>.<br>
Ici, nous parlerons des listes de choix ou <strong><span class="violet"><span class="courrier">JComboBox</span></span></strong>, nous pourrons ainsi améliorer notre animation... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Let's go, ZérO boys... and girls !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10525">Première utilisation</h2>
		<div class="ss_part_texte">
		Comme à l'accoutumée, nous allons d'abord utiliser cet objet dans un contexte vierge de tout code... Alors créez-vous un projet avec une classe contenant la méthode <strong><span class="courrier">main</span></strong> et une classe qui sera héritée de <strong><span class="violet"><span class="courrier">JFrame</span></span></strong>.<br>
<br>
Dans cet exemple, nous allons bien évidemment utiliser une liste, donc créez en une... <br>
<div class="rmq information">Ce type d'objet ne possède pas de constructeur avec un libellé en paramètre, comme les boutons par exemple ! Il faut donc mettre un <strong><span class="violet"><span class="courrier">JLabel</span></span></strong> à côté ! <img src="./java_files/heureux.png" alt=":D" class="smilies"></div><br>
<br>
Voici un premier code : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JComboBox</span> <span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Une ComboBox"</span><span class="o">);</span>
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
                        
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">combo</span><span class="o">);</span>
        
        <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>                   
        <span class="o">}</span>
 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et l'aperçu : <br>
<br>
<div class="centre"><img src="./java_files/107042.jpg" alt="Image utilisateur"></div><br>
<br>
Vous constatez que votre objet est ridiculement petit... <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
Mais vous connaissez le remède ! <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JComboBox</span> <span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Une ComboBox"</span><span class="o">);</span>
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
        
        <span class="n">combo</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">100</span><span class="o">,</span><span class="mi">20</span><span class="o">));</span>
                        
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">combo</span><span class="o">);</span>
        
        <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voilà :<br>
<br>
<div class="centre"><img src="./java_files/107043.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq question">Et comment on renseigne cette liste ?</div><br>
Nous y voilà ! Pour ça, il suffit d'utiliser la méthode <strong><span class="courrier">addItem(<span class="violet">Object</span> obj)</span></strong>.<br>
<br>
<div class="rmq erreur">Vous devez savoir que lorsque l'objet affiche les éléments ajoutés, celui-ci appelle la méthode <strong><span class="courrier">toString()</span></strong> des objets ajoutés... Dans cet exemple, nous avons utilisé des objets <strong><span class="courrier"><span class="violet">String</span></span></strong>, mais essayez avec un autre objet et vous verrez...</div><br>
<br>
Voici le nouveau code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JComboBox</span> <span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Une ComboBox"</span><span class="o">);</span>
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
        
        <span class="n">combo</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">100</span><span class="o">,</span><span class="mi">20</span><span class="o">));</span>
        <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Option 1"</span><span class="o">);</span>
        <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Option 2"</span><span class="o">);</span>
        <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Option 3"</span><span class="o">);</span>
        <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Option 4"</span><span class="o">);</span>
                
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">combo</span><span class="o">);</span>
        
        <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat : <br>
<br>
<div class="centre"><img src="./java_files/107044.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Vous pouvez utiliser le constructeur qui prend un tableau d'objets en paramètre afin de renseigner tous les éléments d'un coup !</div><br>
<br>
Ceci est donc équivalent : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="syntax"><pre><span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Option 1"</span><span class="o">,</span> <span class="s">"Option 2"</span><span class="o">,</span> <span class="s">"Option 3"</span><span class="o">,</span> <span class="s">"Option 4"</span><span class="o">};</span>
<span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">(</span><span class="n">tab</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez présélectionner un choix avec la méthode <strong><span class="courrier">setSelectedIndex(<span class="violet">int </span>index)</span></strong>. Vous avez aussi la possibilité de changer la couleur d'écriture, la couleur de fond, la police exactement comme un <strong><span class="violet"><span class="courrier">JLabel</span></span></strong>.<br>
<br>
Maintenant que vous voyez comment fonctionne cet objet, nous allons voir comment communiquer avec lui.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10524">L'interface ItemListener</h2>
		<div class="ss_part_texte">
		Cette interface à une méthode à redéfinir. Celle-ci est appelée lorsqu'un élément a changé d'état !<br>
Vu qu'un exemple est toujours plus éloquent, voici un code implémentant cette interface :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ItemEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ItemListener</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JComboBox</span> <span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Une ComboBox"</span><span class="o">);</span>
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
               
        <span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Option 1"</span><span class="o">,</span> <span class="s">"Option 2"</span><span class="o">,</span> <span class="s">"Option 3"</span><span class="o">,</span> <span class="s">"Option 4"</span><span class="o">};</span>
        
        <span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">(</span><span class="n">tab</span><span class="o">);</span>
        <span class="c">//Ajout du listener</span>
        <span class="n">combo</span><span class="o">.</span><span class="na">addItemListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ItemState</span><span class="o">());</span>
        <span class="n">combo</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">100</span><span class="o">,</span><span class="mi">20</span><span class="o">));</span>
        <span class="n">combo</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
       
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">combo</span><span class="o">);</span>
        
        <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
        <span class="o">}</span>
 
        <span class="c">/**</span>
<span class="c">         * Classe interne implémentant l'interface ItemListener</span>
<span class="c">         */</span>
        <span class="k">class</span> <span class="nc">ItemState</span> <span class="k">implements</span> <span class="n">ItemListener</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">itemStateChanged</span><span class="o">(</span><span class="n">ItemEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"événement déclenché sur : "</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="na">getItem</span><span class="o">());</span>
                <span class="o">}</span>               
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Dans mon exemple, j'ai cliqué sur : <ul>
<li>Option 2, puis</li>
<li>Option 3, puis</li>
<li>Option 4.</li>
</ul><br>
<br>
Ce qui me donne : <br>
<br>
<div class="centre"><img src="./java_files/107056.jpg" alt="Image utilisateur"></div><br>
<br>
Vous voyez bien que lorsque vous cliquez sur une option non sélectionnée, notre objet change d'abord l'état de l'option précédente (l'état passe en <strong><span class="courrier">DESELECTED</span></strong>) avant de changer l'état de l'option choisie (celle-ci passe à l'état <strong><span class="courrier">SELECTED</span></strong>). <br>
Vous pouvez donc suivre très facilement l'état de vos éléments grâce à cette interface ; cependant, pour plus de simplicité, nous utiliserons l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong> pour récupérer l'option sélectionnée !<br>
<br>
Voici un code implémentant cette interface : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ItemEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ItemListener</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JComboBox</span> <span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Une ComboBox"</span><span class="o">);</span>
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
               
        <span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Option 1"</span><span class="o">,</span> <span class="s">"Option 2"</span><span class="o">,</span> <span class="s">"Option 3"</span><span class="o">,</span> <span class="s">"Option 4"</span><span class="o">};</span>
        
        <span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">(</span><span class="n">tab</span><span class="o">);</span>
        <span class="c">//Ajout du listener</span>
        <span class="n">combo</span><span class="o">.</span><span class="na">addItemListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ItemState</span><span class="o">());</span>
        <span class="n">combo</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ItemAction</span><span class="o">());</span>
        <span class="n">combo</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">100</span><span class="o">,</span><span class="mi">20</span><span class="o">));</span>
        <span class="n">combo</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
       
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">combo</span><span class="o">);</span>
        
        <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
        <span class="o">}</span>
 
        <span class="c">/**</span>
<span class="c">         * Classe interne implémentant l'interface ItemListener</span>
<span class="c">         */</span>
        <span class="k">class</span> <span class="nc">ItemState</span> <span class="k">implements</span> <span class="n">ItemListener</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">itemStateChanged</span><span class="o">(</span><span class="n">ItemEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"ItemListener : événement déclenché sur : "</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="na">getItem</span><span class="o">());</span>
                <span class="o">}</span>               
        <span class="o">}</span>
        
        <span class="k">class</span> <span class="nc">ItemAction</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"ActionListener : action sur "</span> <span class="o">+</span> <span class="n">combo</span><span class="o">.</span><span class="na">getSelectedItem</span><span class="o">());</span>
                <span class="o">}</span>               
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat : <br>
<br>
<div class="centre"><img src="./java_files/107115.jpg" alt="Image utilisateur"></div><br>
<br>
Vous constatez qu'avec une telle implémentation, nous pouvons récupérer l'option sur laquelle l'action a été produite. L'appel de la méthode <strong><span class="courrier">getSelectedItem()</span></strong> retourne la valeur de l'option sélectionnée ; une fois ceci récupérée, nous allons pouvoir travailler avec notre liste ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
<div class="rmq information">Il y a d'autres méthodes pour récupérer le contenu d'une liste... Je vous invite à chercher ce genre d'information. <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
En effet, une information apprise par nos propres moyens s'oublie beaucoup moins vite que celle qu'on vous sert toute cuite sur un plateau...</div><br>
<br>
Maintenant que nous savons comment récupérer les informations dans une liste, je vous invite à continuer notre animation.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10523">Changer la forme de notre animation</h2>
		<div class="ss_part_texte">
		Comme le titre l'indique, nous allons faire en sorte que notre animation ne se contente plus d'afficher un rond... Nous allons pouvoir choisir quelle forme nous voulons afficher ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Bien sûr, je ne vais pas vous faire réaliser toutes les formes possibles et imaginables... Je vous en fournis quelques-unes et, si le coeur vous en dit, ajoutez-en de votre composition !<br>
<br>
Très bien : pour arriver à faire ceci, nous allons dynamiser un peu notre classe <strong><span class="violet"><span class="courrier">Panneau</span></span></strong>, celle-ci devra pouvoir peindre différentes forme selon notre bon vouloir. <br>
Pour y parvenir, nous allons ajouter une variable d'instance de type <strong><span class="violet"><span class="courrier">String</span></span></strong> qui contiendra l'intitulé de la forme que nous souhaitons dessiner - appelons-la <strong><span class="courrier">forme</span></strong> - et ajoutons un mutateur afin de pouvoir redéfinir cette variable.<br>
Notre méthode <strong><span class="courrier">paintComponent</span></strong> doit pouvoir dessiner la forme demandée ; ici, deux cas de figures se profilent :<br>
<ul>
<li>soit nous intégrons les instructions <strong><span class="violet"><span class="courrier">if</span></span></strong> dans cette méthode et l'objet <strong><span class="violet"><span class="courrier">Graphics </span></span></strong>dessinera en fonction,</li>
<li>soit nous développons une méthode privée, appelée dans la méthode <strong><span class="courrier">paintComponent</span></strong>, et qui dessinera la forme demandée.</li>
</ul><br>
<br>
J'ai l'habitude de procéder de la deuxième façon pour éviter les conditions à rallonges dans mes méthodes... <br>
<div class="rmq erreur">Faites toutefois attention lorsque vous faites ceci ! Il se peut que votre classe devienne énorme et que vous vous y perdiez ! Nous verrons, dans une partie traitant des <strong><span class="italique">design patterns</span></strong>, que lorsque votre code a des portions de code contenant beaucoup de conditions, il vaut mieux programmer une implémentation, mais nous n'en sommes pas encore là... <img src="./java_files/heureux.png" alt=":D" class="smilies"> </div><br>
<br>
Nous allons donc développer une méthode privée, appelons-la <strong><span class="courrier">draw(<span class="violet">Graphics </span>g)</span></strong>, qui aura pour tâche de dessiner la forme voulue. Nous passerons l'objet <strong><span class="violet"><span class="courrier">Graphics </span></span></strong>utilisé dans la méthode <strong><span class="courrier">paintComponent</span></strong> afin qu'elle puisse l'utiliser, et c'est dans cette méthode que nous mettrons nos conditions.<br>
<br>
Je vous propose les formes suivantes :<br>
<ul>
<li>le rond, forme par défaut,</li>
<li>le carré,</li>
<li>le triangle,</li>
<li>l'étoile (soyons fous <img src="./java_files/langue.png" alt=":p" class="smilies"> ).</li>
</ul><br>
<br>
Ce qui veut dire que notre liste contiendra ces choix, et le rond sera le premier !<br>
Nous créerons aussi une implémentation d'<strong><span class="violet"><span class="courrier">ActionListener</span></span></strong> dans une classe interne pour gérer les actions sur notre liste ; je l'ai appelée <strong><span class="violet"><span class="courrier">FormeListener</span></span></strong>, c'est fou ce que je suis original...<br>
<br>
Une fois n'est pas coutume, voici ce que vous devez obtenir :<br>
<br>
<div class="centre"><img src="./java_files/107118.jpg" alt="Image utilisateur"><img src="./java_files/107119.jpg" alt="Image utilisateur"><img src="./java_files/107116.jpg" alt="Image utilisateur"><img src="./java_files/107117.jpg" alt="Image utilisateur"></div><br>
<br>
Essayez de trouver comment faire ces formes... Il n'y a rien de compliqué, je vous assure ! Bon, l'étoile est peut-être un peu plus difficile que le reste, mais elle n'est pas insurmontable... <img src="./java_files/ange.png" alt=":ange:" class="smilies"><br>
<br>
Voici les codes :<br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<h4>La classe </h4><strong><span class="violet"><span class="courrier">Panneau</span></span></strong> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">private</span> <span class="kt">int</span> <span class="n">posX</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">posY</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">String</span> <span class="n">forme</span> <span class="o">=</span> <span class="s">"ROND"</span><span class="o">;</span>
    
    
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
            <span class="c">//On décide d'une couleur de fond pour notre rectangle</span>
            <span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="c">//On dessine celui-ci afin qu'il prenne toute la surface</span>
            <span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
            <span class="c">//On redéfinit une couleur pour notre rond</span>
            <span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
            <span class="c">//On délègue la méthode de dessin à la méthode draw()</span>
            <span class="n">draw</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>       
    <span class="o">}</span>
 
    <span class="k">private</span> <span class="kt">void</span> <span class="nf">draw</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
        
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ROND"</span><span class="o">)){</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span> 
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"CARRE"</span><span class="o">)){</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"TRIANGLE"</span><span class="o">)){</span>
                
                <span class="c">//calcul des sommets                    </span>
                <span class="c">//Le sommet 1 est à la moitié du côté supérieur du carré de 50  </span>
                <span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">25</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
                <span class="c">//Le sommet deux est en bas à droite</span>
                <span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="c">//Le sommet Trois en bas à gauche</span>
                <span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                
                <span class="c">// Nous créons deux tableaux de coordonnées</span>
                <span class="kt">int</span><span class="o">[]</span> <span class="n">ptsX</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s3X</span><span class="o">};</span>
                <span class="kt">int</span><span class="o">[]</span> <span class="n">ptsY</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1Y</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">};</span>
                
                <span class="c">//Et nous utilisons la méthode fillPolygon</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillPolygon</span><span class="o">(</span><span class="n">ptsX</span><span class="o">,</span> <span class="n">ptsY</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ETOILE"</span><span class="o">)){</span>
                
                <span class="c">//Pour l'étoile, je me contente de tracer des lignes</span>
                <span class="c">//dans le carré correspondant à peu près à une étoile...</span>
                <span class="c">//Mais ce code peut être amélioré !</span>
                <span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">25</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>                    
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">);</span>
                
                <span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">17</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">);</span>
                
                <span class="kt">int</span> <span class="n">s4X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s4Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">17</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">,</span> <span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">);</span>                 
                                
                <span class="kt">int</span> <span class="n">s5X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s5Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">,</span> <span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">);</span>                 
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">,</span> <span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">);</span>  
        <span class="o">}</span>
        
    <span class="o">}</span>
    
    
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">setForme</span><span class="o">(</span><span class="n">String</span> <span class="n">form</span><span class="o">){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">forme</span> <span class="o">=</span> <span class="n">form</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="kt">int</span> <span class="nf">getPosX</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">posX</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">setPosX</span><span class="o">(</span><span class="kt">int</span> <span class="n">posX</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">posX</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="kt">int</span> <span class="nf">getPosY</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">posY</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">setPosY</span><span class="o">(</span><span class="kt">int</span> <span class="n">posY</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">posY</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>La classe </h4><strong><span class="violet"><span class="courrier">Fenetre</span></span></strong> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ItemEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ItemListener</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
        <span class="k">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Go"</span><span class="o">);</span>
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Stop"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Choix de la forme"</span><span class="o">);</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">backX</span><span class="o">,</span> <span class="n">backY</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span> <span class="o">;</span>
    <span class="k">private</span> <span class="n">Thread</span> <span class="n">t</span><span class="o">;</span>
    
    <span class="k">private</span> <span class="n">JComboBox</span> <span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">();</span>
    
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>             
            <span class="n">bouton2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">Bouton2Listener</span><span class="o">());</span>
            <span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
            
            <span class="n">JPanel</span> <span class="n">south</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton2</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">south</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
            
            <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"ROND"</span><span class="o">);</span>
            <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"CARRE"</span><span class="o">);</span>
            <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"TRIANGLE"</span><span class="o">);</span>
            <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"ETOILE"</span><span class="o">);</span>
            
            <span class="n">combo</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">FormeListener</span><span class="o">());</span>
            
            <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
            <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
            <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">combo</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
                        
    <span class="o">}</span>
        
    
        <span class="k">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
                <span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">();</span>
                <span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
           <span class="k">while</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">animated</span><span class="o">){</span>
                
                <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
                <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>                        
                <span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span><span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
                <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
                <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
                <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
                <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>
 
               <span class="k">try</span> <span class="o">{</span>
                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
               <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
               <span class="o">}</span>
           <span class="o">}</span>       
        <span class="o">}</span>
 
 
        <span class="c">/**</span>
<span class="c">         * classe qui écoute notre bouton</span>
<span class="c">         */</span>
        <span class="k">public</span> <span class="k">class</span> <span class="nc">BoutonListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="c">/**</span>
<span class="c">                 * Redéfinitions de la méthode actionPerformed</span>
<span class="c">                 */</span>
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">PlayAnimation</span><span class="o">());</span>
                        <span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
                        <span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                        <span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                        
                <span class="o">}</span>
                
        <span class="o">}</span>
        
        <span class="c">/**</span>
<span class="c">         * classe qui écoute notre bouton2</span>
<span class="c">         */</span>
        <span class="k">class</span> <span class="nc">Bouton2Listener</span>  <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="c">/**</span>
<span class="c">                 * Redéfinitions de la méthode actionPerformed</span>
<span class="c">                 */</span>
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">animated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>       
                        <span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                        <span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                <span class="o">}</span>
                
        <span class="o">}</span>       
        
        <span class="k">class</span> <span class="nc">PlayAnimation</span> <span class="k">implements</span> <span class="n">Runnable</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
                        <span class="n">go</span><span class="o">();</span>                   
                <span class="o">}</span>               
        <span class="o">}</span>
        
        
        <span class="k">class</span> <span class="nc">FormeListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c">//la méthode retourne un Object puisque nous passons des Object dans une liste</span>
                        <span class="c">//Il faut donc utiliser la méthode toString() pour retourner un String (ou utiliser un cast)</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">setForme</span><span class="o">(</span><span class="n">combo</span><span class="o">.</span><span class="na">getSelectedItem</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
                <span class="o">}</span>               
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
</div></div><br>
<br>
Et voilà le travail !<br>
Vous avez vu qu'il n'y avait rien de sorcier ici. En fait, vu que vous avez l'habitude d'utiliser des objets graphiques et des implémentations d'interfaces, les choses vont s'accélérer car le principe reste le même pour tous les objets graphiques de base ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Bon, j'ai tout de même fait un léger topo et un mini-QCM...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10522">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>L'objet <strong><span class="violet"><span class="courrier">JComboBox </span></span></strong>est dans le package <strong><span class="violet"><span class="courrier">javax.swing</span></span></strong>.</li>
<li>Vous pouvez ajouter des éléments dans une liste avec la méthode <strong><span class="courrier">addItem(<span class="violet">Object </span>obj)</span></strong>.</li>
<li>Vous pouvez aussi instancier une liste avec un tableau de données.</li>
<li>L'interface <strong><span class="violet"><span class="courrier">ItemListener </span></span></strong>vous permet de gérer les états de vos éléments.</li>
<li>Vous pouvez aussi utiliser l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong>.</li>
<li>La méthode <strong><span class="courrier">getSelectedItem()</span></strong> retourne une variable de type <strong><span class="violet"><span class="courrier">Object</span></span></strong>, pensez donc à faire un cast ou utiliser la méthode<strong><span class="courrier"> toString()</span></strong> si les éléments sont de ce type.</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Rien de bien méchant ici, vous êtes habitués à utiliser les objets <span class="courrier">swing</span> et les interfaces...<br>
Continuons notre petit tour parmi les objets du package <span class="courrier">javax.swing</span>, alors ! En route vers : <strong><span class="vertf">les cases à cocher</span></strong> !
	</div>
	
	<hr>
	<h1 id="chap_10532">Les cases à cocher : l'objet JCheckBox</h1>
	<div id="chap_intro">
	Nous allons ici aborder un autre objet, mais comme je vous l'ai dit, le principe de fonctionnement est le même pour tous !<br>
Nous allons donc pouvoir accélérer notre rythme d'apprentissage ! <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
<br>
Au passage, il y a un autre objet qui s'utilise <span class="italique">quasiment</span> de la même manière que celui-ci, nous le verrons donc en même temps dans ce chapitre !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10536">Premier exemple</h2>
		<div class="ss_part_texte">
		Avant de commencer, nous allons nous familiariser avec cet objet dans un environnement vierge... Comme d'habitude <img src="./java_files/langue.png" alt=":p" class="smilies"> .<br>
<br>
Créez donc un projet vide avec une classe contenant une méthode <strong><span class="courrier">main</span></strong> et une classe héritée de <strong><span class="violet"><span class="courrier">JFrame</span></span></strong>.<br>
<br>
<div class="rmq information">Lorsque vous créez un nouveau projet, comme ici, et que vous souhaitez utiliser une classe présente dans un autre projet, vous pouvez faire un copier-coller de celle-ci dans votre nouveau projet...<br>
Ceci soit en faisant un <strong><span class="arial">clic droit &gt;</span></strong> <span class="impact">Copy</span>, puis dans votre nouveau projet <strong><span class="arial">clic droit &gt;</span></strong> <span class="impact">Paste</span>, soit avec le menu <span class="impact">Edition</span> en utilisant les mêmes commandes, ou encore avec les <strong><span class="arial">raccourcis clavier</span></strong> associés à ces commandes. On gagne du temps ! <img src="./java_files/heureux.png" alt=":D" class="smilies"></div><br>
<br>
Ceci fait, nous allons utiliser notre nouvel objet. Celui-ci peut être instancié avec un String en paramètre, ce paramètre servira de libellé à notre objet. Vu qu'il n'y a rien de compliqué à faire ceci, voici le code et le résultat : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
        <span class="kd">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="kd">private</span> <span class="n">JCheckBox</span> <span class="n">check1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBox</span><span class="o">(</span><span class="s">"Case 1"</span><span class="o">);</span>
        <span class="kd">private</span> <span class="n">JCheckBox</span> <span class="n">check2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBox</span><span class="o">(</span><span class="s">"Case 2"</span><span class="o">);</span>
        <span class="kd">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Une ComboBox"</span><span class="o">);</span>
        
        <span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
               
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">check1</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">check2</span><span class="o">);</span>
        
        <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
        <span class="o">}</span>       
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat : <br>
<br>
<div class="centre"><img src="./java_files/107121.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez aussi cocher la case en appelant la méthode <strong><span class="courrier">setSelected(<span class="violet">boolean </span>bool)</span></strong> en lui passant <strong><span class="violet"><span class="courrier">true</span></span></strong>.<br>
Cet objet a, comme tous les autres, une multitude de méthodes afin de pouvoir travailler, je vous invite aussi à fouiner un peu... <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
<br>
Créez maintenant une implémentation de l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong>, vous connaissez bien la marche à suivre... Et contrôlez que votre objet est coché ou non avec la méthode <strong><span class="courrier">isSelected()</span></strong> qui retourne un booléen ; voici un code mettant en oeuvre cette demande :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
        <span class="kd">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="kd">private</span> <span class="n">JCheckBox</span> <span class="n">check1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBox</span><span class="o">(</span><span class="s">"Case 1"</span><span class="o">);</span>
        <span class="kd">private</span> <span class="n">JCheckBox</span> <span class="n">check2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBox</span><span class="o">(</span><span class="s">"Case 2"</span><span class="o">);</span>
        <span class="kd">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Une ComboBox"</span><span class="o">);</span>
        
        <span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
               
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        
        <span class="n">check1</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">StateListener</span><span class="o">());</span>
        <span class="n">check2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">StateListener</span><span class="o">());</span>
        
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">check1</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">check2</span><span class="o">);</span>
        
        <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
        <span class="o">}</span>       
        
        <span class="kd">class</span> <span class="nc">StateListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"source : "</span> <span class="o">+</span> <span class="o">((</span><span class="n">JCheckBox</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">()</span> <span class="o">+</span> <span class="s">" - état : "</span> <span class="o">+</span> <span class="o">((</span><span class="n">JCheckBox</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">isSelected</span><span class="o">());</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat : <br>
<br>
<div class="centre"><img src="./java_files/107122.jpg" alt="Image utilisateur"></div><br>
<br>
<br>
Ici, je me suis amusé à cocher et décocher mes cases. Rien de bien difficile ici, ça devient la routine... <img src="./java_files/hihi.png" alt="^^" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10535">Un pseudo-morphing pour notre animation</h2>
		<div class="ss_part_texte">
		Nous allons utiliser cet objet afin de faire en sorte que nos formes changent de taille et nous donnent un pseudo-effet de morphing...<br>
<br>
<div class="rmq question">Que nous faut-il pour arriver à cela ?</div><br>
<br>
Déjà, la taille de notre forme est fixe, il faut changer ça ! Allez, hop... Une variable de type <strong><span class="violet"><span class="courrier">int</span></span></strong> dans notre classe <strong><span class="violet"><span class="courrier">Panneau</span></span></strong>, disons <strong><span class="courrier">drawSize</span></strong>, initialisée à <strong><span class="italique">50</span></strong>. <br>
Tout comme le déplacement, nous devons savoir quand augmenter ou réduire la taille de notre forme : nous utiliserons la même méthode que pour le déplacement.<br>
<br>
Un deuxième booléen sera nécessaire pour savoir si le "<strong><span class="italique">mode morphing</span></strong>" est activé ou non... <br>
<br>
En ce qui concerne la taille, si on réduit  (ou augmente) celle-ci d'une unité à chaque rafraîchissement, l'effet de morphing sera <strong>ULTRA-RAPIDE</strong>. Donc, pour ralentir l'effet, nous allons utiliser une méthode qui va retourner <strong><span class="italique">1</span></strong> ou <strong><span class="italique">0</span></strong> selon le nombre de rafraîchissements. Ceci signifie que nous allons avoir besoin d'une variable pour dénombrer ceux-ci. Nous ferons une réduction (ou augmentation) tous les 10 tours !<br>
<br>
Pour bien séparer les deux cas de figure, nous allons faire une deuxième méthode de dessin dans la classe <strong><span class="courrier"><span class="violet">Panneau </span></span></strong>qui aura pour rôle de dessiner le morphing ; appelons-la <strong><span class="courrier">drawMorph(<span class="violet">Graphics </span>g)</span></strong>.<br>
<br>
Lorsque nous cocherons notre case à cocher, le morphing sera lancé, et inversement ! La classe <strong><span class="violet"><span class="courrier">Panneau</span></span></strong> devra donc avoir un mutateur pour le booléen de morphing... <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
<br>
Cependant, dans notre classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong>, nous gérons la collision avec les bords... Mais en "<strong><span class="italique">mode morphing</span></strong>", la taille de notre forme n'est plus la même... Donc, il va falloir gérer ce nouveau cas de figure dans notre méthode <strong><span class="courrier">go()</span></strong>. Notre classe <strong><span class="violet"><span class="courrier">Panneau </span></span></strong>devra avoir un accesseur pour la taille actuelle de la forme...<br>
<br>
Vous avez tous les éléments en main pour réussir ceci.<br>
<br>
Voici ce que vous devriez obtenir (je n'ai mis que le rond et le triangle... mais ça fonctionnera avec toutes les formes) :<br>
<div class="centre"><br>
<img src="./java_files/107146.jpg" alt="Image utilisateur">    <img src="./java_files/107147.jpg" alt="Image utilisateur">    <img src="./java_files/107148.jpg" alt="Image utilisateur">    <img src="./java_files/107149.jpg" alt="Image utilisateur">    <img src="./java_files/107150.jpg" alt="Image utilisateur">    <img src="./java_files/107151.jpg" alt="Image utilisateur"><br>
</div><br>
<br>
Voici les codes : <br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<br>
<h4><span class="souligne">Fichier Panneau.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">private</span> <span class="kt">int</span> <span class="n">posX</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">posY</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">drawSize</span> <span class="o">=</span> <span class="mi">50</span><span class="o">;</span>
    <span class="c">//boolean pour le mode morphing et pour savoir si la taille doit réduire</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">morph</span> <span class="o">=</span> <span class="kc">false</span><span class="o">,</span> <span class="n">reduce</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;;</span>
    <span class="k">private</span> <span class="n">String</span> <span class="n">forme</span> <span class="o">=</span> <span class="s">"ROND"</span><span class="o">;</span>
    <span class="c">//Le compteur de rafraîchissements</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">increment</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
            <span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
            <span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
            <span class="c">//Si le mode morphing est activé, on peint le morphing</span>
            <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">morph</span><span class="o">)</span>
                <span class="n">drawMorph</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
            <span class="c">//sinon, mode normal</span>
            <span class="k">else</span>
                <span class="nf">draw</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>       
    <span class="o">}</span>
 
    <span class="k">private</span> <span class="kt">void</span> <span class="nf">draw</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
        
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ROND"</span><span class="o">)){</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span> 
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"CARRE"</span><span class="o">)){</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"TRIANGLE"</span><span class="o">)){</span>
                 
                <span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                
                <span class="kt">int</span><span class="o">[]</span> <span class="n">ptsX</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s3X</span><span class="o">};</span>
                <span class="kt">int</span><span class="o">[]</span> <span class="n">ptsY</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1Y</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">};</span>
                
                <span class="n">g</span><span class="o">.</span><span class="na">fillPolygon</span><span class="o">(</span><span class="n">ptsX</span><span class="o">,</span> <span class="n">ptsY</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ETOILE"</span><span class="o">)){</span>
                
                <span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>                    
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">);</span>
                
                <span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">);</span>
                
                <span class="kt">int</span> <span class="n">s4X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s4Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">,</span> <span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">);</span>                 
                                
                <span class="kt">int</span> <span class="n">s5X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s5Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">,</span> <span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">);</span>                 
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">,</span> <span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">);</span>  
        <span class="o">}</span>
        
    <span class="o">}</span>
    
    <span class="c">/**</span>
<span class="c">     * Méthode qui peint le morphing</span>
<span class="c">     * @param g</span>
<span class="c">     */</span>
    <span class="k">private</span> <span class="kt">void</span> <span class="nf">drawMorph</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
        <span class="c">//On incrémente le tour</span>
        <span class="n">increment</span><span class="o">++;</span>
        <span class="c">//On regarde si on doit réduire ou non</span>
        <span class="k">if</span><span class="o">(</span><span class="n">drawSize</span> <span class="o">&gt;=</span> <span class="mi">50</span><span class="o">)</span><span class="n">reduce</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">drawSize</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="o">)</span><span class="n">reduce</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        
        <span class="k">if</span><span class="o">(</span><span class="n">reduce</span><span class="o">)</span>
                <span class="n">drawSize</span> <span class="o">=</span> <span class="n">drawSize</span> <span class="o">-</span> <span class="n">getUsedSize</span><span class="o">();</span>
        <span class="k">else</span>
                <span class="n">drawSize</span> <span class="o">=</span> <span class="n">drawSize</span> <span class="o">+</span> <span class="n">getUsedSize</span><span class="o">();</span>
        
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ROND"</span><span class="o">)){</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="n">drawSize</span><span class="o">,</span> <span class="n">drawSize</span><span class="o">);</span> 
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"CARRE"</span><span class="o">)){</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="n">drawSize</span><span class="o">,</span> <span class="n">drawSize</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"TRIANGLE"</span><span class="o">)){</span>
                  
                <span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
                
                <span class="kt">int</span><span class="o">[]</span> <span class="n">ptsX</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s3X</span><span class="o">};</span>
                <span class="kt">int</span><span class="o">[]</span> <span class="n">ptsY</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1Y</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">};</span>
                
                <span class="n">g</span><span class="o">.</span><span class="na">fillPolygon</span><span class="o">(</span><span class="n">ptsX</span><span class="o">,</span> <span class="n">ptsY</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ETOILE"</span><span class="o">)){</span>
                
                <span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>              
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">);</span>
                
                <span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">);</span>
                
                <span class="kt">int</span> <span class="n">s4X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s4Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">,</span> <span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">);</span>                 
                                
                <span class="kt">int</span> <span class="n">s5X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s5Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">,</span> <span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">);</span>                 
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">,</span> <span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">);</span>  
        <span class="o">}</span>
        
        
    <span class="o">}</span>
    
    <span class="c">/**</span>
<span class="c">     * Méthode qui retourne le nombre à retrancher (ou ajouter) pour le morphing</span>
<span class="c">     * @return res</span>
<span class="c">     */</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="nf">getUsedSize</span><span class="o">(){</span>
        <span class="kt">int</span> <span class="n">res</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="c">//Si le nombre de tours est de 10</span>
        <span class="c">//On réinitialise l'incrément et on retourne 1</span>
        <span class="k">if</span><span class="o">(</span><span class="n">increment</span> <span class="o">/</span> <span class="mi">10</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
                <span class="n">increment</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="n">res</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>       
        <span class="k">return</span> <span class="n">res</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="kt">int</span> <span class="nf">getDrawSize</span><span class="o">(){</span>
        <span class="k">return</span> <span class="n">drawSize</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="kt">boolean</span> <span class="nf">isMorph</span><span class="o">(){</span>
        <span class="k">return</span> <span class="n">morph</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">setMorph</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">bool</span><span class="o">){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">morph</span> <span class="o">=</span> <span class="n">bool</span><span class="o">;</span>
        <span class="c">//On réinitialise la taille</span>
        <span class="n">drawSize</span> <span class="o">=</span> <span class="mi">50</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">setForme</span><span class="o">(</span><span class="n">String</span> <span class="n">form</span><span class="o">){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">forme</span> <span class="o">=</span> <span class="n">form</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="kt">int</span> <span class="nf">getPosX</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">posX</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">setPosX</span><span class="o">(</span><span class="kt">int</span> <span class="n">posX</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">posX</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="kt">int</span> <span class="nf">getPosY</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">posY</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">setPosY</span><span class="o">(</span><span class="kt">int</span> <span class="n">posY</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">posY</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Fichier Fenetre.java</span></h4> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>
 
        <span class="k">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Go"</span><span class="o">);</span>
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Stop"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Choix de la forme"</span><span class="o">);</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">backX</span><span class="o">,</span> <span class="n">backY</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span> <span class="o">;</span>
    <span class="k">private</span> <span class="n">Thread</span> <span class="n">t</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">JComboBox</span> <span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">();</span>
    
    <span class="k">private</span> <span class="n">JCheckBox</span> <span class="n">morph</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBox</span><span class="o">(</span><span class="s">"Morphing"</span><span class="o">);</span>
    
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>             
            <span class="n">bouton2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">Bouton2Listener</span><span class="o">());</span>
            <span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
            
            <span class="n">JPanel</span> <span class="n">south</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton2</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">south</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
            
            <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"ROND"</span><span class="o">);</span>
            <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"CARRE"</span><span class="o">);</span>
            <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"TRIANGLE"</span><span class="o">);</span>
            <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"ETOILE"</span><span class="o">);</span>            
            <span class="n">combo</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">FormeListener</span><span class="o">());</span>
            
            <span class="n">morph</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MorphListener</span><span class="o">());</span>
            
            <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
            <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
            <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">combo</span><span class="o">);</span>
            <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">morph</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
                        
    <span class="o">}</span>
        
    
        <span class="k">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
                <span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">();</span>
                <span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
        <span class="k">while</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">animated</span><span class="o">){</span>
                
                <span class="c">//Si le mode morphing est activé, on utilise la taille actuelle de la forme</span>
                <span class="k">if</span><span class="o">(</span><span class="n">pan</span><span class="o">.</span><span class="na">isMorph</span><span class="o">())</span>
                <span class="o">{</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
                    <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="c">//Sinon, comme d'habitude</span>
                <span class="k">else</span>
                <span class="o">{</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
                    <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>  
            
                <span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span><span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>
 
            <span class="k">try</span> <span class="o">{</span>
                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c">// TODO Auto-generated catch block</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>       
        <span class="o">}</span>
 
        <span class="k">public</span> <span class="k">class</span> <span class="nc">BoutonListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                        <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">PlayAnimation</span><span class="o">());</span>
                        <span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
                        <span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                        <span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>                       
                <span class="o">}</span>               
        <span class="o">}</span>
        
        <span class="k">class</span> <span class="nc">Bouton2Listener</span>  <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">animated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>       
                        <span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                        <span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                <span class="o">}</span>               
        <span class="o">}</span>       
        
        <span class="k">class</span> <span class="nc">PlayAnimation</span> <span class="k">implements</span> <span class="n">Runnable</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
                        <span class="n">go</span><span class="o">();</span>                   
                <span class="o">}</span>               
        <span class="o">}</span>
        
        
        <span class="k">class</span> <span class="nc">FormeListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">pan</span><span class="o">.</span><span class="na">setForme</span><span class="o">(</span><span class="n">combo</span><span class="o">.</span><span class="na">getSelectedItem</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
                <span class="o">}</span>               
        <span class="o">}</span>
        
        <span class="k">class</span> <span class="nc">MorphListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c">//Si la case est cochée, activation du mode morphing</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">morph</span><span class="o">.</span><span class="na">isSelected</span><span class="o">())</span><span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
                        <span class="c">//Sinon, rien !</span>
                        <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
        
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
</div></div><br>
<br>
Alors ? Vous en pensez quoi ?  <img src="./java_files/smile.png" alt=":)" class="smilies"> <br>
J'aime bien, moi...<br>
<br>
Vous voyez que l'utilisation des <strong><span class="violet"><span class="courrier">JCheckBox</span></span></strong> est très simple... Je vous propose maintenant d'aller voir un de ses cousins... <img src="./java_files/langue.png" alt=":p" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10534">Les boutons radio : l'objet JRadioButton</h2>
		<div class="ss_part_texte">
		Le voici,  le cousin éloigné...<br>
<br>
Bon, alors : le principe est de pouvoir avoir deux (ou plus) choix distincts, mais qu'un seul soit sélectionné à la fois... C'est-à-dire que pour un choix <strong><span class="italique">oui / non</span></strong>, le choix <strong><span class="italique">oui</span></strong> étant présélectionné, lorsque nous choisirons <strong><span class="italique">non</span></strong>, l'autre choix se désélectionnera tout seul... <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
<br>
L'instanciation se fait de la même manière que pour un <strong><span class="violet"><span class="courrier">JCheckBox</span></span></strong> ; d'ailleurs, nous allons utiliser l'exemple du début de chapitre en remplaçant les cases à cocher par des boutons radio. Voici les codes et le résultat :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JRadioButton</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        
        <span class="k">private</span> <span class="n">JRadioButton</span> <span class="n">jr1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButton</span><span class="o">(</span><span class="s">"Radio 1"</span><span class="o">);</span>
        <span class="k">private</span> <span class="n">JRadioButton</span> <span class="n">jr2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButton</span><span class="o">(</span><span class="s">"Radio 2"</span><span class="o">);</span>
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
               
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        
        <span class="n">jr1</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">StateListener</span><span class="o">());</span>
        <span class="n">jr2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">StateListener</span><span class="o">());</span>
        
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jr1</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jr2</span><span class="o">);</span>
        
        <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
        <span class="o">}</span>       
        
        <span class="k">class</span> <span class="nc">StateListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"source : "</span> <span class="o">+</span> <span class="o">((</span><span class="n">JRadioButton</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">()</span> <span class="o">+</span> <span class="s">" - état : "</span> <span class="o">+</span> <span class="o">((</span><span class="n">JRadioButton</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">isSelected</span><span class="o">());</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat :<br>
<br>
<div class="centre"><img src="./java_files/107155.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir que ces objets s'utilisent de la même manière. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<div class="rmq question">Euh... Tu nous as dis que seul un choix devrait être sélectionné... Or ici, tes deux radios sont sélectionnés... <img src="./java_files/blink.gif" alt="o_O" class="smilies"> </div><br>
Tout à fait... Voilà la différence entre ces deux objets... Pour qu'un seul bouton radio soit sélectionné à la fois, nous devons définir un groupe de boutons, <strong><span class="violet"><span class="courrier">ButtonGroup</span></span></strong>. Dans celui-ci, nous ajouterons nos boutons radio et ainsi seul un bouton sera sélectionné à la fois !<br>
<br>
Code : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.ButtonGroup</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JRadioButton</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        
        <span class="k">private</span> <span class="n">JRadioButton</span> <span class="n">jr1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButton</span><span class="o">(</span><span class="s">"Radio 1"</span><span class="o">);</span>
        <span class="k">private</span> <span class="n">JRadioButton</span> <span class="n">jr2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButton</span><span class="o">(</span><span class="s">"Radio 2"</span><span class="o">);</span>
        <span class="k">private</span> <span class="n">ButtonGroup</span> <span class="n">bg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ButtonGroup</span><span class="o">();</span>
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
               
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        
        <span class="n">jr1</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="n">jr1</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">StateListener</span><span class="o">());</span>
        <span class="n">jr2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">StateListener</span><span class="o">());</span>
        
        <span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jr1</span><span class="o">);</span>
        <span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jr2</span><span class="o">);</span>
        
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jr1</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jr2</span><span class="o">);</span>
        
        <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
        <span class="o">}</span>       
        
        <span class="k">class</span> <span class="nc">StateListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"source : "</span> <span class="o">+</span> <span class="n">jr1</span><span class="o">.</span><span class="na">getText</span><span class="o">()</span> <span class="o">+</span> <span class="s">" - état : "</span> <span class="o">+</span> <span class="n">jr1</span><span class="o">.</span><span class="na">isSelected</span><span class="o">());</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"source : "</span> <span class="o">+</span> <span class="n">jr2</span><span class="o">.</span><span class="na">getText</span><span class="o">()</span> <span class="o">+</span> <span class="s">" - état : "</span> <span class="o">+</span> <span class="n">jr2</span><span class="o">.</span><span class="na">isSelected</span><span class="o">());</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat : <br>
<br>
<div class="centre"><img src="./java_files/107157.jpg" alt="Image utilisateur"></div><br>
<br>
Une précision, toutefois... Lorsque je vous ai dit que la différence entre ces composants se trouvait dans cette notion de groupe de boutons... Je vous ai un peu induits en erreur  <img src="./java_files/huh.png" alt=":o" class="smilies"> .<br>
En fait, j'ai dit ceci car il est plus fréquent d'avoir ce genre de chose sur des boutons de type radio que sur un autre, mais rien ne vous empêche de faire la même chose pour des cases à cocher...<br>
Effectivement, l'objet <strong><span class="violet"><span class="courrier">ButtonGroup </span></span></strong>accepte en paramètre un type <span class="courrier">AbstractButton</span> qui est la super-classe de tous les boutons... Vous pouvez donc en tirer les conclusions qui s'imposent !<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10533">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Les objets <strong><span class="violet"><span class="courrier">JCheckBox</span></span></strong>, <strong><span class="violet"><span class="courrier">JRadioButton </span></span></strong>et <strong><span class="violet"><span class="courrier">ButtonGroup </span></span></strong>sont dans le package <strong><span class="violet"><span class="courrier">javax.swing</span></span></strong></li>
<li>Vous pouvez savoir si un de ces composants est sélectionné grâce à la méthode <strong><span class="courrier">isSelected()</span></strong>.</li>
<li>Cette méthode retourne <strong><span class="violet"><span class="courrier">true</span></span></strong> si l'objet est sélectionné, et <strong><span class="violet"><span class="courrier">false </span></span></strong>dans le cas contraire.</li>
<li>Vous pouvez restreindre les choix dans un groupe de réponses en utilisant la classe <strong><span class="violet"><span class="courrier">ButtonGroup</span></span></strong>.</li>
<li>Vous pouvez ajouter des boutons à un groupe de boutons grâce à la méthode <strong><span class="courrier">add(<span class="violet">AbstractButton </span>button)</span></strong>.</li>
</ul><br>
<br>
Allez... Pas besoin de QCM ici... Il n'y a rien de compliqué ! <img src="./java_files/clin.png" alt=";)" class="smilies">
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Je sens que vous êtes de plus en plus à l'aise avec la programmation événementielle !<br>
Continuons donc avec : <strong><span class="vertf">les zones de texte</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10550">Les champs de texte : l'objet JTextField</h1>
	<div id="chap_intro">
	Dans ce chapitre, nous allons voir l'objet qui va vous permettre de saisir des informations.<br>
Celui-ci est très simple d'utilisation aussi...<br>
<br>
Ne perdons pas de temps, allons-y ! <img src="./java_files/pirate.png" alt=":pirate:" class="smilies"><br>

	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10549">Utilisation</h2>
		<div class="ss_part_texte">
		Je pense que vous savez ce qu'il vous reste à faire... Donc, si ce n'est pas encore fait, créez-vous un nouveau projet avec les classes habituelles.<br>
<br>
Comme le titre du chapitre l'indique, nous allons utiliser l'objet <strong><span class="violet"><span class="courrier">JTextField</span></span></strong>. Comme vous pouvez vous en douter, cet objet a lui aussi les méthodes de redimensionnement, de couleur de police...<br>
<br>
De ce fait, je commence donc avec un exemple complet. Regardez et testez ce code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JTextField</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JTextField</span> <span class="n">jtf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTextField</span><span class="o">(</span><span class="s">"Valeur par défaut"</span><span class="o">);</span>
        <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Un JTextField"</span><span class="o">);</span>
        
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
               
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        
        <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">14</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">);</span>
        
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jtf</span><span class="o">);</span>
                
        <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donne :<br>
<br>
<div class="centre"><img src="./java_files/107166.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir que c'est très simple ! Vous pouvez saisir ce que vous voulez dans cette zone de texte.<br>
<br>
<div class="rmq information">Vous pouvez initialiser le contenu avec la méthode <strong><span class="courrier">setText(<span class="violet">String </span>str)</span></strong> ou le récupérer avec la méthode <strong><span class="courrier">getText()</span></strong>.</div><br>
<br>
Il existe toutefois un objet très ressemblant à celui-ci, un peu plus étoffé. En fait, cet objet permet d'avoir un <strong><span class="violet"><span class="courrier">JTextField</span></span></strong> formaté pour recevoir un certain type de saisie (date, pourcentage...).<br>
<br>
Voyons ça tout de suite...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10548">Un objet plus restrictif : le JFormattedTextField</h2>
		<div class="ss_part_texte">
		Avec ce genre d'objet, vous allez pouvoir vous éviter beaucoup de contrôles et de cast sur le contenu de vos zones de texte...<br>
<br>
Si vous avez essayé de récupérer le contenu du <strong><span class="violet"><span class="courrier">JTextField</span></span></strong> utilisé ci-dessus (lors du clic sur un bouton, par exemple...) vous avez dû vous rendre compte que le type de contenu lui était égal...<br>
<br>
Mais, un jour sûrement, vous aurez besoin d'une zone de texte qui n'accepte qu'un certain type de donnée... Avec l'objet <strong><span class="violet"><span class="courrier">JFormattedTextField</span></span></strong>, nous nous en rapprochons, mais vous verrez que vous pouvez faire encore mieux !<br>
Cet objet retourne une valeur uniquement si celle-ci correspond à ce que vous lui avez demandé de contenir, je m'explique : si vous voulez que votre zone de texte DOIVE contenir des entiers, ou des dates... c'est possible !<br>
<div class="rmq erreur">Par contre, ce contrôle se fait lorsque vous quittez le champ en question ! <strong>Vous pouvez saisir des lettres dans un objet n'acceptant que des entiers, mais la méthode <span class="courrier">getText()</span> ne renverra RIEN car le contenu sera effacé si les données ne correspondent pas aux attentes</strong> ! !</div><br>
<br>
Voici un code et deux exemples : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.text.NumberFormat</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFormattedTextField</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
        <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        <span class="k">private</span> <span class="n">JFormattedTextField</span> <span class="n">jtf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFormattedTextField</span><span class="o">(</span><span class="n">NumberFormat</span><span class="o">.</span><span class="na">getIntegerInstance</span><span class="o">());</span>
        <span class="k">private</span> <span class="n">JFormattedTextField</span> <span class="n">jtf2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFormattedTextField</span><span class="o">(</span><span class="n">NumberFormat</span><span class="o">.</span><span class="na">getPercentInstance</span><span class="o">());</span>
        <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Un JTextField"</span><span class="o">);</span>
        <span class="k">private</span> <span class="n">JButton</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span> <span class="o">(</span><span class="s">"OK"</span><span class="o">);</span>
        
        <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
               
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>        
        
        <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">14</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">);</span>
        
        <span class="n">jtf2</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
        
        <span class="n">b</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>
        
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jtf</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jtf2</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
                
       <span class="c">// container.add(top, BorderLayout.NORTH);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">top</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
        <span class="o">}</span>       
        
        <span class="k">class</span> <span class="nc">BoutonListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"TEXT : jtf "</span> <span class="o">+</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"TEXT : jtf2 "</span> <span class="o">+</span> <span class="n">jtf2</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Exemple valide : <br>
<br>
<div class="centre"><img src="./java_files/107177.jpg" alt="Image utilisateur"></div><br>
<br>
Exemple invalide :<br>
<br>
<div class="centre"><img src="./java_files/107176.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Vous pouvez voir que notre objet met aussi en forme la saisie lorsque celle-ci est valide ! Celui-ci sépare les nombres 3 par 3 afin de facilité la lecture...</div><br>
<br>
Voici les types de contenus que vous pouvez utiliser : <br>
<br>
<ul>
<li><strong><span class="code2 java"><span class="n">NumberFormat</span>
</span></strong> avec : <ul>
<li><span class="code2 java"><span class="n">getIntegerInstance</span><span class="o">()</span>
</span></li>
<li><span class="code2 java"><span class="n">getPercentInstance</span><span class="o">()</span>
</span></li>
<li><span class="code2 java"><span class="n">getNumberInstance</span><span class="o">()</span>
</span></li>
</ul></li>
<li><strong><span class="code2 java"><span class="n">DateFormat</span>
</span></strong> avec : <ul>
<li><span class="code2 java"><span class="n">getTimeInstance</span><span class="o">()</span>
</span></li>
<li><span class="code2 java"><span class="n">getDateInstance</span><span class="o">()</span>
</span></li>
</ul></li>
<li><strong><span class="code2 java"><span class="n">MessageFormat</span>
</span></strong></li>
</ul><br>
<br>
Sans rentrer dans les détails, vous pouvez aussi utiliser un objet <strong><span class="violet"><span class="courrier">MaskFormatter</span></span></strong> qui permet d'avoir un format à taille fixe dans votre zone de texte. Ceci est très pratique lorsque vous voulez un numéro de téléphone, un numéro de sécurité sociale...<br>
Vous devez définir ce format en paramètre dans le constructeur à l'aide de <strong><span class="italique">méta-caractères</span></strong>. Ceux-ci permettent de dire à votre objet <strong><span class="violet"><span class="courrier">MaskFormatter</span></span></strong> comment doit être constitué le futur contenu de votre zone de texte. Voici la liste de ces <strong><span class="italique">méta-caractères</span></strong> :<br>
<ul>    
<li><strong><span class="italique">#</span></strong> indique un chiffre ;</li>    
<li><strong><span class="italique">'</span></strong> indique un caractère d'échappement ;</li>    
<li><strong><span class="italique">U</span></strong> indique une lettre (les minuscules sont changées en majuscules) ;</li>    
<li><strong><span class="italique">L</span></strong> indique une lettre (les majuscules sont changées en minuscules) ;</li>    
<li><strong><span class="italique">A</span></strong> indique un chiffre ou une lettre ;</li>    
<li><span class="italique"><strong>?</strong></span> indique une lettre ;</li>  
<li><strong><span class="italique">*</span></strong> indique que tous les caractères sont acceptés ;</li>  
<li><strong><span class="italique">H</span></strong> indique que tous les caractères hexadécimaux sont acceptés (0-&gt;9, a-&gt;f ou A-&gt;F).</li>
</ul><br>
<br>
<div class="rmq erreur">L'instanciation d'un tel objet peut lever une <strong><span class="courrier">ParseException</span></strong>. Vous devrez donc l'entourer d'un bloc <strong><span class="courrier">try{...}catch(ParseException e){...}</span></strong>.</div><br>
<br>
Voici à quoi ressemblerait un format téléphonique :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="k">try</span><span class="o">{</span>
   <span class="n">MaskFormatter</span> <span class="n">tel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MaskFormatter</span><span class="o">(</span><span class="s">"## ## ## ## ##"</span><span class="o">);</span>
   <span class="c">//Ou encore</span>
   <span class="n">MaskFormatter</span> <span class="n">tel2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MaskFormatter</span><span class="o">(</span><span class="s">"##-##-##-##-##"</span><span class="o">);</span>
   <span class="c">//Vous pouvez ensuite le passer à votre zone de texte</span>
   <span class="n">JFormattedTextField</span> <span class="n">jtf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFormattedTextField</span><span class="o">(</span><span class="n">tel2</span><span class="o">);</span>
   <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="n">ParseException</span> <span class="n">e</span><span class="o">){</span><span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez vous rendre compte qu'il n'y a rien de compliqué... <br>
Je vous donne tout de même un exemple de code permettant de saisir un numéro de téléphone français et un numéro de téléphone américain : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.text.ParseException</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFormattedTextField</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.text.MaskFormatter</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JFormattedTextField</span> <span class="n">jtf</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">JFormattedTextField</span> <span class="n">jtf2</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Téléphone FR   "</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Téléphone USA"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JButton</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span> <span class="o">(</span><span class="s">"OK"</span><span class="o">);</span>
    
    <span class="c">/**</span>
<span class="c">     * Constructeur de l'objet </span>
<span class="c">     */</span>
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">150</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
        
        <span class="k">try</span><span class="o">{</span>
        	   <span class="n">MaskFormatter</span> <span class="n">tel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MaskFormatter</span><span class="o">(</span><span class="s">"##-##-##-##-##"</span><span class="o">);</span>
        	   <span class="n">MaskFormatter</span> <span class="n">telUSA</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MaskFormatter</span><span class="o">(</span><span class="s">"###-####"</span><span class="o">);</span>
        	   <span class="n">jtf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFormattedTextField</span><span class="o">(</span><span class="n">tel</span><span class="o">);</span>
        	   <span class="n">jtf2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFormattedTextField</span><span class="o">(</span><span class="n">telUSA</span><span class="o">);</span>
        <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="n">ParseException</span> <span class="n">e</span><span class="o">){</span>
        	<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>        
        
        <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">14</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">);</span>
        
        <span class="n">jtf2</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
        
        <span class="n">b</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>
        
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jtf</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label2</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jtf2</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
                
       <span class="c">// container.add(top, BorderLayout.NORTH);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">top</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
     <span class="o">}</span>       
        
        <span class="k">class</span> <span class="nc">BoutonListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
 
                <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Téléphone FR  : "</span> <span class="o">+</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Téléphone USA : "</span> <span class="o">+</span> <span class="n">jtf2</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
                <span class="o">}</span>
                
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Vous pouvez constater qu'avec le méta-caractère utilisé avec notre objet <strong><span class="violet"><span class="courrier">MaskFormatter</span></span></strong>, nous sommes obligé de saisir des chiffres ! </div><br>
<br>
Et voici le résultat lorsque nous cliquons sur le bouton : <br>
<br>
<div class="centre"><img src="./java_files/124560.jpg" alt="Image utilisateur"></div><br>
<br>
<br>
<div class="rmq question">Je ne sais pas pour le numéro américain, mais le numéro de téléphone français est loin d'être un numéro de téléphone valide !   <img src="./java_files/huh.png" alt=":o" class="smilies"> </div><br>
<br>
Ah ! je savais que vous alliez remarquer ce petit détail, de taille je vous l'accorde.<br>
Nous voilà confrontés à un problème qui vous hantera tant que vous programmerez : <strong><span class="gros"><span class="rouge">L'intégrité de vos données !</span></span></strong><br>
<br>
Comme démontré ci-dessus, vous pouvez aider le plus possible l'utilisateur sur ce qu'il doit renseigner comme données dans des champs, vous ne devrez <strong>JAMAIS FAIRE UNE CONFIANCE AVEUGLE EN CELLES-CI !</strong> <br>
C'est simple : dans ma boîte, on part du principe de ne jamais faire confiance à l'utilisateur ! <br>
<br>
Nous sommes obligés de faire une multitude de contrôles en plus, mais les applications ont le mérite d'être un tant soit peu sécurisées...<br>
<br>
<div class="rmq question">Qu'est-ce que nous pouvons faire dans le cas de ta saisie ?</div><br>
En réalité, beaucoup de choses : <br>
<ul>
<li>tester chaque élément de votre numéro ;</li>
<li>tester le numéro en entier ;</li>
<li>dans le cas ou vous n'utilisez pas de <span class="courrier">MaskFormatter</span>, vérifier en plus que les saisies soient numériques ;</li>
<li>utiliser une expression régulière ;</li>
<li>empêcher la saisie d'un type de caractères ;</li>
<li>...</li>
</ul><br>
<br>
En gros, vous devrez vérifier l'intégrité de vos données et, dans le cas qui nous intéresse, l'intégrité de vos chaînes de caractères, pendant ou après la saisie !<br>
D'ailleurs, c'est ce que je vous propose de faire, pas plus tard que maintenant ! <img src="./java_files/hihi.png" alt="^^" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10547">Contrôlez vos données post-saisie</h2>
		<div class="ss_part_texte">
		Afin de voir comment contrôler au mieux vos données, nous allons travailler avec un <span class="courrier">JFormattedTextField</span> acceptant tous types de caractères. Voici donc notre code :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.text.ParseException</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFormattedTextField</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.text.MaskFormatter</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JFormattedTextField</span> <span class="n">jtf</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">JFormattedTextField</span> <span class="n">jtf2</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Téléphone FR   "</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JButton</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span> <span class="o">(</span><span class="s">"OK"</span><span class="o">);</span>
    
    <span class="c">/**</span>
<span class="c">     * Constructeur de l'objet </span>
<span class="c">     */</span>
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">150</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
        
        <span class="k">try</span><span class="o">{</span>
        	   <span class="n">MaskFormatter</span> <span class="n">tel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MaskFormatter</span><span class="o">(</span><span class="s">"**-**-**-**-**"</span><span class="o">);</span>
        	   <span class="n">jtf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFormattedTextField</span><span class="o">(</span><span class="n">tel</span><span class="o">);</span>
        <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="n">ParseException</span> <span class="n">e</span><span class="o">){</span>
        	<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>        
        
        <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">14</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">);</span>
                
        <span class="n">b</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>
        
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jtf</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
       
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">top</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
     <span class="o">}</span>       
        
    <span class="k">class</span> <span class="nc">BoutonListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span> 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Téléphone FR  : "</span> <span class="o">+</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
        <span class="o">}</span>  
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Maintenant, vous pouvez saisir n'importe quoi dans ce qui devait être un numéro de téléphone. <br>
Il reste tout de même une restriction sur le nombre de caractères que doit prendre le champ, ici 10, mais, mis à part ça, vous êtes libres de saisir ce que vous voulez : <br>
<br>
<div class="centre"><img src="./java_files/124570.jpg" alt="Image utilisateur"></div><br>
<br>
<h3>Première approche</h3><br>
<br>
Une méthode de contrôle, un peu compliquée au final, consisterait à exploser la chaîne de caractères grâce à la méthode <span class="code2 java"><span class="n">split</span><span class="o">(</span><span class="n">String</span> <span class="n">regex</span><span class="o">)</span>
</span> et tester les éléments un par un... <br>
Cette méthode, <span class="code2 java"><span class="n">split</span><span class="o">(</span><span class="n">String</span> <span class="n">regex</span><span class="o">)</span>
</span>, permet de créer un tableau de <strong><span class="violet"><span class="courrier">String</span></span></strong> à partir d'une chaîne de caractères en l'explosant par rapport à l'expression régulière passée en paramètre. Un exemple est toujours mieux : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="syntax"><pre><span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"Je-suis-un-ZérO"</span><span class="o">;</span>
<span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">"-"</span><span class="o">);</span><span class="c">//Donne un tableau à 4 entrées</span>
<span class="c">//tab[0] vaut "Je"</span>
<span class="c">//tab[1] vaut "suis"</span>
<span class="c">//tab[2] vaut "un"</span>
<span class="c">//tab[3] vaut "ZérO"</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Le paramètre de cette méthode n'est pas une chaîne de caractères banale ! Il s'agit en fait d'une expression régulière. Nous allons y venir. <img src="./java_files/smile.png" alt=":)" class="smilies"></div><br>
<br>
Voici une façon de faire, un peu barbare mais elle fonctionne : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.text.ParseException</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFormattedTextField</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.text.MaskFormatter</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JFormattedTextField</span> <span class="n">jtf</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">JFormattedTextField</span> <span class="n">jtf2</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Téléphone FR   "</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JButton</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span> <span class="o">(</span><span class="s">"OK"</span><span class="o">);</span>
    
    <span class="c">/**</span>
<span class="c">     * Constructeur de l'objet </span>
<span class="c">     */</span>
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">150</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
        
        <span class="k">try</span><span class="o">{</span>
        	   <span class="n">MaskFormatter</span> <span class="n">tel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MaskFormatter</span><span class="o">(</span><span class="s">"**-**-**-**-**"</span><span class="o">);</span>
        	   <span class="n">jtf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFormattedTextField</span><span class="o">(</span><span class="n">tel</span><span class="o">);</span>
        <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="n">ParseException</span> <span class="n">e</span><span class="o">){</span>
        	<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>        
        
        <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">14</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">);</span>
                
        <span class="n">b</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>
        
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jtf</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
       
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">top</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
     <span class="o">}</span>       
        
    <span class="k">class</span> <span class="nc">BoutonListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span> 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Téléphone FR  : "</span> <span class="o">+</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
                <span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">"-"</span><span class="o">);</span>

                <span class="c">//On contrôle le numéro de téléphone</span>
                <span class="c">//-------------------------------------</span>
                <span class="k">if</span><span class="o">(!</span><span class="n">controleData</span><span class="o">(</span><span class="n">tab</span><span class="o">)){</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Numéro erroné ! "</span><span class="o">);</span>
                	<span class="n">jtf</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span><span class="o">{</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Numéro de téléphone OK ! "</span><span class="o">);</span>
                <span class="o">}</span>
        <span class="o">}</span>  
        
        <span class="c">/**</span>
<span class="c">         * Méthode qui va contrôler la saisie</span>
<span class="c">         * @param data</span>
<span class="c">         * @return Boolean</span>
<span class="c">         */</span>
        <span class="k">private</span> <span class="kt">boolean</span> <span class="nf">controleData</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">data</span><span class="o">){</span>
        	<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        	
        	<span class="c">//On balaye tout le contenu du tableau et on vérifie </span>
        	<span class="c">//que les données sont conformes à nos attentes</span>
        	<span class="k">while</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">){</span>
        		
        		<span class="k">switch</span><span class="o">(</span><span class="n">i</span><span class="o">){</span>
        			
        			<span class="c">//Le premier élément doit être numérique et </span>
        			<span class="c">//égal à 01 ou 02 ou 03 ou 04 ou 05 ou 06 ou 08 ou 09</span>
        			<span class="k">case</span> <span class="mi">0</span><span class="o">:</span>
        				<span class="k">try</span> <span class="o">{</span>
							<span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">data</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
							<span class="k">if</span><span class="o">(</span><span class="n">j</span> <span class="o">&lt;</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">j</span> <span class="o">&gt;</span> <span class="mi">6</span> <span class="o">&amp;&amp;</span> <span class="n">j</span> <span class="o">!=</span> <span class="mi">8</span> <span class="o">&amp;&amp;</span> <span class="n">j</span> <span class="o">!=</span> <span class="mi">9</span><span class="o">)</span>
								<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
						<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NumberFormatException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
							<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
						<span class="o">}</span>
        			
        				<span class="k">break</span><span class="o">;</span>
        				
        			<span class="c">//Les autres chiffres doivent être compris entre 00 et 99 INCLUS</span>
        			<span class="c">//Je ne sais pas si ça marche réellement comme ça, mais c'est pour l'exemple...</span>
        			<span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
        			<span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
        			<span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
        			<span class="k">case</span> <span class="mi">4</span><span class="o">:</span>
        				<span class="k">try</span> <span class="o">{</span>
							<span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">data</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
							<span class="k">if</span><span class="o">(</span><span class="n">j</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">j</span> <span class="o">&gt;</span> <span class="mi">99</span><span class="o">)</span>
								<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
						<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NumberFormatException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
							<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
						<span class="o">}</span>
        				<span class="k">break</span><span class="o">;</span>
        		<span class="o">}</span>
        		
        		<span class="n">i</span><span class="o">++;</span>
        	<span class="o">}</span>
        	
        	<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donne : <br>
<br>
<div class="centre"><img src="./java_files/125754.jpg" alt="Image utilisateur"><img src="./java_files/125755.jpg" alt="Image utilisateur"></div><br>
<br>
<br>
Un peu fastidieux comme façon de contrôler !<br>
Imaginez un peu que vous ayez une multitude de champs à vérifier... Une sacré galère au final !<br>
<br>
<div class="rmq question">Allez, dis-nous tout, on te connaît maintenant...</div><br>
Personnellement, je trouve qu'utiliser des expressions régulières (ou <acronym title="Regular Expression">regex</acronym>) permet plus de souplesse et une économie de code assez conséquente.<br>
<br>
<div class="rmq question">On te croit sur parole ! Mais qu'est-ce qu'une regex ?</div><br>
Bon, je n'ai pas l'intention de réinventer la poudre... Surtout que M@teo a très bien expliqué ça dans deux chapitres de son tuto PHP. Vu que je vais partir du principe que vous connaissez la base des expressions régulières, je vous conseille vivement d'aller faire un tour sur <a href="http://www.siteduzero.com/tuto-3-168-1-les-expressions-regulieres-partie-1-2.html">son tuto</a> et, une fois lu, revenez me voir ici-même... <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
<h3>Utiliser des expressions régulières</h3><br>
<br>
Comme vous avez pu le constater lors de la lecture du tuto de M@teo, les regex permettent de faire énormément de choses et, dans notre cas, de nous simplifier les contrôles de saisie de notre <span class="violet"><strong><span class="courrier">JFormattedTextField</span></strong></span>.<br>
<br>
Maintenant, afin de pouvoir contrôler la saisie, nous allons devoir définir la regex. <br>
Comme mis dans les commentaires du code précédent, je pars du principe qu'un numéro de téléphone est composé comme suit : <br>
<ul>
<li>un 0 en tout premier chiffre ;</li>
<li>un chiffre qui peut être : 1, 2, 3, 4, 5, 6, 8, 9 ;</li>
<li>ensuite, 4 blocs composés d'un "-" suivi d'un nombre compris entre 00 et 99 inclus.</li>
</ul><br>
<br>
Si vous avez bien suivi le tuto de M@teo sur les regex, vous devez avoir une regex qui ressemble à ça : <br>
<strong><span class="courrier"><span class="gros">#^0[0-689](-[0-9]{2}){2}$#</span></span></strong> <br>
ou à ça : <br>
<strong><span class="courrier"><span class="gros">#^0[0-689](-[\d]{2}){2}$#</span></span></strong> <br>
<br>
Ces deux regex sont tout à fait correctes pour une application PHP, mais elles ne fonctionneront pas avec une application Java. Ceci pour deux raisons.<br>
<ul>
<li>En Java, il n'y a pas besoin de délimiteurs. Vous pouvez donc enlever les deux "<strong>#</strong>". Ceci concerne les deux regex.</li>
<li>Ce point, par contre, ne concerne que la deuxième. Le caractère "<strong>\</strong>", est utilisé comme caractère d'échappement, ceci afin de <span class="italique">dé-spécialiser</span> des caractères comme "<strong><span class="courrier">\n</span></strong>", "<strong><span class="courrier">\r</span></strong>"... La classe abrégée "<strong><span class="courrier">\d</span></strong>", correspondant à un chiffre, ne fonctionnera donc pas.</li>
</ul><br>
<br>
Afin de pouvoir utiliser les classes abrégées dans une regex, il faut faire en sorte que le backslash de la classe abrégée soit interprété comme tel et non comme un caractère d'échappement.<br>
<div class="rmq question">Comment ? <img src="./java_files/blink.gif" alt="o_O" class="smilies"></div><br>
Il faut tout simplement échapper le caractère d'échappement...<br>
Ce qui nous donne : <strong><span class="courrier"><span class="gros">^0[0-689](-[\\d]{2}){2}$</span></span></strong><br>
Le premier backslash échappe le second, ce qui a pour conséquence que celui-ci est interprété comme un backslash tout ce qu'il y a de plus normal et ainsi que notre classe abrégée fonctionne !  <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"> <br>
<br>
Maintenant, nous sommes parés pour utiliser des regex...<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10546">Utiliser des regex</h2>
		<div class="ss_part_texte">
		Avant de nous lancer tête baissée dans l'utilisation des regex en Java, vous devez savoir que vous pouvez procéder de deux façon différentes : <br>
<ul>
<li>en utilisant un objet <span class="violet"><strong><span class="courrier">String</span></strong></span> ;</li>
<li>en utilisant l'<acronym title="Application programming interface">API</acronym> regex qui se trouve dans le package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">regex</span>
</span>.</li>
</ul><br>
<br>
<h3>Les regex et l'objet <span class="violet">String</span></h3><br>
<br>
Vous allez voir que c'est simplissime.<br>
Nous avons donc convenu de la regex à utiliser afin de contrôler nos saisies de numéros de téléphone. <br>
Pour mémoire : <strong><span class="courrier">^0[0-689](-[\\d]{2}){4}$</span></strong><br>
<br>
Il ne nous reste plus qu'à dire au contenu de notre <strong><span class="violet"><span class="courrier">JFormattedTextField </span></span></strong>qu'il doit correspondre à celle-ci.<br>
<br>
Cette opération se fait grâce à la méthode <span class="code2 java"><span class="n">matches</span><span class="o">(</span><span class="n">String</span> <span class="n">regex</span><span class="o">)</span>
</span>, qui renvoie <strong><span class="violet"><span class="courrier">true</span></span></strong> si notre chaîne correspond à la regex ou <strong><span class="violet"><span class="courrier">false</span></span></strong>, dans le cas contraire.<br>
<br>
Voici le code qui met en oeuvre cette démarche : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.text.ParseException</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFormattedTextField</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.text.MaskFormatter</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JFormattedTextField</span> <span class="n">jtf</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">JFormattedTextField</span> <span class="n">jtf2</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Téléphone FR   "</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JButton</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span> <span class="o">(</span><span class="s">"OK"</span><span class="o">);</span>
    
    <span class="c">/**</span>
<span class="c">     * Constructeur de l'objet </span>
<span class="c">     */</span>
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">150</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
        
        <span class="k">try</span><span class="o">{</span>
        	   <span class="n">MaskFormatter</span> <span class="n">tel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MaskFormatter</span><span class="o">(</span><span class="s">"**-**-**-**-**"</span><span class="o">);</span>
        	   <span class="n">jtf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFormattedTextField</span><span class="o">(</span><span class="n">tel</span><span class="o">);</span>
        <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="n">ParseException</span> <span class="n">e</span><span class="o">){</span>
        	<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>        
        
        <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">14</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">);</span>
                
        <span class="n">b</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>
        
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jtf</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
       
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">top</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
     <span class="o">}</span>       
        
    <span class="k">class</span> <span class="nc">BoutonListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span> 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Téléphone FR  : "</span> <span class="o">+</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
                
                <span class="k">if</span><span class="o">(</span><span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">matches</span><span class="o">(</span><span class="s">"^0[0-689](-[\\d]{2}){4}$"</span><span class="o">)){</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Numéro de téléphone OK ! !"</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span><span class="o">{</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Numéro de téléphone PAS OK ! !"</span><span class="o">);</span>
                <span class="o">}</span>
        <span class="o">}</span>  
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ainsi que deux captures d'écran afin de bien vous montrer le résultat : <br>
<br>
<div class="centre"><img src="./java_files/125789.jpg" alt="Image utilisateur"><img src="./java_files/125790.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir que c'est très simple à utiliser... <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
Je profite de cet aparté sur les regex afin d'introduire une autre méthode : <span class="code2 java"><span class="n">replaceAll</span><span class="o">(</span><span class="n">String</span> <span class="n">regex</span><span class="o">,</span> <span class="n">String</span> <span class="n">remplacement</span><span class="o">)</span>
</span>.<br>
Grâce à cette dernière, vous pourrez changer tous les caractères, ou chaînes de caractères correspondant à la regex passée en premier paramètre par la chaîne passée en deuxième paramètre.<br>
<br>
Si nous appliquons ceci à notre exemple, en partant du principe que, si la saisie du numéro de téléphone est erronée, on remplace tous les caractères par des zéros, cela nous donne : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.text.ParseException</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFormattedTextField</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.text.MaskFormatter</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JFormattedTextField</span> <span class="n">jtf</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">JFormattedTextField</span> <span class="n">jtf2</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Téléphone FR   "</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JButton</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span> <span class="o">(</span><span class="s">"OK"</span><span class="o">);</span>
    
    <span class="c">/**</span>
<span class="c">     * Constructeur de l'objet </span>
<span class="c">     */</span>
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">150</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
        
        <span class="k">try</span><span class="o">{</span>
        	   <span class="n">MaskFormatter</span> <span class="n">tel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MaskFormatter</span><span class="o">(</span><span class="s">"**-**-**-**-**"</span><span class="o">);</span>
        	   <span class="n">jtf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFormattedTextField</span><span class="o">(</span><span class="n">tel</span><span class="o">);</span>
        <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="n">ParseException</span> <span class="n">e</span><span class="o">){</span>
        	<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>        
        
        <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">14</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">);</span>
                
        <span class="n">b</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>
        
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jtf</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
       
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">top</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
     <span class="o">}</span>       
        
    <span class="k">class</span> <span class="nc">BoutonListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span> 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Téléphone FR  : "</span> <span class="o">+</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
                
                <span class="k">if</span><span class="o">(</span><span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">matches</span><span class="o">(</span><span class="s">"^0[0-689](-[\\d]{2}){4}$"</span><span class="o">)){</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Numéro de téléphone OK ! !"</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span><span class="o">{</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Numéro de téléphone PAS OK ! !"</span><span class="o">);</span>
                	<span class="c">//Si la saisie est erronée</span>
                	<span class="c">//On remplace tous les caractères alphabétiques par des 0</span>
                	<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"\\w"</span><span class="o">,</span> <span class="s">"0"</span><span class="o">);</span>
                	<span class="n">jtf</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Après remplacement : "</span> <span class="o">+</span> <span class="n">str</span><span class="o">);</span>
                <span class="o">}</span>
        <span class="o">}</span>  
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat : <br>
<br>
<div class="centre"><img src="./java_files/125792.jpg" alt="Image utilisateur"></div><br>
<br>
Je pense que cette méthode pourrait vous être utile : on ne sait jamais... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Maintenant, nous allons voir comment avoir le même résultat avec l'API regex.<br>
<br>
<h3>Les regex et l'API regex</h3><br>
<br>
Avec cette méthode, nous allons utiliser deux nouveaux objets :<br>
<ul>
<li>un objet <strong><span class="violet"><span class="courrier">Pattern </span></span></strong>qui va contenir notre regex et qui va retourner un objet contenant le résultat de la comparaison ;</li>
<li>l'objet <strong><span class="violet"><span class="courrier">Matcher </span></span></strong>qui est le résultat de la comparaison de la regex avec la chaîne à tester.</li>
</ul><br>
<br>
Vous pourrez voir que ces objets sont très simples à utiliser. <br>
L'utilisation de l'objet <strong><span class="violet"><span class="courrier">Pattern </span></span></strong> se fait comme ceci : <br>
<span class="code2 java"><span class="n">Pattern</span> <span class="n">pattern</span> <span class="o">=</span> <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="s">"^0[0-689](-[\\d]{2}){4}$"</span><span class="o">);</span>
</span><br>
 <br>
Cette instruction déclare et initialise notre objet <strong><span class="violet"><span class="courrier">Pattern</span></span></strong>, celui-ci est maintenant prêt à tester des chaînes de caractères ! <br>
<br>
Le test d'une chaîne par rapport à une regex via l'objet <strong><span class="violet"><span class="courrier">Pattern</span></span></strong> se fait grâce à la méthode <span class="code2 java"><span class="n">matcher</span><span class="o">(</span><span class="n">String</span> <span class="n">string</span><span class="o">)</span>
</span> : il ne s'agit pas de la regex en paramètre, mais de la chaîne à tester ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Comme je vous l'ai dit plus haut, la comparaison via l'objet <strong><span class="violet"><span class="courrier">Pattern</span></span></strong> renvoie un objet <strong><span class="violet"><span class="courrier">Matcher</span></span></strong> qui, lui, contient le résultat du test (vrai ou faux) que nous pourrons récupérer grâce à la méthode <span class="code2 java"><span class="n">matches</span><span class="o">()</span>
</span>.<br>
<br>
Voici un exemple simple : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="syntax"><pre><span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="o">{</span><span class="s">"abcdef"</span><span class="o">,</span> <span class="s">"16464"</span><span class="o">,</span><span class="s">"1v"</span><span class="o">};</span>
<span class="c">//Regex qui vérifie si la chaîne ne contient que des chiffres</span>
<span class="n">Pattern</span> <span class="n">pattern</span> <span class="o">=</span> <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="s">"\\d+"</span><span class="o">);</span>
		
<span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tab</span><span class="o">){</span>
	<span class="n">Matcher</span> <span class="n">matcher</span> <span class="o">=</span> <span class="n">pattern</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>	
	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"Teste sur '"</span><span class="o">+</span><span class="n">str</span><span class="o">+</span><span class="s">"' : "</span><span class="o">);</span>
	<span class="c">//On regarde le résultat</span>
	<span class="k">if</span><span class="o">(</span><span class="n">matcher</span><span class="o">.</span><span class="na">matches</span><span class="o">())</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"OK ! ! "</span><span class="o">);</span>
	<span class="k">else</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"PAS OK ! ! "</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voilà le résultat : <br>
<div class="centre"><img src="./java_files/125952.jpg" alt="Image utilisateur"></div><br>
<br>
Rien de plus simple, n'est-ce pas ? <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
<div class="rmq question">On voit bien que le résultat est le même, mais... l'intérêt ?</div><br>
Je vais y venir, mais avant de vous expliquer pourquoi il est intéressant de passer par l'objet <strong><span class="violet"><span class="courrier">Pattern</span></span></strong>, vous devez savoir que vous pouvez ne pas utiliser l'objet <strong><span class="violet"><span class="courrier">Matcher</span></span></strong>. <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
Je vois bien que vous êtes un peu dans le flou... <br>
Reprenez ce que je vous ai dit plus haut : <strong><span class="rouge">l'objet <span class="courrier">Pattern </span>retourne un objet <span class="courrier">Matcher</span>.</span></strong><br>
Par conséquent, vous pouvez gagner un peu de mémoire en ne déclarant pas d'objet <strong><span class="violet"><span class="courrier">Matcher</span></span></strong> mais en vous servant de celui que vous retourne l'objet <strong><span class="violet"><span class="courrier">Pattern</span></span></strong> ! <br>
<br>
Voilà le code précédent mettant en oeuvre cette démarche : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="syntax"><pre><span class="n">String</span><span class="o">[]</span> <span class="n">tab</span> <span class="o">=</span> <span class="o">{</span><span class="s">"abcdef"</span><span class="o">,</span> <span class="s">"16464"</span><span class="o">,</span><span class="s">"1v"</span><span class="o">};</span>
<span class="c">//Regex qui vérifie si la chaîne ne contient que des chiffres</span>
<span class="n">Pattern</span> <span class="n">pattern</span> <span class="o">=</span> <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="s">"\\d+"</span><span class="o">);</span>
		
<span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">tab</span><span class="o">){</span>
	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"Teste sur '"</span><span class="o">+</span><span class="n">str</span><span class="o">+</span><span class="s">"' : "</span><span class="o">);</span>
	<span class="c">//On regarde le résultat, et plus besoin d'instancier un objet Matcher</span>
	<span class="k">if</span><span class="o">(</span><span class="n">pattern</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">str</span><span class="o">).</span><span class="na">matches</span><span class="o">())</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"OK ! ! "</span><span class="o">);</span>
	<span class="k">else</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"PAS OK ! ! "</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Je ne vous mets pas de capture d'écran car elle est identique à la précédente ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<div class="rmq question">Tu ne voudrais pas nous expliquer ça ?</div><br>
Bien sûr...<br>
<br>
En fait, repensez à la pile d'exécution lorsque nous avons abordé les threads.<br>
Ici, c'est la même chose. L'instruction <span class="code2 java"><span class="n">pattern</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">str</span><span class="o">).</span><span class="na">matches</span><span class="o">()</span>
</span> se découpe en deux.<br>
Lors de l'exécution, la JVM va lire cette ligne, elle voit qu'il y a plusieurs appels de méthode : par conséquent, elle va invoquer celle qui doit être exécutée en premier, faire ce qu'elle a à faire, puis passer à la suivante...<br>
<br>
Voilà un schéma résumant la situation : <br>
<br>
<div class="centre"><img src="./java_files/125957.jpg" alt="Image utilisateur"></div><br>
<br>
La flèche indique le sens dans lequel la JVM va lire l'instruction et l'exécuter. <br>
<ul>
<li>Elle va lire le <span class="code2 java"><span class="n">pattern</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">str</span><span class="o">)</span>
</span> qui, comme je vous l'ai déjà dit, retourne un objet <strong><span class="violet"><span class="courrier">Matcher</span></span></strong>. Étape 1.</li>
<li>Ensuite, elle va exécuter la méthode <span class="code2 java"><span class="n">matches</span><span class="o">()</span>
</span> qui est une méthode de l'objet <strong><span class="violet"><span class="courrier">Matcher</span></span></strong>. Étape 2.</li>
</ul><br>
Lors de l'étape 2, c'est comme si vous aviez un objet <strong><span class="violet"><span class="courrier">Matcher</span></span></strong> à la place de l'instruction correspondant à l'étape 1... La méthode <span class="code2 java"><span class="n">matches</span><span class="o">()</span>
</span> peut donc être invoquée ! <br>
<br>
Ainsi vous gagnez en objets, en lignes de codes et en mémoire... <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
Maintenant, la réponse à la question que vous vous posez :<br>
<br>
<div class="centre"><strong><span class="souligne">Pourquoi utiliser l'objet <span class="violet"><span class="courrier">Pattern </span></span>alors que l'objet <span class="violet"><span class="courrier">String </span></span>gère les regex ?</span></strong><br>
</div><br>
<br>
En fait, les deux méthodes sont équivalentes...<br>
C'est vrai que dans notre exemple, nous ne contrôlons qu'un champ. Mais ce ne sera peut-être pas toujours le cas... <br>
<br>
Imaginez-vous en train de développer un progiciel de gestion avec, sur une de ses IHM, 35 champs de saisie qui doivent contenir des codes spécifiques à une norme... La solution des regex semble la plus optimisée mais <strong>vous n'allez pas répéter la regex pour tous les contrôles de tous les champs ! !</strong><br>
Le jour où votre chef va vous demander de mettre à jour ladite expression car un nouveau code vient de faire son apparition, vous allez sûrement oublier un ou plusieurs champs ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Le fait d'utiliser un objet <strong><span class="violet"><span class="courrier">Pattern</span></span></strong>, dans ce cas, permet de centraliser la donnée qui va vous servir à contrôler vos champs et, au lieu de faire X modifications, vous n'avez qu'à changer l'objet <strong><span class="violet"><span class="courrier">Pattern</span></span></strong>.<br>
<br>
<h4><span class="souligne">Mais il y a une autre alternative</span></h4><br>
<br>
Vous pouvez aussi stocker votre regex dans un objet de type <strong><span class="violet"><span class="courrier">String </span></span></strong>et utiliser ce dernier dans tous vos contrôles, en utilisant la méthode <span class="code2 java"><span class="n">matches</span><span class="o">(</span><span class="n">String</span> <span class="n">regex</span><span class="o">)</span>
</span>. Le but final étant de centraliser les données dont vous vous servirez pour faire vos contrôles et que celles-ci soient facilement modifiables sans risque d'oubli.<br>
<br>
En bref, ces deux méthodes sont équivalentes.<br>
Je vous ai un peu induits en erreur, mais il était important que vous connaissiez l'API regex.<br>
<br>
Vous devez savoir tout de même que lorsque vous utilisez la méthode <span class="code2 java"><span class="n">matches</span><span class="o">(</span><span class="n">String</span> <span class="n">regex</span><span class="o">)</span>
</span> de l'objet <strong><span class="violet"><span class="courrier">String </span></span></strong>, celui-ci fait appel à l'objet <strong><span class="violet"><span class="courrier">Pattern </span></span></strong> dans cette méthode... <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
De même, lorsque vous utilisez la méthode <span class="code2 java"><span class="n">replaceAll</span><span class="o">(</span><span class="n">String</span> <span class="n">regex</span><span class="o">,</span> <span class="n">String</span> <span class="n">remplacement</span><span class="o">)</span>
</span>, celle-ci invoque l'expression <span class="code2 java"><span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="n">regex</span><span class="o">).</span><span class="na">matcher</span><span class="o">(</span><span class="n">str</span><span class="o">).</span><span class="na">replaceAll</span><span class="o">(</span><span class="n">repl</span><span class="o">)</span>
</span>.<br>
<br>
<h4><span class="souligne">Pour finir sur l'utilisation des regex</span></h4><br>
<br>
<strong><span class="vertf">Vous pouvez utiliser la méthode qui vous convient, mais gardez en tête qu'il faut que vos contrôles soient facilement modifiables !</span></strong><br>
<br>
Bon, vous venez de voir comment on peut gérer les saisies après les avoir tapées. Maintenant, je vous propose de voir comment intercepter les saisies des utilisateurs avant que votre composant ne soit affecté de quelque valeur que ce soit ! <img src="./java_files/smile.png" alt=":)" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10545">Contrôle du clavier : l'interface KeyListener</h2>
		<div class="ss_part_texte">
		Tout est dans le titre de cette sous-partie ! <br>
Vous connaissez déjà :<br>
<ul>
<li>l'interface <strong><span class="violet"><span class="courrier">MouseListener</span></span></strong> qui interagit avec votre souris ;</li>
<li>l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong> qui interagit lors d'un clic sur un composant ;</li>
<li>l'interface <strong><span class="violet"><span class="courrier">ItemListener</span></span></strong> qui écoute les événements sur une liste déroulante.</li> 
</ul><br>
<br>
Voici à présent l'interface <strong><span class="violet"><span class="courrier">KeyListener</span></span></strong>.<br>
Comme dit dans le titre, celle-ci va vous permettre d'intercepter les événements clavier lorsqu'on : <br>
<ul>
<li>presse une touche ;</li>
<li>relâche une touche ;</li>
<li>tape sur une touche.</li>
</ul><br>
<br>
Vous savez ce qu'il vous reste à faire : créer un implémentation de cette interface dans notre projet.<br>
Créez une classe interne implémentant cette interface et utilisez l'astuce d'Eclipse pour générer les méthodes à implémenter.<br>
<br>
Vous constatez que celle-ci a trois méthodes :<br>
<ul>
<li><strong><span class="courrier">KeyPressed</span></strong>(<strong><span class="courrier"><span class="violet">KeyEvent </span></span></strong>event) : appelée lorsqu'on presse une touche ;</li>
<li><strong><span class="courrier">keyReleased</span></strong>(<strong><span class="courrier"><span class="violet">KeyEvent </span></span></strong>event) : appelée lorsqu'on relâche une touche. C'est à ce moment que le composant se voit affecter la valeur de la touche ;</li>
<li><strong><span class="courrier">keyTyped</span></strong>(<strong><span class="violet"><span class="courrier">KeyEvent </span></span></strong>event) : appelée entre les deux méthodes citées ci-dessus.</li>
</ul><br>
<br>
Comme vous devez vous en douter, l'objet <strong><span class="violet"><span class="courrier">KeyEvent</span></span></strong> va nous permettre d'obtenir des informations sur les touches qui ont été utilisées... Parmi celles-ci, nous allons utiliser : <br>
<ul>
<li><strong><span class="courrier">getKeyCode()</span></strong> : retourne le code de la touche ;</li>
<li><strong><span class="courrier">getKeyChar()</span></strong> : retourne le caractère correspondant à la touche.</li>
</ul><br>
<br>
Vous pouvez aussi savoir si certaines touches de contrôle ont été utilisées (<span class="impact">SHIFT</span>, <span class="impact">CTRL</span>...), connaître le composant à l'origine de l'événement... Nous n'en parlerons pas ici mais ce genre d'informations sont faciles à trouver : <strong><span class="tgros"><span class="rouge"><a href="http://www.google.fr/">Google</a></span></span></strong>.<br>
<br>
Pour des raisons de simplicité, nous n'allons pas utiliser de <strong><span class="violet"><span class="courrier">JFormattedTextField </span></span></strong>mais un <strong><span class="violet"><span class="courrier">JTextField </span></span></strong>sans <strong><span class="violet"><span class="courrier">MaskFormatter</span></span></strong>. Ainsi, nous n'aurons pas à nous préoccuper des "<strong><span class="gros">-</span></strong>" de notre champ.<br>
<br>
Pour commencer, nous allons voir dans quel ordre se passent les événements clavier.<br>
Voici le code source que nous allons utiliser, il est presque identique aux précédents, rassurez-vous : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.KeyEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.KeyListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.text.ParseException</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.regex.Pattern</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFormattedTextField</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JTextField</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.text.MaskFormatter</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JTextField</span> <span class="n">jtf</span><span class="o">;</span>
    
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Téléphone FR   "</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JButton</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span> <span class="o">(</span><span class="s">"OK"</span><span class="o">);</span>
    <span class="c">//Création de l'objet pattern dont nous allons nous servir pour </span>
    <span class="c">//tester le contenu de notre champ</span>
    <span class="k">private</span> <span class="n">Pattern</span> <span class="n">regex</span><span class="o">;</span>
    
    <span class="c">/**</span>
<span class="c">     * Constructeur de l'objet </span>
<span class="c">     */</span>
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
    	<span class="c">//On initialise notre pattern</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">regex</span>  <span class="o">=</span> <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="s">"^0[0-689](-[\\d]{2}){4}$"</span><span class="o">);</span>
    	
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">150</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
        
        <span class="n">jtf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTextField</span><span class="o">();</span>
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>        
        
        <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">14</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">);</span>
        <span class="c">//On ajoute l'écouteur à notre composant</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">addKeyListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ClavierListener</span><span class="o">());</span>
        
        <span class="n">b</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>
        
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jtf</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
       
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">top</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
     <span class="o">}</span>       
        
    <span class="k">class</span> <span class="nc">BoutonListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span> 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Téléphone FR  : "</span> <span class="o">+</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
                <span class="k">if</span><span class="o">(</span><span class="n">regex</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">()).</span><span class="na">matches</span><span class="o">()){</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Numéro de téléphone OK ! !"</span><span class="o">);</span>
                	<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"\\d"</span><span class="o">,</span> <span class="s">"X"</span><span class="o">);</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Après remplacement : "</span> <span class="o">+</span> <span class="n">str</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span><span class="o">{</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Numéro de téléphone PAS OK ! !"</span><span class="o">);</span>
                	<span class="c">//Si la saisie est erronée</span>
                	<span class="c">//On remplace tous les caractères alphabétiques par des 0</span>
                	<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"\\w"</span><span class="o">,</span> <span class="s">"0"</span><span class="o">);</span>
                	<span class="n">jtf</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Après remplacement : "</span> <span class="o">+</span> <span class="n">str</span><span class="o">);</span>
                <span class="o">}</span>
        <span class="o">}</span>  
    <span class="o">}</span>    
    
    <span class="c">/**</span>
<span class="c">     * Implémentataion de l'interface KeyListener</span>
<span class="c">     * @author CHerby</span>
<span class="c">     */</span>
    <span class="k">class</span> <span class="nc">ClavierListener</span> <span class="k">implements</span> <span class="n">KeyListener</span><span class="o">{</span>
    	
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">keyPressed</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Code touche pressée : "</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="na">getKeyCode</span><span class="o">()</span> <span class="o">+</span> 
								<span class="s">" - caractère touche pressée : "</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">());</span>
		<span class="o">}</span>

		<span class="k">public</span> <span class="kt">void</span> <span class="nf">keyReleased</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Code touche relâchée : "</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="na">getKeyCode</span><span class="o">()</span> <span class="o">+</span> 
					<span class="s">" - caractère touche relâchée : "</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">());</span>			
						
		<span class="o">}</span>

		<span class="k">public</span> <span class="kt">void</span> <span class="nf">keyTyped</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Code touche tapée : "</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="na">getKeyCode</span><span class="o">()</span> <span class="o">+</span> 
					<span class="s">" - caractère touche tapée : "</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">());</span>
		<span class="o">}</span>    	
    <span class="o">}</span>    
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici un petit jeu d'essai de ce code : <br>
<br>
<div class="centre"><img src="./java_files/126103.jpg" alt="Image utilisateur"></div><br>
<br>
C'est vrai que les événements vont tellement vite que n'avez pas le temps de voir le défilement.<br>
Vous pouvez ajouter une pause à la fin de chaque méthode de l'implémentation afin de mieux voir l'ordre d'exécution, comme ceci : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">ClavierListener</span> <span class="k">implements</span> <span class="n">KeyListener</span><span class="o">{</span>
    	
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">keyPressed</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Code touche pressée : "</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="na">getKeyCode</span><span class="o">()</span> <span class="o">+</span> 
								<span class="s">" - caractère touche pressée : "</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">());</span>
			<span class="n">pause</span><span class="o">();</span>			
		<span class="o">}</span>

		<span class="k">public</span> <span class="kt">void</span> <span class="nf">keyReleased</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Code touche relâchée : "</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="na">getKeyCode</span><span class="o">()</span> <span class="o">+</span> 
					<span class="s">" - caractère touche relâchée : "</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">());</span>	
			<span class="n">pause</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="k">public</span> <span class="kt">void</span> <span class="nf">keyTyped</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Code touche tapée : "</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="na">getKeyCode</span><span class="o">()</span> <span class="o">+</span> 
					<span class="s">" - caractère touche tapée : "</span> <span class="o">+</span> <span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">());</span>
			<span class="n">pause</span><span class="o">();</span>
		<span class="o">}</span>    	
    <span class="o">}</span>
    
    <span class="k">private</span> <span class="kt">void</span> <span class="nf">pause</span><span class="o">(){</span>
    	<span class="k">try</span> <span class="o">{</span>
			<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">1000</span><span class="o">);</span>
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">// TODO Auto-generated catch block</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>
    <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<br>
<br>
<br>
<br>
Maintenant, vous pouvez voir dans quel ordre les événements du clavier sont gérés. <br>
En premier lorsqu'on presse la touche, en second lorsque celle-ci est tapée et enfin relâchée.<br>
<br>
Dans le cas qui nous intéresse, nous voulons que lorsque l'utilisateur saisit un caractère non autorisé, celui-ci soit retiré automatiquement de la zone de saisie. Pour cela, nous allons faire un traitement spécifique dans la méthode <strong><span class="courrier">keyReleased(<span class="violet">KeyEvent </span>event)</span></strong>. <br>
<br>
Si vous avez fait beaucoup de tests de touches, vous avez dû remarquer que les codes des touches correspondant aux chiffres du pavé numérique sont compris entre <strong><span class="gros">96</span></strong> et <strong><span class="gros">105</span></strong> !<br>
<br>
À partir de là, c'est simple : il vous suffit de supprimer le caractère tapé de la zone de saisie si le code de celui-ci n'est pas compris dans cette tranche de code.<br>
Mais voilà, un problème se pose avec cette méthode : pour celles et ceux qui ont un PC portable, sans pavé numérique, la saisie sera impossible alors que vous pouvez avoir des chiffres en faisant <strong>MAJ</strong> + (<strong>&amp;</strong> ou <strong>é</strong> ou <strong>'</strong> ou <strong>(</strong> ou encore <strong>-</strong> ...). <br>
<br>
À cause de ce souci, nous allons opter pour une autre méthode. Nous allons créer une méthode ayant comme type de renvoi un booléen et qui va se charger de nous dire si la saisie est numérique ou non. Comment ? Tout simplement en faisant un <span class="code2 java"><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
</span>, le tout enveloppé dans un <strong><span class="violet"><span class="courrier">try{...} catch(NumberFormatException ex){}</span></span></strong>. <br>
Si nous essayons de convertir un caractère "a" en entier, l'exception sera levée et nous retournerons FAUX, et VRAI dans le cas contraire... <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
<div class="rmq erreur"><strong>Attention :</strong> la méthode <strong><span class="courrier">parseInt()</span></strong> prendra un <strong><span class="courrier">String </span></strong>en paramètre ! La méthode <strong><span class="courrier">getKeyChar()</span></strong>, elle, nous renvoie un <strong><span class="courrier">char</span></strong>... Il faudra penser à faire la conversion...</div><br>
<br>
Voici notre implémentation quelque peu modifiée : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">ClavierListener</span> <span class="k">implements</span> <span class="n">KeyListener</span><span class="o">{</span>
    	
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">keyReleased</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="k">if</span><span class="o">(!</span><span class="n">isNumeric</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">())){</span>
				<span class="n">jtf</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">replace</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">()),</span> <span class="s">""</span><span class="o">));</span>
			<span class="o">}</span>			
		<span class="o">}</span>
		
		<span class="c">//Inutile de redéfinir ces méthodes</span>
		<span class="c">//Nous n'en avons plus l'utilité !</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">keyPressed</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">keyTyped</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{}</span>
		
		<span class="c">/**</span>
<span class="c">		 * Retourne vrai si le paramètre est numérique</span>
<span class="c">		 * Retourne Faux dans le cas contraire</span>
<span class="c">		 * @param carac</span>
<span class="c">		 * @return Boolean</span>
<span class="c">		 */</span>
		<span class="k">private</span> <span class="kt">boolean</span> <span class="nf">isNumeric</span><span class="o">(</span><span class="kt">char</span> <span class="n">carac</span><span class="o">){</span>
	    	<span class="k">try</span> <span class="o">{</span>
				<span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">carac</span><span class="o">));</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NumberFormatException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>				
			<span class="o">}</span>
			<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
	    <span class="o">}</span>
    <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez voir que les lettres simples sont désormais interdites à la saisie =&gt; <strong>Mission accomplie !</strong> <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
<div class="rmq attention">Les caractères spéciaux comme "ô", "ï"... ne sont pas pris en charge par cette méthode... Par conséquent, leur saisie reste possible <img src="./java_files/triste.png" alt=":(" class="smilies"> . Mais c'est à ça que sert notre contrôle avec la regex <img src="./java_files/heureux.png" alt=":D" class="smilies"> .</div><br>
<br>
Par contre, je ne sais pas pour vous mais, le fait d'avoir deux méthodes sans corps me dérange un peu...<br>
<div class="rmq question">On peut éviter ce genre de chose ? <img src="./java_files/blink.gif" alt="o_O" class="smilies"><br>
Comment ? Puisque nous devons redéfinir toutes les méthodes de l'interface !</div><br>
Tout à fait. Il existe une classe, <strong><span class="violet"><span class="courrier">KeyAdapter</span></span></strong>, que vous pouvez étendre (par là comprenez : créez une classe héritée) et ne redéfinir que la méthode qui nous intéresse, et donc ADIEU aux deux méthodes vides !<br>
<br>
Vous pouvez bien entendu créer un classe interne héritée de <span class="courrier"><span class="violet"><strong>KeyAdapter </strong></span></span>et redéfinir la méthode <strong><span class="courrier">keyReleased(<span class="violet">KeyEvent </span>event)</span></strong> mais je vais en profiter pour vous montrer une autre méthode.<br>
<br>
<h3>Utiliser les classes anonymes</h3><br>
<br>
Il n'y a rien de compliqué dans cette manière de faire, mais je me rappelle avoir été déconcerté lorsque je l'ai vue pour la première fois...<br>
<br>
En fait, les classes anonymes sont le plus souvent utilisées pour la gestion d'événements ponctuels, là où créer une classe pour un seul traitement est trop lourd...<br>
<br>
Notre exemple est très bien pour les classes anonymes : nous n'avons qu'un champ et une redéfinition de méthode. Maintenant, adieu à l'implémentation que vous avez codée tout à l'heure, nous allons dire à notre <strong><span class="violet"><span class="courrier">JTextField</span></span></strong> qu'une instance d'une classe anonyme va l'écouter. Attention les yeux, ça risque de piquer un peu : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.KeyAdapter</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.KeyEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.KeyListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.regex.Pattern</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JTextField</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
        
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JTextField</span> <span class="n">jtf</span><span class="o">;</span>
    
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Téléphone FR   "</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JButton</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span> <span class="o">(</span><span class="s">"OK"</span><span class="o">);</span>
    <span class="c">//Création de l'objet pattern dont nous allons nous servir pour </span>
    <span class="c">//tester le contenu de notre champ</span>
    <span class="k">private</span> <span class="n">Pattern</span> <span class="n">regex</span><span class="o">;</span>
    
    <span class="c">/**</span>
<span class="c">     * Constructeur de l'objet </span>
<span class="c">     */</span>
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
        
    	<span class="c">//On initialise notre pattern</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">regex</span>  <span class="o">=</span> <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="s">"^0[0-689](-[\\d]{2}){4}$"</span><span class="o">);</span>
    	
        <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">150</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
 
        <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
        <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
        
        <span class="n">jtf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTextField</span><span class="o">();</span>
        <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>        
        
        <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">14</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">);</span>
        
        <span class="c">//**********************************************</span>
        <span class="c">//Voilà notre classe anonyme</span>
        <span class="c">//**********************************************</span>
        <span class="n">jtf</span><span class="o">.</span><span class="na">addKeyListener</span><span class="o">(</span><span class="k">new</span> <span class="n">KeyAdapter</span><span class="o">(){</span>
        	
        	<span class="k">public</span> <span class="kt">void</span> <span class="nf">keyReleased</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
    			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"keyReleased dans une classe anonyme"</span><span class="o">);</span>
    			<span class="k">if</span><span class="o">(!</span><span class="n">isNumeric</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">())){</span>
    				<span class="n">jtf</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">replace</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">()),</span> <span class="s">""</span><span class="o">));</span>
    			<span class="o">}</span>			
    		<span class="o">}</span>
    		
    		<span class="k">private</span> <span class="kt">boolean</span> <span class="nf">isNumeric</span><span class="o">(</span><span class="kt">char</span> <span class="n">carac</span><span class="o">){</span>
    	    	<span class="k">try</span> <span class="o">{</span>
    				<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">carac</span><span class="o">));</span>
    			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NumberFormatException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
    				<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>				
    			<span class="o">}</span>
    			<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    	    <span class="o">}</span>
        	
        <span class="o">});</span>
        <span class="c">//**********************************************</span>
        
        <span class="n">b</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>
        
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jtf</span><span class="o">);</span>
        <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
       
        <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">top</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
     <span class="o">}</span>       
        
    <span class="k">class</span> <span class="nc">BoutonListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span> 
        <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Téléphone FR  : "</span> <span class="o">+</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
                <span class="k">if</span><span class="o">(</span><span class="n">regex</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">()).</span><span class="na">matches</span><span class="o">()){</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Numéro de téléphone OK ! !"</span><span class="o">);</span>
                	<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"\\d"</span><span class="o">,</span> <span class="s">"X"</span><span class="o">);</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Après remplacement : "</span> <span class="o">+</span> <span class="n">str</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span><span class="o">{</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Numéro de téléphone PAS OK ! !"</span><span class="o">);</span>
                	<span class="c">//Si la saisie est erronée</span>
                	<span class="c">//On remplace tous les caractères alphabétiques par des 0</span>
                	<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"\\w"</span><span class="o">,</span> <span class="s">"0"</span><span class="o">);</span>
                	<span class="n">jtf</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
                	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Après remplacement : "</span> <span class="o">+</span> <span class="n">str</span><span class="o">);</span>
                <span class="o">}</span>
        <span class="o">}</span>  
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce code a le même effet que le précédent : la seule chose qui change, c'est qu'au lieu d'avoir une implémentation de l'interface <strong><span class="violet"><span class="courrier">KeyListener </span></span></strong>ou d'avoir une classe interne héritée de <strong><span class="violet"><span class="courrier">KeyAdapter</span></span></strong>, nous utilisons une classe anonyme au moment où nous définissons l'écouteur pour notre composant.<br>
<br>
Décortiquons tout ça...<br>
Nous avons toujours notre instruction <span class="code2 java"><span class="n">jtf</span><span class="o">.</span><span class="na">addKeyListener</span><span class="o">();</span>
</span>, sauf qu'au lieu de lui donner une instance habituelle, nous créons une classe qui redéfinit la méthode qui nous intéresse. Ceci en faisant :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="k">new</span> <span class="nf">KeyAdapter</span><span class="o">(){</span>
 <span class="c">//Redéfinition de la classe</span>
<span class="o">};</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
De ce fait, vous pouvez aussi créer une instance de type <strong><span class="violet"><span class="courrier">KeyAdapter </span></span></strong>en utilisant une classe interne comme implémentation : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="syntax"><pre><span class="n">KeyAdapter</span> <span class="n">kAdapter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">KeyAdapter</span><span class="o">(){</span>
 <span class="c">//Redéfinissions de la classe</span>
<span class="o">};</span>
<span class="n">jtf</span><span class="o">.</span><span class="na">addKeyListener</span><span class="o">(</span><span class="n">kAdapter</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq erreur"><strong>Attention :</strong> vous avez dû le remarquer mais je préfère le dire, dans ce type de déclaration, le "<strong><span class="gros">;</span></strong>" final se trouve <strong>après l'accolade fermante de la classe anonyme ! !</strong></div><br>
<br>
L'une des particularités de cette façon de faire, c'est que cet écouteur n'écoutera que ce composant !<br>
<br>
<div class="rmq question">Pourquoi on appelle ça une classe <strong><span class="italique">anonyme</span></strong> ?</div><br>
C'est simple : le fait de procéder de cette manière revient à créer une classe héritée sans être obligés de créer de façon explicite ladite classe.<br>
L'héritage se fait automatiquement, en fait, le code ci-dessus reviendrait à faire : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></td><td class="code"><div class="syntax"><pre><span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>

  <span class="c">//...</span>
  <span class="n">jtf</span><span class="o">.</span><span class="na">addKeyListener</span><span class="o">(</span><span class="k">new</span> <span class="n">KeyAdapterBis</span><span class="o">());</span>

  <span class="c">//...</span>

   <span class="k">public</span> <span class="k">class</span> <span class="nc">keyAdapterBis</span> <span class="k">extends</span> <span class="n">Keyadapter</span><span class="o">{</span>

        <span class="k">public</span> <span class="kt">void</span> <span class="nf">keyReleased</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
    			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"keyReleased dans une classe anonyme"</span><span class="o">);</span>
    			<span class="k">if</span><span class="o">(!</span><span class="n">isNumeric</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">())){</span>
    				<span class="n">jtf</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">replace</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">()),</span> <span class="s">""</span><span class="o">));</span>
    			<span class="o">}</span>			
    		<span class="o">}</span>
    		
    		<span class="k">private</span> <span class="kt">boolean</span> <span class="nf">isNumeric</span><span class="o">(</span><span class="kt">char</span> <span class="n">carac</span><span class="o">){</span>
    	    	<span class="k">try</span> <span class="o">{</span>
    				<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">carac</span><span class="o">));</span>
    			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NumberFormatException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
    				<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>				
    			<span class="o">}</span>
    			<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    	    <span class="o">}</span>

   <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Mais la classe créée n'a pas de nom ! L'héritage se fait de façon tacite. On bénéficie donc de tous les avantages de la classe mère en ne redéfinissant que la méthode qui nous intéresse. <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
Vous devez savoir aussi que les classes anonymes peuvent être utilisées pour implémenter des interfaces. Ce code est tout aussi équivalent aux précédents : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="syntax"><pre><span class="n">jtf</span><span class="o">.</span><span class="na">addKeyListener</span><span class="o">(</span><span class="k">new</span> <span class="n">KeyListener</span><span class="o">(){</span>
        	
        	<span class="k">public</span> <span class="kt">void</span> <span class="nf">keyReleased</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
    			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"keyReleased dans une classe anonyme"</span><span class="o">);</span>
    			<span class="k">if</span><span class="o">(!</span><span class="n">isNumeric</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">())){</span>
    				<span class="n">jtf</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">replace</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getKeyChar</span><span class="o">()),</span> <span class="s">""</span><span class="o">));</span>
    			<span class="o">}</span>			
    		<span class="o">}</span>
    		
    		<span class="k">private</span> <span class="kt">boolean</span> <span class="nf">isNumeric</span><span class="o">(</span><span class="kt">char</span> <span class="n">carac</span><span class="o">){</span>
    	    	<span class="k">try</span> <span class="o">{</span>
    				<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">carac</span><span class="o">));</span>
    			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NumberFormatException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
    				<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>				
    			<span class="o">}</span>
    			<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    	    <span class="o">}</span>
	    
            <span class="c">//Méthode de l'interface a redéfinir </span>
            <span class="k">public</span> <span class="kt">void</span> <span class="nf">keyPressed</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
	    <span class="k">public</span> <span class="kt">void</span> <span class="nf">keyTyped</span><span class="o">(</span><span class="n">KeyEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
       	
        <span class="o">});</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Les classes anonymes sont soumises aux mêmes lois que les classes <strong><span class="italique">normales</span></strong> : <br>
<ul>
<li>utilisation des méthodes non redéfinies de la classe mère ;</li>
<li>OBLIGATION de redéfinir TOUTES LES MÉTHODES d'une interface ;</li>
<li>OBLIGATION de redéfinir les méthodes abstraites d'une classe abstraite.</li>
</ul><br>
<br>
Cependant, elles ont des restrictions de par leur essence et par là, je veux dire leur rôle et leur but :<br>
<ul>
<li>ces classes ne peuvent pas être déclarées <strong><span class="violet"><span class="courrier">abstract</span></span></strong> !</li>
<li>elles ne peuvent pas non plus être <strong><span class="violet"><span class="courrier">static</span></span></strong> ;</li>
<li>elles ne peuvent pas définir de constructeur ;</li>
<li>elles sont automatiquement déclarées <strong><span class="violet"><span class="courrier">final</span></span></strong> : impossible de dériver de cette classe, donc héritage impossible !</li>
</ul><br>
<br>
Encore une chose avant de terminer ce chapitre sur le JTextField : il existe encore deux objets fonctionnant de la même manière : <br>
<ul>
<li>le <strong><span class="violet"><span class="courrier">JPasswordField </span></span></strong>: utilisé pour les saisies de mots de passe ;</li>
<li>le <strong><span class="violet"><span class="courrier">JTextArea </span></span></strong>: utilisé, lui, pour les saisies multilignes.</li>
</ul><br>
Essayez-les, vous verrez que leur utilisation est très simple.<br>
<br>
Bon, après toutes ces émotions, je crois qu'un petit topo s'impose... <img src="./java_files/langue.png" alt=":p" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10544">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Par défaut, un <strong><span class="violet"><span class="courrier">JTextField </span></span></strong>accepte tous types de caractères.</li>
<li>Un <strong><span class="violet"><span class="courrier">JFormattedTextField </span></span></strong>est, pour simplifier, un <strong><span class="violet"><span class="courrier">JTextField </span></span></strong>plus restrictif.</li>
<li>On peut restreindre la saisie d'un de ces objets en utilisant l'objet <strong><span class="violet"><span class="courrier">MaskFormatter</span></span></strong>.</li>
<li>Pour contrôler les événements clavier, l'utilisation d'une implémentation de l'interface <strong><span class="violet"><span class="courrier">KeyListener</span></span></strong> est de mise.</li>
<li>Vous pouvez utiliser une classe dérivée de <strong><span class="violet"><span class="courrier">KeyAdapter </span></span></strong>à la place d'une implémentation de <strong><span class="violet"><span class="courrier">KeyListener</span></span></strong>.</li>
<li>Une classe anonyme est propre à un objet.</li>
<li>Une classe anonyme est automatiquement déclarée <strong><span class="violet"><span class="courrier">final </span></span></strong>: donc pas d'héritage possible.</li>
<li>Vous pouvez utiliser les regex avec l'objet <strong><span class="violet"><span class="courrier">String </span></span></strong>ou avec l'objet <strong><span class="violet"><span class="courrier">Pattern</span></span></strong>.</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Vous avez vu que cet objet est très simple à utiliser...<br>
La plupart des composants que vous pouvez utiliser dans un formulaire de base ont été vus.<br>
Je vous propose donc de faire un détour vers ce qu'on appelle <strong><span class="orange">les Applets</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10564">Les applets</h1>
	<div id="chap_intro">
	Dans ce chapitre, vous apprendrez tout ce qu'il y a savoir sur les applets : <br>
<ul>
<li>ce qu'elles sont ;</li>
<li>comment les créer ;</li>
<li>comment les intégrer dans une page web ;</li>
<li>faire interagir votre applet via du Javascript ;</li>
<li>appeler du Javascript via votre applet ;</li>
<li>...</li>
</ul><br>
<br>
Par contre, afin de suivre ce chapitre dans les meilleures conditions, je vous conseille d'avoir des bases en Javascript.<br>
Pour ce faire, vous pouvez utiliser <a href="http://www.siteduzero.com/tuto-3-2329-0-tout-sur-le-javascript.html">ce tuto</a>. <br>
Vous pouvez le lire jusqu'au chapitre 2 de la partie 2, au moins ! <br>
<br>
Je sens que vous êtes impatients de commencer, alors allons-y ! <img src="./java_files/smile.png" alt=":)" class="smilies">
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10563">Les applets : quésaco ?</h2>
		<div class="ss_part_texte">
		Un applet est une application Java insérée dans une page web. <br>
Ce genre d'application est appelée <span class="italique">application client</span> car elle est utilisée par celui qui appelle la page web (le client), et non par celui qui la génère (le serveur).<br>
<br>
Il ne faut pas confondre un applet et une application <acronym title="Java 2 Enterprise Edition">J2EE</acronym> (maintenant <acronym title="Java (5) Enterprise Edition">JEE</acronym>). Pour bien comprendre à quel niveau se situe l'applet dans le cycle de vie d'une page web, un petit schéma s'impose. Ce schéma représente le cycle de vie d'une page web dite dynamique, c'est-à-dire que celle-ci contient du code interprété par le serveur (Java, PHP, ASP...) qui est ici une page contenant du code Java : <br>
<br>
<div class="centre"><img src="./java_files/126717.jpg" alt="Image utilisateur"></div><br>
<br>
<ul>    
<li><strong><span class="bleugris">(1)</span></strong> <strong>Le client émet une requête</strong> (saisie d'une URL, clic sur un lien...) pour demander une ressource au serveur. Exemple : <strong><span class="italique"><span class="vertf"><a href="http://www.monserveur.com/tuto.do">http://www.monserveur.com/tuto.do</a></span></span></strong>. Il ne sait pas ici si la réponse qui va lui parvenir est statique (page HTML simple) ou dynamique (générée par une application web). Dans notre cas, il s'agit d'une application répondant à l'adresse "<strong><span class="italique"><span class="vertf">tuto.do</span></span></strong>" sur le serveur "<strong><span class="italique"><span class="vertf">monserveur.com</span></span></strong>".</li>    
<li><strong><span class="bleugris">(2)</span></strong> Côté serveur, <strong>c'est le serveur web (exemple : Apache) qui traite les requêtes HTTP</strong> entrantes. Il traite donc toutes les requêtes, qu'elles demandent une ressource statique ou dynamique. Seulement, un serveur HTTP ne sait répondre qu'aux requêtes visant des ressources statiques. <strong>Il ne peut que renvoyer des pages HTML, des images, des applets... existantes</strong>.</li>    
<li> <strong><span class="bleugris">(3)</span></strong> Ainsi, si le serveur HTTP s'aperçoit que la requête reçue est destinée au serveur d'applications, il la lui transmet. Les deux serveurs sont reliés par un canal, nommé "<strong><span class="italique"><span class="vertf">connecteur</span></span></strong>".</li>    
<li><strong><span class="bleugris">(4)</span></strong> <strong>Le serveur d'applications (exemple : Tomcat ! Serveur d'applications Java) reçoit la requête à son tour</strong>. Il est, lui, en mesure de la traiter. Il exécute donc le morceau d'application (la <span class="italique">servlet</span>) auquel est destinée la requête, en fonction de l'URL. Cette opération est effectuée à partir de la configuration du serveur. La servlet est donc invoquée, et le serveur lui fournit notamment deux objets Java exploitables : un représentant la requête, l'autre représentant la réponse. <strong>La servlet peut maintenant travailler, et générer la réponse à la demande</strong>. Cela peut passer par la consultation de sources de données, comme des bases de données (4'' sur le schéma). Ou bien par l'interrogation d'autres serveurs ou systèmes (4' sur le schéma), l'environnement Java web permettant de se connecter à de nombreux systèmes.</li>    
<li><strong><span class="bleugris">(5)</span></strong> <strong>Une fois sa réponse générée, le serveur d'applications la renvoie, par le connecteur, au serveur web</strong>. Celui-ci la récupère comme s'il était lui-même allé chercher une ressource statique. Il a simplement délégué la récupération de la réponse, et celle-ci a été générée, mais ce n'est plus le problème.</li>    
<li><strong><span class="bleugris">(6)</span></strong> <strong>La réponse est dorénavant du simple code HTML</strong>, compréhensible par un navigateur. Le serveur HTTP peut donc retourner la réponse au client. Celle-ci contient toutes les ressources nécessaires (feuilles Javascript, feuilles CSS, applet Java, images...).</li>
</ul><br>
<br>
<div class="rmq information">Les servlets sont en fait des classes Java. Celles-ci peuvent être des classes Java programmées par un développeur ou une page <acronym title="Java Server Page">JSP</acronym> (page web contenant du code Java) compilée en servlet par le serveur d'application avant traitement par celui-ci. Nous reviendrons sur tous ces points plus tard, nous n'avons pas besoin d'en savoir plus pour le moment... <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
<br>
Ceci est un résumé du cycle de vie d'une page web faite avec la technologie J2EE. Je me doute que vous devez avoir des sueurs froides, mais ne vous inquiétez pas, nous reverrons tout ça plus en détail lorsque nous aborderons le développement web en Java...<br>
Pour le moment, tout ce que vous avez besoin de savoir c'est qu'<strong>un applet est une ressource utilisée par votre navigateur, tout comme une image : à la différence que là, il s'agit d'un programme qui va s'exécuter sur votre page !</strong> <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Les ressources utilisées par votre navigateur pour charger et utiliser un applet sont chargées au chargement de la page, après que le serveur web ait renvoyé la réponse à votre requête.<br>
<strong>Ces ressources sont dans le code source HTML de la page</strong> et le navigateur charge tout ce dont il a besoin pour afficher la page comme le développeur l'a souhaité (images, feuilles CSS, applet...).<br>
<br>
Vous pouvez voir un aperçu de notre animation version applet<a href="http://www.siteduzero.com/uploads/fr/ftp/cysboy/applet/animation.html"> par ici</a>.<br>
Vous constaterez que le programme fonctionne parfaitement, comme s'il s'agissait d'une application fenêtrée, mais là, notre programme Java s'exécute sur une page web !<br>
<br>
<div class="rmq erreur"><strong><span class="souligne">Attention</span> : il se peut que votre navigateur n'autorise pas l'exécution des applets Java  !</strong><br>
Pour remédier à ce problème, vous devez allez dans les options internet : <strong><span class="italique">menu Outils &gt; Options</span></strong> dans l'onglet <strong>Contenu</strong> : cochez "<strong><span class="italique">autoriser le Java</span></strong>", sous Firefox.<br>
Sous IE 7, faites : <strong><span class="italique">Outils &gt; Options internet</span></strong>, dans l'onglet "<strong><span class="italique">content</span></strong>", cochez la case "<strong><span class="italique">utiliser JRE 1.X.XX pour les applets</span></strong>" où X.XX correspond à la version de votre JRE installé sur votre machine.</div><br>
<br>
Maintenant, vous savez distinguer une application client d'une application serveur et donc, vous ne devrez plus faire l'amalgame entre applet et servlet !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10562">Votre première applet</h2>
		<div class="ss_part_texte">
		Il est temps maintenant de faire votre première applet.<br>
Vous allez voir que c'est très simple et que ça ressemble beaucoup à ce que vous avez fait jusque-là. En fait, c'est quasiment identique à une exception près :<br>
<strong>un applet n'a pas de constructeur mais elle utilise la méthode <span class="code2 java"><span class="n">init</span><span class="o">()</span>
</span> de la super-classe <span class="violet"><span class="courrier">Applet </span></span>du package <span class="courrier">awt</span> ou <span class="violet"><span class="courrier">JApplet </span></span>du package <span class="courrier">swing</span>.</strong><br>
<br>
<h3>Codage de l'applet</h3><br>
<br>
Nous allons faire un applet avec un code minimal, disons un label et un bouton. Lors du clic sur <span class="courrier">bouton</span>, nous afficherons le nombre de clics effectués. Rien de bien méchant. Créez un nouveau projet avec une classe <strong><span class="violet"><span class="courrier">FirstApplet </span></span></strong>héritée de <strong><span class="violet"><span class="courrier">JApplet</span></span></strong>.<br>
<br>
Voici le code source de votre première applet : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JApplet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FirstApplet</span> <span class="kd">extends</span> <span class="n">JApplet</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">();</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Cliquez"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	<span class="c">/**</span>
<span class="c">	 * Méthode d'initialisation de l'applet</span>
<span class="c">	 * C'est cette méthode qui fait office de constructeur</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">80</span><span class="o">);</span>

		<span class="c">//On centre le texte du JLabel et on écrit en bleu...</span>
		<span class="n">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="c">//C'est plus zoli. </span>
		<span class="n">label</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
				
		<span class="c">//Allez, une classe anonyme... Just for the fun ;)</span>
		<span class="k">this</span><span class="o">.</span><span class="na">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Vous avez cliqué "</span> <span class="o">+</span> <span class="o">(++</span><span class="n">count</span><span class="o">)</span> <span class="o">+</span> <span class="s">" fois sur le bouton"</span><span class="o">);</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		
		<span class="c">//On ajoute nos composants</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
		<span class="c">//Et le tour est joué !</span>
	<span class="o">}</span>
	
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Avant de vous lancer dans le test de cette première applet, vous devez savoir tout de même que, mis à part quelques méthodes comme <span class="code2 java"><span class="n">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">)</span>
</span>, <span class="code2 java"><span class="n">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span>
</span> et quelques autres propres aux objets <strong><span class="violet"><span class="courrier">JFrame</span></span></strong>, les applets s'utilisent de la même manière. Bien sûr, avec la méthode <span class="code2 java"><span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">()</span>
</span> à la place d'un constructeur !<br>
<br>
Maintenant, avant d'intégrer votre programme dans une page web, vous devez vous assurer que celui-ci fonctionne correctement.<br>
<br>
<div class="rmq question">Comment on fait ça ? Tu nous a dit que les applets étaient utilisées dans des pages web...</div><br>
Je maintiens, mais Eclipse vous propose un moyen d'exécuter votre classe comme un applet. <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
Pour faire cela, faites un clic droit sur votre fichier puis choisissez "<span class="arial"><strong>Run as</strong></span>" et enfin choisissez "<strong><span class="arial">Java Applet</span></strong>", comme ceci : <br>
<br>
<div class="centre"><img src="./java_files/126748.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir, ébahis, le résultat de votre applet :<br>
<br>
<div class="centre"><img src="./java_files/126749.jpg" alt="Image utilisateur"></div><br>
 <br>
<div class="rmq information">Vous avez un indicateur vous signalant si votre applet est lancé ou non. Si vous voyez le message : "<strong><span class="italique">Applet not inited</span></strong>", ça veut dire qu'une erreur s'est glissée dans votre code et que la JVM n'a pas pu initialiser l'applet !</div><br>
<br>
<h3>Insertion dans une page HTML</h3><br>
<br>
Pour que votre navigateur sache que la ressource à utiliser est un applet Java, vous devez utiliser la balise HTML <span class="code2 html"><span class="nt">&lt;applet&gt;&lt;/applet&gt;</span>
</span>.<br>
Celle-ci peut prendre plusieurs attributs et vous pouvez même passer des paramètres à votre applet grâce à cette balise.<br>
<br>
Voici la liste des paramètres que peut prendre la balise <span class="code2 html"><span class="nt">&lt;applet&gt;&lt;/applet&gt;</span>
</span> : <br>
<br>
<ul>
<li><span class="code2 html">name="FirstAnimation"
</span> : nom de l'applet, ici <span class="code2 html">FirstAnimation
</span>. Nous allons vite voir l'intérêt de cet attribut ;</li>
<li><span class="code2 html">width="300px"
</span> : largeur de l'applet affiché, ici, 300 pixels ;</li>
<li><span class="code2 html">height="300px"
</span> : hauteur de l'applet affiché ;</li>
<li><span class="code2 html">codebase="class/"
</span> : l'URL de base pour l'applet, c'est-à-dire l'endroit où le navigateur peut trouver les fichiers .class ; ici, les fichiers sont dans le dossier <strong><span class="italique">class</span></strong> à côté de votre fichier HTML ;</li>
<li><span class="code2 html">code="FirstAnimation.class"
</span> : fichier de classe de l'applet. Celui où se trouve la méthode <span class="code2 java"><span class="n">init</span><span class="o">()</span>
</span> ;</li>
<li><span class="code2 html">archive="plugin.jar"
</span> : identifie les ressources à pré-charger (.jar, images...) ; ici, nous pré-chargeons une archive Java appelée plugin.jar ;</li>
<li><span class="code2 html">alt="Please Wait..."
</span> : affiche un texte au cours du chargement ;</li>
<li><span class="code2 html">hspace="10px"
</span> : espacement horizontal entre l'applet et un autre contenu (<span class="code2 html">div
</span> ou autre bloc HTML...) ;</li>
<li><span class="code2 html">vspace="20px"
</span> : idem que précédemment mais pour l'espacement vertical.</li>
</ul><br>
<br>
Pfiou... Il y en a des attributs pour cette balise...  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
Voici donc un exemple de balise applet : <br>
<span class="code">Code : HTML - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 html"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="syntax"><pre><span class="nt">&lt;applet</span> <span class="na">name=</span><span class="s">"FirstAnimation"</span> <span class="na">codebase=</span><span class="s">"class/"</span> <span class="na">code=</span><span class="s">"FirstAnimation.class"</span> 
        <span class="na">height=</span><span class="s">"300px"</span> <span class="na">width=</span><span class="s">"300px"</span> <span class="na">archive=</span><span class="s">"plugin.jar"</span><span class="nt">&gt;</span>
   <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"message"</span> <span class="na">value=</span><span class="s">"Message pour les ZérOs"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/applet&gt;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq question">Heu... <img src="./java_files/unsure.gif" alt=":euh:" class="smilies"> <br>
On comprend bien tout mais, qu'est-ce que c'est que ce truc : <span class="code2 html"><span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"message"</span> <span class="na">value=</span><span class="s">"Message pour les ZérOs"</span><span class="nt">&gt;</span>
</span> ?</div><br>
Je vous ai dit que vous pouviez passer des paramètres à votre applet. Eh bien c'est comme ceci que nous allons nous y prendre ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Ceci veut dire que nous pourrons utiliser la méthode <span class="code2 java"><span class="n">getParameter</span><span class="o">(</span><span class="n">String</span> <span class="n">paramName</span><span class="o">);</span>
</span> qui va nous renvoyer un <span class="courrier">String</span> correspondant à l'attribut <span class="courrier">value</span> de la balise. Ici, on aurait <span class="code2">this.getParameter("message")//Retourne&nbsp;:&nbsp;Message&nbsp;pour&nbsp;les&nbsp;ZérOs</span>.<br>
<br>
Tenez, nous allons essayer ça ! Ajoutez ceci dans votre méthode <span class="code2 java"><span class="n">init</span><span class="o">()</span>
</span> : <span class="code2 java"><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Paramètre passé via la balise &lt;param&gt; : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"message"</span><span class="o">));</span>
</span>.<br>
<br>
Lancez votre applet et : <br>
<br>
<div class="centre"><img src="./java_files/126756.jpg" alt="Image utilisateur"></div><br>
<br>
Ah oui ! Si vous ne spécifiez pas de paramètre pour votre applet, ledit paramètre vaut <strong><span class="rouge">null</span></strong>.<br>
<br>
Voici comment on procède pour spécifier un paramètre pour votre application. Déjà, faites un clic droit sur votre fichier puis allez dans <strong><span class="arial">Propriétés</span></strong>.<br>
Ensuite, cliquez sur "<strong><span class="arial">Run/Debug settings</span></strong>" puis sur le fichier correspondant à votre applet et enfin sur "<strong><span class="arial">Edit</span></strong>", comme ceci :<br>
<br>
<div class="centre"><img src="./java_files/126757.jpg" alt="Image utilisateur"></div><br>
<br>
Dans la fenêtre dans laquelle vous êtes maintenant, choisissez l'onglet "<strong><span class="arial">parameter</span></strong>".<br>
<br>
<div class="centre"><img src="./java_files/126758.jpg" alt="Image utilisateur"></div><br>
<br>
Vous arrivez enfin à l'endroit où vous pouvez ajouter des paramètres. Cliquez sur "<strong><span class="arial">Add</span></strong>", comme ceci :<br>
<br>
<div class="centre"><img src="./java_files/126759.jpg" alt="Image utilisateur"></div><br>
<br>
Et enfin, renseignez le nom de votre paramètre ainsi que sa valeur : <br>
<br>
<div class="centre"><img src="./java_files/126760.jpg" alt="Image utilisateur"></div><br>
<br>
Cliquez sur "<strong><span class="arial">Ok</span></strong>" sur toutes les fenêtres que vous avez ouvertes et relancez votre applet, le paramètre s'affiche enfin ! <br>
<br>
<div class="centre"><img src="./java_files/126761.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez maintenant incorporer votre applet dans une page HTML.<br>
Voici le code de ladite page : <br>
<br>
<span class="code">Code : HTML - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 html"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="syntax"><pre><span class="nt">&lt;html&gt;</span>

   <span class="nt">&lt;body</span> <span class="na">style=</span><span class="s">"margin:auto;"</span><span class="nt">&gt;</span>

	<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"width:320px;margin:auto;margin-top:100px;border:5px solid black"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;applet</span> <span class="na">codebase=</span><span class="s">"class/"</span> <span class="na">code=</span><span class="s">"FirstApplet.class"</span> <span class="na">height=</span><span class="s">"80"</span> <span class="na">width=</span><span class="s">"300"</span> <span class="na">hspace=</span><span class="s">"10"</span> <span class="na">vspace=</span><span class="s">"10"</span><span class="nt">&gt;</span>
			<span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"message"</span> <span class="na">value=</span><span class="s">"Message pour les ZérOs"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;/applet&gt;</span>
	<span class="nt">&lt;/div&gt;</span>

   <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
J'ai créé ce code et enregistré le fichier contenant ce code HTML sur mon bureau, j'ai donc dû déplacer mes fichiers .class - oui, vous ne rêvez pas, j'ai dit :<strong> mes fichiers .class</strong> - dans un dossier, que j'ai appelé "<strong><span class="italique">class</span></strong>" pour l'occasion (cf. paramètre codebase de l'applet)...<br>
<br>
J'ai récupéré mes fichiers .class dans le répertoire <strong><span class="italique">/bin</span></strong> de votre projet, et vous pouvez voir que vous avez <strong>FirstApplet.class</strong> et <strong>FirstApplet$1.class</strong> dans le cas où vous avez exactement le même code que moi.<br>
<br>
<div class="rmq question">À quoi ça correspond ?</div><br>
En fait, <strong>FirstApplet.class</strong> correspond à la compilation de votre classe <strong><span class="courrier">FirstApplet</span></strong> et <strong>FirstApplet$1.class</strong> correspond à la compilation de votre classe anonyme ! Pas de nom pour cette classe, donc la JVM remplace le nom par "<strong><span class="italique">$1</span></strong>". Si vous aviez utilisé une classe interne, appelons-la <span class="courrier">BoutonListener</span> et si vous compiliez le code, vous auriez toujours <strong>FirstApplet.class</strong>, mais vous auriez eu le fichier <strong>FirstApplet$BoutonListener.class</strong>.<br>
<br>
Donc, si vous avez créé votre page web ailleurs que dans votre dossier contenant votre projet, vous devrez déplacer tous les fichiers .class commençant par <strong><span class="courrier">FirstApplet</span></strong> et toutes les autres ressources que votre applet utilise (images, autres classes, archives Java...).<br>
<br>
<div class="rmq information">Vous pouviez aussi créer votre page web dans le dossier de votre projet et spécifier comme codebase "<strong><span class="courrier">bin/</span></strong>", dossier contenant vos .class dans le projet d'Eclipse... C'est à votre bon vouloir ! <img src="./java_files/heureux.png" alt=":D" class="smilies"></div><br>
<br>
Maintenant que toute la lumière est faite sur ce point, vous pouvez aller voir votre première applet : <a href="http://www.siteduzero.com/uploads/fr/ftp/cysboy/applet/firstApplet.html">ici</a>.<br>
<br>
<div class="rmq erreur">Il faut que vous sachiez que, si Eclipse est assez laxiste pour lancer l'applet même si le paramètre "<strong><span class="courrier">message</span></strong>" n'est pas renseigné, votre navigateur, enfin la JVM de votre navigateur sera moins conciliante...<strong> Si le paramètre est manquant, l'applet plantera !</strong></div><br>
<br>
Voilà, vous venez de faire votre première applet ! Alors, heureux ? <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
<h3>Nota Bene</h3><br>
<br>
Avant de continuer, vous devez savoir une dernière chose, ceci ne concerne pas directement Java mais la balise <span class="code2 html"><span class="nt">&lt;applet&gt;&lt;/applet&gt;</span>
</span>.<br>
En fait, depuis la sortie de HTML 4.0, la balise <span class="code2 html"><span class="nt">&lt;applet&gt;&lt;/applet&gt;</span>
</span> est dépréciée par le <acronym title="World Wide Web Consortium">W3C</acronym>, c'est-à-dire que cet organisme préconise l'utilisation de la balise <span class="code2 html"><span class="nt">&lt;object&gt;&lt;/object&gt;</span>
</span>. <br>
<br>
Ceci en grande partie à cause de <acronym title="Internet Explorer">IE</acronym> qui gérait le Java avec sa propre JVM (version 1.1, c'est vieux...) et non celle de Sun Microsystems (bientôt 1.7...). Il faut, afin que la balise <span class="code2 html"><span class="nt">&lt;applet&gt;&lt;/applet&gt;</span>
</span>fonctionne correctement sous IE, avoir installé un environnement Java et s'assurer que IE utilise celui-ci pour interpréter du Java... (cf. plus haut).<br>
<br>
Je ne détaillerai pas l'utilisation de cette balise vu que Sun Microsystems recommande l'utilisation de la balise <span class="code2 html"><span class="nt">&lt;applet&gt;&lt;/applet&gt;</span>
</span>... Voici tout de même un exemple d'utilisation de la balise <span class="code2 html"><span class="nt">&lt;object&gt;&lt;/object&gt;</span>
</span> :<br>
<br>
<span class="code">Code : HTML - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 html"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="syntax"><pre><span class="c">&lt;!-- L'Utilisation des commentaires conditionnels propres à IE sont à utiliser --&gt;</span> 
<span class="c">&lt;!-- car même si IE requiert l'utilisation de cette balise, il ne l'interprète pas comme les autres --&gt;</span>
<span class="c">&lt;!--[if IE]&gt;  </span>
<span class="c">&lt;object classid="clsid:8AD9C840-044E-11D1-B3E9-00805F499D93" width="300" height="80" name="FirstApplet"&gt; </span>
<span class="c">   &lt;param name="java_code" value="FirstApplet.class" /&gt;  </span>
<span class="c">   &lt;param name="java_codebase" value="class/" /&gt; </span>
<span class="c">   &lt;param name="type" value="application/x-java-applet;version=1.5" /&gt; </span>

<span class="c">&lt;![endif]--&gt;</span> 
<span class="nt">&lt;p&gt;</span> 
<span class="nt">&lt;object</span> <span class="na">classid=</span><span class="s">"java:FirstApplet.class"</span>
          <span class="na">codebase=</span><span class="s">"class"</span>
          <span class="na">type=</span><span class="s">"application/x-java-applet"</span>
          <span class="na">width=</span><span class="s">"300"</span> <span class="na">height=</span><span class="s">"80"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"code"</span> <span class="na">value=</span><span class="s">"FirstApplet"</span> <span class="nt">/&gt;</span>
    <span class="c">&lt;!-- Safari a besoin de ces paramètres --&gt;</span>
    <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"JAVA_CODEBASE"</span> <span class="na">value=</span><span class="s">"class"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"BGCOLOR"</span> <span class="na">value=</span><span class="s">"000000"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"TEXTCOLOR"</span> <span class="na">value=</span><span class="s">"FF0000"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"TEXT"</span> <span class="na">value=</span><span class="s">"Test :-)"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"SPEED"</span> <span class="na">value=</span><span class="s">"250"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"RANDOMCOLOR"</span> <span class="na">value=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
    alt : <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"class/FirstApplet.class"</span><span class="nt">&gt;</span>FirstApplet.class<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;/object&gt;</span>
<span class="nt">&lt;/p&gt;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Il est grand temps de voir comment notre page web peut interagir avec notre applet... <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
Go !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10561">Interaction page web - applet</h2>
		<div class="ss_part_texte">
		C'est à ce moment précis que vous aurez besoin des bases de Javascript.<br>
Eh oui, la communication page web - applet se fait via un script Javascript ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
En tout premier lieu, nous allons créer une méthode qui fait exactement la même chose que l'action lors du clic sur le bouton de notre applet, mais qui n'est jamais appelée dans notre applet...<br>
C'est cette méthode que nous allons utiliser via Javascript : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JApplet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FirstApplet</span> <span class="kd">extends</span> <span class="n">JApplet</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">();</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Cliquez"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	
	<span class="c">/**</span>
<span class="c">	 * Méthode d'initialisation de l'applet</span>
<span class="c">	 * C'est cette méthode qui fait office de constructeur</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">80</span><span class="o">);</span>

		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Paramètre passé via la balise &lt;param&gt; : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"message"</span><span class="o">));</span>
		<span class="c">//On centre le texte du JLabel et on écrit en bleu...</span>
		<span class="n">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="c">//C'est plus zoli. </span>
		<span class="n">label</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
				
		<span class="c">//Allez, une classe anonyme... Just for the fun ;)</span>
		<span class="k">this</span><span class="o">.</span><span class="na">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Vous avez cliqué "</span> <span class="o">+</span> <span class="o">(++</span><span class="n">count</span><span class="o">)</span> <span class="o">+</span> <span class="s">" fois sur le bouton"</span><span class="o">);</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		
		<span class="c">//On ajoute nos composants</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
		<span class="c">//Et le tour est joué !</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Méthode utilisée par Javascript pour mettre à jour </span>
<span class="c">         * Celle-ci doit être public afin que Javascript puisse y avoir accès</span>
<span class="c">	 * Le JLabel</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">doJavascript</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Méthode appelée par javascript ! "</span><span class="o">);</span>
		<span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Vous avez cliqué "</span> <span class="o">+</span> <span class="o">(++</span><span class="n">count</span><span class="o">)</span> <span class="o">+</span> <span class="s">" fois sur le bouton"</span><span class="o">);</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Rien de bien sorcier pour l'instant... Maintenant, nous allons voir comment appeler une méthode d'un applet Java dans un script Javascript. Pour ce faire, nous allons rajouter un simple bouton HTML sur notre applet précédent avec, lors du clic sur le bouton, l'appel à la fonction de l'applet.<br>
<br>
Voici le code source HTML de cette page : <br>
<br>
<span class="code">Code : HTML - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 html"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="syntax"><pre><span class="nt">&lt;html&gt;</span>

	<span class="nt">&lt;body</span> <span class="na">style=</span><span class="s">"margin:auto;"</span><span class="nt">&gt;</span>

		<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"width:100%;text-align:center;background-color:#aef15b;"</span><span class="nt">&gt;</span><span class="ni">&amp;nbsp;</span><span class="nt">&lt;/div&gt;</span>
		<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"width:100%;text-align:center;background-color:#aef15b;"</span><span class="nt">&gt;</span>
			<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">value=</span><span class="s">"Lancer la méthode de l'applet"</span> <span class="na">onClick=</span><span class="s">"document.applets['first'].doJavascript();"</span><span class="nt">/&gt;</span>
		<span class="nt">&lt;/div&gt;</span>
		<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"width:100%;text-align:center;background-color:#aef15b;"</span><span class="nt">&gt;</span><span class="ni">&amp;nbsp;</span><span class="nt">&lt;/div&gt;</span>
		

		<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"width:320px;margin:auto;margin-top:20px;border:5px solid black"</span><span class="nt">&gt;</span>
			<span class="nt">&lt;applet</span> <span class="na">codebase=</span><span class="s">"class/"</span> <span class="na">code=</span><span class="s">"FirstApplet.class"</span> <span class="na">height=</span><span class="s">"80"</span> <span class="na">width=</span><span class="s">"300"</span> <span class="na">hspace=</span><span class="s">"10"</span> <span class="na">vspace=</span><span class="s">"10"</span> <span class="na">name=</span><span class="s">"first"</span> <span class="na">id=</span><span class="s">"firstApplet"</span><span class="nt">&gt;</span>
				<span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"message"</span> <span class="na">value=</span><span class="s">"Message pour les ZérOs"</span><span class="nt">&gt;</span>
			<span class="nt">&lt;/applet&gt;</span>
		<span class="nt">&lt;/div&gt;</span>
		
	<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez voir le résultat : <a href="http://www.siteduzero.com/uploads/fr/ftp/cysboy/applet/firstApplet2.html">ici</a>.<br>
<br>
Voyons un peu comment cela fonctionne.<br>
<br>
Votre navigateur charge l'applet.<br>
Vous avez spécifié que lorsque nous cliquerons sur le bouton (événement onClick) nous exécuterons un morceau de code Javascript : <span class="code2 javascript"><span class="nb">document</span><span class="p">.</span><span class="nx">applets</span><span class="p">[</span><span class="s1">'first'</span><span class="p">].</span><span class="nx">doJavascript</span><span class="p">();</span>
</span>.<br>
À l'appel de cette instruction, le script se positionne sur l'applet portant le nom <strong><span class="courrier">first</span></strong> (notez que vous pouvez aussi utiliser un index, commençant par 0, pour utiliser des applets via Javascript : ici, <span class="code2 java"><span class="n">document</span><span class="o">.</span><span class="na">applets</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">doJavascript</span><span class="o">()</span>
</span> est équivalent) sur notre document et appelle la méthode <strong><span class="code2 java"><span class="n">doJavascript</span><span class="o">()</span>
</span></strong> déclarée dans cette applet. Celle-ci met à jour le <strong><span class="violet"><span class="courrier">JLabel</span></span></strong> à l'intérieur de l'applet, et le tour est joué !<br>
<br>
<div class="rmq information">Ici, la méthode que nous appelons ne retourne aucune valeur, mais vous pouvez utiliser une méthode retournant un type de donnée et l'affecter à une variable Javascript ! <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
<br>
Nous allons aborder maintenant un point intéressant, la communication applet - page web !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10560">Interaction applet - page web</h2>
		<div class="ss_part_texte">
		Dans ce cas, la communication se fait dans l'autre sens, c'est-à-dire que c'est votre applet qui va mettre à jour votre page web !<br>
Ceci se fait toujours grâce à du Javascript, sauf que maintenant, c'est notre applet qui va invoquer une méthode Javascript... <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
Pour réussir ce tour de force, nous allons avoir besoin d'un objet particulier, un <strong><span class="violet"><span class="courrier">JSObject</span></span></strong>, non présent d'office dans les ressources disponibles Java. Nous allons donc devoir utiliser une bibliothèque externe, l'ajouter à notre projet, recompiler le programme et ajouter cette nouvelle ressource dans la déclaration de notre applet dans la page web.<br>
<br>
<div class="rmq question">Où peut-on trouver cet objet, alors ?</div><br>
Il est dans votre JRE, et là, je veux dire dans le dossier <strong>/lib</strong> de votre JRE.<br>
L'objet en question se trouve dans l'archive plugin.jar qui se trouve, je le répète, dans le dossier <strong>/lib</strong> de votre JRE (ou JDK).<br>
Copiez cette archive dans le dossier contenant votre projet et mettez-le dans un dossier <strong>/lib </strong>que vous créerez. Vous devez maintenant avoir trois dossiers dans votre projet : <br>
<ul>
<li><strong>/src</strong> : contient les fichiers sources de votre applet ;</li>
<li><strong>/bin</strong> : contient les fichiers .class de votre applet ;</li>
<li><strong>/lib</strong> : contient l'archive <strong>plugin.jar</strong>.</li>
</ul><br>
<br>
Maintenant, nous allons dire à Eclipse qu'il peut utiliser la nouvelle ressource afin que nous puissions utiliser les classes qu'elle contient.<br>
Pour ce faire, faites un clic droit sur votre projet, puis dans "<strong><span class="arial">Build Path</span></strong>" choisissez "<strong><span class="arial">Add External Archives</span></strong>" comme ceci : <br>
<br>
<div class="centre"><img src="./java_files/126850.jpg" alt="Image utilisateur"></div><br>
<br>
Allez maintenant dans le dossier <strong>/lib</strong> de votre projet et double cliquez sur <strong>plugin.jar</strong>. Vous devez voir que, maintenant, la ressource externe fait partie de votre projet : vous pouvez utiliser les classes que contient l'archive <strong>plugin.jar</strong>, et même voir son contenu : <br>
<br>
<div class="centre"><img src="./java_files/126851.jpg" alt="Image utilisateur"></div><br>
<br>
L'objet tant convoité se trouve dans le package <strong><span class="violet"><span class="courrier">netscape.javascript</span></span></strong>. Oui, vous ne rêvez pas et il s'agit bien du même netscape que vous connaissez : le navigateur web ! Ce sont eux qui ont développé ces classes... <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
Bon, nous sommes parés à utiliser l'objet <strong><span class="violet"><span class="courrier">JSObject</span></span></strong> mais avant, nous allons mettre à jour notre page web afin que notre applet puisse écrire quelque part...<br>
<br>
Nous allons donc retirer notre bouton HTML pour le remplacer par un <span class="code2 html">div
</span> vide. C'est dans ce dernier que notre applet va écrire via du Javascript.<br>
Il nous faut aussi une méthode Javascript pour écrire dans notre <span class="code2 html">div
</span> : rien de difficile... Alors, qu'attendons-nous ? <img src="./java_files/pirate.png" alt=":pirate:" class="smilies"><br>
<br>
Voici le code de notre page web :<br>
<br>
<span class="code">Code : HTML - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 html"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="syntax"><pre><span class="nt">&lt;html&gt;</span>

	<span class="nt">&lt;body</span> <span class="na">style=</span><span class="s">"margin:auto;"</span><span class="nt">&gt;</span>

		<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span><span class="nt">&gt;</span>
			<span class="kd">function</span> <span class="nx">affiche</span><span class="p">(</span><span class="nx">str</span><span class="p">){</span>
				<span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">'label'</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">str</span><span class="o">;</span>
			<span class="p">}</span>
		<span class="nt">&lt;/script&gt;</span>
	
		<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"width:100%;text-align:center;background-color:#aef15b;"</span><span class="nt">&gt;</span><span class="ni">&amp;nbsp;</span><span class="nt">&lt;/div&gt;</span>
		<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"width:100%;text-align:center;background-color:#aef15b;color:white;font-weight:bold;font-size:1.2em;"</span> <span class="na">id=</span><span class="s">"label"</span><span class="nt">&gt;</span><span class="ni">&amp;nbsp;</span><span class="nt">&lt;/div&gt;</span>
		<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"width:100%;text-align:center;background-color:#aef15b;"</span><span class="nt">&gt;</span><span class="ni">&amp;nbsp;</span><span class="nt">&lt;/div&gt;</span>
		

		<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"width:320px;margin:auto;margin-top:20px;border:5px solid black"</span><span class="nt">&gt;</span>
			<span class="nt">&lt;applet</span>  <span class="na">mayscript=</span><span class="s">"true"</span> <span class="na">codebase=</span><span class="s">"class3/"</span> <span class="na">archive=</span><span class="s">"lib/plugin.jar"</span> <span class="na">code=</span><span class="s">"FirstApplet.class"</span> <span class="na">height=</span><span class="s">"80"</span> <span class="na">width=</span><span class="s">"300"</span> <span class="na">hspace=</span><span class="s">"10"</span> <span class="na">vspace=</span><span class="s">"10"</span> <span class="na">name=</span><span class="s">"first"</span><span class="nt">&gt;</span>
				<span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"message"</span> <span class="na">value=</span><span class="s">"Message pour les ZérOs"</span><span class="nt">&gt;</span>
			<span class="nt">&lt;/applet&gt;</span>
		<span class="nt">&lt;/div&gt;</span>
		
	<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq attention">N'oubliez surtout pas l'attribut <strong><span class="courrier">mayscript</span></strong> dans votre applet : sans celui-ci, votre applet ne sera pas habilitée à utiliser l'objet <strong><span class="violet"><span class="courrier">JSObject</span></span></strong> ! </div><br>
<br>
Et voici le code de votre applet : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JApplet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">netscape.javascript.JSException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">netscape.javascript.JSObject</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FirstApplet</span> <span class="kd">extends</span> <span class="n">JApplet</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">();</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Cliquez"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JSObject</span> <span class="n">jso</span><span class="o">;</span>
	<span class="c">/**</span>
<span class="c">	 * Méthode d'initialisation de l'applet</span>
<span class="c">	 * C'est cette méthode qui fait office de constructeur</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">(){</span>
		<span class="n">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">80</span><span class="o">);</span>

		<span class="c">//On initialise l'objet</span>
		
		<span class="k">try</span> <span class="o">{</span>
			<span class="n">jso</span> <span class="o">=</span> <span class="n">JSObject</span><span class="o">.</span><span class="na">getWindow</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">JSException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">// TODO Auto-generated catch block</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>
		
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Paramètre passé via la balise &lt;param&gt; : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"message"</span><span class="o">));</span>
		<span class="c">//On centre le texte du JLabel et on écrit en bleu...</span>
		<span class="n">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="c">//C'est plus zoli. </span>
		<span class="n">label</span><span class="o">.</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
				
		<span class="c">//allez une classe anonyme... Just for the fun ;)</span>
		<span class="k">this</span><span class="o">.</span><span class="na">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"Vous avez cliqué "</span> <span class="o">+</span> <span class="o">(++</span><span class="n">count</span><span class="o">)</span> <span class="o">+</span> <span class="s">" fois sur le bouton"</span><span class="o">;</span>
				<span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
				
				<span class="c">//On appelle la fonction Javascript</span>
				<span class="c">//ceci peut lever une exception</span>
				<span class="k">try</span> <span class="o">{</span>
					<span class="c">//On appelle la méthode affiche en lui passant en paramètre</span>
					<span class="c">//un tableau </span>
		                        <span class="n">jso</span><span class="o">.</span><span class="na">call</span><span class="o">(</span><span class="s">"affiche"</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">str</span><span class="o">)});</span>
		                <span class="o">}</span>
		                <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
		                        <span class="n">ex</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		                <span class="o">}</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		
		<span class="c">//On ajoute nos composants</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
		<span class="c">//Et le tour est joué !</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Pour plus de dynamisme, vous pouvez passer le nom de la méthode Javascript à utiliser avec un paramètre de la balise applet... Comme ça, vous n'êtes pas obligés de changer le code source de l'applet si le nom de votre méthode Javascript change ! <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
<br>
Et <a href="http://www.siteduzero.com/uploads/fr/ftp/cysboy/applet/firstApplet3.html">le résultat </a>est exactement celui escompté.<br>
<br>
Dans ce code, il n'y a rien de compliqué...<br>
L'objet s'utilise facilement, il suffit de ne pas oublier de gérer les exceptions et c'est bon.<br>
<br>
Avant de terminer ce chapitre, vous devez savoir que les applets n'ont pas le droit de tout faire sur une page web ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10559">Applets et sécurité</h2>
		<div class="ss_part_texte">
		En fait, au même titre que Javascript, les applets Java n'ont pas le droit d'accéder à la machine du client. Pour faire simple, ils sont confinés dans le navigateur web.<br>
Et heureusement ! Vous imaginez un peu toutes les dérives si ce genre de script ou de programme pouvait naturellement avoir accès à votre PC ? Là, on pourrait devenir parano et il vaudrait mieux...<br>
<ul>
<li>Est-ce que ce script n'est pas en train d'effacer un fichier de configuration ?</li>
<li>Il me semble que cette applet est en train d'accéder à un répertoire sensible...</li>
<li>...</li>
</ul><br>
<br>
Bref, vous imaginez...  <img src="./java_files/huh.png" alt=":o" class="smilies"> <br>
<br>
Cependant, il se peut que quelquefois, pour quelques rares cas, votre applet doive accéder à des ressources de votre PC.<br>
<br>
<h4><span class="souligne">Exemple</span></h4><br>
<br>
Dans la boîte dans laquelle je suis actuellement, nous sommes en train de développer une application, format client léger (web), afin de gérer tous les processus industriels de la société, dont la pesée de certains articles avec scan des documents en même temps.<br>
Nous avons donc fait un applet qui s'occupe de faire tout ça mais pour communiquer avec les ports COM et le scanner, nous avons dû <strong><span class="vertf">signer notre applet</span></strong>.<br>
<br>
<div class="rmq question">Eh... Quoi ? <img src="./java_files/blink.gif" alt="o_O" class="smilies"></div><br>
Nous avons signé notre applet, c'est-à-dire que nous avons créé un certificat que nous avons attribué à notre applet et que l'utilisateur DOIT soit accepter, soit refuser au chargement de la page : ce certificat stipule que l'applet peut accéder à des ressources de sa machine, et lui demande s'il veut lui faire confiance .<br>
<br>
Il n'est pas très pertinent de parler de la façon de signer une applet : au pire, si vous avez vraiment besoin de ça, <a href="http://www.google.fr/">Google </a>est votre ami... <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Vous savez tout de même que les applets n'ont pas tous les droits sur une page web, au même titre que Javascript. <br>
<br>
Vous avez vu pas mal de choses, mine de rien, dans ce chapitre.<br>
On va faire un tour sur le topo habituel, suivi d'un petit QCM...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10558">Ce que vous devez retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Les applets peuvent dériver de <strong><span class="violet"><span class="courrier">java.awt.Applet</span></span></strong> ou de <strong><span class="violet"><span class="courrier">javax.swing.JApplet</span></span></strong>.</li>
<li>Les applets n'ont pas de constructeur mais une méthode <strong><span class="courrier">init()</span></strong>.</li>
<li>En gros, les applets se comportent comme des applications fenêtrées.</li>
<li>Vous pouvez communiquer de votre page web vers votre applet grâce à l'instruction Javascript : <strong><span class="bleugris"><span class="courrier">document.applets</span></span></strong>.</li>
<li>La communication inverse se fait via l'objet <strong><span class="violet"><span class="courrier">JSObject </span></span></strong>qui se trouve dans l'archive <strong>plugin.jar</strong> dans le dossier <strong>/lib</strong> de votre JRE (ou JDK).</li>
<li>Par défaut, <strong><span class="rouge">les applets n'ont pas accès aux ressources de la machine client</span></strong>.</li>
<li>Pour accéder à la machine du client, <strong><span class="vertf">vous devrez signer votre applet !</span></strong></li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Maintenant, je pense que vous ne pourrez plus mélanger : <br>
<ul>
<li>Javascript et Java ;</li>
<li>les applets et J2EE.</li>
</ul><br>
Sinon, vous êtes IMPARDONNABLES ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Après cette petite dérive, je pense que nous pouvons continuer notre tour d'horizon de l'API <span class="courrier"><strong>swing</strong></span> !<br>
En avant pour <strong><span class="orange">les boîtes de dialogues</span></strong> !
	</div>
	
	<hr>
	<h1 id="chap_10576">Les boîtes de dialogue</h1>
	<div id="chap_intro">
	Les boîtes de dialogue, c'est sûr, vous connaissez !<br>
Cependant, afin d'être sûr que nous parlons de la même chose, voici un petit descriptif.<br>
<br>
Une boîte de dialogue est une mini-fenêtre pouvant servir à plusieurs choses :<br>
<ul>
<li>afficher une information (message d'erreur, warning...) ;</li>
<li>demander une validation, une réfutation ou une annulation ;</li>
<li>demander à l'utilisateur de saisir une information dont le système a besoin ;</li>
<li>...</li>
</ul><br>
<br>
Vous pouvez voir que ces dernières peuvent servir à beaucoup de choses. <br>
Il faut toutefois les utiliser avec parcimonie : il est, au final, assez pénible qu'une application ouvre une boîte de dialogue à chaque notification, car toute boîte ouverte doit être fermée !<br>
<br>
Pour ce point je vous laisse seuls juges de leur utilisation... Et si nous commencions ?
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10575">Les boîtes d'information</h2>
		<div class="ss_part_texte">
		L'objet que nous allons utiliser tout au long de ce chapitre n'est autre que le <strong><span class="violet"><span class="courrier">JOptionPane</span></span></strong>.<br>
Objet assez complexe au premier abord, mais fort pratique.<br>
<br>
Voici à quoi ressemblent des boîtes de dialogues "<span class="italique">informatives</span>" :<br>
<br>
<div class="centre"><img src="./java_files/126885.jpg" alt="Image utilisateur"><img src="./java_files/126884.jpg" alt="Image utilisateur"><img src="./java_files/126883.jpg" alt="Image utilisateur"></div><br>
<br>
Ces boîtes n'ont pas vocation à participer à de quelconques traitements, elles affichent juste un message pour l'utilisateur.<br>
<br>
Voici le code utilisé pour obtenir ces boîtes : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Déclaration des objets</span>
 <span class="n">JOptionPane</span> <span class="n">jop1</span><span class="o">,</span> <span class="n">jop2</span><span class="o">,</span> <span class="n">jop3</span><span class="o">;</span>
 
<span class="c">//Boîte du message d'information</span>
<span class="c">//-------------------------------</span>
<span class="n">jop1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
<span class="n">jop1</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Message informatif"</span><span class="o">,</span> <span class="s">"Information"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">);</span>
		
<span class="c">//Boîte du message préventif</span>
<span class="c">//-------------------------------</span>
<span class="n">jop2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
<span class="n">jop2</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Message préventif"</span><span class="o">,</span> <span class="s">"Attention"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">WARNING_MESSAGE</span><span class="o">);</span>
		
<span class="c">//Boîte du message d'erreur</span>
<span class="c">//-------------------------------</span>
<span class="n">jop3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
<span class="n">jop3</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Message d'erreur"</span><span class="o">,</span> <span class="s">"Erreur"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">ERROR_MESSAGE</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
Ces trois boîtes ne s'affichent pas en même temps...<br>
<br>
<div class="rmq question">Pourquoi ça ?</div><br>
Tout simplement parce qu'en Java, mais aussi dans les autres langages, les boîtes de dialogue sont dites <strong><span class="vertf"><span class="gros">modales</span></span></strong>.<br>
Ceci signifie que lorsque qu'une boîte fait son apparition, celle-ci bloque toute interaction possible avec un autre composant que ceux présents sur la boîte. Ceci, tant que l'utilisateur n'a pas mis fin au dialogue !<br>
<br>
Même en créant un thread différent par boîte de dialogue, vous ne pourrez pas toutes les voir !<br>
Les 3 boîtes seront créées, mais les boîtes s'affichant au centre de la fenêtre, vous ne pourrez en voir que deux sur trois, en déplaçant la première. <br>
<br>
Comme le montre le résultat de ce code, vous ne pourrez pas déplacer la deuxième boîte à cause de la modalité des boîtes : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>

	<span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
				 
		<span class="n">Thread</span> <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">(){</span>
			<span class="k">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(){</span>
				<span class="n">JOptionPane</span> <span class="n">jop1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
				<span class="n">jop1</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Message informatif"</span><span class="o">,</span> <span class="s">"Information"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">);</span>		
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="n">Thread</span> <span class="n">t2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">(){</span>
			<span class="k">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(){</span>
				<span class="n">JOptionPane</span> <span class="n">jop2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
				<span class="n">jop2</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Message préventif"</span><span class="o">,</span> <span class="s">"Attention"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">WARNING_MESSAGE</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="n">Thread</span> <span class="n">t3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">(){</span>
			<span class="k">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(){</span>
				<span class="n">JOptionPane</span> <span class="n">jop3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
				<span class="n">jop3</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Message d'erreur"</span><span class="o">,</span> <span class="s">"Erreur"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">ERROR_MESSAGE</span><span class="o">);</span>				
			<span class="o">}</span>
		<span class="o">});</span>
			
		<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
		<span class="n">t2</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
		<span class="n">t3</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donnerait (tout dépend de l'ordonnanceur, vu qu'il y a trois thread...) : <br>
<br>
<div class="centre"><img src="./java_files/126887.jpg" alt="Image utilisateur"></div><br>
<br>
Maintenant, voyons de plus près la façon de construire un tel objet. Ici nous avons utilisé la méthode :  <span class="code2 java"><span class="n">showMessageDialog</span><span class="o">(</span><span class="n">Component</span> <span class="n">parentComponent</span><span class="o">,</span> <span class="n">String</span> <span class="n">message</span><span class="o">,</span> <span class="n">String</span> <span class="n">title</span><span class="o">,</span> <span class="kt">int</span> <span class="n">messageType</span><span class="o">);</span>
</span>.<br>
<br>
<ul>
<li><strong><span class="courrier"><span class="violet">Component</span>parentComponent</span></strong> : correspond au composant parent ; ici, il n'y en a aucun, nous mettons donc <strong><span class="courrier"><span class="violet">null</span></span></strong>.</li>
<li><strong><span class="courrier"><span class="violet">String</span>message</span></strong> : permet de renseigner le message à afficher dans la boîte de dialogue.</li>
<li><strong><span class="courrier"><span class="violet">String</span>title</span></strong> : permet de donner un titre à notre objet.</li>
<li><strong><span class="courrier"><span class="violet">int</span>messageType</span></strong> : permet de savoir s'il s'agit d'un message d'information, de prévention ou d'erreur. Vous avez sans doute remarqué que, mis à part le texte et le titre, seul ce champ change entre les trois objets !</li>
</ul><br>
<br>
Il existe deux autres méthodes <span class="code2 java"><span class="n">showMessageDialog</span><span class="o">()</span>
</span> pour cet objet : une qui prend deux paramètres en moins (le titre et le type de message), et une qui prend un paramètre en plus (l'icône à utiliser).<br>
<br>
Je pense qu'il est inutile de détailler la méthode avec les paramètres en moins, mais voici des exemples de boîtes avec des icônes définies par nos soins...<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">javax.swing.ImageIcon</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>


<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>

	<span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="n">JOptionPane</span> <span class="n">jop1</span><span class="o">,</span> <span class="n">jop2</span><span class="o">,</span> <span class="n">jop3</span><span class="o">;</span>
		
		<span class="n">jop1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
		<span class="n">ImageIcon</span> <span class="n">img</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/information.png"</span><span class="o">);</span>
		<span class="n">jop1</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Message informatif"</span><span class="o">,</span> <span class="s">"Information"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
		
		<span class="n">jop2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
		<span class="n">img</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/warning.png"</span><span class="o">);</span>
		<span class="n">jop2</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Message préventif"</span><span class="o">,</span> <span class="s">"Attention"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">WARNING_MESSAGE</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
		
		<span class="n">jop3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
		<span class="n">img</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/erreur.png"</span><span class="o">);</span>
		<span class="n">jop3</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Message d'erreur"</span><span class="o">,</span> <span class="s">"Erreur"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">ERROR_MESSAGE</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>				

	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Les images ont été trouvées sur Google puis rangées dans un dossier "images" à la racine du projet Eclipse ! Je vous invite à télécharger vos propres images et de faire vos propres tests...</div><br>
Vous constaterez aussi l'utilisation de l'objet <strong><span class="violet"><span class="courrier">ImageIcon</span></span></strong> qui va lire le fichier image à l'emplacement spécifié dans son constructeur.<br>
<br>
Voici le résultat obtenu : <br>
<br>
<div class="centre"><img src="./java_files/126894.jpg" alt="Image utilisateur"><img src="./java_files/126895.jpg" alt="Image utilisateur"><img src="./java_files/126896.jpg" alt="Image utilisateur"></div><br>
<br>
Ce type de boîtes est très utile pour notifier à l'utilisateur qu'un traitement s'est terminé ou qu'une erreur est survenue... <br>
L'exemple le plus simple qui me vient en tête serait une division par zéro : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>

	<span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">100</span><span class="o">,</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		
		<span class="k">try</span><span class="o">{</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Résultat = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">i</span><span class="o">/</span><span class="n">j</span><span class="o">));</span>
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="n">ArithmeticException</span> <span class="n">ex</span><span class="o">){</span>
			<span class="n">JOptionPane</span>  <span class="n">jop3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
			<span class="n">jop3</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Division par zéro détecté !"</span><span class="o">,</span> <span class="s">"Erreur fatale ! ! "</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">ERROR_MESSAGE</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h3>Les types de boîtes</h3><br>
<br>
Voici les types de boîtes que vous pouvez utiliser (valable pour tout ce qui suit), triés par ordre alphabétique s'il vous plaît... <img src="./java_files/heureux.png" alt=":D" class="smilies"> :<br>
<ul>
<li><span class="code2 java"><span class="n">JOptionPane</span><span class="o">.</span><span class="na">ERROR_MESSAGE</span>
</span></li>
<li><span class="code2 java"><span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span>
</span></li>
<li><span class="code2 java"><span class="n">JOptionPane</span><span class="o">.</span><span class="na">PLAIN_MESSAGE</span>
</span></li>
<li><span class="code2 java"><span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span>
</span></li>
<li><span class="code2 java"><span class="n">JOptionPane</span><span class="o">.</span><span class="na">WARNING_MESSAGE</span>
</span></li>
</ul><br>
Je pense que vous devez mieux voir l'utilité de telles boîtes de dialogues...<br>
Nous allons donc poursuivre avec les boîtes de confirmation.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10574">Les boîtes de confirmation</h2>
		<div class="ss_part_texte">
		Comme leur nom l'indique, ces dernières permettent de valider, de réfuter ou d'annuler une décision.<br>
Nous utiliserons toujours l'objet <strong><span class="violet"><span class="courrier">JOptionPane</span></span></strong> mais, cette fois, avec la méthode <span class="code2 java"><span class="n">showConfirmDialog</span><span class="o">()</span>
</span>. Cette méthode retourne un entier qui correspond à l'option que vous aurez choisie dans cette boîte : <br>
<ul>
<li>Yes ;</li>
<li>No ;</li>
<li>Cancel.</li>
</ul><br>
<br>
Comme exemple, nous pouvons prendre notre animation comme nous l'avons laissée la dernière fois.<br>
Nous pourrions utiliser une boîte de confirmation lorsque nous cliquerons sur l'un des boutons contrôlant l'animation (<span class="courrier">Go</span> ou <span class="courrier">Stop</span>).<br>
<br>
Pour ceux qui n'auraient pas conservé leur projet, voici la classe <strong><span class="violet"><span class="courrier">Panneau</span></span></strong> : <br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.GradientPaint</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Panneau</span> <span class="k">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
 
        <span class="k">private</span> <span class="kt">int</span> <span class="n">posX</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">posY</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">drawSize</span> <span class="o">=</span> <span class="mi">50</span><span class="o">;</span>
    <span class="c">//boolean pour le mode morphing et pour savoir si la taille doit réduire</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">morph</span> <span class="o">=</span> <span class="kc">false</span><span class="o">,</span> <span class="n">reduce</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;;</span>
    <span class="k">private</span> <span class="n">String</span> <span class="n">forme</span> <span class="o">=</span> <span class="s">"ROND"</span><span class="o">;</span>
    <span class="c">//Le compteur de rafraîchissements</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">increment</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
            <span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
            <span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
            <span class="c">//Si le mode morphing est activé, on peint le morphing</span>
            <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">morph</span><span class="o">)</span>
                <span class="n">drawMorph</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
            <span class="c">//sinon, mode normal</span>
            <span class="k">else</span>
                <span class="nf">draw</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>       
    <span class="o">}</span>
 
    <span class="k">private</span> <span class="kt">void</span> <span class="nf">draw</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
        
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ROND"</span><span class="o">)){</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span> 
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"CARRE"</span><span class="o">)){</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"TRIANGLE"</span><span class="o">)){</span>
                 
                <span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                
                <span class="kt">int</span><span class="o">[]</span> <span class="n">ptsX</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s3X</span><span class="o">};</span>
                <span class="kt">int</span><span class="o">[]</span> <span class="n">ptsY</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1Y</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">};</span>
                
                <span class="n">g</span><span class="o">.</span><span class="na">fillPolygon</span><span class="o">(</span><span class="n">ptsX</span><span class="o">,</span> <span class="n">ptsY</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ETOILE"</span><span class="o">)){</span>
                
                <span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>                    
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">);</span>
                
                <span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">);</span>
                
                <span class="kt">int</span> <span class="n">s4X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s4Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">,</span> <span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">);</span>                 
                                
                <span class="kt">int</span> <span class="n">s5X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s5Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">,</span> <span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">);</span>                 
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">,</span> <span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">);</span>  
        <span class="o">}</span>
        
    <span class="o">}</span>
    
    <span class="c">/**</span>
<span class="c">     * Méthode qui peint le morphing</span>
<span class="c">     * @param g</span>
<span class="c">     */</span>
    <span class="k">private</span> <span class="kt">void</span> <span class="nf">drawMorph</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
        <span class="c">//On incrémente le tour</span>
        <span class="n">increment</span><span class="o">++;</span>
        <span class="c">//On regarde si on doit réduire ou non</span>
        <span class="k">if</span><span class="o">(</span><span class="n">drawSize</span> <span class="o">&gt;=</span> <span class="mi">50</span><span class="o">)</span><span class="n">reduce</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">drawSize</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="o">)</span><span class="n">reduce</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        
        <span class="k">if</span><span class="o">(</span><span class="n">reduce</span><span class="o">)</span>
                <span class="n">drawSize</span> <span class="o">=</span> <span class="n">drawSize</span> <span class="o">-</span> <span class="n">getUsedSize</span><span class="o">();</span>
        <span class="k">else</span>
                <span class="n">drawSize</span> <span class="o">=</span> <span class="n">drawSize</span> <span class="o">+</span> <span class="n">getUsedSize</span><span class="o">();</span>
        
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ROND"</span><span class="o">)){</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="n">drawSize</span><span class="o">,</span> <span class="n">drawSize</span><span class="o">);</span> 
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"CARRE"</span><span class="o">)){</span>
                <span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="n">drawSize</span><span class="o">,</span> <span class="n">drawSize</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"TRIANGLE"</span><span class="o">)){</span>
                  
                <span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
                
                <span class="kt">int</span><span class="o">[]</span> <span class="n">ptsX</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s3X</span><span class="o">};</span>
                <span class="kt">int</span><span class="o">[]</span> <span class="n">ptsY</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1Y</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">};</span>
                
                <span class="n">g</span><span class="o">.</span><span class="na">fillPolygon</span><span class="o">(</span><span class="n">ptsX</span><span class="o">,</span> <span class="n">ptsY</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ETOILE"</span><span class="o">)){</span>
                
                <span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>              
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">);</span>
                
                <span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">);</span>
                
                <span class="kt">int</span> <span class="n">s4X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s4Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">,</span> <span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">);</span>                 
                                
                <span class="kt">int</span> <span class="n">s5X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">s5Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">,</span> <span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">);</span>                 
                <span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">,</span> <span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">);</span>  
        <span class="o">}</span>
        
        
    <span class="o">}</span>
    
    <span class="c">/**</span>
<span class="c">     * Méthode qui retourne le nombre à retrancher (ou ajouter) pour le morphing</span>
<span class="c">     * @return res</span>
<span class="c">     */</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="nf">getUsedSize</span><span class="o">(){</span>
        <span class="kt">int</span> <span class="n">res</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="c">//Si le nombre de tours est de 10</span>
        <span class="c">//On réinitialise l'incrément et on retourne 1</span>
        <span class="k">if</span><span class="o">(</span><span class="n">increment</span> <span class="o">/</span> <span class="mi">10</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
                <span class="n">increment</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="n">res</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>       
        <span class="k">return</span> <span class="n">res</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="kt">int</span> <span class="nf">getDrawSize</span><span class="o">(){</span>
        <span class="k">return</span> <span class="n">drawSize</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="kt">boolean</span> <span class="nf">isMorph</span><span class="o">(){</span>
        <span class="k">return</span> <span class="n">morph</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">setMorph</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">bool</span><span class="o">){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">morph</span> <span class="o">=</span> <span class="n">bool</span><span class="o">;</span>
        <span class="c">//On réinitialise la taille</span>
        <span class="n">drawSize</span> <span class="o">=</span> <span class="mi">50</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">setForme</span><span class="o">(</span><span class="n">String</span> <span class="n">form</span><span class="o">){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">forme</span> <span class="o">=</span> <span class="n">form</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="kt">int</span> <span class="nf">getPosX</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">posX</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">setPosX</span><span class="o">(</span><span class="kt">int</span> <span class="n">posX</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">posX</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="kt">int</span> <span class="nf">getPosY</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">posY</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="k">public</span> <span class="kt">void</span> <span class="nf">setPosY</span><span class="o">(</span><span class="kt">int</span> <span class="n">posY</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">posY</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
<br>
Voici le code de notre classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong> : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="k">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
	<span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Go"</span><span class="o">);</span>
	<span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Stop"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Choix de la forme"</span><span class="o">);</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">backX</span><span class="o">,</span> <span class="n">backY</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span> <span class="o">;</span>
    <span class="k">private</span> <span class="n">Thread</span> <span class="n">t</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">JComboBox</span> <span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">();</span>
    
    <span class="k">private</span> <span class="n">JCheckBox</span> <span class="n">morph</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBox</span><span class="o">(</span><span class="s">"Morphing"</span><span class="o">);</span>
    
    <span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>

            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">BoutonListener</span><span class="o">());</span>             
            <span class="n">bouton2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">Bouton2Listener</span><span class="o">());</span>
            
            <span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
            
            <span class="n">JPanel</span> <span class="n">south</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
            <span class="n">south</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton2</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">south</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
            
            <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"ROND"</span><span class="o">);</span>
            <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"CARRE"</span><span class="o">);</span>
            <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"TRIANGLE"</span><span class="o">);</span>
            <span class="n">combo</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"ETOILE"</span><span class="o">);</span>            
            <span class="n">combo</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">FormeListener</span><span class="o">());</span>
            
            <span class="n">morph</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MorphListener</span><span class="o">());</span>
            
            <span class="n">JPanel</span> <span class="n">top</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
            <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span>
            <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">combo</span><span class="o">);</span>
            <span class="n">top</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">morph</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">top</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
                        
    <span class="o">}</span>
	
    
	<span class="k">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
		<span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">();</span>
		<span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
        <span class="k">while</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">animated</span><span class="o">){</span>
        	<span class="c">//System.out.println("OK");</span>
        	<span class="c">//Si le mode morphing est activé, on utilise la taille actuelle de la forme</span>
    		<span class="k">if</span><span class="o">(</span><span class="n">pan</span><span class="o">.</span><span class="na">isMorph</span><span class="o">())</span>
    		<span class="o">{</span>
    			<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>
    		<span class="c">//Sinon, comme d'habitude</span>
    		<span class="k">else</span>
    		<span class="o">{</span>
	        	<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>  
            
        	<span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span><span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>

            <span class="k">try</span> <span class="o">{</span>
                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c">// TODO Auto-generated catch block</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>       
	<span class="o">}</span>

	<span class="k">public</span> <span class="k">class</span> <span class="nc">BoutonListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous lancer l'animation ?"</span><span class="o">,</span> <span class="s">"Lancement de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">==</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">OK_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
				<span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">PlayAnimation</span><span class="o">());</span>
				<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
				<span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>			
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="k">class</span> <span class="nc">Bouton2Listener</span>  <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			
						<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous arrêter l'animation ?"</span><span class="o">,</span> <span class="s">"Arrêt de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_CANCEL_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">NO_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CANCEL_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CLOSED_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>	
				<span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>	
	
	<span class="k">class</span> <span class="nc">PlayAnimation</span> <span class="k">implements</span> <span class="n">Runnable</span><span class="o">{</span>

		<span class="k">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
			<span class="n">go</span><span class="o">();</span>			
		<span class="o">}</span>		
	<span class="o">}</span>
	
	
	<span class="k">class</span> <span class="nc">FormeListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setForme</span><span class="o">(</span><span class="n">combo</span><span class="o">.</span><span class="na">getSelectedItem</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="k">class</span> <span class="nc">MorphListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">//Si la case est cochée, activation du mode morphing</span>
			<span class="k">if</span><span class="o">(</span><span class="n">morph</span><span class="o">.</span><span class="na">isSelected</span><span class="o">())</span><span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
			<span class="c">//Sinon rien !</span>
			<span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
L'une des instructions intéressantes se trouve ici :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous lancer l'animation ?"</span><span class="o">,</span> <span class="s">"Lancement de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">);</span>
			
<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">==</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">OK_OPTION</span><span class="o">)</span>
<span class="o">{</span>
	<span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
	<span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">PlayAnimation</span><span class="o">());</span>
	<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
	<span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
	<span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>			
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et l'autre, là : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="syntax"><pre><span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous arrêter l'animation ?"</span><span class="o">,</span> <span class="s">"Arrêt de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_CANCEL_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">);</span>

<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">NO_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CANCEL_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CLOSED_OPTION</span><span class="o">)</span>
<span class="o">{</span>
	<span class="n">animated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>	
	<span class="n">bouton</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="n">bouton2</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voyons ce qu'il se passe ici :<br>
<ul>
<li>nous initialisons notre objet <strong><span class="courrier"><span class="violet">JOptionPane</span></span></strong> : rien d'étonnant ;</li>
<li>par contre, au lieu d'afficher la boîte, nous affectons le résultat que renvoie la méthode <span class="code2 java"><span class="n">showConfirmDialog</span><span class="o">()</span>
</span> dans une variable de type <strong><span class="violet"><span class="courrier">int</span></span></strong> ;</li>
<li>nous nous servons de cette variable afin de savoir quel bouton a été cliqué (oui ou non).</li>
</ul><br>
<br>
En fait, lorsque vous cliquez sur l'un des deux boutons présents sur cette boîte, vous pouvez affecter ici deux valeurs de type <strong><span class="courrier"><span class="violet">int </span></span></strong>: <br>
<ul>
<li>la valeur correspondant à l'entier <span class="code2 java"><span class="n">JOptionPane</span><span class="o">.</span><span class="na">OK_OPTION</span>
</span> vaut 0 (<span class="code2 java"><span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_OPTION</span>
</span> à la même valeur) ;</li>
<li>la valeur correspondant à l'entier <span class="code2 java"><span class="n">JOptionPane</span><span class="o">.</span><span class="na">NO_OPTION</span>
</span> vaut 1 ;</li>
<li>la valeur correspondant à l'entier <span class="code2 java"><span class="n">JOptionPane</span><span class="o">.</span><span class="na">CANCEL_OPTION</span>
</span> pour la boîte apparaissant lors du clic sur "<strong>Stop</strong>" vaut 2 ;</li>
<li>la valeur correspondant à l'entier <span class="code2 java"><span class="n">JOptionPane</span><span class="o">.</span><span class="na">CLOSED_OPTION</span>
</span> pour la même boîte que ci-dessus, vaut -1.</li>
</ul><br>
<br>
En comparant la valeur de notre entier avec l'une des deux options, nous pouvons en déduire quel bouton a été cliqué et donc agir en conséquence ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
Voici deux screenshots du résultat obtenu : <br>
<br>
<div class="centre"><img src="./java_files/126914.jpg" alt="Image utilisateur">   <img src="./java_files/126915.jpg" alt="Image utilisateur"></div><br>
<br>
Vous commencez à maîtriser les <strong><span class="violet"><span class="courrier">JOptionPane</span></span></strong>, on dirait...<br>
Si on continuait ?... <img src="./java_files/hihi.png" alt="^^" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10573">Les boîtes de saisie</h2>
		<div class="ss_part_texte">
		Je suis sûr que vous avez deviné ce à quoi ces boîtes peuvent servir... <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Oui, tout à fait, nous allons pouvoir faire des saisies dans ces boîtes ! Et même encore mieux... Nous pourrons même avoir une boîte de dialogue qui propose des choix dans une liste déroulante. <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
Je sens que vous êtes pressés de commencer. Alors allons-y.<br>
Vous savez déjà que nous allons utiliser l'objet <strong><span class="violet"><span class="courrier">JOptionPane</span></span></strong>, et les plus curieux d'entre vous ont sûrement dû jeter un oeil aux autres méthodes proposés par cet objet...  <img src="./java_files/soleil.png" alt=":soleil:" class="smilies"> <br>
<br>
Ici, nous allons utiliser la méthode <span class="code2 java"><span class="n">showInputDialog</span><span class="o">(</span><span class="n">Component</span> <span class="n">parent</span><span class="o">,</span> <span class="n">String</span> <span class="n">message</span><span class="o">,</span> <span class="n">String</span> <span class="n">title</span><span class="o">,</span> <span class="kt">int</span> <span class="n">messageType</span><span class="o">)</span>
</span>.<br>
<br>
Voici un code mettant en oeuvre cette méthode :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">(),</span> <span class="n">jop2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
		<span class="n">String</span> <span class="n">nom</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showInputDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Veuillez décliner votre identité !"</span><span class="o">,</span> <span class="s">"Gendarmerie nationale !"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">);</span>
		<span class="n">jop2</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Votre nom est "</span> <span class="o">+</span> <span class="n">nom</span><span class="o">,</span> <span class="s">"Identité"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Vous pouvez constater que cette méthode retourne une chaîne de caractères !</div><br>
<br>
Voici le résultat :<br>
<br>
<div class="centre"><img src="./java_files/127013.jpg" alt="Image utilisateur"><img src="./java_files/127014.jpg" alt="Image utilisateur"></div><br>
<br>
Rien d'extraordinaire...<br>
<br>
Maintenant, voyons comment on incorpore une liste dans une boîte de ce genre... Vous allez voir, c'est simplissime !<br>
<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">String</span><span class="o">[]</span> <span class="n">sexe</span> <span class="o">=</span> <span class="o">{</span><span class="s">"masculin"</span><span class="o">,</span> <span class="s">"féminin"</span><span class="o">,</span> <span class="s">"indéterminé"</span><span class="o">};</span>
		<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">(),</span> <span class="n">jop2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
		<span class="n">String</span> <span class="n">nom</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span><span class="n">jop</span><span class="o">.</span><span class="na">showInputDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> 
										<span class="s">"Veuillez décliner votre sexe !"</span><span class="o">,</span>
										<span class="s">"Gendarmerie nationale !"</span><span class="o">,</span>
										<span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">,</span>
										<span class="kc">null</span><span class="o">,</span>
										<span class="n">sexe</span><span class="o">,</span>
										<span class="n">sexe</span><span class="o">[</span><span class="mi">2</span><span class="o">]);</span>
		<span class="n">jop2</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Votre sexe est "</span> <span class="o">+</span> <span class="n">nom</span><span class="o">,</span> <span class="s">"Etat civil"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce code nous donne : <br>
<br>
<div class="centre"><img src="./java_files/127017.jpg" alt="Image utilisateur"><img src="./java_files/127018.jpg" alt="Image utilisateur"></div><br>
<br>
Nous avons utilisé la méthode avec des paramètres en plus, les voici : <br>
<ul>
<li>les quatre premiers, vous connaissez maintenant ;</li>
<li>le deuxième <strong><span class="violet"><span class="courrier">null </span></span></strong>correspond à l'icône que vous souhaitez passer ;</li>
<li>ensuite, vous devez passer un tableau de <strong><span class="violet"><span class="courrier">String </span></span></strong>afin de remplir la combo dans la boîte ;</li>
<li>le dernier paramètre correspond à la valeur à sélectionner par défaut.</li>
</ul><br>
<br>
<div class="rmq attention">Cette méthode retourne aussi un objet, mais de type <strong><span class="violet"><span class="courrier">Object</span></span></strong>, comme si vous récupériez la valeur directement dans la combo ! <br>
<strong><span class="gros">Donc pensez à faire un cast.</span></strong></div><br>
<br>
Voici maintenant une variante de ce que vous venez de voir : nous allons utiliser ici la méthode <span class="code2 java"><span class="n">showOptionDialog</span><span class="o">()</span>
</span>.<br>
Celle-ci fonctionne à peu près comme la méthode précédente sauf qu'elle prend un paramètre de plus et que le type de retour n'est pas un objet, mais un entier ! <br>
<br>
Ce type de boîte propose, au lieu d'une combo, un choix de boutons correspondant aux éléments passés en paramètres (tableau de String) ; elle prend aussi une valeur par défaut mais retourne l'indice de l'élément dans la liste, et non l'élément lui-même.<br>
<br>
Je pense que vous vous y connaissez assez pour comprendre le code suivant :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">String</span><span class="o">[]</span> <span class="n">sexe</span> <span class="o">=</span> <span class="o">{</span><span class="s">"masculin"</span><span class="o">,</span> <span class="s">"féminin"</span><span class="o">,</span> <span class="s">"indéterminé"</span><span class="o">};</span>
		<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">(),</span> <span class="n">jop2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">rang</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showOptionDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> 
										<span class="s">"Veuillez décliner votre sexe !"</span><span class="o">,</span>
										<span class="s">"Gendarmerie nationale !"</span><span class="o">,</span>
										<span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_CANCEL_OPTION</span><span class="o">,</span>
										<span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">,</span>
										<span class="kc">null</span><span class="o">,</span>
										<span class="n">sexe</span><span class="o">,</span>
										<span class="n">sexe</span><span class="o">[</span><span class="mi">2</span><span class="o">]);</span>
		<span class="n">jop2</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Votre sexe est "</span> <span class="o">+</span> <span class="n">sexe</span><span class="o">[</span><span class="n">rang</span><span class="o">],</span> <span class="s">"Etat civil"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donne :<br>
<br>
<div class="centre"><img src="./java_files/127020.jpg" alt="Image utilisateur"><img src="./java_files/127021.jpg" alt="Image utilisateur"></div><br>
<br>
Voilà, vous en avez terminé avec les boîtes de saisie...<br>
Cependant, vous devez vous demander si vous ne pouvez pas ajouter des composants sur ces boîtes. <br>
C'est vrai, vous pourriez avoir besoin de plus de renseignements, on ne sait jamais... Je vous propose donc de vous montrer comment créer vos propres boîtes de dialogue !<br>
<br>
En avant, mes ZérOs ! Hissez haut ! <img src="./java_files/pirate.png" alt=":pirate:" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10572">Des boîtes de dialogue personnalisées</h2>
		<div class="ss_part_texte">
		Je me doute bien que vous devez être impatients de faire vos propres boîtes de dialogue... <br>
Il est vrai que dans certains cas, vous en aurez besoin, donc allons-y gaiement ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Je vais maintenant vous révéler un secret bien gardé : les boîtes de dialogue héritent de la classe <strong><span class="violet"><span class="courrier">JDialog</span></span></strong>.<br>
Vous avez donc deviné que nous allons créer une classe dérivée de cette dernière.<br>
<br>
Commençons par faire un nouveau projet.<br>
Créez une nouvelle classe dans Eclipse, appelons-la <strong><span class="violet"><span class="courrier">ZDialog </span></span></strong>héritée de la classe citée ci-dessus, et mettez-y le code suivant : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">javax.swing.JDialog</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ZDialog</span> <span class="kd">extends</span> <span class="n">JDialog</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="nf">ZDialog</span><span class="o">(</span><span class="n">JFrame</span> <span class="n">parent</span><span class="o">,</span> <span class="n">String</span> <span class="n">title</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">modal</span><span class="o">){</span>
		<span class="c1">//On appelle le construteur de JDialog correspondant</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="n">title</span><span class="o">,</span> <span class="n">modal</span><span class="o">);</span>
		<span class="c1">//On spécifie une taille</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">80</span><span class="o">);</span>
		<span class="c1">//La position</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="c1">//La boîte ne devra pas être redimensionnable</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="c1">//Enfin on l'affiche</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="c1">//Tout ceci ressemble à ce que nous faisons depuis le début avec notre JFrame...</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Maintenant, faisons une classe qui va tester notre <strong><span class="courrier"><span class="violet">ZDialog</span></span></strong> : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.FlowLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Appel à la ZDialog"</span><span class="o">);</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Ma JFrame"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">100</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">FlowLayout</span><span class="o">());</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
		<span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>

			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">ZDialog</span> <span class="n">zd</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Coucou les ZérOs"</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
			<span class="o">}</span>
			
		<span class="o">});</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">main</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voilà le résultat ; bon, c'est un début : <br>
<br>
<div class="centre"><img src="./java_files/126985.jpg" alt="Image utilisateur"></div><br>
<br>
Je pense que vous avez deviné à quoi servaient les paramètres du constructeur... Mais nous allons tout de même les expliciter : <br>
<ul>
<li><span class="code2 java"><span class="n">JFrame</span> <span class="n">Parent</span></span> correspond à l'objet parent ;</li>
<li><span class="code2 java"><span class="n">String</span> <span class="n">title</span></span> correspond au titre de notre boîte ;</li>
<li><span class="code2 java"><span class="kt">boolean</span> <span class="n">modal</span></span> correspond à la modalité. <strong><span class="courrier"><span class="violet">true </span></span></strong>: boîte modale, <strong><span class="violet"><span class="courrier">false </span></span></strong>: boîte non modale.</li>
</ul><br>
<br>
Rien de compliqué...  Il est donc temps de mettre des composants sur notre objet...<br>
Par contre, vous conviendrez que lorsque nous faisons un tel composant, nous voulons quelque chose de plus qu'une réponse à une question ouverte (oui / non), une chaîne de caractères ou encore un choix dans une liste... Nous en voulons encore plus ! Plusieurs saisies, avec plusieurs listes : <strong><span class="souligne">en même temps !</span></strong> <br>
<br>
Mais vous avez vu que nous devrons récupérer les informations choisies dans certains cas, mais pas tous : nous allons donc devoir déterminer les différents cas ainsi que les choses à faire.<br>
<br>
Nous partons du fait que notre boîte aura un bouton "<strong><span class="italique">OK</span></strong>" et "<strong><span class="italique">Annuler</span></strong>" : dans le cas où l'utilisateur clique sur "<strong><span class="italique">OK</span></strong>", on récupérera les informations, et si l'utilisateur clique sur "<strong><span class="italique">Annuler</span></strong>", non.<br>
Tout ceci en tenant compte de la modalité de notre boîte...<br>
<br>
<div class="rmq question">D'ailleurs, comment va-t-on faire pour dire à notre boîte de mettre fin au dialogue ?</div><br>
Tout simplement en utilisant la méthode <span class="code2 java"><span class="n">setVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span></span>, cette instruction met fin au dialogue !<br>
Ceci signifie aussi que le dialogue commence au moment où l'instruction <span class="code2 java"><span class="n">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span></span> est exécutée. De ce fait, nous allons sortir cette instruction du constructeur de notre objet et nous allons la mettre dans une méthode à part. <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="c1">//Cas où notre ZDialog renverra le contenu</span>
<span class="c1">//D'un JTextField nommé jtf</span>
<span class="kd">public</span> <span class="n">String</span> <span class="nf">showZDialog</span><span class="o">(){</span>
    <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
    <span class="c1">//Le dialogue prend fin</span>
    <span class="c1">//SI on a cliqué sur OK, on envoie, sinon on envoie chaîne vide !</span>
    <span class="k">return</span> <span class="n">jtf</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>

<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Il nous reste un dernier point à gérer...<br>
<div class="rmq question"><strong>Comment récupérer les informations saisies dans notre boîte depuis notre fenêtre, vu que nous voulons plusieurs informations ?</strong></div><br>
C'est vrai qu'on ne peut retourner qu'une valeur à la fois... <img src="./java_files/triste.png" alt=":(" class="smilies"><br>
Mais il peut y avoir plusieurs réponses à cette question.<br>
<ul>
<li>Dans le cas où nous n'avons qu'un composant, nous pouvons adapter la méthode <strong><span class="courrier">showZDialog()</span></strong> au type de retour du composant utilisé.</li>
<li>Dans notre cas, nous voulons plusieurs composants, donc plusieurs valeurs, vous pouvez : <br>
<ul>
<li>retourner une collection de valeurs (<strong><span class="violet"><span class="courrier">ArrayList</span></span></strong>...) ;</li>
<li>faire des accesseurs dans votre <strong><span class="violet"><span class="courrier">ZDialog</span></span></strong> ;</li>
<li>créer un objet dont le rôle est de collecter les informations de votre boîte et de retourner cet objet...</li>
<li>...</li>
</ul><br>
</li>
</ul><br>
<br>
Nous allons opter pour un objet qui collectera les informations et nous retournerons cet objet à la fin de la méthode <strong><span class="courrier">showZDialog()</span></strong>. <br>
Avant de nous lancer dans la création de cet objet, nous devons savoir ce que nous allons mettre dans notre boîte...<br>
<br>
Nous allons faire une boîte permettant de spécifier les caractéristiques d'un personnage de jeu vidéo : <br>
<ul>
<li>son nom : un champ de saisie ; </li>
<li>son sexe : une combo ; </li>
<li>sa taille : un champ de saisie ;   </li>
<li>sa couleur de cheveux : une combo ; </li>
<li>sa tranche d'âge : des radios. </li>
</ul><br>
<div class="rmq information">Pour le placement des composants, l'objet <strong><span class="courrier">JDialog</span></strong> est exactement identique à un objet <strong><span class="courrier">JFrame </span></strong>(<strong><span class="courrier">BorderLayout </span></strong>par défaut, ajout de composant au conteneur...).</div><br>
<br>
Nous pouvons donc faire notre objet contenant les informations de notre boîte de dialogue, je l'ai appelé <strong><span class="courrier"><span class="violet">ZDialogInfo</span></span></strong> : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ZDialogInfo</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">String</span> <span class="n">nom</span><span class="o">,</span> <span class="n">sexe</span><span class="o">,</span> <span class="n">age</span><span class="o">,</span> <span class="n">cheveux</span><span class="o">,</span> <span class="n">taille</span><span class="o">;</span>

	<span class="kd">public</span> <span class="nf">ZDialogInfo</span><span class="o">(){}</span>
	<span class="kd">public</span> <span class="nf">ZDialogInfo</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">,</span> <span class="n">String</span> <span class="n">sexe</span><span class="o">,</span> <span class="n">String</span> <span class="n">age</span><span class="o">,</span>
						<span class="n">String</span> <span class="n">cheveux</span><span class="o">,</span> <span class="n">String</span> <span class="n">taille</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">nom</span> <span class="o">=</span> <span class="n">nom</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">sexe</span> <span class="o">=</span> <span class="n">sexe</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">age</span> <span class="o">=</span> <span class="n">age</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">cheveux</span> <span class="o">=</span> <span class="n">cheveux</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">taille</span> <span class="o">=</span> <span class="n">taille</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c1">//------------------------------------</span>
	
	<span class="kd">public</span> <span class="n">String</span> <span class="nf">getNom</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">nom</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNom</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">nom</span> <span class="o">=</span> <span class="n">nom</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="c1">//------------------------------------</span>
	
	<span class="kd">public</span> <span class="n">String</span> <span class="nf">getSexe</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">sexe</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setSexe</span><span class="o">(</span><span class="n">String</span> <span class="n">sexe</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">sexe</span> <span class="o">=</span> <span class="n">sexe</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c1">//------------------------------------</span>

	<span class="kd">public</span> <span class="n">String</span> <span class="nf">getAge</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">age</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAge</span><span class="o">(</span><span class="n">String</span> <span class="n">age</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">age</span> <span class="o">=</span> <span class="n">age</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="c1">//------------------------------------</span>
	<span class="kd">public</span> <span class="n">String</span> <span class="nf">getCheveux</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">cheveux</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCheveux</span><span class="o">(</span><span class="n">String</span> <span class="n">cheveux</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">cheveux</span> <span class="o">=</span> <span class="n">cheveux</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="c1">//------------------------------------</span>
	<span class="kd">public</span> <span class="n">String</span> <span class="nf">getTaille</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">taille</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTaille</span><span class="o">(</span><span class="n">String</span> <span class="n">taille</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">taille</span> <span class="o">=</span> <span class="n">taille</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c1">//-------------------------------------</span>
	
	<span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">(){</span>
		<span class="n">String</span> <span class="n">str</span><span class="o">;</span>
		<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">nom</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="o">.</span><span class="na">sexe</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span>
				<span class="k">this</span><span class="o">.</span><span class="na">taille</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="o">.</span><span class="na">age</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span>
				<span class="k">this</span><span class="o">.</span><span class="na">cheveux</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
			<span class="n">str</span> <span class="o">=</span> <span class="s">"Description de l'objet InfoZDialog"</span><span class="o">;</span>
			<span class="n">str</span> <span class="o">+=</span> <span class="s">"Nom : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">nom</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">;</span>
			<span class="n">str</span> <span class="o">+=</span> <span class="s">"Sexe : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">sexe</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">;</span>
			<span class="n">str</span> <span class="o">+=</span> <span class="s">"Age : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">age</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">;</span>
			<span class="n">str</span> <span class="o">+=</span> <span class="s">"Cheveux : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">cheveux</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">;</span>
			<span class="n">str</span> <span class="o">+=</span> <span class="s">"Taille : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">taille</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="n">str</span> <span class="o">=</span> <span class="s">"Aucune information !"</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">str</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
L'avantage avec cette méthode, c'est que nous n'avons pas à nous soucier de savoir si nous avons annulé la saisie ou non : l'objet d'information renverra toujours quelque chose...<br>
<br>
Voici le code source de notre boîte perso : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.BorderFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.ImageIcon</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JDialog</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JRadioButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.ButtonGroup</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTextField</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ZDialog</span> <span class="kd">extends</span> <span class="n">JDialog</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">ZDialogInfo</span> <span class="n">zInfo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZDialogInfo</span><span class="o">();</span>
	<span class="kd">private</span> <span class="n">JLabel</span> <span class="n">nomLabel</span><span class="o">,</span> <span class="n">sexeLabel</span><span class="o">,</span> <span class="n">cheveuxLabel</span><span class="o">,</span> <span class="n">ageLabel</span><span class="o">,</span> <span class="n">tailleLabel</span><span class="o">,</span> <span class="n">taille2Label</span><span class="o">,</span> <span class="n">icon</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JRadioButton</span> <span class="n">tranche1</span><span class="o">,</span> <span class="n">tranche2</span><span class="o">,</span> <span class="n">tranche3</span><span class="o">,</span> <span class="n">tranche4</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JComboBox</span> <span class="n">sexe</span><span class="o">,</span> <span class="n">cheveux</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JTextField</span> <span class="n">nom</span><span class="o">,</span> <span class="n">taille</span><span class="o">;</span>
	
	<span class="cm">/**</span>
<span class="cm">	 * Constructeur</span>
<span class="cm">	 * @param parent</span>
<span class="cm">	 * @param title</span>
<span class="cm">	 * @param modal</span>
<span class="cm">	 */</span>
	<span class="kd">public</span> <span class="nf">ZDialog</span><span class="o">(</span><span class="n">JFrame</span> <span class="n">parent</span><span class="o">,</span> <span class="n">String</span> <span class="n">title</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">modal</span><span class="o">){</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="n">title</span><span class="o">,</span> <span class="n">modal</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">550</span><span class="o">,</span> <span class="mi">270</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JDialog</span><span class="o">.</span><span class="na">DO_NOTHING_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">initComponent</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="cm">/**</span>
<span class="cm">	 * Méthode appelée pour utiliser la boîte </span>
<span class="cm">	 * @return zInfo</span>
<span class="cm">	 */</span>
	<span class="kd">public</span> <span class="n">ZDialogInfo</span> <span class="nf">showZDialog</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>		
		<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">zInfo</span><span class="o">;</span>		
	<span class="o">}</span>
	
	<span class="cm">/**</span>
<span class="cm">	 * Initialise le contenu de la boîte</span>
<span class="cm">	 */</span>
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">initComponent</span><span class="o">(){</span>
		<span class="c1">//Icone</span>
		<span class="n">icon</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/icone.jpg"</span><span class="o">));</span>
		<span class="n">JPanel</span> <span class="n">panIcon</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">panIcon</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="n">panIcon</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
		<span class="n">panIcon</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">icon</span><span class="o">);</span>
		
		<span class="c1">//Le nom</span>
		<span class="n">JPanel</span> <span class="n">panNom</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">panNom</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="n">panNom</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">220</span><span class="o">,</span> <span class="mi">60</span><span class="o">));</span>
		<span class="n">nom</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTextField</span><span class="o">();</span>
		<span class="n">nom</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">100</span><span class="o">,</span> <span class="mi">25</span><span class="o">));</span>
		<span class="n">panNom</span><span class="o">.</span><span class="na">setBorder</span><span class="o">(</span><span class="n">BorderFactory</span><span class="o">.</span><span class="na">createTitledBorder</span><span class="o">(</span><span class="s">"Nom du personnage"</span><span class="o">));</span>
		<span class="n">nomLabel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Saisir un nom :"</span><span class="o">);</span>
		<span class="n">panNom</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">nomLabel</span><span class="o">);</span>
		<span class="n">panNom</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>
		
		<span class="c1">//Le sexe</span>
		<span class="n">JPanel</span> <span class="n">panSexe</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">panSexe</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="n">panSexe</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">220</span><span class="o">,</span> <span class="mi">60</span><span class="o">));</span>
		<span class="n">panSexe</span><span class="o">.</span><span class="na">setBorder</span><span class="o">(</span><span class="n">BorderFactory</span><span class="o">.</span><span class="na">createTitledBorder</span><span class="o">(</span><span class="s">"Sexe du personnage"</span><span class="o">));</span>
		<span class="n">sexe</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">();</span>
		<span class="n">sexe</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Masculin"</span><span class="o">);</span>
		<span class="n">sexe</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Féminin"</span><span class="o">);</span>
		<span class="n">sexe</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Indéterminé"</span><span class="o">);</span>
		<span class="n">sexeLabel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Sexe : "</span><span class="o">);</span>
		<span class="n">panSexe</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">sexeLabel</span><span class="o">);</span>
		<span class="n">panSexe</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">sexe</span><span class="o">);</span>
		
		<span class="c1">//L'âge </span>
		<span class="n">JPanel</span> <span class="n">panAge</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">panAge</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="n">panAge</span><span class="o">.</span><span class="na">setBorder</span><span class="o">(</span><span class="n">BorderFactory</span><span class="o">.</span><span class="na">createTitledBorder</span><span class="o">(</span><span class="s">"Age du personnage"</span><span class="o">));</span>
		<span class="n">panAge</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">440</span><span class="o">,</span> <span class="mi">60</span><span class="o">));</span>
		<span class="n">tranche1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButton</span><span class="o">(</span><span class="s">"15 - 25 ans"</span><span class="o">);</span>
		<span class="n">tranche1</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="n">tranche2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButton</span><span class="o">(</span><span class="s">"26 - 35 ans"</span><span class="o">);</span>
		<span class="n">tranche3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButton</span><span class="o">(</span><span class="s">"36 - 50 ans"</span><span class="o">);</span>
		<span class="n">tranche4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButton</span><span class="o">(</span><span class="s">"+ de 50 ans"</span><span class="o">);</span>
		<span class="n">ButtonGroup</span> <span class="n">bg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ButtonGroup</span><span class="o">();</span>
		<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tranche1</span><span class="o">);</span>
		<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tranche2</span><span class="o">);</span>
		<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tranche3</span><span class="o">);</span>
		<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tranche4</span><span class="o">);</span>
		<span class="n">panAge</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tranche1</span><span class="o">);</span>
		<span class="n">panAge</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tranche2</span><span class="o">);</span>
		<span class="n">panAge</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tranche3</span><span class="o">);</span>
		<span class="n">panAge</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tranche4</span><span class="o">);</span>
		
		
		<span class="c1">//La taille</span>
		<span class="n">JPanel</span> <span class="n">panTaille</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">panTaille</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="n">panTaille</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">220</span><span class="o">,</span> <span class="mi">60</span><span class="o">));</span>
		<span class="n">panTaille</span><span class="o">.</span><span class="na">setBorder</span><span class="o">(</span><span class="n">BorderFactory</span><span class="o">.</span><span class="na">createTitledBorder</span><span class="o">(</span><span class="s">"Taille du personnage"</span><span class="o">));</span>
		<span class="n">tailleLabel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Taille : "</span><span class="o">);</span>
		<span class="n">taille2Label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">" cm"</span><span class="o">);</span>
		<span class="n">taille</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTextField</span><span class="o">(</span><span class="s">"180"</span><span class="o">);</span>
		<span class="n">taille</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">90</span><span class="o">,</span> <span class="mi">25</span><span class="o">));</span>
		<span class="n">panTaille</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tailleLabel</span><span class="o">);</span>
		<span class="n">panTaille</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">taille</span><span class="o">);</span>
		<span class="n">panTaille</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">taille2Label</span><span class="o">);</span>
		
		<span class="c1">//La couleur des cheveux</span>
		<span class="n">JPanel</span> <span class="n">panCheveux</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">panCheveux</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="n">panCheveux</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">220</span><span class="o">,</span> <span class="mi">60</span><span class="o">));</span>
		<span class="n">panCheveux</span><span class="o">.</span><span class="na">setBorder</span><span class="o">(</span><span class="n">BorderFactory</span><span class="o">.</span><span class="na">createTitledBorder</span><span class="o">(</span><span class="s">"Couleur de cheveux du personnage"</span><span class="o">));</span>
		<span class="n">cheveux</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">();</span>
		<span class="n">cheveux</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Blond"</span><span class="o">);</span>
		<span class="n">cheveux</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Brun"</span><span class="o">);</span>
		<span class="n">cheveux</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Roux"</span><span class="o">);</span>
		<span class="n">cheveux</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Blanc"</span><span class="o">);</span>
		<span class="n">cheveuxLabel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Cheveux"</span><span class="o">);</span>
		<span class="n">panCheveux</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">cheveuxLabel</span><span class="o">);</span>
		<span class="n">panCheveux</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">cheveux</span><span class="o">);</span>
		
		
		<span class="n">JPanel</span> <span class="n">content</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">content</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="n">content</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">panNom</span><span class="o">);</span>
		<span class="n">content</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">panSexe</span><span class="o">);</span>
		<span class="n">content</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">panAge</span><span class="o">);</span>
		<span class="n">content</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">panTaille</span><span class="o">);</span>
		<span class="n">content</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">panCheveux</span><span class="o">);</span>
		
		<span class="n">JPanel</span> <span class="n">control</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">JButton</span> <span class="n">okBouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"OK"</span><span class="o">);</span>
		
		<span class="n">okBouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>				
				<span class="n">zInfo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZDialogInfo</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getText</span><span class="o">(),</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span><span class="n">sexe</span><span class="o">.</span><span class="na">getSelectedItem</span><span class="o">(),</span> <span class="n">getAge</span><span class="o">(),</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span><span class="n">cheveux</span><span class="o">.</span><span class="na">getSelectedItem</span><span class="o">()</span> <span class="o">,</span><span class="n">getTaille</span><span class="o">());</span>
				<span class="n">setVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
			<span class="o">}</span>
			
			<span class="kd">public</span> <span class="n">String</span> <span class="nf">getAge</span><span class="o">(){</span>
				<span class="k">return</span> <span class="o">(</span><span class="n">tranche1</span><span class="o">.</span><span class="na">isSelected</span><span class="o">())</span> <span class="o">?</span> <span class="n">tranche1</span><span class="o">.</span><span class="na">getText</span><span class="o">()</span> <span class="o">:</span> <span class="o">(</span><span class="n">tranche2</span><span class="o">.</span><span class="na">isSelected</span><span class="o">())</span> <span class="o">?</span> <span class="n">tranche2</span><span class="o">.</span><span class="na">getText</span><span class="o">()</span> <span class="o">:</span> <span class="o">(</span><span class="n">tranche3</span><span class="o">.</span><span class="na">isSelected</span><span class="o">())</span> <span class="o">?</span> <span class="n">tranche3</span><span class="o">.</span><span class="na">getText</span><span class="o">()</span> <span class="o">:</span> <span class="o">(</span><span class="n">tranche4</span><span class="o">.</span><span class="na">isSelected</span><span class="o">())</span> <span class="o">?</span> <span class="n">tranche4</span><span class="o">.</span><span class="na">getText</span><span class="o">()</span> <span class="o">:</span> <span class="n">tranche1</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>   
			<span class="o">}</span>
			
			<span class="kd">public</span> <span class="n">String</span> <span class="nf">getTaille</span><span class="o">(){</span>
				<span class="k">return</span> <span class="o">(</span><span class="n">taille</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">))</span> <span class="o">?</span> <span class="s">"180"</span> <span class="o">:</span> <span class="n">taille</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		
		<span class="n">JButton</span> <span class="n">cancelBouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Annuler"</span><span class="o">);</span>
		<span class="n">cancelBouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">setVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		
		<span class="n">control</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">okBouton</span><span class="o">);</span>
		<span class="n">control</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">cancelBouton</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">panIcon</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">WEST</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">content</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">control</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information"><strong>J'ai ajouté une image, mais vous n'y êtes nullement obligés !<br>
Vous constaterez aussi que j'ai ajouté une bordure à nos <span class="courrier">JPanel</span> afin de faire plus... Zoli...</strong></div><br>
<br>
Et le code source permettant de tester cette boîte : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.FlowLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Appel à la ZDialog"</span><span class="o">);</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Ma JFrame"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">100</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">FlowLayout</span><span class="o">());</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
		<span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>

			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">ZDialog</span> <span class="n">zd</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Coucou les ZérOs"</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
				<span class="n">ZDialogInfo</span> <span class="n">zInfo</span> <span class="o">=</span> <span class="n">zd</span><span class="o">.</span><span class="na">showZDialog</span><span class="o">();</span> 
				<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
				<span class="n">jop</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="n">zInfo</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="s">"Informations personnage"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">);</span>
			<span class="o">}</span>
			
		<span class="o">});</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">main</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h3>Voici des screenshots obtenus</h3><br>
<br>
<h4>De la ZDialog</h4><br>
<br>
<div class="centre"><img src="./java_files/126987.jpg" alt="Image utilisateur"></div><br>
<br>
<h4>Lorsqu'on valide la saisie</h4><br>
<br>
<div class="centre"><img src="./java_files/126990.jpg" alt="Image utilisateur"></div><br>
<br>
<h4>Lorsqu'on annule la saisie</h4><br>
<br>
<div class="centre"><img src="./java_files/126989.jpg" alt="Image utilisateur"></div><br>
<br>
Voilà : nous arrivons à la fin de chapitre, riche en nouveautés... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
En route pour le topo habituel et le petit QCM des familles...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10571">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Les boîtes de dialogue s'utilisent, sauf boîtes personnalisées, avec l'objet <strong><span class="violet"><span class="courrier">JOptionPane</span></span></strong>.</li>
<li>La méthode <strong><span class="courrier">showMessageDialog()</span></strong> permet d'afficher un message informatif.</li>
<li>La méthode <strong><span class="courrier">showConfirmDialog()</span></strong> permet d'afficher une boîte attendant une réponse à une question ouverte (oui / non).</li>
<li>La méthode citée ci-dessus retourne un entier correspondant au bouton sur lequel vous avez cliqué.</li>
<li>La méthode <strong><span class="courrier">showInputDialog()</span></strong> affiche une boîte attendant une saisie de la part de l'utilisateur ou une sélection dans une liste.</li>
<li>Cette méthode retourne soit un <strong><span class="violet"><span class="courrier">String</span></span></strong> dans le cas d'une saisie, soit un <strong><span class="violet"><span class="courrier">Object </span></span></strong>dans le cas d'une liste.</li>
<li>La méthode <strong><span class="courrier">showOptionDialog()</span></strong> affiche une boîte attendant le clic sur une option proposée à l'utilisateur.</li>
<li>Celle-ci retourne l'indice de l'élément sur lequel vous avez cliqué, <strong><span class="rouge">ou un indice négatif pour tous les autres cas !</span></strong></li>
<li>Les boîtes de dialogue sont dites <strong><span class="vertf"><span class="gros">modales</span></span></strong> : aucune interaction hors de la boîte n'est possible tant que celle-ci n'est pas fermée !</li>
<li>Pour faire une boîte de dialogue personnalisée, vous devez créer une classe héritée de <strong><span class="violet"><span class="courrier">JDialog</span></span></strong>.</li>
<li>Pour les boîtes personnalisées, le dialogue commence lorsque la méthode <span class="code2 java"><span class="n">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>
</span> est invoquée et se termine lorsque la méthode <span class="code2 java"><span class="n">setVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
</span> est appelée !</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Chapitre très simple, là aussi, mais je tenais à vous féliciter. <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Vous avez dû remarquer que vous avez réellement progressé en Java depuis le début de ce tuto, et vous devez vous rendre compte qu'en définitive, faire des IHM en Java n'est pas si compliqué qu'il n'y paraît... Il y a beaucoup de choses à savoir, mais le plus important n'est pas de tout connaître par coeur, mais de savoir retrouver l'information rapidement !<br>
<br>
Trêve de compliments, sinon vous ne travaillerez plus... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Je vous propose donc maintenant de continuer par un chapitre qui risque de vous plaire tout autant : <strong><span class="orange">Les menus</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_10588">Les menus</h1>
	<div id="chap_intro">
	Tout le monde sait ce qu'est un menu.<br>
Une barre dans laquelle se trouve une ou plusieurs listes déroulantes, elles-mêmes composées de listes.<br>
Vous avez un exemple sous les yeux, tout en haut de votre navigateur internet.<br>
<br>
Dans ce chapitre nous allons voir comment ajouter ce genre de composants dans vos fenêtres, mais aussi comment les utiliser.<br>
Nous aborderons aussi la façon d'utiliser ce qu'on appelle des <strong>accélérateurs </strong>: par exemple, sous Firefox, si vous faites CTRL + T, vous ouvrez un nouvel onglet. Ce raccourci est un exemple d'accélérateur.<br>
<br>
Au cours de ce chapitre nous verrons aussi les <strong>mnémoniques </strong>: dans la barre de menu de votre navigateur, vous pouvez voir qu'une des lettres de chaque élément de menu est soulignée, ceci signifie que si vous appuyez simultanément sur ALT + &lt;la lettre soulignée&gt;, vous déroulerez le menu correspondant. Voici ce qu'on nomme un mnémonique.<br>
<br>
Ce type de menu, dit barre de menus, est le plus courant ; mais nous verrons aussi comment utiliser un menu contextuel.<br>
Vous savez, celui qui apparaît lorsque vous faites un clic droit... <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
Et en bonus, nous apprendrons aussi à utiliser les barres d'outils.<br>
<br>
Allez, assez de blabla ! Let's go.
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10587">La barre de menus et les éléments de menu</h2>
		<div class="ss_part_texte">
		Vous vous rappelez que j'ai mentionné une <span class="code2 java"><span class="n">MenuBar</span>
</span> faisant partie de la composition de l'objet <strong><span class="violet"><span class="courrier">JFrame</span></span></strong>.<br>
<br>
Le moment est venu pour vous d'utiliser un tel composant : cependant, celui cité ci-dessus appartient au package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">awt</span>
</span>. Dans ce chapitre nous utiliserons son homologue, l'objet <strong><span class="courrier"><span class="violet">JMenuBar</span></span></strong>, présent dans le package <span class="code2 java"><span class="n">javax</span><span class="o">.</span><span class="na">swing</span>
</span>.<br>
<br>
<h3>Un menu simple</h3><br>
<br>
Afin de travailler avec des menus, nous allons avoir besoin : <br>
<ul>
<li>d'objets <strong><span class="violet"><span class="courrier">JMenu </span></span></strong>: titre global d'un point de menu. Regardez en haut de votre navigateur ;</li>
<li>d'objets <strong><span class="violet"><span class="courrier">JMenuItem </span></span></strong>: éléments composants nos menus.</li>
</ul><br>
Ici, afin de pouvoir utiliser nos futurs menus, nous allons devoir coder des implémentations de l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong> : vous la connaissez bien, celle-là ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Ces implémentations serviront à écouter les objets <strong><span class="violet"><span class="courrier">JMenuItem</span></span></strong>. Ce sont ces objets qui déclencheront tel ou tel traitement. Les <strong><span class="violet"><span class="courrier">JMenu</span></span></strong>, eux, ont un comportement automatique. Si on clique sur un titre de menu, celui-ci se déroule tout seul et, dans le cas où nous avons un tel objet présent dans un autre <strong><span class="violet"><span class="courrier">JMenu</span></span></strong>, une autre liste se déroulera toute seule ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
En bref, nous n'avons à gérer qu'une partie de tous ces objets.<br>
Bon : nous allons pouvoir commencer. Je vous propose donc d'enlever tous les composants (bouton, combo, checkbox) de notre animation et de gérer tout cela par le biais d'un menu.<br>
<br>
Avant de nous lancer dans cette tâche, je vais vous montrer un exemple d'utilisation, histoire de vous familiariser. Voici un code d'exemple : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuBar</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuItem</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ZFenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JMenuBar</span> <span class="n">menuBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuBar</span><span class="o">();</span>
	<span class="kd">private</span> <span class="n">JMenu</span> <span class="n">test1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Fichier"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JMenu</span> <span class="n">test2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Edition"</span><span class="o">);</span>
		
	<span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">item1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Ouvrir"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">item2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Fermer"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">item3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Lancer"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">item4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Arrêter"</span><span class="o">);</span>
		
		
	<span class="kd">public</span> <span class="nf">ZFenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">400</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
			
		<span class="c">//On initialise nos menus</span>
		<span class="c">//--------------------------</span>
			
		<span class="k">this</span><span class="o">.</span><span class="na">test1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">item1</span><span class="o">);</span>
		<span class="n">item2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
			<span class="o">}</span>				
		<span class="o">});</span>
		<span class="k">this</span><span class="o">.</span><span class="na">test1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">item2</span><span class="o">);</span>
			
		<span class="k">this</span><span class="o">.</span><span class="na">test2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">item3</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">test2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">item4</span><span class="o">);</span>
			
                <span class="c">//L'ordre d'ajout va déterminer l'ordre d'apparition dans le menu de gauche à droite</span>
                <span class="c">//Le premier ajouté sera tout à gauche de la barre de menu et inversement pour le dernier</span>
			<span class="k">this</span><span class="o">.</span><span class="na">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">test1</span><span class="o">);</span>
			<span class="k">this</span><span class="o">.</span><span class="na">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">test2</span><span class="o">);</span>
			<span class="c">//-------------------------</span>
			
			<span class="k">this</span><span class="o">.</span><span class="na">setJMenuBar</span><span class="o">(</span><span class="n">menuBar</span><span class="o">);</span>
			<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">L'action attachée au <strong><span class="violet"><span class="courrier">JMenutItem</span></span></strong> "<strong><span class="italique">Fermer</span></strong>" permet de quitter l'application.</div><br>
<br>
Et le résultat de ce code : <br>
<br>
<div class="centre"><img src="./java_files/127083.jpg" alt="Image utilisateur"><img src="./java_files/127084.jpg" alt="Image utilisateur"></div><br>
<br>
Voici notre exemple un peu plus élaboré : <br>
<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.ButtonGroup</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBoxMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuBar</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JRadioButtonMenuItem</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ZFenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JMenuBar</span> <span class="n">menuBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuBar</span><span class="o">();</span>
	<span class="kd">private</span> <span class="n">JMenu</span> <span class="n">test1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Fichier"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JMenu</span> <span class="n">test1_2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Sous ficher"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JMenu</span> <span class="n">test2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Edition"</span><span class="o">);</span>
		
	<span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">item1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Ouvrir"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">item2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Fermer"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">item3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Lancer"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">item4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Arrêter"</span><span class="o">);</span>
	
	<span class="kd">private</span> <span class="n">JCheckBoxMenuItem</span> <span class="n">jcmi1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBoxMenuItem</span><span class="o">(</span><span class="s">"Choix 1"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JCheckBoxMenuItem</span> <span class="n">jcmi2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBoxMenuItem</span><span class="o">(</span><span class="s">"Choix 2"</span><span class="o">);</span>
	
	<span class="kd">private</span> <span class="n">JRadioButtonMenuItem</span> <span class="n">jrmi1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Radio 1"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JRadioButtonMenuItem</span> <span class="n">jrmi2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Radio 2"</span><span class="o">);</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">ZFenetre</span> <span class="n">zFen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZFenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="nf">ZFenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">400</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
			
		<span class="c">//On initialise nos menus</span>
		<span class="c">//--------------------------			</span>
		<span class="k">this</span><span class="o">.</span><span class="na">test1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">item1</span><span class="o">);</span>
		
		<span class="c">//On ajoute les éléments dans notre sous-menu</span>
		<span class="k">this</span><span class="o">.</span><span class="na">test1_2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jcmi1</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">test1_2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jcmi2</span><span class="o">);</span>
		<span class="c">//Ajout d'un séparateur</span>
		<span class="k">this</span><span class="o">.</span><span class="na">test1_2</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
		<span class="c">//On met nos radios dans un ButtonGroup</span>
		<span class="n">ButtonGroup</span> <span class="n">bg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ButtonGroup</span><span class="o">();</span>
		<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jrmi1</span><span class="o">);</span>
		<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jrmi1</span><span class="o">);</span>
                <span class="c">//On présélectionne la première radio</span>
		<span class="n">jrmi1</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>

		<span class="k">this</span><span class="o">.</span><span class="na">test1_2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jrmi1</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">test1_2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jrmi2</span><span class="o">);</span>
		
		<span class="c">//Ajout du sous-menu dans notre menu</span>
		<span class="k">this</span><span class="o">.</span><span class="na">test1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">test1_2</span><span class="o">);</span>
		<span class="c">//Ajout d'un séparateur</span>
		<span class="k">this</span><span class="o">.</span><span class="na">test1</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
		<span class="n">item2</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
			<span class="o">}</span>				
		<span class="o">});</span>
		<span class="k">this</span><span class="o">.</span><span class="na">test1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">item2</span><span class="o">);</span>
			
		<span class="k">this</span><span class="o">.</span><span class="na">test2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">item3</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">test2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">item4</span><span class="o">);</span>
			
                <span class="c">//L'ordre d'ajout va déterminer l'ordre d'apparition dans le menu de gauche à droite</span>
                <span class="c">//Le premier ajouté sera tout à gauche de la barre de menu et inversement pour le dernier</span>
			<span class="k">this</span><span class="o">.</span><span class="na">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">test1</span><span class="o">);</span>
			<span class="k">this</span><span class="o">.</span><span class="na">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">test2</span><span class="o">);</span>
			<span class="c">//-------------------------</span>
			
			<span class="k">this</span><span class="o">.</span><span class="na">setJMenuBar</span><span class="o">(</span><span class="n">menuBar</span><span class="o">);</span>
			<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voilà le rendu de ce code : <br>
<br>
<div class="centre"><img src="./java_files/127124.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir qu'il n'y a rien de difficile à créer un menu. Je vous propose donc d'en créer un pour notre animation. Nous allons faire ceci petit à petit. Nous gèrerons les événements ensuite. Pour le moment, nous allons avoir besoin :<br>
<ul>
<li>d'un menu <strong><span class="arial">animation</span></strong>, pour lancer, arrêter (par défaut à <span class="code2 java"><span class="n">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
</span>) ou quitter l'animation ;</li>
<li>d'un menu <strong><span class="arial">forme</span></strong>, afin de savoir quel type de forme utiliser (sous-menu + une radio par forme) et si celle-ci est en mode morphing (case à cocher) ;</li>
<li>d'un menu <strong><span class="arial">à propos</span></strong>, avec un zoli "?" qui va ouvrir une boîte de dialogue. </li>
</ul><br>
<br>
N'effacez surtout pas les implémentations pour les événements, retirez seulement les composants utilisant les implémentations et créez votre menu ! <br>
<div class="rmq attention">Vous serez sans doute obligés de mettre quelques instructions en commentaire... Mais nous y reviendrons.</div><br>
Je vous laisse faire, vous devriez y arriver sans problème... Prenez votre temps, réfléchissez, et allez-y ! <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
Voici le code que vous devriez avoir (ou un code s'en approchant) : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.ButtonGroup</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBoxMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuBar</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JRadioButtonMenuItem</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="kd">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">backX</span><span class="o">,</span> <span class="n">backY</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span> <span class="o">;</span>
    <span class="kd">private</span> <span class="n">Thread</span> <span class="n">t</span><span class="o">;</span>
    
    <span class="kd">private</span> <span class="n">JMenuBar</span> <span class="n">menuBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuBar</span><span class="o">();</span>
    
    <span class="kd">private</span> <span class="n">JMenu</span> <span class="n">animation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">),</span>
    		<span class="n">forme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Forme"</span><span class="o">),</span>
    		<span class="n">typeForme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Type de forme"</span><span class="o">),</span>
    		<span class="n">aPropos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"À propos"</span><span class="o">);</span>
    
    <span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">lancer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Lancer l'animation"</span><span class="o">),</span>
    				<span class="n">arreter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Arrêter l'animation"</span><span class="o">),</span>
    				<span class="n">quitter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Quitter"</span><span class="o">),</span>
    				<span class="n">aProposItem</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"?"</span><span class="o">);</span>
    
    <span class="kd">private</span> <span class="n">JCheckBoxMenuItem</span> <span class="n">morph</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBoxMenuItem</span><span class="o">(</span><span class="s">"Morphing"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JRadioButtonMenuItem</span> <span class="n">carre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Carré"</span><span class="o">),</span>
    							<span class="n">rond</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Rond"</span><span class="o">),</span>
    							<span class="n">triangle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Triangle"</span><span class="o">),</span>
    							<span class="n">etoile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Etoile"</span><span class="o">);</span>
    							
    <span class="kd">private</span> <span class="n">ButtonGroup</span> <span class="n">bg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ButtonGroup</span><span class="o">();</span>
    
    <span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>

            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">initMenu</span><span class="o">();</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
                        
    <span class="o">}</span>
	
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initMenu</span><span class="o">(){</span>
    	<span class="c">//Menu animation</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lancer</span><span class="o">);</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">arreter</span><span class="o">);</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
        <span class="c">//Pour quitter l'application</span>
    	<span class="n">quitter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
    		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">){</span>
    			<span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
    		<span class="o">}</span>
    	<span class="o">});</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">quitter</span><span class="o">);</span>
    	
    	<span class="c">//Menu forme</span>
    	
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="n">rond</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>

    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">typeForme</span><span class="o">);</span>
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">morph</span><span class="o">);</span>
    	
    	<span class="c">//menu à propos</span>
    	<span class="n">aPropos</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aProposItem</span><span class="o">);</span>
    	
    	<span class="c">//Ajout des menus dans la barre de menus</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">animation</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">forme</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aPropos</span><span class="o">);</span>
    	
    	<span class="c">//Ajout de la barre de menus sur la fenêtre</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">setJMenuBar</span><span class="o">(</span><span class="n">menuBar</span><span class="o">);</span>
    <span class="o">}</span>
    
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
		<span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">();</span>
		<span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
        <span class="k">while</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">animated</span><span class="o">){</span>
        	<span class="c">//System.out.println("OK");</span>
        	<span class="c">//Si le mode morphing est activé, on utilise la taille actuelle de la forme</span>
    		<span class="k">if</span><span class="o">(</span><span class="n">pan</span><span class="o">.</span><span class="na">isMorph</span><span class="o">())</span>
    		<span class="o">{</span>
    			<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>
    		<span class="c">//Sinon, comme d'habitude</span>
    		<span class="k">else</span>
    		<span class="o">{</span>
	        	<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>  
            
        	<span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span><span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>

            <span class="k">try</span> <span class="o">{</span>
                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c">// TODO Auto-generated catch block</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>       
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoutonListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous lancer l'animation ?"</span><span class="o">,</span> <span class="s">"Lancement de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">PLAIN_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">==</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">OK_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">lancer</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
				<span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">PlayAnimation</span><span class="o">());</span>
				<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>			
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="kd">class</span> <span class="nc">Bouton2Listener</span>  <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous arrêter l'animation ?"</span><span class="o">,</span> <span class="s">"Arrêt de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_CANCEL_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">NO_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CANCEL_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CLOSED_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
				<span class="c">//On remplace nos boutons par nos JMenuItem</span>
				<span class="n">lancer</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>	
	
	<span class="kd">class</span> <span class="nc">PlayAnimation</span> <span class="kd">implements</span> <span class="n">Runnable</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
			<span class="n">go</span><span class="o">();</span>			
		<span class="o">}</span>		
	<span class="o">}</span>
	
	
	<span class="kd">class</span> <span class="nc">FormeListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="c">//On commente cette ligne pour l'instant</span>
			<span class="c">//****************************************</span>
			<span class="c">//pan.setForme(combo.getSelectedItem().toString());</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="kd">class</span> <span class="nc">MorphListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">//Si la case est cochée, activation du mode morphing</span>
			<span class="k">if</span><span class="o">(</span><span class="n">morph</span><span class="o">.</span><span class="na">isSelected</span><span class="o">())</span><span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
			<span class="c">//Sinon rien !</span>
			<span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce que vous devez obtenir : <br>
<br>
<div class="centre"><img src="./java_files/127133.jpg" alt="Image utilisateur"><img src="./java_files/127145.jpg" alt="Image utilisateur"><img src="./java_files/127136.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez remarquer que notre IHM est beaucoup plus propre... <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Il ne nous reste plus qu'à faire interagir nos menus avec notre animation ! Rien de plus simple, il suffit de dire à nos <strong><span class="violet"><span class="courrier">MenuItem</span></span></strong> qu'une implémentation les écoutent. En fait, cela revient à faire comme si nous cliquions sur des boutons, à l'exception des cases à cocher et des radios où, là, nous pouvons utiliser une implémentation d'<strong><span class="violet"><span class="courrier">ActionListener </span></span></strong>ou d'<strong><span class="violet"><span class="courrier">ItemListener</span></span></strong> : nous utiliserons la première.<br>
<br>
Afin que l'application fonctionne bien, j'ai apporté deux modifications mineures dans la classe <strong><span class="violet"><span class="courrier">Panneau</span></span></strong> : <ul>
<li>ajout d'une instruction dans une condition, celle-ci : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="syntax"><pre><span class="c">//J'ai rajouté :  || this.forme.equals("CARRÉ")</span>
<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"CARRE"</span><span class="o">)</span> <span class="o">||</span> <span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"CARRÉ"</span><span class="o">)){</span>
	<span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Pour accepter les deux orthographe ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
</li>
<li>ajout d'un <strong><span class="courrier">toUpperCase()</span></strong> dans : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">setForme</span><span class="o">(</span><span class="n">String</span> <span class="n">form</span><span class="o">){</span>     	
     <span class="k">this</span><span class="o">.</span><span class="na">forme</span> <span class="o">=</span> <span class="n">form</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Afin d'être sûr que le test sur cette chaîne de caractères soit sur des majuscules...<br>
</li>
</ul><br>
<br>
Voici le code de notre animation avec un beau menu pour tout contrôler : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.ButtonGroup</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.ImageIcon</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBoxMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuBar</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JRadioButtonMenuItem</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="kd">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">backX</span><span class="o">,</span> <span class="n">backY</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span> <span class="o">;</span>
    <span class="kd">private</span> <span class="n">Thread</span> <span class="n">t</span><span class="o">;</span>
    
    <span class="kd">private</span> <span class="n">JMenuBar</span> <span class="n">menuBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuBar</span><span class="o">();</span>
    
    <span class="kd">private</span> <span class="n">JMenu</span> <span class="n">animation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">),</span>
    		<span class="n">forme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Forme"</span><span class="o">),</span>
    		<span class="n">typeForme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Type de forme"</span><span class="o">),</span>
    		<span class="n">aPropos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"À propos"</span><span class="o">);</span>
    
    <span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">lancer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Lancer l'animation"</span><span class="o">),</span>
    				<span class="n">arreter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Arrêter l'animation"</span><span class="o">),</span>
    				<span class="n">quitter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Quitter"</span><span class="o">),</span>
    				<span class="n">aProposItem</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"?"</span><span class="o">);</span>
    
    <span class="kd">private</span> <span class="n">JCheckBoxMenuItem</span> <span class="n">morph</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBoxMenuItem</span><span class="o">(</span><span class="s">"Morphing"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JRadioButtonMenuItem</span> <span class="n">carre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Carré"</span><span class="o">),</span>
    							<span class="n">rond</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Rond"</span><span class="o">),</span>
    							<span class="n">triangle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Triangle"</span><span class="o">),</span>
    							<span class="n">etoile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Etoile"</span><span class="o">);</span>
    							
    <span class="kd">private</span> <span class="n">ButtonGroup</span> <span class="n">bg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ButtonGroup</span><span class="o">();</span>
    
    <span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>

            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">initMenu</span><span class="o">();</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
                        
    <span class="o">}</span>
	
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initMenu</span><span class="o">(){</span>
    	<span class="c">//Menu animation</span>
    	<span class="c">//****************************</span>
    	
    	<span class="c">//Ajout du listener pour lancer l'animation</span>
    	<span class="n">lancer</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">StartAnimationListener</span><span class="o">());</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lancer</span><span class="o">);</span>
    	
    	<span class="c">//Ajout du listener pour arrêter l'animation</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">StopAnimationListener</span><span class="o">());</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">arreter</span><span class="o">);</span>
    	
    	<span class="n">animation</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
    	<span class="n">quitter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
    		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">){</span>
    			<span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
    		<span class="o">}</span>
    	<span class="o">});</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">quitter</span><span class="o">);</span>
    	
    	<span class="c">//Menu forme</span>
    	
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="c">//On crée un nouvel écouteur, inutile de créer 4 instances différentes</span>
    	<span class="n">FormeListener</span> <span class="n">fl</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormeListener</span><span class="o">();</span>
    	<span class="n">carre</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	<span class="n">rond</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	<span class="n">triangle</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	<span class="n">etoile</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="n">rond</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
    	
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">typeForme</span><span class="o">);</span>
    	
    	<span class="c">//Ajout du listener pour le morphing</span>
    	<span class="n">morph</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MorphListener</span><span class="o">());</span>
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">morph</span><span class="o">);</span>
    	
    	<span class="c">//menu à propos</span>
    	
    	<span class="c">//Ajout de ce que doit faire le "?"</span>
    	<span class="n">aProposItem</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
				<span class="n">ImageIcon</span> <span class="n">img</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/cysboy.gif"</span><span class="o">);</span>
				
				<span class="n">String</span> <span class="n">mess</span> <span class="o">=</span> <span class="s">"Merci ! \n J'espère que vous vous amusez bien ! \n"</span><span class="o">;</span>
				<span class="n">mess</span> <span class="o">+=</span> <span class="s">"Je crois qu'il est temps d'ajouter des accélérateurs et des mnémoniques dans tout ça...\n"</span><span class="o">;</span>
				<span class="n">mess</span> <span class="o">+=</span> <span class="s">"\n Allez, GO les ZérOs !"</span><span class="o">;</span>
				
				<span class="n">jop</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="n">mess</span><span class="o">,</span> <span class="s">"À propos"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
				
			<span class="o">}</span>    		    		
    	<span class="o">});</span>
    	<span class="n">aPropos</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aProposItem</span><span class="o">);</span>
    	
    	<span class="c">//Ajout des menus dans la barre de menus</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">animation</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">forme</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aPropos</span><span class="o">);</span>
    	
    	<span class="c">//Ajouit de la barre de menus sur la fenêtre</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">setJMenuBar</span><span class="o">(</span><span class="n">menuBar</span><span class="o">);</span>
    <span class="o">}</span>
    
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
		<span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">();</span>
		<span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
        <span class="k">while</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">animated</span><span class="o">){</span>
        	<span class="c">//System.out.println("OK");</span>
        	<span class="c">//Si le mode morphing est activé, on utilise la taille actuelle de la forme</span>
    		<span class="k">if</span><span class="o">(</span><span class="n">pan</span><span class="o">.</span><span class="na">isMorph</span><span class="o">())</span>
    		<span class="o">{</span>
    			<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>
    		<span class="c">//Sinon, comme d'habitude</span>
    		<span class="k">else</span>
    		<span class="o">{</span>
	        	<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>  
            
        	<span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span><span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>

            <span class="k">try</span> <span class="o">{</span>
                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c">// TODO Auto-generated catch block</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>       
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Ecouteur du menu Lancer</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StartAnimationListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous lancer l'animation ?"</span><span class="o">,</span> <span class="s">"Lancement de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">PLAIN_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">==</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">OK_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">lancer</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
				<span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">PlayAnimation</span><span class="o">());</span>
				<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>			
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Ecouteur du menu Quitter</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">StopAnimationListener</span>  <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous arrêter l'animation ?"</span><span class="o">,</span> <span class="s">"Arrêt de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_CANCEL_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">NO_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CANCEL_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CLOSED_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
				<span class="c">//On remplace nos boutons par nos JMenuItem</span>
				<span class="n">lancer</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>	
	
	<span class="c">/**</span>
<span class="c">	 * Lance le thread.</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">PlayAnimation</span> <span class="kd">implements</span> <span class="n">Runnable</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
			<span class="n">go</span><span class="o">();</span>			
		<span class="o">}</span>		
	<span class="o">}</span>	
	
	<span class="c">/**</span>
<span class="c">	 * Ecoute les menus forme</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">FormeListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setForme</span><span class="o">(((</span><span class="n">JRadioButtonMenuItem</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">());</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Ecoute le menu Morphing</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">MorphListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">//Si la case est cochée, activation du mode morphing</span>
			<span class="k">if</span><span class="o">(</span><span class="n">morph</span><span class="o">.</span><span class="na">isSelected</span><span class="o">())</span><span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
			<span class="c">//Sinon rien !</span>
			<span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq attention"><strong>J'ai modifié le nom des implémentations et j'ai ajouté mon avatar du SDZ dans le dialogue du menu "<span class="arial">À propos</span>"</strong>. Mettez une image si vous avez envie... <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
<br>
Comme je l'ai dit dans le dialogue du menu "<strong><span class="arial">À propos</span></strong>", je crois qu'il est temps de mettre des raccourcis clavier dans tout ceci !<br>
Vous êtes prêts ? <br>
<br>
<h3>Les raccourcis clavier</h3><br>
<br>
En fait, ceci est très simple aussi. Pour ajouter un accélérateur sur un <strong><span class="violet"><span class="courrier">JMenu</span></span></strong>, nous appelerons la méthode <span class="code2 java"><span class="n">setAccelerator</span><span class="o">();</span>
</span> et pour ajouter un mnémonique sur un <strong><span class="violet"><span class="courrier">JMenuItem</span></span></strong>, nous invoquerons la méthode <span class="code2 java"><span class="n">setMnemonic</span><span class="o">();</span>
</span>.<br>
<br>
Attribuons le mnémonique '<strong><span class="arial">A</span></strong>' pour le menu "<strong><span class="arial">Animation</span></strong>", le mnémonique '<strong><span class="arial">F</span></strong>' pour le menu "<strong><span class="arial">Forme</span></strong>" et enfin '<strong><span class="arial">P</span></strong>' pour "<strong><span class="arial">À propos</span></strong>". Vous allez voir, c'est très simple : il vous suffit d'invoquer la méthode <span class="code2 java"><span class="n">setMnemonic</span><span class="o">(</span><span class="kt">char</span> <span class="n">mnemonic</span><span class="o">);</span>
</span> sur le <strong><span class="violet"><span class="courrier">JMenu</span></span></strong> que vous désirez.<br>
<br>
Ce qui nous donne, dans notre cas : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78</pre></td><td class="code"><div class="syntax"><pre><span class="kd">private</span> <span class="kt">void</span> <span class="nf">initMenu</span><span class="o">(){</span>
    	<span class="c">//Menu animation</span>
    	<span class="c">//****************************</span>

    	<span class="c">//Ajout du listener pour lancer l'animation</span>
    	<span class="n">lancer</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">StartAnimationListener</span><span class="o">());</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lancer</span><span class="o">);</span>
    	
    	<span class="c">//Ajout du listener pour arrêter l'animation</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">StopAnimationListener</span><span class="o">());</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">arreter</span><span class="o">);</span>
    	
    	<span class="n">animation</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
    	<span class="n">quitter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
    		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">){</span>
    			<span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
    		<span class="o">}</span>
    	<span class="o">});</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">quitter</span><span class="o">);</span>
    	
    	<span class="c">//Menu forme</span>
    	
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="c">//On crée un nouvel écouteur, inutile de créer 4 instances différentes</span>
    	<span class="n">FormeListener</span> <span class="n">fl</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormeListener</span><span class="o">();</span>
    	<span class="n">carre</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	<span class="n">rond</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	<span class="n">triangle</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	<span class="n">etoile</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="n">rond</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
    	
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">typeForme</span><span class="o">);</span>
    	
    	<span class="c">//Ajout du listener pour le morphing</span>
    	<span class="n">morph</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MorphListener</span><span class="o">());</span>
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">morph</span><span class="o">);</span>
    	
    	<span class="c">//menu à propos</span>
    	
    	<span class="c">//Ajout de ce que doit faire le "?"</span>
    	<span class="n">aProposItem</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
				<span class="n">ImageIcon</span> <span class="n">img</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/cysboy.gif"</span><span class="o">);</span>
				
				<span class="n">String</span> <span class="n">mess</span> <span class="o">=</span> <span class="s">"Merci ! \n J'espère que vous vous amusez bien ! \n"</span><span class="o">;</span>
				<span class="n">mess</span> <span class="o">+=</span> <span class="s">"Je crois qu'il est temps d'ajouter des accélérateurs et des mnémoniques dans tout ça...\n"</span><span class="o">;</span>
				<span class="n">mess</span> <span class="o">+=</span> <span class="s">"\n Allez, GO les ZérOs !"</span><span class="o">;</span>
				
				<span class="n">jop</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="n">mess</span><span class="o">,</span> <span class="s">"À propos"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
				
			<span class="o">}</span>    		    		
    	<span class="o">});</span>
    	<span class="n">aPropos</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aProposItem</span><span class="o">);</span>
    	
    	<span class="c">//Ajout des menus dans la barre de menus ET AJOUT DE MNEMONICS ! !</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'A'</span><span class="o">);</span>
		<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">animation</span><span class="o">);</span>
    	
		<span class="n">forme</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'F'</span><span class="o">);</span>
		<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">forme</span><span class="o">);</span>
		    	
		<span class="n">aPropos</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'P'</span><span class="o">);</span>
		<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aPropos</span><span class="o">);</span>    	
    	<span class="c">//Ajouit de la barre de menus sur la fenêtre</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">setJMenuBar</span><span class="o">(</span><span class="n">menuBar</span><span class="o">);</span>
    <span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Nous avons à présent les lettres correspondantes soulignées dans nos menus, et mieux encore, si vous tapez <strong><span class="arial">ALT + &lt;la lettre&gt;</span></strong> : le menu correspondant se déroule ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
Voici ce que j'obtiens : <br>
<br>
<div class="centre"><img src="./java_files/127154.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Concernant les mnémoniques, vous devez savoir que vous pouvez aussi en mettre sur les objets <strong><span class="courrier"><span class="violet">JMenuItem</span></span></strong>. <br>
Il faut que vous sachiez aussi qu'il existe une autre façon d'ajouter un mnémonique sur un <strong><span class="violet"><span class="courrier">JMenu</span></span></strong> mais <strong>UNIQUEMENT SUR UN</strong> <strong><span class="violet"><span class="courrier">JMenu</span></span></strong> : en passant le mnémonique en deuxième paramètre du constructeur de l'objet, comme ceci <span class="code2 java"><span class="n">JMenu</span> <span class="n">menu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Fichier"</span><span class="o">,</span> <span class="sc">'F'</span><span class="o">);</span><span class="c">//Ici, ce menu aura le mnémonique F</span>
</span>.</div><br>
<br>
Oui, je sais, c'est simple et même très simple. Pour ajouter des accélérateurs, c'est quasiment pareil sauf que nous devrons utiliser un nouvel objet : <strong><span class="violet"><span class="courrier">KeyStroke</span></span></strong>.<br>
Cet objet permet de connaître l'identité de la touche utilisée ou à utiliser. De ce fait, c'est grâce à cet objet que nous allons pouvoir construire des combinaisons de touches pour nos accélérateurs !<br>
<br>
Nous allons commencer par attribuer un simple caractère comme accélérateur pour notre <strong><span class="violet"><span class="courrier">JMenuItem </span></span></strong>"<strong><span class="arial">Lancer</span></strong>", ceci en utilisant la méthode <span class="code2 java"><span class="n">getKeyStroke</span><span class="o">(</span><span class="kt">char</span> <span class="n">caracter</span><span class="o">);</span>
</span> de l'objet <strong><span class="violet"><span class="courrier">KeyStroke</span></span></strong>.<br>
<br>
Rajoutez cette ligne de code au début de la méthode <span class="code2 java"><span class="n">initMenu</span><span class="o">()</span>
</span> : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Cette instruction ajoute l'accélérateur 'c' à notre objet</span>
<span class="n">lancer</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="sc">'c'</span><span class="o">));</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Vous aurez besoin de ces packages : <span class="code2 java"><span class="n">javax</span><span class="o">.</span><span class="na">swing</span><span class="o">.</span><span class="na">KeyStroke</span>
</span> et <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">awt</span><span class="o">.</span><span class="na">event</span><span class="o">.</span><span class="na">ActionEvent</span>
</span> </div><br>
<br>
Testez votre application et vous devriez vous rendre compte qu'un petit '<strong><span class="arial">c</span></strong>' est apparu à côté du menu "<strong><span class="arial">Lancer"</span>.</strong><br>
<br>
Voyez plutôt : <br>
<br>
<div class="centre"><img src="./java_files/127162.jpg" alt="Image utilisateur"></div><br>
<br>
Et, si vous appuyez sur la touche 'c' de votre clavier, celle-ci a le même effet qu'un clic sur le menu "<strong><span class="arial">Lancer</span></strong>" ! <br>
<br>
<div class="rmq erreur"><strong><span class="souligne">Attention </span></strong>: si vous mettez le caractère 'C', vous serez obligés d'appuyer simultanément sur <strong><span class="arial">SHIFT + c</span></strong> ou alors d'avoir la touche <strong><span class="arial">MAJ</span></strong> activée !</div><br>
<br>
Le principe est bien, cependant, imaginez aussi que, maintenant, votre touche 'c' vous demandera systématiquement le lancement de votre animation !<br>
C'est l'une des raisons pour laquelle les accélérateurs sont, en général, des combinaisons de touches du genre <strong><span class="arial">CTRL + c</span></strong> ou encore <strong><span class="arial">CTRL + SHIFT + S</span></strong>.<br>
<br>
Pour réussir à faire ceci, nous allons utiliser une autre méthode <span class="code2 java"><span class="n">getKeyStroke</span><span class="o">()</span>
</span> : celle-ci prendra non pas le caractère de notre touche, mais son code, ainsi qu'une ou plusieurs touches faisant la combinaison !<br>
<br>
<div class="rmq information">Pour obtenir le code d'une touche, nous utiliserons l'objet <strong><span class="courrier">KeyEvent</span></strong>, qui stocke tous les codes de touches !</div><br>
<br>
Dans le code qui suit, je crée un accélérateur <strong><span class="arial">CTRL + L</span></strong> pour le menu "<strong><span class="arial">Lancer</span></strong>" et un accélérateur <strong><span class="arial">CTRL + SHIT + A</span></strong> pour le menu "<strong><span class="arial">Arrêter</span></strong>" : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="syntax"><pre><span class="n">lancer</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_L</span><span class="o">,</span>
                                              <span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_MASK</span><span class="o">));</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lancer</span><span class="o">);</span>
    	
    	<span class="c">//Ajout du listener pour arrêter l'animation</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">StopAnimationListener</span><span class="o">());</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_A</span><span class="o">,</span>
                                                    <span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span> <span class="o">+</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">SHIFT_DOWN_MASK</span><span class="o">));</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">arreter</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et ceci nous donne : <br>
<br>
<div class="centre"><img src="./java_files/127166.jpg" alt="Image utilisateur"></div><br>
<br>
À ce moment-ci, j'imagine que vous devez être perturbés par ceci : <span class="code2 java"><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_L</span>
</span> et les appels du même genre.<br>
<br>
En fait, la classe <strong><span class="violet"><span class="courrier">KeyEvent</span></span></strong> répertorie tous les codes de toutes les touches du clavier. Une grande majorité sont sous la forme <strong><span class="arial">VK_</span></strong>&lt;<span class="italique"><strong>le caractère ou le nom de la touche</strong></span>&gt;, lisez ceci comme : <span class="arial"><strong>V</strong>alue of <strong>K</strong>ey &lt;<strong><span class="italique">nom de la touche</span></strong>&gt;</span>.<br>
Mis à part certaines touches de contrôle comme <strong><span class="arial">CTRL, ALT, SHIFT</span></strong>... vous pouvez retrouver facilement le code d'une touche grâce à cet objet !<br>
<br>
Ensuite, vous avez dû remarquer que lorsque vous avez voulu taper <span class="code2 java"><span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span>
</span>, Eclipse vous propose quasiment la même chose : <br>
<br>
<div class="centre"><img src="./java_files/127167.jpg" alt="Image utilisateur"><img src="./java_files/127168.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez aisément voir qu'Eclipse vous dit que la version <strong><span class="arial">CTRL_DOWN_MASK</span></strong> est la plus récente et qu'il est vivement conseillé de l'utiliser !<br>
<br>
<div class="rmq information">Maintenant que vous savez comment créer des mnémoniques et des accélérateurs, mettez-en où vous voulez ! Ceci dépend de vous...</div><br>
<br>
Vous voilà donc avec un zoli menu avec des mnémoniques et des accélérateurs.<br>
Il est donc temps de voir comment créer un menu contextuel ! 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10586">Faire un menu contextuel</h2>
		<div class="ss_part_texte">
		Vous allez vous rendre compte que vous avez déjà fait le plus dur...<br>
Nous allons seulement utiliser un autre objet : un <strong><span class="violet"><span class="courrier">JPopupMenu</span></span></strong>. Dans lequel nous allons mettre nos <strong><span class="violet"><span class="courrier">JMenuItem </span></span></strong>ou / et <strong><span class="violet"><span class="courrier">JMenu</span></span></strong>.<br>
<br>
Il va falloir tout de même dire à notre menu contextuel comment s'afficher et surtout où, mais vous verrez que c'est très simple... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Maintenant que vous commencez à bien connaître les principes de bases de la programmation événementielle, nous allons aller plus vite pour apprendre de nouvelles choses !<br>
<br>
<h3>Les points importants pour notre menu contextuel</h3> <br>
<ul>
<li>Les actions à effectuer, dans le cas d'actions identiques au menu, doivent être les mêmes : nous devrons donc créer des objets globaux aux deux menus.</li>
<li>Le menu contextuel ne doit s'afficher que dans la zone où l'animation s'exécute, et non sur le menu !</li>
<li>Il ne doit s'afficher que lorsqu'on fait un clic droit, et uniquement ça !</li>
</ul><br>
<br>
Nous allons mettre, dans notre menu contextuel, les actions "<strong><span class="arial">Lancer l'animation</span></strong>" et "<strong><span class="arial">Arrêter l'animation</span></strong>" ainsi que deux nouveautés : <br>
<ul>
<li>pouvoir changer la couleur du fond de notre animation ;</li>
<li>avoir la possibilité de changer la couleur de notre forme !</li>
</ul> <br>
<br>
Avant d'implémenter les deux nouvelles fonctionnalités, nous allons travailler sur les deux premières. <br>
Ce qui signifie que, lorsque nous lancerons l'animation, nous devrons mettre les deux menus "<strong><span class="arial">Lancer l'animation</span></strong>" à l'état <span class="code2 java"><span class="n">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span> et les deux menus "<strong><span class="arial">Arrêter l'animation</span></strong>" à l'état <span class="code2 java"><span class="n">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span>, et inversement pour l'arrêt.<br>
<br>
Comme je vous l'ai dit plus haut, nous allons utiliser le même objet écouteur pour le traitement des deux menus, nous allons devoir créer une véritable instance de ces objets et avertir que ces objets écoutent non seulement le menu du haut, mais aussi le menu contextuel.<br>
Nous avons parfaitement le droit de faire ça : <strong><span class="gros"><span class="rouge">plusieurs écouteurs peuvent écouter un composant et plusieurs composants peuvent avoir le même écouteur !</span></span></strong><br>
<br>
Vous êtes presque prêts à créer votre menu contextuel, il ne vous manque que trois informations :<br>
<ul>
<li>comment dire à notre panneau d'afficher le menu contextuel ? Et où ?</li>
<li>comment lui spécifier qu'il doit le faire uniquement sur le clic droit ?</li>
</ul><br>
<br>
Le déclenchement de l'affichage de la popup doit se faire sur un clic de souris, vous connaissez une interface qui gère ce type d'événement : l'interface <strong><span class="violet"><span class="courrier">MouseListener</span></span></strong>. Nous allons donc dire à notre panneau qu'un écouteur du type de cet interface va l'écouter !<br>
<br>
<div class="rmq information">Tout comme lors du chapitre sur les zones de saisie, il existe une classe qui contient toutes les méthodes de la dite interface : la classe <strong><span class="courrier">MouseAdapter</span></strong>.<br>
Vos pouvez utiliser celle-ci pour créer une implémentation afin de ne redéfinir que la méthode dont vous avez besoin ! C'est cette solution que nous allons utiliser. <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
<br>
<div class="rmq question">Quelle méthode doit-on redéfinir ? <strong><span class="courrier">mouseClicked()</span></strong> ?</div><br>
Si vous voulez, mais je pensais plutôt à <strong><span class="courrier">mouseReleased()</span></strong>, pour une raison simple que vous ne devez sûrement pas connaître : ces deux événements sont quasiment identiques, cependant, dans un certain cas, seul l'événement <strong><span class="courrier">mouseClicked()</span></strong> sera appelé. Il s'agit du cas où vous cliquez sur une zone, que vous déplacez votre souris tout en maintenant le clic et que vous relâchez le bouton de la souris ensuite.<br>
<br>
C'est pour cette raison que je préfère utiliser la méthode <strong><span class="courrier">mouseReleased()</span></strong>. Ensuite, pour spécifier où afficher le menu contextuel, la classe <strong><span class="violet"><span class="courrier">JPopupMenu</span></span></strong> possède une méthode <span class="code2 java"><span class="n">show</span><span class="o">(</span><span class="n">Component</span> <span class="n">invoker</span><span class="o">,</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">);</span>
</span>.<br>
<ul>
<li><span class="code2 java"><span class="n">Component</span> <span class="n">invoker</span>
</span> : désigne l'objet invoquant le menu contextuel, dans notre cas, notre instance de <span class="courrier">Panneau</span>.</li>
<li><span class="code2 java"><span class="kt">int</span> <span class="n">x</span>
</span>: coordonnée X du menu.</li>
<li><span class="code2 java"><span class="kt">int</span> <span class="n">y</span>
</span>: Coordonnée Y du menu.</li>
</ul><br>
<br>
<div class="rmq information">Souvenez-vous que vous pouvez déterminer les coordonnées de la souris grâce à l'objet passé en paramètre de la méthode <span class="code2 java"><span class="n">mouseReleased</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span>
</span>. <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
<br>
Je suis sûr que vous savez comment vous y prendre pour dire au menu contextuel de s'afficher, il ne vous manque plus qu'à détecter le clic droit. Et là, l'objet <strong><span class="courrier"><span class="violet">MouseEvent</span></span></strong> va vous sauver la mise ! <br>
En effet, cet objet possède une méthode <span class="code2 java"><span class="n">isPopupTrigger</span><span class="o">()</span>
</span> qui renvoie vrai s'il s'agit d'un clic droit. <img src="./java_files/heureux.png" alt=":D" class="smilies"> <br>
<br>
Vous avez tous les éléments en mains pour faire votre menu contextuel, rappelez-vous que nous ne gérons pas tout de suite les nouvelles fonctionnalités...<br>
<br>
Quelques instants de réflexion... Vous avez fini ? Nous pouvons comparer nos codes ?<br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.KeyEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseAdapter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.ButtonGroup</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.ImageIcon</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBoxMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuBar</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPopupMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JRadioButtonMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.KeyStroke</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="kd">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">backX</span><span class="o">,</span> <span class="n">backY</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span> <span class="o">;</span>
    <span class="kd">private</span> <span class="n">Thread</span> <span class="n">t</span><span class="o">;</span>
    
    

    <span class="c">//***********************************************************</span>
    <span class="c">//			La déclaration pour le menu de la JMenuBar</span>
    <span class="c">//***********************************************************</span>
    <span class="kd">private</span> <span class="n">JMenuBar</span> <span class="n">menuBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuBar</span><span class="o">();</span>
    
    <span class="kd">private</span> <span class="n">JMenu</span> <span class="n">animation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">),</span>
    		<span class="n">forme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Forme"</span><span class="o">),</span>
    		<span class="n">typeForme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Type de forme"</span><span class="o">),</span>
    		<span class="n">aPropos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"À propos"</span><span class="o">);</span>
    
    <span class="kd">private</span> <span class="n">JMenuItem</span> 	<span class="n">lancer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Lancer l'animation"</span><span class="o">),</span>
	    				<span class="n">arreter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Arrêter l'animation"</span><span class="o">),</span>
	    				<span class="n">quitter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Quitter"</span><span class="o">),</span>
	    				<span class="n">aProposItem</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"?"</span><span class="o">);</span>
	    
    <span class="kd">private</span> <span class="n">JCheckBoxMenuItem</span> <span class="n">morph</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBoxMenuItem</span><span class="o">(</span><span class="s">"Morphing"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JRadioButtonMenuItem</span> 	<span class="n">carre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Carré"</span><span class="o">),</span>
	    							<span class="n">rond</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Rond"</span><span class="o">),</span>
	    							<span class="n">triangle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Triangle"</span><span class="o">),</span>
	    							<span class="n">etoile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Etoile"</span><span class="o">);</span>
	    							
    <span class="kd">private</span> <span class="n">ButtonGroup</span> <span class="n">bg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ButtonGroup</span><span class="o">();</span>
    
    <span class="c">//***********************************************************</span>
    <span class="c">//			La déclaration pour le menu contextuel </span>
    <span class="c">//***********************************************************</span>
    <span class="kd">private</span> <span class="n">JPopupMenu</span> <span class="n">jpm</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPopupMenu</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">JMenu</span> <span class="n">background</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Couleur de fond"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JMenu</span> <span class="n">couleur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Couleur de la forme"</span><span class="o">);</span>
	
    <span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">launch</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Lancer l'animation"</span><span class="o">);</span>	            		
    <span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">stop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Arrêter l'animation"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JMenuItem</span> 	<span class="n">rouge</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Rouge"</span><span class="o">),</span>
					    <span class="n">bleu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Bleu"</span><span class="o">),</span>
					    <span class="n">vert</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Vert"</span><span class="o">),</span>
					    <span class="n">rougeBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Rouge"</span><span class="o">),</span>
					    <span class="n">bleuBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Bleu"</span><span class="o">),</span>
					    <span class="n">vertBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Vert"</span><span class="o">);</span>

    <span class="c">//***********************************************************</span>
    <span class="c">//				ON CRÉE DES LISTENER GLOBAUX</span>
    <span class="c">//***********************************************************</span>
    <span class="kd">private</span> <span class="n">StopAnimationListener</span> <span class="n">stopAnimation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StopAnimationListener</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">StartAnimationListener</span> <span class="n">startAnimation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StartAnimationListener</span><span class="o">();</span>
    
    
    <span class="c">//**********************************************************</span>
    
    <span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>

            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            
            <span class="c">//On initialise le menu stop</span>
            <span class="n">stop</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
            <span class="c">//On affecte les écouteurs</span>
            <span class="n">stop</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">stopAnimation</span><span class="o">);</span>
    		<span class="n">launch</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">startAnimation</span><span class="o">);</span>
            
    		<span class="c">//On crée et on passe l'écouteur pour afficher le menu contextuel</span>
    		<span class="c">//Création d'une implémentation de MouseAdapter</span>
    		<span class="c">//avec redéfinition de la méthode adéquate</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">addMouseListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MouseAdapter</span><span class="o">(){</span>
            	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseReleased</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">){</span>
            		<span class="c">//Seulement s'il s'agit d'un clic droit</span>
            		<span class="c">//Vous pouvez aussi utiliser cette méthode pour détecter le clic droit</span>
                        <span class="c">//if(event.getButton() == MouseEvent.BUTTON3)</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">isPopupTrigger</span><span class="o">())</span>
            		<span class="o">{</span>	            		
	            		<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rougeBack</span><span class="o">);</span>
	            		<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bleuBack</span><span class="o">);</span>
	            		<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">vertBack</span><span class="o">);</span>
	            		
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rouge</span><span class="o">);</span>
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bleu</span><span class="o">);</span>
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">vert</span><span class="o">);</span>
	            		
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">launch</span><span class="o">);</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">stop</span><span class="o">);</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">couleur</span><span class="o">);</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">background</span><span class="o">);</span>
	            		
	            		<span class="c">//La méthode qui va afficher le menu</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">show</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">());</span>
            		<span class="o">}</span>
            	<span class="o">}</span>
            <span class="o">});</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">initMenu</span><span class="o">();</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
                        
    <span class="o">}</span>
	
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initMenu</span><span class="o">(){</span>
    	<span class="c">//Menu animation</span>
    	<span class="c">//****************************</span>
    	
    	<span class="c">//Ajout du listener pour lancer l'animation</span>
    	<span class="c">//ATTENTION LE LISTENER EST GLOBAL ! ! ! ! </span>
    	<span class="c">//-----------------------------------------------</span>
    	<span class="n">lancer</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">startAnimation</span><span class="o">);</span>
    	<span class="c">//On attribut l'accélerateur c</span>
    	<span class="n">lancer</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_L</span><span class="o">,</span>
    												<span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_MASK</span><span class="o">));</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lancer</span><span class="o">);</span>
    	
    	<span class="c">//Ajout du listener pour arrêter l'animation</span>
    	<span class="c">//LISTENER A CHANGER ICI AUSSI</span>
    	<span class="c">//--------------------------------------------</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">stopAnimation</span><span class="o">);</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_A</span><span class="o">,</span>
    												<span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span> <span class="o">+</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">SHIFT_DOWN_MASK</span><span class="o">));</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">arreter</span><span class="o">);</span>
    	
    	<span class="n">animation</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
    	<span class="n">quitter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
    		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">){</span>
    			<span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
    		<span class="o">}</span>
    	<span class="o">});</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">quitter</span><span class="o">);</span>
    	
    	<span class="c">//Menu forme</span>
    	
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="c">//On crée un nouvel écouteur, inutile de créer 4 instances différentes</span>
    	<span class="n">FormeListener</span> <span class="n">fl</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormeListener</span><span class="o">();</span>
    	<span class="n">carre</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	<span class="n">rond</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	<span class="n">triangle</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	<span class="n">etoile</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="n">rond</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
    	
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">typeForme</span><span class="o">);</span>
    	
    	<span class="c">//Ajout du listener pour le morphing</span>
    	<span class="n">morph</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MorphListener</span><span class="o">());</span>
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">morph</span><span class="o">);</span>
    	
    	<span class="c">//menu à propos</span>
    	
    	<span class="c">//Ajout de ce que doit faire le "?"</span>
    	<span class="n">aProposItem</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
				<span class="n">ImageIcon</span> <span class="n">img</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/cysboy.gif"</span><span class="o">);</span>
				
				<span class="n">String</span> <span class="n">mess</span> <span class="o">=</span> <span class="s">"Merci ! \n J'espère que vous vous amusez bien ! \n"</span><span class="o">;</span>
				<span class="n">mess</span> <span class="o">+=</span> <span class="s">"Je crois qu'il est temps d'ajouter des accélérateurs et des mnémoniques dans tout ça...\n"</span><span class="o">;</span>
				<span class="n">mess</span> <span class="o">+=</span> <span class="s">"\n Allez, GO les ZérOs !"</span><span class="o">;</span>
				
				<span class="n">jop</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="n">mess</span><span class="o">,</span> <span class="s">"À propos"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
				
			<span class="o">}</span>    		    		
    	<span class="o">});</span>
    	<span class="n">aPropos</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aProposItem</span><span class="o">);</span>
    	
    	<span class="c">//Ajout des menus dans la barre de menus</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'A'</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">animation</span><span class="o">);</span>
    	
    	<span class="n">forme</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'F'</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">forme</span><span class="o">);</span>
    	
    	<span class="n">aPropos</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'P'</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aPropos</span><span class="o">);</span>
    	
    	<span class="c">//Ajouit de la barre de menus sur la fenêtre</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">setJMenuBar</span><span class="o">(</span><span class="n">menuBar</span><span class="o">);</span>
    <span class="o">}</span>
    
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
		<span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">();</span>
		<span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
        <span class="k">while</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">animated</span><span class="o">){</span>
        	<span class="c">//System.out.println("OK");</span>
        	<span class="c">//Si le mode morphing est activé, on utilise la taille actuelle de la forme</span>
    		<span class="k">if</span><span class="o">(</span><span class="n">pan</span><span class="o">.</span><span class="na">isMorph</span><span class="o">())</span>
    		<span class="o">{</span>
    			<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>
    		<span class="c">//Sinon, comme d'habitude</span>
    		<span class="k">else</span>
    		<span class="o">{</span>
	        	<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>  
            
        	<span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span><span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>

            <span class="k">try</span> <span class="o">{</span>
                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c">// TODO Auto-generated catch block</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>       
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Écouteur du menu Lancer</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StartAnimationListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous lancer l'animation ?"</span><span class="o">,</span> <span class="s">"Lancement de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">PLAIN_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">==</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">OK_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">lancer</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				
				<span class="c">//ON AJOUTE L'INSTRUCTION POUR LE MENU CONTEXTUEL</span>
				<span class="c">//************************************************</span>
				<span class="n">launch</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">stop</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
				<span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">PlayAnimation</span><span class="o">());</span>
				<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>			
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Écouteur du menu Quitter</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">StopAnimationListener</span>  <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous arrêter l'animation ?"</span><span class="o">,</span> <span class="s">"Arrêt de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_CANCEL_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">NO_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CANCEL_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CLOSED_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
				<span class="c">//On remplace nos boutons par nos JMenuItem</span>
				<span class="n">lancer</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>

				<span class="c">//ON AJOUTE L'INSTRUCTION POUR LE MENU CONTEXTUEL</span>
				<span class="c">//************************************************</span>
				<span class="n">launch</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">stop</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>	
	
	<span class="c">/**</span>
<span class="c">	 * Lance le thread.</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">PlayAnimation</span> <span class="kd">implements</span> <span class="n">Runnable</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
			<span class="n">go</span><span class="o">();</span>			
		<span class="o">}</span>		
	<span class="o">}</span>	
	
	<span class="c">/**</span>
<span class="c">	 * Écoute les menus forme</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">FormeListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setForme</span><span class="o">(((</span><span class="n">JRadioButtonMenuItem</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">());</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Écoute le menu Morphing</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">MorphListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">//Si la case est cochée, activation du mode morphing</span>
			<span class="k">if</span><span class="o">(</span><span class="n">morph</span><span class="o">.</span><span class="na">isSelected</span><span class="o">())</span><span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
			<span class="c">//Sinon rien !</span>
			<span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
</div></div><br>
<br>
Voici ce que j'obtiens : <br>
<br>
<div class="centre"><img src="./java_files/127211.jpg" alt="Image utilisateur"> <img src="./java_files/127212.jpg" alt="Image utilisateur"></div><br>
<br>
Victoire !  <img src="./java_files/zorro.png" alt=":zorro:" class="smilies"> <br>
Il est beau, il est fonctionnel, il est zérotissime notre menu contextuel !<br>
<br>
Je sens que vous êtes prêts pour les nouvelles fonctionnalités... Même si je me doute que certains d'entre vous ont déjà fait ce qu'il fallait. <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Il n'est pas très difficile de faire ce genre de chose, surtout que vous êtes habitués, maintenant.<br>
Dans notre classe <strong><span class="violet"><span class="courrier">Panneau</span></span></strong>, nous utilisons des couleurs définies à l'avance, il nous suffit donc de mettre ces couleurs dans des variables et de permettre l'édition de celles-ci.<br>
<br>
Rien de difficile ici, voici donc les codes sources de nos deux classes : <br>
<br>
<h4>Panneau.java</h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Image</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Panneau</span> <span class="kd">extends</span> <span class="n">JPanel</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="kt">int</span> <span class="n">posX</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">posY</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">drawSize</span> <span class="o">=</span> <span class="mi">50</span><span class="o">;</span>
    <span class="c">//boolean pour le mode morphing et pour savoir si la taille doit être réduite</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">morph</span> <span class="o">=</span> <span class="kc">false</span><span class="o">,</span> <span class="n">reduce</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;;</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">forme</span> <span class="o">=</span> <span class="s">"ROND"</span><span class="o">;</span>
    
    <span class="c">//***********************************</span>
    <span class="c">//Voici nos deux couleurs</span>
    <span class="c">//***********************************</span>
    <span class="kd">private</span> <span class="n">Color</span> <span class="n">couleurForme</span> <span class="o">=</span> <span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">Color</span> <span class="n">couleurFond</span> <span class="o">=</span> <span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">;</span>
    
    <span class="c">//Le compteur de rafraîchissement</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">increment</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
        <span class="c">//affectation de la couleur de fond    </span>
    	<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">couleurFond</span><span class="o">);</span>
            <span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
            
            <span class="c">//Affectation de la couleur de la forme</span>
            <span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">couleurForme</span><span class="o">);</span>
            <span class="c">//Si le mode morphing est activé, on peint le morphing</span>
            <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">morph</span><span class="o">)</span>
            	<span class="n">drawMorph</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
            <span class="c">//sinon, mode normal</span>
            <span class="k">else</span>
            	<span class="nf">draw</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
    <span class="o">}</span>

    

    <span class="c">/**</span>
<span class="c">     * Méthode qui redéfinit la couleur du fond</span>
<span class="c">     * @param color</span>
<span class="c">     */</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCouleurFond</span><span class="o">(</span><span class="n">Color</span> <span class="n">color</span><span class="o">){</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">couleurFond</span> <span class="o">=</span> <span class="n">color</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="c">/**</span>
<span class="c">     * Méthode qui redéfinit la couleur de la forme</span>
<span class="c">     * @param color</span>
<span class="c">     */</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCouleurForme</span><span class="o">(</span><span class="n">Color</span> <span class="n">color</span><span class="o">){</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">couleurForme</span> <span class="o">=</span> <span class="n">color</span><span class="o">;</span>
    <span class="o">}</span>
    
    
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">draw</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
    	
    	<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ROND"</span><span class="o">)){</span>
    		<span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span> 
    	<span class="o">}</span>
    	<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"CARRE"</span><span class="o">)</span> <span class="o">||</span> <span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"CARRÉ"</span><span class="o">)){</span>
    		<span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="mi">50</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>
    	<span class="o">}</span>
    	<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"TRIANGLE"</span><span class="o">)){</span>
    		 
    		<span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
    		
    		<span class="kt">int</span><span class="o">[]</span> <span class="n">ptsX</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s3X</span><span class="o">};</span>
    		<span class="kt">int</span><span class="o">[]</span> <span class="n">ptsY</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1Y</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">};</span>
    		
    		<span class="n">g</span><span class="o">.</span><span class="na">fillPolygon</span><span class="o">(</span><span class="n">ptsX</span><span class="o">,</span> <span class="n">ptsY</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
    	<span class="o">}</span>
    	<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ETOILE"</span><span class="o">)){</span>
    		
    		<span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>    		
    		<span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">);</span>
    		
    		<span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
    		<span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">);</span>
    		
    		<span class="kt">int</span> <span class="n">s4X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s4Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
    		<span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">,</span> <span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">);</span>    		
    		   		
    		<span class="kt">int</span> <span class="n">s5X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s5Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="mi">50</span><span class="o">;</span>
    		<span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">,</span> <span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">);</span>      		
    		<span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">,</span> <span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">);</span>  
    	<span class="o">}</span>
    	
    <span class="o">}</span>
    
    <span class="c">/**</span>
<span class="c">     * Méthode qui peint le morphing</span>
<span class="c">     * @param g</span>
<span class="c">     */</span>
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">drawMorph</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
    	<span class="c">//On incrémente le tour</span>
    	<span class="n">increment</span><span class="o">++;</span>
    	<span class="c">//On regarde si on doit réduire ou non</span>
    	<span class="k">if</span><span class="o">(</span><span class="n">drawSize</span> <span class="o">&gt;=</span> <span class="mi">50</span><span class="o">)</span><span class="n">reduce</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    	<span class="k">if</span><span class="o">(</span><span class="n">drawSize</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="o">)</span><span class="n">reduce</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
    	
    	<span class="k">if</span><span class="o">(</span><span class="n">reduce</span><span class="o">)</span>
    		<span class="n">drawSize</span> <span class="o">=</span> <span class="n">drawSize</span> <span class="o">-</span> <span class="n">getUsedSize</span><span class="o">();</span>
    	<span class="k">else</span>
    		<span class="n">drawSize</span> <span class="o">=</span> <span class="n">drawSize</span> <span class="o">+</span> <span class="n">getUsedSize</span><span class="o">();</span>
    	
    	<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ROND"</span><span class="o">)){</span>
    		<span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="n">drawSize</span><span class="o">,</span> <span class="n">drawSize</span><span class="o">);</span> 
    	<span class="o">}</span>
    	<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"CARRE"</span><span class="o">)){</span>
    		<span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="n">posX</span><span class="o">,</span> <span class="n">posY</span><span class="o">,</span> <span class="n">drawSize</span><span class="o">,</span> <span class="n">drawSize</span><span class="o">);</span>
    	<span class="o">}</span>
    	<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"TRIANGLE"</span><span class="o">)){</span>
    		  
    		<span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
    		
    		<span class="kt">int</span><span class="o">[]</span> <span class="n">ptsX</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s3X</span><span class="o">};</span>
    		<span class="kt">int</span><span class="o">[]</span> <span class="n">ptsY</span> <span class="o">=</span> <span class="o">{</span><span class="n">s1Y</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">};</span>
    		
    		<span class="n">g</span><span class="o">.</span><span class="na">fillPolygon</span><span class="o">(</span><span class="n">ptsX</span><span class="o">,</span> <span class="n">ptsY</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
    	<span class="o">}</span>
    	<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">forme</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"ETOILE"</span><span class="o">)){</span>
    		
    		<span class="kt">int</span> <span class="n">s1X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s1Y</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s2X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s2Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>    		
    		<span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">,</span> <span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">);</span>
    		
    		<span class="kt">int</span> <span class="n">s3X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s3Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
    		<span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s2X</span><span class="o">,</span> <span class="n">s2Y</span><span class="o">,</span> <span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">);</span>
    		
    		<span class="kt">int</span> <span class="n">s4X</span> <span class="o">=</span> <span class="n">posX</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s4Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
    		<span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s3X</span><span class="o">,</span> <span class="n">s3Y</span><span class="o">,</span> <span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">);</span>    		
    		   		
    		<span class="kt">int</span> <span class="n">s5X</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
    		<span class="kt">int</span> <span class="n">s5Y</span> <span class="o">=</span> <span class="n">posY</span> <span class="o">+</span> <span class="n">drawSize</span><span class="o">;</span>
    		<span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s4X</span><span class="o">,</span> <span class="n">s4Y</span><span class="o">,</span> <span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">);</span>      		
    		<span class="n">g</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">s5X</span><span class="o">,</span> <span class="n">s5Y</span><span class="o">,</span> <span class="n">s1X</span><span class="o">,</span> <span class="n">s1Y</span><span class="o">);</span>  
    	<span class="o">}</span>
    	
    	
    <span class="o">}</span>
    
    <span class="c">/**</span>
<span class="c">     * Méthode qui retourne le nombre à retrancher ou ajouter pour le morphing</span>
<span class="c">     * @return res</span>
<span class="c">     */</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getUsedSize</span><span class="o">(){</span>
    	<span class="kt">int</span> <span class="n">res</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    	<span class="c">//Si le nombre de tours est 10</span>
    	<span class="c">//On réinitialise l'incrément et on retourne 1</span>
    	<span class="k">if</span><span class="o">(</span><span class="n">increment</span> <span class="o">/</span> <span class="mi">10</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
    		<span class="n">increment</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    		<span class="n">res</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
    	<span class="o">}</span>    	
    	<span class="k">return</span> <span class="n">res</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getDrawSize</span><span class="o">(){</span>
    	<span class="k">return</span> <span class="n">drawSize</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isMorph</span><span class="o">(){</span>
    	<span class="k">return</span> <span class="n">morph</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setMorph</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">bool</span><span class="o">){</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">morph</span> <span class="o">=</span> <span class="n">bool</span><span class="o">;</span>
    	<span class="c">//On réinitialise la taille</span>
    	<span class="n">drawSize</span> <span class="o">=</span> <span class="mi">50</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setForme</span><span class="o">(</span><span class="n">String</span> <span class="n">form</span><span class="o">){</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">forme</span> <span class="o">=</span> <span class="n">form</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">();</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPosX</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">posX</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPosX</span><span class="o">(</span><span class="kt">int</span> <span class="n">posX</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">posX</span> <span class="o">=</span> <span class="n">posX</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPosY</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">posY</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPosY</span><span class="o">(</span><span class="kt">int</span> <span class="n">posY</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">posY</span> <span class="o">=</span> <span class="n">posY</span><span class="o">;</span>
    <span class="o">}</span>
    
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Fenetre.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.KeyEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseAdapter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.ButtonGroup</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.ImageIcon</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBoxMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuBar</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPopupMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JRadioButtonMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.KeyStroke</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="kd">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">backX</span><span class="o">,</span> <span class="n">backY</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span> <span class="o">;</span>
    <span class="kd">private</span> <span class="n">Thread</span> <span class="n">t</span><span class="o">;</span>
    
    

    <span class="c">//***********************************************************</span>
    <span class="c">//			La déclaration pour le menu de la JMenuBar</span>
    <span class="c">//***********************************************************</span>
    <span class="kd">private</span> <span class="n">JMenuBar</span> <span class="n">menuBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuBar</span><span class="o">();</span>
    
    <span class="kd">private</span> <span class="n">JMenu</span> <span class="n">animation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">),</span>
    		<span class="n">forme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Forme"</span><span class="o">),</span>
    		<span class="n">typeForme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Type de forme"</span><span class="o">),</span>
    		<span class="n">aPropos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"À propos"</span><span class="o">);</span>
    
    <span class="kd">private</span> <span class="n">JMenuItem</span> 	<span class="n">lancer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Lancer l'animation"</span><span class="o">),</span>
	    				<span class="n">arreter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Arrêter l'animation"</span><span class="o">),</span>
	    				<span class="n">quitter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Quitter"</span><span class="o">),</span>
	    				<span class="n">aProposItem</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"?"</span><span class="o">);</span>
	    
    <span class="kd">private</span> <span class="n">JCheckBoxMenuItem</span> <span class="n">morph</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBoxMenuItem</span><span class="o">(</span><span class="s">"Morphing"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JRadioButtonMenuItem</span> 	<span class="n">carre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Carré"</span><span class="o">),</span>
	    							<span class="n">rond</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Rond"</span><span class="o">),</span>
	    							<span class="n">triangle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Triangle"</span><span class="o">),</span>
	    							<span class="n">etoile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Etoile"</span><span class="o">);</span>
	    							
    <span class="kd">private</span> <span class="n">ButtonGroup</span> <span class="n">bg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ButtonGroup</span><span class="o">();</span>
    
    <span class="c">//***********************************************************</span>
    <span class="c">//			La déclaration pour le menu contextuel </span>
    <span class="c">//***********************************************************</span>
    <span class="kd">private</span> <span class="n">JPopupMenu</span> <span class="n">jpm</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPopupMenu</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">JMenu</span> <span class="n">background</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Couleur de fond"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JMenu</span> <span class="n">couleur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Couleur de la forme"</span><span class="o">);</span>
	
    <span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">launch</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Lancer l'animation"</span><span class="o">);</span>	            		
    <span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">stop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Arrêter l'animation"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JMenuItem</span> 	<span class="n">rouge</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Rouge"</span><span class="o">),</span>
					    <span class="n">bleu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Bleu"</span><span class="o">),</span>
					    <span class="n">vert</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Vert"</span><span class="o">),</span>
					    <span class="n">blanc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Blanc"</span><span class="o">),</span>
					    <span class="n">rougeBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Rouge"</span><span class="o">),</span>
					    <span class="n">bleuBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Bleu"</span><span class="o">),</span>
					    <span class="n">vertBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Vert"</span><span class="o">),</span>
					    <span class="n">blancBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Blanc"</span><span class="o">);</span>

    <span class="c">//***********************************************************</span>
    <span class="c">//				ON CRÉE DES LISTENER GLOBAUX</span>
    <span class="c">//***********************************************************</span>
    <span class="kd">private</span> <span class="n">StopAnimationListener</span> <span class="n">stopAnimation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StopAnimationListener</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">StartAnimationListener</span> <span class="n">startAnimation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StartAnimationListener</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">CouleurFondListener</span> <span class="n">bgColor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CouleurFondListener</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">CouleurFormeListener</span> <span class="n">frmColor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CouleurFormeListener</span><span class="o">();</span>
    <span class="c">//**********************************************************</span>
    
    <span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>

            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            
            <span class="c">//On initialise le menu stop</span>
            <span class="n">stop</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
            <span class="c">//On affecte les écouteurs</span>
            <span class="n">stop</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">stopAnimation</span><span class="o">);</span>
    		<span class="n">launch</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">startAnimation</span><span class="o">);</span>
            
    		<span class="c">//On affecte les écouteurs aux points de menu</span>
    		<span class="n">rouge</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">frmColor</span><span class="o">);</span>
    		<span class="n">bleu</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">frmColor</span><span class="o">);</span>
    		<span class="n">vert</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">frmColor</span><span class="o">);</span>
    		<span class="n">blanc</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">frmColor</span><span class="o">);</span>
    		
    		<span class="n">rougeBack</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">bgColor</span><span class="o">);</span>
    		<span class="n">bleuBack</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">bgColor</span><span class="o">);</span>
    		<span class="n">vertBack</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">bgColor</span><span class="o">);</span>
    		<span class="n">blancBack</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">bgColor</span><span class="o">);</span>
    		<span class="c">//On crée et on passe l'écouteur pour afficher le menu contextuel</span>
    		<span class="c">//Création d'une implémentation de MouseAdapter</span>
    		<span class="c">//avec redéfinition de la méthode adéquate</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">addMouseListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MouseAdapter</span><span class="o">(){</span>
            	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseReleased</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">){</span>
            		<span class="c">//Seulement s'il s'agit d'un clic droit</span>
            		<span class="k">if</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">isPopupTrigger</span><span class="o">())</span>
            		<span class="o">{</span>	            		
            			<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">blancBack</span><span class="o">);</span>
            			<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rougeBack</span><span class="o">);</span>
	            		<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bleuBack</span><span class="o">);</span>
	            		<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">vertBack</span><span class="o">);</span>
	            		
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">blanc</span><span class="o">);</span>
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rouge</span><span class="o">);</span>
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bleu</span><span class="o">);</span>
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">vert</span><span class="o">);</span>
	            			            		
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">launch</span><span class="o">);</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">stop</span><span class="o">);</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">couleur</span><span class="o">);</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">background</span><span class="o">);</span>
	            		
	            		<span class="c">//La méthode qui va afficher le menu</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">show</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">());</span>
            		<span class="o">}</span>
            	<span class="o">}</span>
            <span class="o">});</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">initMenu</span><span class="o">();</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
                        
    <span class="o">}</span>
    

	
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initMenu</span><span class="o">(){</span>
    	<span class="c">//Menu animation</span>
    	<span class="c">//****************************</span>
    	
    	<span class="c">//Ajout du listener pour lancer l'animation</span>
    	<span class="c">//ATTENTION LE LISTENER EST GLOBAL ! ! ! ! </span>
    	<span class="c">//-----------------------------------------------</span>
    	<span class="n">lancer</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">startAnimation</span><span class="o">);</span>
    	<span class="c">//On attribut l'accélerateur c</span>
    	<span class="n">lancer</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_L</span><span class="o">,</span>
    												<span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_MASK</span><span class="o">));</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lancer</span><span class="o">);</span>
    	
    	<span class="c">//Ajout du listener pour arrêter l'animation</span>
    	<span class="c">//LISTENER À CHANGER ICI AUSSI</span>
    	<span class="c">//--------------------------------------------</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">stopAnimation</span><span class="o">);</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_A</span><span class="o">,</span>
    												<span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span> <span class="o">+</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">SHIFT_DOWN_MASK</span><span class="o">));</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">arreter</span><span class="o">);</span>
    	
    	<span class="n">animation</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
    	<span class="n">quitter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
    		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">){</span>
    			<span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
    		<span class="o">}</span>
    	<span class="o">});</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">quitter</span><span class="o">);</span>
    	
    	<span class="c">//Menu forme</span>
    	
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="c">//On crée un nouvel écouteur, inutile de créer 4 instances différentes</span>
    	<span class="n">FormeListener</span> <span class="n">fl</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormeListener</span><span class="o">();</span>
    	<span class="n">carre</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	<span class="n">rond</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	<span class="n">triangle</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	<span class="n">etoile</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fl</span><span class="o">);</span>
    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="n">rond</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
    	
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">typeForme</span><span class="o">);</span>
    	
    	<span class="c">//Ajout du listener pour le morphing</span>
    	<span class="n">morph</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MorphListener</span><span class="o">());</span>
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">morph</span><span class="o">);</span>
    	
    	<span class="c">//menu à propos</span>
    	
    	<span class="c">//Ajout de ce que doit faire le "?"</span>
    	<span class="n">aProposItem</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
				<span class="n">ImageIcon</span> <span class="n">img</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/cysboy.gif"</span><span class="o">);</span>
				
				<span class="n">String</span> <span class="n">mess</span> <span class="o">=</span> <span class="s">"Merci ! \n J'espère que vous vous amusez bien ! \n"</span><span class="o">;</span>
				<span class="n">mess</span> <span class="o">+=</span> <span class="s">"Je crois qu'il est temps d'ajouter des accélérateurs et des mnémoniques dans tout ça...\n"</span><span class="o">;</span>
				<span class="n">mess</span> <span class="o">+=</span> <span class="s">"\n Allez, GO les ZérOs !"</span><span class="o">;</span>
				
				<span class="n">jop</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="n">mess</span><span class="o">,</span> <span class="s">"À propos"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
				
			<span class="o">}</span>    		    		
    	<span class="o">});</span>
    	<span class="n">aPropos</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aProposItem</span><span class="o">);</span>
    	
    	<span class="c">//Ajout des menus dans la barre de menus</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'A'</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">animation</span><span class="o">);</span>
    	
    	<span class="n">forme</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'F'</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">forme</span><span class="o">);</span>
    	
    	<span class="n">aPropos</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'P'</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aPropos</span><span class="o">);</span>
    	
    	<span class="c">//Ajout de la barre de menus sur la fenêtre</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">setJMenuBar</span><span class="o">(</span><span class="n">menuBar</span><span class="o">);</span>
    <span class="o">}</span>
    
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
		<span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">();</span>
		<span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
        <span class="k">while</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">animated</span><span class="o">){</span>
        	<span class="c">//System.out.println("OK");</span>
        	<span class="c">//Si le mode morphing est activé, on utilise la taille actuelle de la forme</span>
    		<span class="k">if</span><span class="o">(</span><span class="n">pan</span><span class="o">.</span><span class="na">isMorph</span><span class="o">())</span>
    		<span class="o">{</span>
    			<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>
    		<span class="c">//Sinon, comme d'habitude</span>
    		<span class="k">else</span>
    		<span class="o">{</span>
	        	<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>  
            
        	<span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span><span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>

            <span class="k">try</span> <span class="o">{</span>
                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c">// TODO Auto-generated catch block</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>       
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Écouteur du menu Lancer</span>
<span class="c">	 * @author </span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StartAnimationListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous lancer l'animation ?"</span><span class="o">,</span> <span class="s">"Lancement de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">PLAIN_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">==</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">OK_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">lancer</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				
				<span class="c">//ON AJOUTE L'INSTRUCTION POUR LE MENU CONTEXTUEL</span>
				<span class="c">//************************************************</span>
				<span class="n">launch</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">stop</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
				<span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">PlayAnimation</span><span class="o">());</span>
				<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>			
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Écouteur du menu Quitter</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">StopAnimationListener</span>  <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous arrêter l'animation ?"</span><span class="o">,</span> <span class="s">"Arrêt de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_CANCEL_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">NO_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CANCEL_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CLOSED_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
				<span class="c">//On remplace nos boutons par nos JMenuItem</span>
				<span class="n">lancer</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>

				<span class="c">//ON AJOUTE L'INSTRUCTION POUR LE MENU CONTEXTUEL</span>
				<span class="c">//************************************************</span>
				<span class="n">launch</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">stop</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>	
	
	<span class="c">/**</span>
<span class="c">	 * Lance le thread.</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">PlayAnimation</span> <span class="kd">implements</span> <span class="n">Runnable</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
			<span class="n">go</span><span class="o">();</span>			
		<span class="o">}</span>		
	<span class="o">}</span>	
	
	<span class="c">/**</span>
<span class="c">	 * Écoute les menus forme</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">FormeListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setForme</span><span class="o">(((</span><span class="n">JRadioButtonMenuItem</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">());</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Écoute le menu Morphing</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">MorphListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">//Si la case est cochée, activation du mode morphing</span>
			<span class="k">if</span><span class="o">(</span><span class="n">morph</span><span class="o">.</span><span class="na">isSelected</span><span class="o">())</span><span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
			<span class="c">//Sinon rien !</span>
			<span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="c">//************************************************************</span>
	<span class="c">//		CLASSE QUI VONT ÉCOUTER LE CHANGEMENT DE COULEURS</span>
	<span class="c">//************************************************************</span>
	
	<span class="c">/**</span>
<span class="c">	 * Écoute le changement de couleur du fond</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">CouleurFondListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">vertBack</span><span class="o">)</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurFond</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">);</span>
			<span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">bleuBack</span><span class="o">)</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurFond</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
			<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">rougeBack</span><span class="o">)</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurFond</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
			<span class="k">else</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurFond</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Écoute le changement de couleur du fond</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">CouleurFormeListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">vert</span><span class="o">)</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurForme</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">);</span>
			<span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">bleu</span><span class="o">)</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurForme</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
			<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">rouge</span><span class="o">)</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurForme</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
			<span class="k">else</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurForme</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voici quelques résultats obtenus : <br>
<br>
<div class="centre"><img src="./java_files/127216.jpg" alt="Image utilisateur">   <img src="./java_files/127217.jpg" alt="Image utilisateur"></div><br>
<br>
<br>
Vous constatez que les menus et les menus contextuels peuvent être très utiles et très ergonomiques ! <br>
Ils sont relativement simples à utiliser et à implémenter.<br>
Mais vous aurez sans doute remarqué qu'il y a toujours un clic superflu, qu'il s'agisse d'un menu ou d'un menu contextuel : il faut au moins un clic pour afficher le contenu d'un menu (sauf cas avec accélérateur). <br>
<br>
Pour contrer ce genre de chose, il existe un outil très puissant : la barre d'outils !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10585">Les barres d'outils</h2>
		<div class="ss_part_texte">
		Voici un exemple de barre d'outils : <br>
<br>
<div class="centre"><img src="./java_files/127219.jpg" alt="Image utilisateur"></div><br>
<br>
Vous voyez en rose la barre de menus et en vert la barre d'outils.<br>
En fait, pour faire simple, la barre d'outils sert à effectuer des actions présentes dans le menu mais sans avoir à chercher dans celui-ci ou à mémoriser le raccourci clavier (accélérateur). Elle permet donc de pouvoir faire des actions rapides.<br>
<br>
Elle est généralement composée de multitudes de boutons sur lesquels est apposée une image symbolisant l'action que ce bouton peut effectuer.<br>
<br>
Pour créer et utiliser une barre d'outils, nous allons utiliser l'objet <strong><span class="violet"><span class="courrier">JToolBar</span></span></strong>. <br>
Je vous rassure tout de suite, cet objet fonctionne comme un menu classique, à la différence près que celui-ci prend des boutons (<strong><span class="violet"><span class="courrier">JButton</span></span></strong>).<br>
<br>
<div class="rmq erreur">Il n'y a pas d'endroit spécifique pour incorporer votre barre d'outils, il faudra l'expliciter lors de sa création ! </div><br>
<br>
Il nous faut, tout d'abord, des images à mettre sur nos boutons... J'en ai fait de toutes simples : <br>
<br>
<div class="centre"><img src="./java_files/127249.jpg" alt="Image utilisateur"><img src="./java_files/127251.jpg" alt="Image utilisateur"><img src="./java_files/127247.jpg" alt="Image utilisateur"><img src="./java_files/127250.jpg" alt="Image utilisateur"><img src="./java_files/127252.jpg" alt="Image utilisateur"><img src="./java_files/127248.jpg" alt="Image utilisateur"></div><br>
<br>
Vous devez avoir une idée de ce que nous allons mettre dans notre barre d'outils... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Concernant les actions à gérer, pour le lancement de l'animation et l'arrêt, il faudra penser à éditer le comportement des boutons de la barre d'outils, comme fait pour les deux actions du menu contextuel...<br>
<br>
Concernant les boutons pour les formes, c'est un peu plus délicat.<br>
Les autres composants pouvant éditer la forme de notre animation étaient des boutons radios. Or, ici, nous avons des boutons standards.<br>
Hormis le fait qu'il va falloir une instance précise de la classe <strong><span class="violet"><span class="courrier">FormeListener</span></span></strong>, nous allons devoir modifier un peu son comportement...<br>
<br>
Nous devrons savoir si l'action vient d'un bouton radio du menu ou d'un bouton de la barre d'outils...<br>
<div class="rmq question">Ça m'a l'air compliqué, tout ça ! <img src="./java_files/unsure.gif" alt=":euh:" class="smilies"></div><br>
<br>
En fait, non, et ceci grâce à l'objet <strong><span class="courrier"><span class="violet">ActionEvent</span></span></strong>. Nous allons pouvoir connaître le déclencheur de l'action ! Nous n'allons pas tester tous les boutons radio un par un... Le système utilisé jusque là, pour ces composants, était très bien.<br>
Non, nous allons juste voir si celui qui a déclenché l'action est un <strong><span class="violet"><span class="courrier">JRadioButtonMenuItem</span></span></strong> ou non et, dans ce cas, nous testerons nos boutons... <br>
<div class="rmq question">Comment savoir ça ?</div><br>
<strong>Rappelez-vous le chapitre sur la réflexivité !</strong><br>
La méthode <span class="code2 java"><span class="n">getSource</span><span class="o">()</span>
</span> nous retourne un objet, il est donc possible de connaître sa classe avec la méthode <span class="code2 java"><span class="n">getClass</span><span class="o">()</span>
</span> et donc, le nom de celle-ci avec la méthode <span class="code2 java"><span class="n">getName</span><span class="o">()</span>
</span>...<br>
<br>
<div class="rmq question">Il va falloir qu'on pense à mettre à jour le bouton radio sélectionné dans le menu, alors ?</div><br>
Tout à fait !<br>
Je vois que vous commencez à penser événementiel ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Et là, pour votre plus grand plaisir, j'ai une astuce qui ne marche pas mal du tout : il suffit, lors du clic sur un bouton de la barre d'outils, de déclencher l'événement sur le bouton radio correspondant ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
<div class="rmq question">On serait curieux de savoir comment tu fais ça ! <img src="./java_files/blink.gif" alt="o_O" class="smilies"> </div><br>
Dans la classe <strong><span class="violet"><span class="courrier">AbstractButton</span></span></strong>, dont héritent tous les boutons, il y a la méthode <span class="code2 java"><span class="n">doClick</span><span class="o">()</span>
</span>.<br>
Cette méthode déclenche un événement identique à un vrai clic de souris sur le composant ! Donc, plutôt que de gérer la même façon de faire à deux endroits, nous allons rediriger l'action sur un autre composant... <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
<br>
Vous avez toutes les cartes pour faire votre barre d'outils.<br>
N'oubliez pas que vous devez spécifier sa place sur le conteneur principal !<br>
<br>
Bon, faites des tests, comparez, codez, effacez mais, au final, vous devriez avoir quelque chose comme ça :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.KeyEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseAdapter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.BorderFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.ButtonGroup</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.ImageIcon</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBoxMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuBar</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPopupMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JRadioButtonMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JToolBar</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.KeyStroke</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="kd">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">backX</span><span class="o">,</span> <span class="n">backY</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span> <span class="o">;</span>
    <span class="kd">private</span> <span class="n">Thread</span> <span class="n">t</span><span class="o">;</span>
    
    

    <span class="c1">//***********************************************************</span>
    <span class="c1">//			La déclaration pour le menu de la JMenuBar</span>
    <span class="c1">//***********************************************************</span>
    <span class="kd">private</span> <span class="n">JMenuBar</span> <span class="n">menuBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuBar</span><span class="o">();</span>
    
    <span class="kd">private</span> <span class="n">JMenu</span> <span class="n">animation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">),</span>
    		<span class="n">forme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Forme"</span><span class="o">),</span>
    		<span class="n">typeForme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Type de forme"</span><span class="o">),</span>
    		<span class="n">aPropos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"À propos"</span><span class="o">);</span>
    
    <span class="kd">private</span> <span class="n">JMenuItem</span> 	<span class="n">lancer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Lancer l'animation"</span><span class="o">),</span>
	    				<span class="n">arreter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Arrêter l'animation"</span><span class="o">),</span>
	    				<span class="n">quitter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Quitter"</span><span class="o">),</span>
	    				<span class="n">aProposItem</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"?"</span><span class="o">);</span>
	    
    <span class="kd">private</span> <span class="n">JCheckBoxMenuItem</span> <span class="n">morph</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBoxMenuItem</span><span class="o">(</span><span class="s">"Morphing"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JRadioButtonMenuItem</span> 	<span class="n">carre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Carré"</span><span class="o">),</span>
	    							<span class="n">rond</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Rond"</span><span class="o">),</span>
	    							<span class="n">triangle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Triangle"</span><span class="o">),</span>
	    							<span class="n">etoile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="s">"Etoile"</span><span class="o">);</span>
	    							
    <span class="kd">private</span> <span class="n">ButtonGroup</span> <span class="n">bg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ButtonGroup</span><span class="o">();</span>
    
    <span class="c1">//***********************************************************</span>
    <span class="c1">//			La déclaration pour le menu contextuel </span>
    <span class="c1">//***********************************************************</span>
    <span class="kd">private</span> <span class="n">JPopupMenu</span> <span class="n">jpm</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPopupMenu</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">JMenu</span> <span class="n">background</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Couleur de fond"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JMenu</span> <span class="n">couleur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Couleur de la forme"</span><span class="o">);</span>
	
    <span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">launch</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Lancer l'animation"</span><span class="o">);</span>	            		
    <span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">stop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Arrêter l'animation"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="n">JMenuItem</span> 	<span class="n">rouge</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Rouge"</span><span class="o">),</span>
					    <span class="n">bleu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Bleu"</span><span class="o">),</span>
					    <span class="n">vert</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Vert"</span><span class="o">),</span>
					    <span class="n">blanc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Blanc"</span><span class="o">),</span>
					    <span class="n">rougeBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Rouge"</span><span class="o">),</span>
					    <span class="n">bleuBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Bleu"</span><span class="o">),</span>
					    <span class="n">vertBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Vert"</span><span class="o">),</span>
					    <span class="n">blancBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Blanc"</span><span class="o">);</span>

    <span class="c1">//***********************************************************</span>
    <span class="c1">//				ON CRÉE DES LISTENER GLOBAUX</span>
    <span class="c1">//***********************************************************</span>
    <span class="kd">private</span> <span class="n">StopAnimationListener</span> <span class="n">stopAnimation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StopAnimationListener</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">StartAnimationListener</span> <span class="n">startAnimation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StartAnimationListener</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">CouleurFondListener</span> <span class="n">bgColor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CouleurFondListener</span><span class="o">();</span>
    <span class="kd">private</span> <span class="n">CouleurFormeListener</span> <span class="n">frmColor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CouleurFormeListener</span><span class="o">();</span>
    <span class="c1">//**********************************************************</span>
    
    
    <span class="c1">//Création de notre barre d'outils</span>
    <span class="kd">private</span> <span class="n">JToolBar</span> <span class="n">toolBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JToolBar</span><span class="o">();</span>
    
    <span class="c1">//Les boutons</span>
    <span class="kd">private</span> <span class="n">JButton</span> 	<span class="n">play</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/play.jpg"</span><span class="o">)),</span>
    					<span class="n">cancel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/stop.jpg"</span><span class="o">)),</span>
    					<span class="n">square</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/carré.jpg"</span><span class="o">)),</span>
    					<span class="n">tri</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/triangle.jpg"</span><span class="o">)),</span>
    					<span class="n">circle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/rond.jpg"</span><span class="o">)),</span>
    					<span class="n">star</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/étoile.jpg"</span><span class="o">));</span>
    
    <span class="kd">private</span> <span class="n">Color</span> <span class="n">fondBouton</span> <span class="o">=</span> <span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">FormeListener</span> <span class="n">fListener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormeListener</span><span class="o">();</span>
    
    <span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">400</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>

            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            
            <span class="c1">//On initialise le menu stop</span>
            <span class="n">stop</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
            <span class="c1">//On affecte les écouteurs</span>
            <span class="n">stop</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">stopAnimation</span><span class="o">);</span>
    		<span class="n">launch</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">startAnimation</span><span class="o">);</span>
            
    		<span class="c1">//On affecte les écouteurs aux points de menus</span>
    		<span class="n">rouge</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">frmColor</span><span class="o">);</span>
    		<span class="n">bleu</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">frmColor</span><span class="o">);</span>
    		<span class="n">vert</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">frmColor</span><span class="o">);</span>
    		<span class="n">blanc</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">frmColor</span><span class="o">);</span>
    		
    		<span class="n">rougeBack</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">bgColor</span><span class="o">);</span>
    		<span class="n">bleuBack</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">bgColor</span><span class="o">);</span>
    		<span class="n">vertBack</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">bgColor</span><span class="o">);</span>
    		<span class="n">blancBack</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">bgColor</span><span class="o">);</span>
    		<span class="c1">//On crée et on passe l'écouteur pour afficher le menu contextuel</span>
    		<span class="c1">//Création d'une implémentation de MouseAdapter</span>
    		<span class="c1">//avec redéfinition de la méthode adéquate</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">addMouseListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MouseAdapter</span><span class="o">(){</span>
            	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseReleased</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">){</span>
            		<span class="c1">//Seulement s'il s'agit d'un clic droit</span>
            		<span class="k">if</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">isPopupTrigger</span><span class="o">())</span>
            		<span class="o">{</span>	            		
            			<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">blancBack</span><span class="o">);</span>
            			<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rougeBack</span><span class="o">);</span>
	            		<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bleuBack</span><span class="o">);</span>
	            		<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">vertBack</span><span class="o">);</span>
	            		
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">blanc</span><span class="o">);</span>
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rouge</span><span class="o">);</span>
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bleu</span><span class="o">);</span>
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">vert</span><span class="o">);</span>
	            			            		
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">launch</span><span class="o">);</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">stop</span><span class="o">);</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">couleur</span><span class="o">);</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">background</span><span class="o">);</span>
	            		
	            		<span class="c1">//La méthode qui va afficher le menu</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">show</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">());</span>
            		<span class="o">}</span>
            	<span class="o">}</span>
            <span class="o">});</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">initMenu</span><span class="o">();</span>
            <span class="k">this</span><span class="o">.</span><span class="na">initToolBar</span><span class="o">();</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
                        
    <span class="o">}</span>
    

    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initToolBar</span><span class="o">(){</span>
    	
    	<span class="k">this</span><span class="o">.</span><span class="na">cancel</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">cancel</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">stopAnimation</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">cancel</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">fondBouton</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">play</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">startAnimation</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">play</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">fondBouton</span><span class="o">);</span>
    	
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">play</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">cancel</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
    	
    	<span class="c1">//Ajout des Listeners</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">circle</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">circle</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">fondBouton</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">circle</span><span class="o">);</span>
    	
    	<span class="k">this</span><span class="o">.</span><span class="na">square</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">square</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">fondBouton</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">square</span><span class="o">);</span>
    	
    	<span class="k">this</span><span class="o">.</span><span class="na">tri</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">fondBouton</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">tri</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tri</span><span class="o">);</span>
    	
    	<span class="k">this</span><span class="o">.</span><span class="na">star</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">fondBouton</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">star</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">star</span><span class="o">);</span>
    	
    	<span class="k">this</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">toolBar</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
    	
    <span class="o">}</span>
    
	
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initMenu</span><span class="o">(){</span>
    	<span class="c1">//Menu animation</span>
    	<span class="c1">//****************************</span>
    	
    	<span class="c1">//Ajout du listener pour lancer l'animation</span>
    	<span class="c1">//ATTENTION LE LISTENER EST GLOBAL ! ! ! ! </span>
    	<span class="c1">//-----------------------------------------------</span>
    	<span class="n">lancer</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">startAnimation</span><span class="o">);</span>
    	<span class="c1">//On attribue l'accélerateur c</span>
    	<span class="n">lancer</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_L</span><span class="o">,</span>
    												<span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_MASK</span><span class="o">));</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lancer</span><span class="o">);</span>
    	
    	<span class="c1">//Ajout du listener pour arrêter l'animation</span>
    	<span class="c1">//LISTENER À CHANGER ICI AUSSI</span>
    	<span class="c1">//--------------------------------------------</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">stopAnimation</span><span class="o">);</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_A</span><span class="o">,</span>
    												<span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span> <span class="o">+</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">SHIFT_DOWN_MASK</span><span class="o">));</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">arreter</span><span class="o">);</span>
    	
    	<span class="n">animation</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
    	<span class="n">quitter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
    		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">){</span>
    			<span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
    		<span class="o">}</span>
    	<span class="o">});</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">quitter</span><span class="o">);</span>
    	
    	<span class="c1">//Menu forme</span>
    	
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="c1">//On crée un nouvel écouteur, inutile de créer 4 instances différentes</span>
    	
    	<span class="n">carre</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
    	<span class="n">rond</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
    	<span class="n">triangle</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
    	<span class="n">etoile</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="n">rond</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
    	
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">typeForme</span><span class="o">);</span>
    	
    	<span class="c1">//Ajout du listener pour le morphing</span>
    	<span class="n">morph</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MorphListener</span><span class="o">());</span>
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">morph</span><span class="o">);</span>
    	
    	<span class="c1">//menu à propos</span>
    	
    	<span class="c1">//Ajout de ce que doit faire le "?"</span>
    	<span class="n">aProposItem</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
				<span class="n">ImageIcon</span> <span class="n">img</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/cysboy.gif"</span><span class="o">);</span>
				
				<span class="n">String</span> <span class="n">mess</span> <span class="o">=</span> <span class="s">"Merci ! \n J'espère que vous vous amusez bien ! \n"</span><span class="o">;</span>
				<span class="n">mess</span> <span class="o">+=</span> <span class="s">"Je crois qu'il est temps d'ajouter des accélérateurs et des mnémoniques dans tout ça...\n"</span><span class="o">;</span>
				<span class="n">mess</span> <span class="o">+=</span> <span class="s">"\n Allez, GO les ZérOs !"</span><span class="o">;</span>
				
				<span class="n">jop</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="n">mess</span><span class="o">,</span> <span class="s">"À propos"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
				
			<span class="o">}</span>    		    		
    	<span class="o">});</span>
    	<span class="n">aPropos</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aProposItem</span><span class="o">);</span>
    	
    	<span class="c1">//Ajout des menus dans la barre de menus</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'A'</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">animation</span><span class="o">);</span>
    	
    	<span class="n">forme</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'F'</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">forme</span><span class="o">);</span>
    	
    	<span class="n">aPropos</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'P'</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aPropos</span><span class="o">);</span>
    	
    	<span class="c1">//Ajout de la barre de menus sur la fenêtre</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">setJMenuBar</span><span class="o">(</span><span class="n">menuBar</span><span class="o">);</span>
    <span class="o">}</span>
    
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
		<span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">();</span>
		<span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
        <span class="k">while</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">animated</span><span class="o">){</span>
        	<span class="c1">//System.out.println("OK");</span>
        	<span class="c1">//Si le mode morphing est activé, on utilise la taille actuelle de la forme</span>
    		<span class="k">if</span><span class="o">(</span><span class="n">pan</span><span class="o">.</span><span class="na">isMorph</span><span class="o">())</span>
    		<span class="o">{</span>
    			<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>
    		<span class="c1">//Sinon, comme d'habitude</span>
    		<span class="k">else</span>
    		<span class="o">{</span>
	        	<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>  
            
        	<span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span><span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>

            <span class="k">try</span> <span class="o">{</span>
                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c1">// TODO Auto-generated catch block</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>       
	<span class="o">}</span>
	
	<span class="cm">/**</span>
<span class="cm">	 * Écouteur du menu Lancer</span>
<span class="cm">	 * @author CHerby</span>
<span class="cm">	 */</span>
	<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StartAnimationListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous lancer l'animation ?"</span><span class="o">,</span> <span class="s">"Lancement de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">PLAIN_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">==</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">OK_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">lancer</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				
				<span class="c1">//ON AJOUTE L'INSTRUCTION POUR LE MENU CONTEXTUEL</span>
				<span class="c1">//************************************************</span>
				<span class="n">launch</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">stop</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				
				<span class="n">play</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">cancel</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
				<span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">PlayAnimation</span><span class="o">());</span>
				<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>			
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="cm">/**</span>
<span class="cm">	 * Écouteur du menu Quitter</span>
<span class="cm">	 * @author CHerby</span>
<span class="cm">	 */</span>
	<span class="kd">class</span> <span class="nc">StopAnimationListener</span>  <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			
			
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous arrêter l'animation ?"</span><span class="o">,</span> <span class="s">"Arrêt de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_CANCEL_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">NO_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CANCEL_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CLOSED_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
				<span class="c1">//On remplace nos bouton par nous MenuItem</span>
				<span class="n">lancer</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>

				<span class="c1">//ON AJOUTE L'INSTRUCTION POUR LE MENU CONTEXTUEL</span>
				<span class="c1">//************************************************</span>
				<span class="n">launch</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">stop</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				
				<span class="n">play</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">cancel</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>	
	
	<span class="cm">/**</span>
<span class="cm">	 * Lance le thread.</span>
<span class="cm">	 * @author CHerby</span>
<span class="cm">	 */</span>
	<span class="kd">class</span> <span class="nc">PlayAnimation</span> <span class="kd">implements</span> <span class="n">Runnable</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
			<span class="n">go</span><span class="o">();</span>			
		<span class="o">}</span>		
	<span class="o">}</span>	
	
	<span class="cm">/**</span>
<span class="cm">	 * Écoute les menus forme</span>
<span class="cm">	 * @author CHerby</span>
<span class="cm">	 */</span>
	<span class="kd">class</span> <span class="nc">FormeListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="c1">//Si l'action vient d'un bouton radio du menu </span>
			<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">().</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"javax.swing.JRadioButtonMenuItem"</span><span class="o">))</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setForme</span><span class="o">(((</span><span class="n">JRadioButtonMenuItem</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">());</span>
			<span class="k">else</span><span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">square</span><span class="o">){</span>
					<span class="n">carre</span><span class="o">.</span><span class="na">doClick</span><span class="o">();</span>
				<span class="o">}</span>
				<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">tri</span><span class="o">){</span>
					<span class="n">triangle</span><span class="o">.</span><span class="na">doClick</span><span class="o">();</span>
				<span class="o">}</span>
				<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">star</span><span class="o">){</span>
					<span class="n">etoile</span><span class="o">.</span><span class="na">doClick</span><span class="o">();</span>
				<span class="o">}</span>
				<span class="k">else</span><span class="o">{</span>
					<span class="n">rond</span><span class="o">.</span><span class="na">doClick</span><span class="o">();</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="cm">/**</span>
<span class="cm">	 * Écoute le menu Morphing</span>
<span class="cm">	 * @author CHerby</span>
<span class="cm">	 */</span>
	<span class="kd">class</span> <span class="nc">MorphListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c1">//Si la case est cochée, activation du mode morphing</span>
			<span class="k">if</span><span class="o">(</span><span class="n">morph</span><span class="o">.</span><span class="na">isSelected</span><span class="o">())</span><span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
			<span class="c1">//Sinon rien !</span>
			<span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="c1">//************************************************************</span>
	<span class="c1">//		CLASSES QUI VONT ECOUTER LE CHANGEMENT DE COULEURS</span>
	<span class="c1">//************************************************************</span>
	
	<span class="cm">/**</span>
<span class="cm">	 * Écoute le changement de couleur du fond</span>
<span class="cm">	 */</span>
	<span class="kd">class</span> <span class="nc">CouleurFondListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">vertBack</span><span class="o">)</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurFond</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">);</span>
			<span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">bleuBack</span><span class="o">)</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurFond</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
			<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">rougeBack</span><span class="o">)</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurFond</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
			<span class="k">else</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurFond</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="cm">/**</span>
<span class="cm">	 * Écoute le changement de couleur du fond</span>
<span class="cm">	 */</span>
	<span class="kd">class</span> <span class="nc">CouleurFormeListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">vert</span><span class="o">)</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurForme</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">);</span>
			<span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">bleu</span><span class="o">)</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurForme</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
			<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()</span> <span class="o">==</span> <span class="n">rouge</span><span class="o">)</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurForme</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
			<span class="k">else</span>
				<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurForme</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous devez obtenir une IHM ressemblant à ceci : <br>
<br>
<div class="centre"><img src="./java_files/127350.jpg" alt="Image utilisateur">   <img src="./java_files/127352.jpg" alt="Image utilisateur"></div><br>
<br>
Elle n'est pas zolie, votre IHM, maintenant ?<br>
Vous avez bien travaillé, surtout que je vous explique les grandes lignes mais vous avez une part de réflexion, à présent !<br>
Eh oui, vous avez appris à penser en orienté objet, vous connaissez les grandes lignes de la programmation événementielle. Maintenant, ce ne sont juste que des points techniques spécifiques à acquérir comme l'utilisation de certains objets !<br>
<div class="rmq information"><br>
D'ailleurs, vous devez savoir une dernière chose : dans les barres d'outils comme celle-ci, vous pouvez mettre d'autres composants que des boutons (combo...). </div><br>
<br>
Pour ceux qui l'auraient remarqué, la barre d'outils est déplaçable ! Si vous cliquez sur cette zone :<br>
<br>
<div class="centre"><img src="./java_files/127351.jpg" alt="Image utilisateur"></div><br>
<br>
si vous laissez le clic appuyé et faites glisser votre souris vers la droite, la gauche ou encore le bas, vous pourrez voir un carré se déplacer : <br>
<br>
<div class="centre"><img src="./java_files/127355.jpg" alt="Image utilisateur"></div><br>
<br>
Et lorsque vous relâchez les clics, votre barre à changé d'emplacement : <br>
<br>
<div class="centre"><img src="./java_files/127354.jpg" alt="Image utilisateur"><img src="./java_files/127353.jpg" alt="Image utilisateur"></div><br>
<br>
Elles sont fortes ces barres d'outils, tout de même !<br>
Par contre, vous devez savoir que vous pouvez utiliser autre chose qu'un composant sur une barre d'outils...  <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10584">Utiliser les actions abstraites</h2>
		<div class="ss_part_texte">
		Nous avons vu, plus haut, comment centraliser les actions sur différents composants.<br>
Vous devez savoir qu'il existe une classe abstraite qui permet de gérer ce genre de chose car elle peut s'adapter à beaucoup de composants (en général à ceux qui ne font qu'une action comme un bouton, une case à cocher et non une liste...).<br>
<br>
Le but de cette classe est d'attribuer automatiquement une action à un ou plusieurs composants. Le principal avantage de cette façon de faire réside dans le fait que plusieurs composants travaillent avec une implémentation de la classe <strong><span class="violet"><span class="courrier">AbstractAction</span></span></strong>, mais le gros inconvénient réside dans le fait que vous devrez programmer une implémentation par action : <br>
<ul>
<li>une action pour la couleur de la forme en rouge ;</li>
<li>une action pour la couleur de la forme en bleu ;</li>
<li>une action pour la couleur de la forme en vert ;</li>
<li>une action pour la couleur du fond en rouge ;</li>
<li>une action pour la couleur du fond en bleu ;</li>
<li>...</li>
</ul><br>
<br>
Ceci peut être très lourd à faire, mais après, je vous laisse juges d'utiliser telle ou telle façon selon vos besoins !<br>
<br>
Voici comment s'implémente cette classe : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="syntax"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>

   <span class="c">//Nous pouvons utiliser les actions abstraites directement dans un JButton</span>
   <span class="k">private</span> <span class="n">JButton</span> <span class="n">bouton1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">RougeAction</span><span class="o">(</span><span class="s">"ActionRouge"</span><span class="o">,</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/rouge.jpg"</span><span class="o">));</span>
    
    <span class="c">//Ou créer un instance concrète</span>
    <span class="k">private</span> <span class="n">RougeAction</span> <span class="n">rAct</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RougeAction</span><span class="o">(</span><span class="s">"ActionRouge"</span><span class="o">,</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/rouge.jpg"</span><span class="o">));</span>
    <span class="k">private</span> <span class="n">JToolBar</span> <span class="n">toolBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JToolBar</span><span class="o">();</span>

    <span class="c">//...</span>

    <span class="c">//Et le plus fort : UTILISER UNE INSTANCE D'ACTION DIRECTEMENT DANS UNE BARRE D'OUTILS</span>
    <span class="k">private</span> <span class="kt">void</span> <span class="nf">initToolBar</span><span class="o">(){</span>
        <span class="n">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rAct</span><span class="o">);</span>
    <span class="o">}</span>

    

   <span class="c">//...</span>

   <span class="k">class</span> <span class="nc">RougeAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>

       <span class="c">//Constructeur avec le nom uniquement</span>
       <span class="k">public</span> <span class="nf">RougeAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">){</span><span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">);}</span>

       <span class="c">//Le constructeur prend le nom et une icône en paramètre</span>
       <span class="k">public</span> <span class="nf">RougeAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">ImageIcon</span><span class="o">){</span><span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">img</span><span class="o">);}</span>

       <span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span><span class="o">){</span>
           <span class="c">//Vous connaissez la marche à suivre</span>
       <span class="o">}</span>
   <span class="o">}</span>

<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez voir que cela peut être très pratique. De plus, si vous ajoutez une action sur une barre d'outils, celle-ci crée automatiquement un bouton correspondant ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
Ensuite, le choix d'utiliser les actions abstraites ou des implémentations de telle ou telle interface vous revient. <br>
<br>
Nous pouvons d'ailleurs très bien appliquer ce principe au code de notre animation.<br>
<br>
Voici ce que peut donner le code vu précédemment avec des implémentations de la classe <strong><span class="violet"><span class="courrier">AbstractAction</span></span></strong> : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.KeyEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.MouseAdapter</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">javax.swing.AbstractAction</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.ButtonGroup</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.ImageIcon</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JCheckBoxMenuItem</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JMenu</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JMenuBar</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JMenuItem</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPopupMenu</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JRadioButtonMenuItem</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JToolBar</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.KeyStroke</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">ZFenetre</span> <span class="k">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="k">private</span> <span class="n">Panneau</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">backX</span><span class="o">,</span> <span class="n">backY</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span> <span class="o">;</span>
    <span class="k">private</span> <span class="n">Thread</span> <span class="n">t</span><span class="o">;</span>
   
   <span class="c">//Création des instances d'actions de forme</span>
   <span class="k">private</span> <span class="n">CarreAction</span> <span class="n">cAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CarreAction</span><span class="o">(</span><span class="s">"Carré"</span><span class="o">,</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/carré.jpg"</span><span class="o">));</span> 
   <span class="k">private</span> <span class="n">RondAction</span> <span class="n">rAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RondAction</span><span class="o">(</span><span class="s">"Rond"</span><span class="o">,</span>  <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/rond.jpg"</span><span class="o">));</span>
   <span class="k">private</span> <span class="n">TriangleAction</span> <span class="n">tAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TriangleAction</span><span class="o">(</span><span class="s">"Triangle"</span><span class="o">,</span>  <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/triangle.jpg"</span><span class="o">));</span>
   <span class="k">private</span> <span class="n">EtoileAction</span> <span class="n">eAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EtoileAction</span><span class="o">(</span><span class="s">"Etoile"</span><span class="o">,</span>  <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/étoile.jpg"</span><span class="o">));</span>
   
   <span class="c">//Création des instances d'actions de couleurs de forme</span>
   <span class="k">private</span> <span class="n">FormeRougeAction</span> <span class="n">rfAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormeRougeAction</span><span class="o">(</span><span class="s">"Rouge"</span><span class="o">);</span>
   <span class="k">private</span> <span class="n">FormeBleuAction</span> <span class="n">bfAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormeBleuAction</span><span class="o">(</span><span class="s">"Bleu"</span><span class="o">);</span>
   <span class="k">private</span> <span class="n">FormeVertAction</span> <span class="n">vfAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormeVertAction</span><span class="o">(</span><span class="s">"Vert"</span><span class="o">);</span>
   <span class="k">private</span> <span class="n">FormeBlancAction</span> <span class="n">wfAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormeBlancAction</span><span class="o">(</span><span class="s">"Blanc"</span><span class="o">);</span>
   
   <span class="c">//Création des instances de couleurs de fond</span>
   <span class="k">private</span> <span class="n">FondRougeAction</span> <span class="n">rFondAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FondRougeAction</span><span class="o">(</span><span class="s">"Rouge"</span><span class="o">);</span>
   <span class="k">private</span> <span class="n">FondBleuAction</span> <span class="n">bFondAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FondBleuAction</span><span class="o">(</span><span class="s">"Bleu"</span><span class="o">);</span>
   <span class="k">private</span> <span class="n">FondVertAction</span> <span class="n">vFondAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FondVertAction</span><span class="o">(</span><span class="s">"Vert"</span><span class="o">);</span>
   <span class="k">private</span> <span class="n">FondBlancAction</span> <span class="n">wFondAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FondBlancAction</span><span class="o">(</span><span class="s">"Blanc"</span><span class="o">);</span>
   
   <span class="c">//Création des instances d'actions pour le lancement et l'arrêt</span>
   <span class="k">private</span> <span class="n">LancerAction</span> <span class="n">lAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LancerAction</span><span class="o">(</span><span class="s">"Lancer l'animation"</span><span class="o">,</span>   <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/play.jpg"</span><span class="o">));</span>
   <span class="k">private</span> <span class="n">ArretAction</span> <span class="n">sAction</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArretAction</span><span class="o">(</span><span class="s">"Arrêter l'animation"</span><span class="o">,</span>   <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/stop.jpg"</span><span class="o">));</span>
   
   <span class="c">//***********************************************************</span>
    <span class="c">//			La déclaration pour le menu de la JMenuBar</span>
    <span class="c">//***********************************************************</span>
    <span class="k">private</span> <span class="n">JMenuBar</span> <span class="n">menuBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuBar</span><span class="o">();</span>
    
    <span class="k">private</span> <span class="n">JMenu</span> <span class="n">animation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">),</span>
    		<span class="n">forme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Forme"</span><span class="o">),</span>
    		<span class="n">typeForme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Type de forme"</span><span class="o">),</span>
    		<span class="n">aPropos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"À propos"</span><span class="o">);</span>
    
    <span class="k">private</span> <span class="n">JMenuItem</span> 	<span class="n">lancer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="n">lAction</span><span class="o">),</span>
	    				<span class="n">arreter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="n">sAction</span><span class="o">),</span>
	    				<span class="n">quitter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Quitter"</span><span class="o">),</span>
	    				<span class="n">aProposItem</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"?"</span><span class="o">);</span>
	    
    <span class="k">private</span> <span class="n">JCheckBoxMenuItem</span> <span class="n">morph</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JCheckBoxMenuItem</span><span class="o">(</span><span class="s">"Morphing"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JRadioButtonMenuItem</span> 	<span class="n">carre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="n">cAction</span><span class="o">),</span>
	    							<span class="n">rond</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="n">rAction</span><span class="o">),</span>
	    							<span class="n">triangle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="n">tAction</span><span class="o">),</span>
	    							<span class="n">etoile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRadioButtonMenuItem</span><span class="o">(</span><span class="n">eAction</span><span class="o">);</span>
	    							
    <span class="k">private</span> <span class="n">ButtonGroup</span> <span class="n">bg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ButtonGroup</span><span class="o">();</span>
    
    <span class="c">//***********************************************************</span>
    <span class="c">//			La déclaration pour le menu contextuel </span>
    <span class="c">//***********************************************************</span>
    <span class="k">private</span> <span class="n">JPopupMenu</span> <span class="n">jpm</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPopupMenu</span><span class="o">();</span>
    <span class="k">private</span> <span class="n">JMenu</span> <span class="n">background</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Couleur de fond"</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JMenu</span> <span class="n">couleur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Couleur de la forme"</span><span class="o">);</span>
	
    <span class="k">private</span> <span class="n">JMenuItem</span> <span class="n">launch</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="n">lAction</span><span class="o">);</span>	            		
    <span class="k">private</span> <span class="n">JMenuItem</span> <span class="n">stop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="n">sAction</span><span class="o">);</span>
    <span class="k">private</span> <span class="n">JMenuItem</span> 	<span class="n">rouge</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="n">rfAction</span><span class="o">),</span>
					    <span class="n">bleu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="n">bfAction</span><span class="o">),</span>
					    <span class="n">vert</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="n">vfAction</span><span class="o">),</span>
					    <span class="n">blanc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="n">wfAction</span><span class="o">),</span>
					    <span class="n">rougeBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="n">rFondAction</span><span class="o">),</span>
					    <span class="n">bleuBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="n">bFondAction</span><span class="o">),</span>
					    <span class="n">vertBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="n">vFondAction</span><span class="o">),</span>
					    <span class="n">blancBack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="n">wFondAction</span><span class="o">);</span>

    
    
    <span class="c">//Création de notre barre d'outils</span>
    <span class="k">private</span> <span class="n">JToolBar</span> <span class="n">toolBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JToolBar</span><span class="o">();</span>
    
    <span class="c">//Les boutons</span>
    <span class="k">private</span> <span class="n">JButton</span> 	<span class="n">play</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="n">lAction</span><span class="o">),</span>
    					<span class="n">cancel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="n">sAction</span><span class="o">),</span>
    					<span class="n">square</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="n">cAction</span><span class="o">),</span>
    					<span class="n">tri</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="n">tAction</span><span class="o">),</span>
    					<span class="n">circle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="n">rAction</span><span class="o">),</span>
    					<span class="n">star</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="n">eAction</span><span class="o">);</span>
    
    <span class="k">private</span> <span class="n">Color</span> <span class="n">fondBouton</span> <span class="o">=</span> <span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">;</span>
    
    
    <span class="k">public</span> <span class="nf">ZFenetre</span><span class="o">(){</span>
           
            <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Animation"</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">800</span><span class="o">,</span> <span class="mi">600</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
            <span class="n">container</span><span class="o">.</span><span class="na">setLayout</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>
            
            <span class="c">//On initialise le menu stop</span>
            <span class="n">stop</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
            
    		<span class="c">//On crée et on passe l'écouteur pour afficher le menu contextuel</span>
    		<span class="c">//Création d'une implémentation de MouseAdapter</span>
    		<span class="c">//avec redéfinition de la méthode adéquate</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">addMouseListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MouseAdapter</span><span class="o">(){</span>
            	<span class="k">public</span> <span class="kt">void</span> <span class="nf">mouseReleased</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">){</span>
            		<span class="c">//Seulement s'il s'agit d'un clic droit</span>
            		<span class="k">if</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">isPopupTrigger</span><span class="o">())</span>
            		<span class="o">{</span>	            		
            			<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">blancBack</span><span class="o">);</span>
            			<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rougeBack</span><span class="o">);</span>
	            		<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bleuBack</span><span class="o">);</span>
	            		<span class="n">background</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">vertBack</span><span class="o">);</span>
	            		
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">blanc</span><span class="o">);</span>
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rouge</span><span class="o">);</span>
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bleu</span><span class="o">);</span>
	            		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">vert</span><span class="o">);</span>
	            			            		
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">launch</span><span class="o">);</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">stop</span><span class="o">);</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">couleur</span><span class="o">);</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">background</span><span class="o">);</span>
	            		
	            		<span class="c">//La méthode qui va afficher le menu</span>
	            		<span class="n">jpm</span><span class="o">.</span><span class="na">show</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">());</span>
            		<span class="o">}</span>
            	<span class="o">}</span>
            <span class="o">});</span>
            
            <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
            
            <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">initMenu</span><span class="o">();</span>
            <span class="k">this</span><span class="o">.</span><span class="na">initToolBar</span><span class="o">();</span>
            <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>            
                        
    <span class="o">}</span>
    

    <span class="k">private</span> <span class="kt">void</span> <span class="nf">initToolBar</span><span class="o">(){</span>
    	
    	<span class="k">this</span><span class="o">.</span><span class="na">cancel</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">cancel</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">fondBouton</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">play</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">fondBouton</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Courier"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">PLAIN</span><span class="o">,</span> <span class="mi">0</span><span class="o">));</span>
    	
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">play</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">cancel</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
    	
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rAction</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">cAction</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tAction</span><span class="o">);</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">eAction</span><span class="o">);</span>
    	
    	
    	<span class="k">this</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">toolBar</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
    	
    <span class="o">}</span>
    
	
    <span class="k">private</span> <span class="kt">void</span> <span class="nf">initMenu</span><span class="o">(){</span>
    	<span class="c">//Menu animation</span>
    	<span class="c">//****************************</span>
    	
    	<span class="c">//Ajout du listener pour lancer l'animation</span>
    	<span class="c">//ATTENTION LE LISTENER EST GLOBAL ! ! ! ! </span>
    	<span class="c">//-----------------------------------------------</span>
    	<span class="c">//On attribue l'accélerateur c</span>
    	<span class="n">lancer</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_L</span><span class="o">,</span>
    												<span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_MASK</span><span class="o">));</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lancer</span><span class="o">);</span>
    	
    	<span class="c">//Ajout du listener pour arrêter l'animation</span>
    	<span class="c">//LISTENER À CHANGER ICI AUSSI</span>
    	<span class="c">//--------------------------------------------</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
    	<span class="n">arreter</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_A</span><span class="o">,</span>
    												<span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span> <span class="o">+</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">SHIFT_DOWN_MASK</span><span class="o">));</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">arreter</span><span class="o">);</span>
    	
    	<span class="n">animation</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
    	<span class="n">quitter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
    		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">){</span>
    			<span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
    		<span class="o">}</span>
    	<span class="o">});</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">quitter</span><span class="o">);</span>
    	
    	<span class="c">//Menu forme</span>
    	
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">bg</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="c">//On crée un nouvel écouteur, inutile de créer 4 instances différentes</span>
    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>    	
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">triangle</span><span class="o">);</span>
    	<span class="n">typeForme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">etoile</span><span class="o">);</span>
    	
    	<span class="n">rond</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
    	
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">typeForme</span><span class="o">);</span>
    	
    	<span class="c">//Ajout du listener pour le morphing</span>
    	<span class="n">morph</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MorphListener</span><span class="o">());</span>
    	<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">morph</span><span class="o">);</span>
    	
    	<span class="c">//menu à propos</span>
    	
    	<span class="c">//Ajout de ce que doit faire le "?"</span>
    	<span class="n">aProposItem</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
				<span class="n">ImageIcon</span> <span class="n">img</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/cysboy.gif"</span><span class="o">);</span>
				
				<span class="n">String</span> <span class="n">mess</span> <span class="o">=</span> <span class="s">"Merci ! \n J'espère que vous vous amusez bien ! \n"</span><span class="o">;</span>
				<span class="n">mess</span> <span class="o">+=</span> <span class="s">"Je crois qu'il est temps d'ajouter des accélérateurs et des mnémoniques dans tout ça...\n"</span><span class="o">;</span>
				<span class="n">mess</span> <span class="o">+=</span> <span class="s">"\n Allez, GO les ZérOs !"</span><span class="o">;</span>
				
				<span class="n">jop</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="n">mess</span><span class="o">,</span> <span class="s">"À propos"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">INFORMATION_MESSAGE</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
				
			<span class="o">}</span>    		    		
    	<span class="o">});</span>
    	<span class="n">aPropos</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aProposItem</span><span class="o">);</span>
    	
    	<span class="c">//Ajout des menus dans la barre de menus</span>
    	<span class="n">animation</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'A'</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">animation</span><span class="o">);</span>
    	
    	<span class="n">forme</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'F'</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">forme</span><span class="o">);</span>
    	
    	<span class="n">aPropos</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'P'</span><span class="o">);</span>
    	<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">aPropos</span><span class="o">);</span>
    	
    	<span class="c">//Ajout de la barre de menus sur la fenêtre</span>
    	<span class="k">this</span><span class="o">.</span><span class="na">setJMenuBar</span><span class="o">(</span><span class="n">menuBar</span><span class="o">);</span>
    <span class="o">}</span>
    
	<span class="k">private</span> <span class="kt">void</span> <span class="nf">go</span><span class="o">(){</span>
		<span class="n">x</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosX</span><span class="o">();</span>
		<span class="n">y</span> <span class="o">=</span> <span class="n">pan</span><span class="o">.</span><span class="na">getPosY</span><span class="o">();</span>
        <span class="k">while</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">animated</span><span class="o">){</span>
        	<span class="c">//System.out.println("OK");</span>
        	<span class="c">//Si le mode morphing est activé, on utilise la taille actuelle de la forme</span>
    		<span class="k">if</span><span class="o">(</span><span class="n">pan</span><span class="o">.</span><span class="na">isMorph</span><span class="o">())</span>
    		<span class="o">{</span>
    			<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="n">pan</span><span class="o">.</span><span class="na">getDrawSize</span><span class="o">())</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>
    		<span class="c">//Sinon, comme d'habitude</span>
    		<span class="k">else</span>
    		<span class="o">{</span>
	        	<span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backX</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>               
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	            <span class="k">if</span><span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">pan</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()-</span><span class="mi">50</span><span class="o">)</span><span class="n">backY</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    		<span class="o">}</span>  
            
        	<span class="k">if</span><span class="o">(!</span><span class="n">backX</span><span class="o">)</span><span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(++</span><span class="n">x</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosX</span><span class="o">(--</span><span class="n">x</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">backY</span><span class="o">)</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(++</span><span class="n">y</span><span class="o">);</span>
            <span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setPosY</span><span class="o">(--</span><span class="n">y</span><span class="o">);</span>
            <span class="n">pan</span><span class="o">.</span><span class="na">repaint</span><span class="o">();</span>

            <span class="k">try</span> <span class="o">{</span>
                    <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c">// TODO Auto-generated catch block</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>       
	<span class="o">}</span>
		
	<span class="c">/**</span>
<span class="c">	 * Lance le thread.</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="k">class</span> <span class="nc">PlayAnimation</span> <span class="k">implements</span> <span class="n">Runnable</span><span class="o">{</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
			<span class="n">go</span><span class="o">();</span>			
		<span class="o">}</span>		
	<span class="o">}</span>	
	
	<span class="c">/**</span>
<span class="c">	 * Écoute le menu Morphing</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="k">class</span> <span class="nc">MorphListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">//Si la case est cochée, activation du mode morphing</span>
			<span class="k">if</span><span class="o">(</span><span class="n">morph</span><span class="o">.</span><span class="na">isSelected</span><span class="o">())</span><span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
			<span class="c">//Sinon rien !</span>
			<span class="k">else</span> <span class="n">pan</span><span class="o">.</span><span class="na">setMorph</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>

	
	<span class="c">//*************************************************************</span>
	<span class="c">//			LES CLASSES D'ACTIONS POUR LA FORME</span>
	<span class="c">//*************************************************************</span>
	
	<span class="c">/**</span>
<span class="c">	 * Classe gérant le changement de la forme en carré</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="k">class</span> <span class="nc">CarreAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="c">/**</span>
<span class="c">		 * Le constructeur prend le nom de l'icône en paramètre</span>
<span class="c">		 * @param name</span>
<span class="c">		 * @param img</span>
<span class="c">		 */</span>
		<span class="k">public</span> <span class="nf">CarreAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">ImageIcon</span> <span class="n">img</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="c">/**</span>
<span class="c">		 * Celui-ci ne prend que le nom</span>
<span class="c">		 * @param name</span>
<span class="c">		 */</span>
		<span class="k">public</span> <span class="nf">CarreAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
		<span class="o">}</span>
		
		<span class="c">/**</span>
<span class="c">		 * L'action effectuée</span>
<span class="c">		 */</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setForme</span><span class="o">(</span><span class="s">"CARRE"</span><span class="o">);</span>
			<span class="n">carre</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="c">//*************************************************************</span>
	
	<span class="k">class</span> <span class="nc">RondAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">RondAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">ImageIcon</span> <span class="n">img</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setForme</span><span class="o">(</span><span class="s">"ROND"</span><span class="o">);</span>
			<span class="n">rond</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>

	<span class="c">//*************************************************************</span>
	
	<span class="k">class</span> <span class="nc">TriangleAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">TriangleAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">ImageIcon</span> <span class="n">img</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setForme</span><span class="o">(</span><span class="s">"TRIANGLE"</span><span class="o">);</span>
			<span class="n">triangle</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="c">//*************************************************************</span>
	
	<span class="k">class</span> <span class="nc">EtoileAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">EtoileAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">ImageIcon</span> <span class="n">img</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setForme</span><span class="o">(</span><span class="s">"ETOILE"</span><span class="o">);</span>
			<span class="n">etoile</span><span class="o">.</span><span class="na">setSelected</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="c">//*************************************************************</span>
	<span class="c">//				ACTIONS POUR LES COULEURS DE FOND	</span>
	<span class="c">//*************************************************************</span>
	
	
	<span class="k">class</span> <span class="nc">FondRougeAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">FondRougeAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurFond</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>

	<span class="c">//*************************************************************</span>
	
	<span class="k">class</span> <span class="nc">FondBleuAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">FondBleuAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurFond</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>

	<span class="c">//*************************************************************</span>
	
	<span class="k">class</span> <span class="nc">FondVertAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">FondVertAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurFond</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>

	<span class="c">//*************************************************************</span>
	
	<span class="k">class</span> <span class="nc">FondBlancAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">FondBlancAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurFond</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	

	

	<span class="c">//*************************************************************</span>
	<span class="c">//			ACTIONS POUR LES COULEURS DE LA FORME	</span>
	<span class="c">//*************************************************************</span>
	
	
	<span class="k">class</span> <span class="nc">FormeRougeAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">FormeRougeAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurForme</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>

	<span class="c">//*************************************************************</span>
	
	<span class="k">class</span> <span class="nc">FormeBleuAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">FormeBleuAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurForme</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>

	<span class="c">//*************************************************************</span>
	
	<span class="k">class</span> <span class="nc">FormeVertAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">FormeVertAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurForme</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>

	<span class="c">//*************************************************************</span>
	
	<span class="k">class</span> <span class="nc">FormeBlancAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">FormeBlancAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">setCouleurForme</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>

	
	
	
	<span class="c">//*************************************************************</span>
	<span class="c">//			ACTIONS POUR LE LANCEMENT/ARRÊT	</span>
	<span class="c">//*************************************************************</span>
	
	
	<span class="k">class</span> <span class="nc">ArretAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">ArretAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">ImageIcon</span> <span class="n">img</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous arrêter l'animation ?"</span><span class="o">,</span> <span class="s">"Arrêt de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_CANCEL_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">NO_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CANCEL_OPTION</span> <span class="o">&amp;&amp;</span> <span class="n">option</span> <span class="o">!=</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">CLOSED_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
				<span class="c">//On remplace nos boutons par nos MenuItem</span>
				<span class="n">lancer</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>

				<span class="c">//ON AJOUTE L'INSTRUCTION POUR LE MENU CONTEXTUEL</span>
				<span class="c">//************************************************</span>
				<span class="n">launch</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">stop</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				
				<span class="n">play</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">cancel</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>

	<span class="c">//*************************************************************</span>
	
	<span class="k">class</span> <span class="nc">LancerAction</span> <span class="k">extends</span> <span class="n">AbstractAction</span><span class="o">{</span>
		<span class="k">public</span> <span class="nf">LancerAction</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">ImageIcon</span> <span class="n">img</span><span class="o">){</span>
			<span class="k">super</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">img</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>			
			<span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showConfirmDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Voulez-vous lancer l'animation ?"</span><span class="o">,</span> <span class="s">"Lancement de l'animation"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">YES_NO_OPTION</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">PLAIN_MESSAGE</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">option</span> <span class="o">==</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">OK_OPTION</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="n">lancer</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">arreter</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				
				<span class="c">//ON AJOUTE L'INSTRUCTION POUR LE MENU CONTEXTUEL</span>
				<span class="c">//************************************************</span>
				<span class="n">launch</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">stop</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				
				<span class="n">play</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">cancel</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				
				<span class="n">animated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
				<span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">PlayAnimation</span><span class="o">());</span>
				<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>			
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>

<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez voir que le code s'est un peu alourdi...<br>
Mais, comme je vous le disais, c'est une question de choix et de conception.<br>
<br>
Bon, je crois qu'un topo et un QCM vous attendent... <img src="./java_files/clin.png" alt=";)" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10583">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>L'objet pour mettre une barre de menu sur vos IHM swing est un <strong><span class="violet"><span class="courrier">JMenuBar</span></span></strong>.</li>
<li>Dans cet objet, vous pouvez mettre des objets <strong><span class="violet"><span class="courrier">JMenu </span></span></strong>afin de créer un menu déroulant.</li>
<li>L'objet cité ci-dessus accepte des objets <strong><span class="violet"><span class="courrier">JMenu, JMenuItem, JCheckBoxMenuItem</span></span></strong> et <strong><span class="violet"><span class="courrier">JRadioButtonMenuItem</span></span></strong>.</li>
<li>Afin d'interagir avec vos points de menu, vous pouvez utiliser une implémentation de l'interface <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong>.</li>
<li>Pour faciliter l'accès aux menus de la barre de menus, vous pouvez ajouter des <strong><span class="vertf">mnémoniques</span></strong> à ceux-ci.</li>
<li>L'ajout d'<strong><span class="vertf">accélérateurs</span></strong> permet de déclencher des actions, le plus souvent, par des combinaisons de touches.</li>
<li>Afin de pouvoir récupérer les codes des touches du clavier, vous devrez utiliser un objet <strong><span class="violet"><span class="courrier">KeyStroke</span></span></strong> ainsi qu'un objet <strong><span class="violet"><span class="courrier">KeyEvent</span></span></strong>.</li>
<li>Les menus contextuels fonctionnent tout comme un menu normal, à la différence qu'il s'agit d'un objet <strong><span class="violet"><span class="courrier">JPopupMenu</span></span></strong>.</li>
<li>Vous devez toutefois spécifier sur quel composant doit s'afficher le menu contextuel.</li>
<li>La détection du clic droit se fait grâce à la méthode <strong><span class="courrier">isPopupTrigger()</span></strong> de l'objet <strong><span class="violet"><span class="courrier">MouseEvent</span></span></strong>.</li>
<li>L'ajout d'une barre d'outils nécessite l'utilisation de l'objet <strong><span class="violet"><span class="courrier">JToolBar</span></span></strong>.</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Vous avez encore appris beaucoup de choses dans ce chapitre...<br>
Je vous rassure, vous n'êtes pas au bout de vos peines ! <img src="./java_files/diable.png" alt=":diable:" class="smilies"><br>
<br>
Il nous reste encore tant de choses à voir. D'ailleurs, vous vous demandez peut-être comment faire pour créer un menu "Enregistrer" ou encore "Enregistrer sous" ?<br>
<br>
Avant de voir comment faire ceci, nous allons passer par un petit TP : <strong><span class="orange">L'ardoise mazique !</span></strong>
	</div>
	
	<hr>
	<h1 id="chap_10596">TP : l'ardoise maZique</h1>
	<div id="chap_intro">
	Nous voilà partis pour un nouveau TP.<br>
<br>
Dans celui-ci, ce qui prime c'est surtout :<br>
<ul>
<li>d'utiliser les menus, les accélérateurs et mnémoniques ;</li>
<li>d'ajouter une barre d'outils ;</li>
<li>de créer des implémentations et savoir les utiliser sur plusieurs composants ;</li>
<li>d'utiliser des classes anonymes ;</li>
<li>...</li>
</ul><br>
<br>
Je ne vous demande pas de faire un logiciel hyper-pointu ! <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
Vous constaterez d'ailleurs qu'il peut y avoir des bugs d'affichage... Je ne vous dis pas lesquels, on ne sait jamais, si vous ne les trouvez pas...<br>
<br>
Ce n'est pas tout ça mais... si on commençait ?
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10595">Cahier des charges</h2>
		<div class="ss_part_texte">
		Voilà les recommandations.<br>
<br>
Vous devez faire une sorte d'ardoise magique. En gros, celle-ci devra être composée d'un <strong><span class="courrier"><span class="violet">JPanel</span></span></strong> amélioré (ça sent l'héritage...) sur lequel vous pourrez tracer des choses en cliquant et en déplaçant la souris.<br>
<br>
Vos tracés devront être effectués point par point, ceux-ci d'une taille que je vous laisse apprécier. Par contre, vous devrez pouvoir utiliser deux sortes de "<span class="italique">pinceaux</span>" : <br>
<ul>
<li>un carré ;</li>
<li>un rond.</li>
</ul><br>
<br>
Vous aurez aussi la possibilité de changer la couleur de vos traits, les couleurs que j'ai choisies sont :<br>
<ul>
<li>le bleu ;</li>
<li>le rouge ;</li>
<li>le vert.</li>
</ul><br>
<br>
Il faut <strong>OBLIGATOIREMENT </strong>: <br>
<ul>
<li>un menu avec accélérateurs et mnémoniques ;</li>
<li>une barre d'outils avec les formes et les couleurs ;</li>
<li>un menu "<strong><span class="arial">Quitter</span></strong>" et un menu "<strong><span class="arial">Effacer</span></strong>" ;</li>
<li>que les formes et les couleurs soient accessibles via le menu !</li>
</ul><br>
<br>
Voici ce que j'ai obtenu :<br>
<br>
<div class="centre"><img src="./java_files/127609.jpg" alt="Image utilisateur"> <img src="./java_files/127610.jpg" alt="Image utilisateur"> <img src="./java_files/127611.jpg" alt="Image utilisateur"></div><br>
<br>
Et voilà ce que j'ai fait rien que pour vous : <br>
<br>
<div class="centre"><img src="./java_files/127608.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq erreur"><strong><span class="gros">Attention : </span></strong> <strong>vous allez utiliser la méthode <span class="code2 java"><span class="n">repaint</span><span class="o">()</span>
</span> de votre composant ; cependant, souvenez-vous que celle-ci est appelée <strong>automatiquement</strong> lors du redimensionnement de votre fenêtre, de la réduction, de l'agrandissement... Vous allez devoir gérer ce cas de figure ! Sinon, votre zone de dessin s'effacera à chaque redimensionnement ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"> </strong></div><br>
<br>
Je vous conseille de créer une classe <strong><span class="violet"><span class="courrier">Point</span></span></strong> qui va contenir les informations relatives à un point tracé (couleur, taille, position...).<br>
Il va falloir que vous gériez une collection de points (générique, la collection <img src="./java_files/siffle.png" alt=":-°" class="smilies"> ) dans votre classe dérivée de <strong><span class="violet"><span class="courrier">JPanel</span></span></strong> !<br>
<br>
J'en ai presque trop dit...<br>
<br>
Bon, je suis un ange aujourd'hui. <img src="./java_files/ange.png" alt=":ange:" class="smilies"><br>
Voici les images que j'ai utilisées : <br>
<br>
<div class="centre"><img src="./java_files/127801.jpg" alt="Image utilisateur"> <img src="./java_files/127800.jpg" alt="Image utilisateur"> <img src="./java_files/127802.jpg" alt="Image utilisateur"> <img src="./java_files/127803.jpg" alt="Image utilisateur"> <img src="./java_files/127804.jpg" alt="Image utilisateur"></div><br>
<br>
Je sais... Elles ne sont pas terribles. <img src="./java_files/unsure.gif" alt=":euh:" class="smilies"><br>
Mais le but n'est pas là ! <br>
<br>
Avant de vous lancer dans votre code, vous devez savoir quelques choses...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10594">Prérequis</h2>
		<div class="ss_part_texte">
		Afin que vous puissiez faire des tracés, vous allez devoir détecter le mouvement de votre souris.<br>
Je ne vous ai pas encore parlé de ça auparavant, mais vous avez l'habitude d'utiliser des interfaces de gestion d'événements, maintenant...<br>
<br>
Afin de détecter les mouvements de votre souris, vous allez devoir utiliser l'interface <strong><span class="violet"><span class="courrier">MouseMotionListener</span></span></strong> ; celle-ci contient deux méthodes : <br>
<ul>
<li><strong><span class="violet"><span class="courrier">mouseMoved(MouseEvent e)</span></span></strong> : détecte le mouvement de la souris sur le composant ;</li>
<li><strong><span class="violet"><span class="courrier">mouseDragged(MouseEvent e)</span></span></strong> : idem que ci-dessus mais vous devrez avoir cliqué sur le composant et maintenir ce clic enfoncé pendant le mouvement (exactement ce qu'il vous faut <img src="./java_files/clin.png" alt=";)" class="smilies"> ).</li>
</ul><br>
<br>
Voilà : vous allez devoir créer une implémentation de cette interface pour réussir à dessiner sur votre conteneur !<br>
<br>
Bon ! Ne vous hâtez pas trop, réfléchissez bien à ce dont vous avez besoin. Comment utiliser vos implémentations... Bref, surtout ne pas vous précipiter ! <br>
Un code bien réfléchi est un code rapidement opérationnel ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
C'est à vous, maintenant...<br>
À vos claviers.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10598">Correction</h2>
		<div class="ss_part_texte">
		Roulement de tambour... C'est le moment de vérité ! <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
<br>
<div class="rmq attention"><strong>J'ai mis des images sur mes boutons de barre d'outils...</strong> </div><br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<br>
<h3>Point.java</h3><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>


<span class="k">public</span> <span class="k">class</span> <span class="nc">Point</span> <span class="o">{</span>

	<span class="c">//Couleur du point</span>
	<span class="k">private</span> <span class="n">Color</span> <span class="n">color</span> <span class="o">=</span> <span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">;</span>
	<span class="c">//Taille</span>
	<span class="k">private</span> <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
	<span class="c">//position sur l'axe X : initialisé au dehors du conteneur</span>
	<span class="k">private</span> <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="o">;</span>
	<span class="c">//Position sur l'axe Y : initialisé au dehors du conteneur</span>
	<span class="k">private</span> <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="o">;</span>
	<span class="c">//Type de point</span>
	<span class="k">private</span> <span class="n">String</span> <span class="n">type</span> <span class="o">=</span> <span class="s">"ROND"</span><span class="o">;</span>
	
	<span class="c">/**</span>
<span class="c">	 * Constructeur par défaut</span>
<span class="c">	 */</span>
	<span class="k">public</span> <span class="nf">Point</span><span class="o">(){}</span>
	<span class="c">/**</span>
<span class="c">	 * Constructeur avec paramètres</span>
<span class="c">	 * @param x</span>
<span class="c">	 * @param y</span>
<span class="c">	 * @param size</span>
<span class="c">	 * @param color</span>
<span class="c">	 * @param type</span>
<span class="c">	 */</span>
	<span class="k">public</span> <span class="nf">Point</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="kt">int</span> <span class="n">size</span><span class="o">,</span> <span class="n">Color</span> <span class="n">color</span><span class="o">,</span> <span class="n">String</span> <span class="n">type</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">size</span> <span class="o">=</span> <span class="n">size</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">color</span> <span class="o">=</span> <span class="n">color</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">type</span> <span class="o">=</span> <span class="n">type</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c">//****************************************</span>
	<span class="c">//				ACCESSEURS</span>
	<span class="c">//****************************************</span>
	<span class="k">public</span> <span class="n">Color</span> <span class="nf">getColor</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">color</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="k">public</span> <span class="kt">void</span> <span class="nf">setColor</span><span class="o">(</span><span class="n">Color</span> <span class="n">color</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">color</span> <span class="o">=</span> <span class="n">color</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="k">public</span> <span class="kt">int</span> <span class="nf">getSize</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">size</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="k">public</span> <span class="kt">void</span> <span class="nf">setSize</span><span class="o">(</span><span class="kt">int</span> <span class="n">size</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">size</span> <span class="o">=</span> <span class="n">size</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="k">public</span> <span class="kt">int</span> <span class="nf">getX</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">x</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="k">public</span> <span class="kt">void</span> <span class="nf">setX</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="k">public</span> <span class="kt">int</span> <span class="nf">getY</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">y</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="k">public</span> <span class="kt">void</span> <span class="nf">setY</span><span class="o">(</span><span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="k">public</span> <span class="n">String</span> <span class="nf">getType</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">type</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="k">public</span> <span class="kt">void</span> <span class="nf">setType</span><span class="o">(</span><span class="n">String</span> <span class="n">type</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">type</span> <span class="o">=</span> <span class="n">type</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h3>DrawPanel.java</h3><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.MouseAdapter</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.MouseMotionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">DrawPanel</span> <span class="k">extends</span> <span class="n">JPanel</span><span class="o">{</span>
 
	<span class="c">//Couleur du pointeur</span>
	<span class="k">private</span> <span class="n">Color</span> <span class="n">pointerColor</span> <span class="o">=</span> <span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">;</span>
	<span class="c">//Forme du pointeur</span>
	<span class="k">private</span> <span class="n">String</span> <span class="n">pointerType</span> <span class="o">=</span> <span class="s">"CIRCLE"</span><span class="o">;</span>
	<span class="c">//Position X du pointeur</span>
	<span class="k">private</span> <span class="kt">int</span> <span class="n">posX</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="o">,</span> <span class="n">oldX</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="o">;</span>
	<span class="c">//Position Y du pointeur</span>
	<span class="k">private</span> <span class="kt">int</span> <span class="n">posY</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="o">,</span> <span class="n">oldY</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="o">;</span>
	<span class="c">//pour savoir si on doit dessiner ou non</span>
	<span class="k">private</span> <span class="kt">boolean</span> <span class="n">erasing</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
	<span class="c">//Taille du pointeur</span>
	<span class="k">private</span> <span class="kt">int</span> <span class="n">pointerSize</span> <span class="o">=</span> <span class="mi">15</span><span class="o">;</span>
	<span class="c">//Collection de points ! </span>
	<span class="k">private</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Point</span><span class="o">&gt;</span> <span class="n">points</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Point</span><span class="o">&gt;();</span>	
	
	<span class="c">/**</span>
<span class="c">	 * Constructeur</span>
<span class="c">	 */</span>
	<span class="k">public</span> <span class="nf">DrawPanel</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">addMouseListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MouseAdapter</span><span class="o">(){</span>
			<span class="k">public</span> <span class="kt">void</span> <span class="nf">mousePressed</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">e</span><span class="o">){</span>
				<span class="n">points</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Point</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getX</span><span class="o">()</span> <span class="o">-</span> <span class="o">(</span><span class="n">pointerSize</span> <span class="o">/</span> <span class="mi">2</span><span class="o">),</span> <span class="n">e</span><span class="o">.</span><span class="na">getY</span><span class="o">()</span> <span class="o">-</span> <span class="o">(</span><span class="n">pointerSize</span> <span class="o">/</span> <span class="mi">2</span><span class="o">),</span> <span class="n">pointerSize</span><span class="o">,</span> <span class="n">pointerColor</span><span class="o">,</span> <span class="n">pointerType</span><span class="o">));</span>
				<span class="n">repaint</span><span class="o">();</span>
			<span class="o">}</span>
		<span class="o">});</span>
 
		<span class="k">this</span><span class="o">.</span><span class="na">addMouseMotionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MouseMotionListener</span><span class="o">(){</span>
			<span class="k">public</span> <span class="kt">void</span> <span class="nf">mouseDragged</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
				<span class="c">//On récupère les coordonnées de la souris </span>
				<span class="c">//et on enlève la moitié de la taille du pointeur</span>
				<span class="c">//pour centrer le tracé</span>
				<span class="n">points</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Point</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getX</span><span class="o">()</span> <span class="o">-</span> <span class="o">(</span><span class="n">pointerSize</span> <span class="o">/</span> <span class="mi">2</span><span class="o">),</span> <span class="n">e</span><span class="o">.</span><span class="na">getY</span><span class="o">()</span> <span class="o">-</span> <span class="o">(</span><span class="n">pointerSize</span> <span class="o">/</span> <span class="mi">2</span><span class="o">),</span> <span class="n">pointerSize</span><span class="o">,</span> <span class="n">pointerColor</span><span class="o">,</span> <span class="n">pointerType</span><span class="o">));</span>
				<span class="n">repaint</span><span class="o">();</span>
			<span class="o">}</span>
 
			<span class="k">public</span> <span class="kt">void</span> <span class="nf">mouseMoved</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
		<span class="o">});</span>
		
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Vous la connaissez maintenant, celle-là ;)</span>
<span class="c">	 */</span>	
	<span class="k">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
		
		<span class="c">//Si on doit effacer, on ne passe pas dans le else =&gt; pas de dessin</span>
		<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">erasing</span><span class="o">){</span>
			<span class="k">this</span><span class="o">.</span><span class="na">erasing</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="c">//On parcourt notre collection de points</span>
			<span class="k">for</span><span class="o">(</span><span class="n">Point</span> <span class="n">p</span> <span class="o">:</span> <span class="k">this</span><span class="o">.</span><span class="na">points</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="c">//On récupère la couleur</span>
				<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getColor</span><span class="o">());</span>
				
				<span class="c">//Selon le type de point</span>
				<span class="k">if</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getType</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"SQUARE"</span><span class="o">)){</span>
					<span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getY</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getSize</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getSize</span><span class="o">());</span>
				<span class="o">}</span>
				<span class="k">else</span><span class="o">{</span>
					<span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getY</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getSize</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getSize</span><span class="o">());</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">}</span>				
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Efface le contenu</span>
<span class="c">	 */</span>
	<span class="k">public</span> <span class="kt">void</span> <span class="nf">erase</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">erasing</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">points</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Point</span><span class="o">&gt;();</span>
		<span class="n">repaint</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Définit la couleur du pointeur</span>
<span class="c">	 * @param c</span>
<span class="c">	 */</span>
	<span class="k">public</span> <span class="kt">void</span> <span class="nf">setPointerColor</span><span class="o">(</span><span class="n">Color</span> <span class="n">c</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">pointerColor</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Définit la forme du pointeur</span>
<span class="c">	 * @param str</span>
<span class="c">	 */</span>
	<span class="k">public</span> <span class="kt">void</span> <span class="nf">setPointerType</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">pointerType</span> <span class="o">=</span> <span class="n">str</span><span class="o">;</span>
	<span class="o">}</span>	
		
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h3>Fenetre.java</h3><br>
 <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188</pre></td><td class="code"><div class="syntax"><pre><span class="k">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ItemEvent</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.ItemListener</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.KeyEvent</span><span class="o">;</span>
 
<span class="k">import</span> <span class="nn">javax.swing.ImageIcon</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JMenu</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JMenuBar</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JMenuItem</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.JToolBar</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">javax.swing.KeyStroke</span><span class="o">;</span>
 
 
<span class="k">public</span> <span class="k">class</span> <span class="nc">Fenetre</span> <span class="k">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
 
	<span class="c">//**************************************</span>
	<span class="c">//		         LE MENU </span>
	<span class="c">//**************************************</span>
	<span class="k">private</span> <span class="n">JMenuBar</span> <span class="n">menuBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuBar</span><span class="o">();</span>
	<span class="n">JMenu</span> 	<span class="n">fichier</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Fichier"</span><span class="o">),</span>
			<span class="n">edition</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Edition"</span><span class="o">),</span>
			<span class="n">forme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Forme du pointeur"</span><span class="o">),</span>
			<span class="n">couleur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Couleur du pointeur"</span><span class="o">);</span>
	
	<span class="n">JMenuItem</span> 	<span class="n">nouveau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Effacer"</span><span class="o">),</span>
				<span class="n">quitter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Quitter"</span><span class="o">),</span>
				<span class="n">rond</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Rond"</span><span class="o">),</span>
				<span class="n">carre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Carré"</span><span class="o">),</span>
				<span class="n">bleu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Bleu"</span><span class="o">),</span>
				<span class="n">rouge</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Rouge"</span><span class="o">),</span>
				<span class="n">vert</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Vert"</span><span class="o">);</span>
	
	<span class="c">//****************************************</span>
	<span class="c">//			LA BARRE D'OUTILS</span>
	<span class="c">//****************************************</span>
	
	<span class="n">JToolBar</span> <span class="n">toolBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JToolBar</span><span class="o">();</span>
	
	<span class="n">JButton</span> <span class="n">square</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/carré.jpg"</span><span class="o">)),</span>
			<span class="n">circle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/rond.jpg"</span><span class="o">)),</span>
			<span class="n">red</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/rouge.jpg"</span><span class="o">)),</span>
			<span class="n">green</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/vert.jpg"</span><span class="o">)),</span>
			<span class="n">blue</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/bleu.jpg"</span><span class="o">));</span>
	
	<span class="c">//***************************************</span>
	<span class="c">//			LES ÉCOUTEURS</span>
	<span class="c">//***************************************</span>
	<span class="k">private</span> <span class="n">FormeListener</span> <span class="n">fListener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormeListener</span><span class="o">();</span>
	<span class="k">private</span> <span class="n">CouleurListener</span> <span class="n">cListener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CouleurListener</span><span class="o">();</span>
	
	<span class="c">//Notre zone de dessin</span>
	<span class="k">private</span> <span class="n">DrawPanel</span> <span class="n">drawPanel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DrawPanel</span><span class="o">();</span>
	
	<span class="k">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">700</span><span class="o">,</span> <span class="mi">500</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		
		<span class="c">//On initialise le menu</span>
		<span class="k">this</span><span class="o">.</span><span class="na">initMenu</span><span class="o">();</span>
		<span class="c">//Idem pour la barre d'outils</span>
		<span class="k">this</span><span class="o">.</span><span class="na">initToolBar</span><span class="o">();</span>
		<span class="c">//On positionne notre zone de dessin</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">drawPanel</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>		
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Initialise le menu</span>
<span class="c">	 */</span>
	<span class="k">private</span> <span class="kt">void</span> <span class="nf">initMenu</span><span class="o">(){</span>
		<span class="n">nouveau</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">drawPanel</span><span class="o">.</span><span class="na">erase</span><span class="o">();</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		
		<span class="n">nouveau</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_N</span><span class="o">,</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span><span class="o">));</span>
		
		<span class="n">quitter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		<span class="n">quitter</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_W</span><span class="o">,</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span><span class="o">));</span>
		
		<span class="n">fichier</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">nouveau</span><span class="o">);</span>
		<span class="n">fichier</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
		<span class="n">fichier</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">quitter</span><span class="o">);</span>
		<span class="n">fichier</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'F'</span><span class="o">);</span>
		
		<span class="n">carre</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
		<span class="n">rond</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
		<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
		<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>
		
		<span class="n">rouge</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">cListener</span><span class="o">);</span>
		<span class="n">vert</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">cListener</span><span class="o">);</span>
		<span class="n">bleu</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">cListener</span><span class="o">);</span>
		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rouge</span><span class="o">);</span>
		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">vert</span><span class="o">);</span>
		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bleu</span><span class="o">);</span>
		
		<span class="n">edition</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'E'</span><span class="o">);</span>
		<span class="n">edition</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">forme</span><span class="o">);</span>
		<span class="n">edition</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
		<span class="n">edition</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">couleur</span><span class="o">);</span>
		
		<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">fichier</span><span class="o">);</span>
		<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">edition</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setJMenuBar</span><span class="o">(</span><span class="n">menuBar</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Initialise l barre d'outils</span>
<span class="c">	 */</span>
	<span class="k">private</span> <span class="kt">void</span> <span class="nf">initToolBar</span><span class="o">(){</span>
		
		<span class="n">JPanel</span> <span class="n">panneau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">square</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
		<span class="n">circle</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
		<span class="n">red</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">cListener</span><span class="o">);</span>
		<span class="n">green</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">cListener</span><span class="o">);</span>
		<span class="n">blue</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">cListener</span><span class="o">);</span>
		
		<span class="n">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">square</span><span class="o">);</span>
		<span class="n">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">circle</span><span class="o">);</span>
		
		<span class="n">toolBar</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
		<span class="n">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">red</span><span class="o">);</span>
		<span class="n">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">blue</span><span class="o">);</span>
		<span class="n">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">green</span><span class="o">);</span>
						
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">toolBar</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
	<span class="o">}</span>
	
	
	<span class="c">//ÉCOUTEUR POUR LE CHANGEMENT DE FORME</span>
	<span class="c">//************************************</span>
	<span class="k">class</span> <span class="nc">FormeListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">().</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"javax.swing.JMenuItem"</span><span class="o">)){</span>
				<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()==</span><span class="n">carre</span><span class="o">)</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerType</span><span class="o">(</span><span class="s">"SQUARE"</span><span class="o">);</span>
				<span class="k">else</span> <span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerType</span><span class="o">(</span><span class="s">"CIRCLE"</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="k">else</span><span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()==</span><span class="n">square</span><span class="o">)</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerType</span><span class="o">(</span><span class="s">"SQUARE"</span><span class="o">);</span>
				<span class="k">else</span> <span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerType</span><span class="o">(</span><span class="s">"CIRCLE"</span><span class="o">);</span>				
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	

	<span class="c">//ÉCOUTEUR POUR LE CHANGEMENT DE COULEUR</span>
	<span class="c">//**************************************</span>
	<span class="k">class</span> <span class="nc">CouleurListener</span> <span class="k">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="k">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">().</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>
			<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">().</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"javax.swing.JMenuItem"</span><span class="o">)){</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"OK !"</span><span class="o">);</span>
				<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()==</span><span class="n">vert</span><span class="o">)</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">);</span>
				<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()==</span><span class="n">bleu</span><span class="o">)</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
				<span class="k">else</span> <span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="k">else</span><span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()==</span><span class="n">green</span><span class="o">)</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">);</span>
				<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()==</span><span class="n">blue</span><span class="o">)</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
				<span class="k">else</span> <span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>				
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	
	<span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
		
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
</div></div><br>
<br>
Vous avez pu voir que c'est un code assez simple. Il n'y a rien de difficile et surtout, il a le mérite de vous faire travailler un peu tout ce que vous avez vu jusqu'ici...<br>
<br>
Comme je vous l'ai dit dans l'introduction, ce code n'est pas parfait et il n'avait pas vocation à l'être... Je sais que vous êtes assez calés en Java pour avoir ajouté plus de fonctionnalités que moi sur ce TP. Mon code est une solution, ET NON PAS LA SOLUTION. <img src="./java_files/clin.png" alt=";)" class="smilies"> 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_10597">Améliorations possibles</h2>
		<div class="ss_part_texte">
		Voici ce que vous pouvez faire afin de rendre cette application plus attractive : <br>
<ul>
<li>permettre de changer la taille du pinceau ;</li>
<li>avoir une plus grande palette de couleurs ;</li>
<li>avoir des pinceaux supplémentaires ;</li>
<li>créer une gomme ;</li>
<li>...</li>
</ul><br>
<br>
Vous voyez que ce ne sont pas les idées qui manquent...<br>
Vous pouvez essayer de faire ce TP avec ces suppléments. Prenez ça comme une version plus difficile du TP, et encore...<br>
<br>
Bon. Nous sommes à la fin de ce TP. Retour au tuto.
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Même s'il n'est pas parfait, ce TP était tout de même marrant à faire... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Bon, la récréation est finie.<br>
Je sais que certains Zér0s ont une envie folle de créer des menus comme "<strong><span class="arial">Enregistrer</span></strong>" ou "<strong><span class="arial">Enregistrer sous...</span></strong>".<br>
<br>
Mais, avant d'en arriver là, nous allons devoir aborder <strong><span class="orange">Les flux d'entrée / de sortie</span></strong> !
	</div>
	
	<hr>
	<h1 id="chap_65524">Les flux d'entrées / sorties (1/2)</h1>
	<div id="chap_intro">
	Je vous préviens tout de suite, ce chapitre sera certainement le plus difficile de tous. Déjà, parce que vous allez voir beaucoup de nouvelles choses, mais surtout parce que la notion de fichier et de son traitement n'est pas évidente au premier abord.<br>
<br>
Ne vous inquiétez pas trop tout de même : je vais tenter de vous expliquer tout cela dans le détail, mais là, je ne vous cache pas qu'il faudra de la pratique pour tout assimiler...<br>
J'espère que le fait de découper cette partie en deux vous facilitera le travail.  <img src="./java_files/clin.png" alt=";)" class="smilies"> <br>
<br>
Alors, pourquoi utiliser les entrées / sorties ?<br>
Tout simplement parce qu'il peut être utile de sauvegarder des données, traitées par votre programme, afin de les réutiliser !<br>
<br>
<div class="rmq information">Je tiens à signaler que je ne vais pas trop approfondir le sujet. Sinon il faudrait tout une partie rien que les différents type de fichier (.zip, .properties...). Et je tiens à dire aux puristes que je ne ferai que mettre en garde contre les exceptions que la lecture ou l'écriture dans des fichiers peut engendrer !</div>
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65523">Les flux : qu'est-ce donc ?</h2>
		<div class="ss_part_texte">
		Avant de nous lancer dans la programmation avec des fichiers, nous devons voir ce que sont les entrées / sorties, ou communément ce qui est appelé les flux d'entrée / sortie.<br>
<br>
Une entrée / sortie en Java consiste en un échange de données entre le programme et une autre source, qui peut être : <br>
<ul>
<li>la mémoire ;</li>
<li>un fichier ;</li>
<li>le programme lui-même ;</li>
<li>...</li>
</ul> <br>
Pour réaliser cela, Java emploie ce qu'on appelle un <strong><span class="bleu">stream</span></strong> (qui signifie flux).<br>
Celui-ci joue le rôle de médiateur entre la source des données et sa destination.<br>
Nous allons voir que Java met à notre disposition toute une panoplie d'objets afin de pouvoir communiquer de la sorte. Tout comme l'objet <span class="courrier"><strong><span class="violet">Scanner</span></strong></span> que je ne vous présente plus maintenant, ces objets sont rangés dans un <strong><span class="courrier">package</span></strong> : <span class="courrier"><span class="violet"><strong>java.io</strong></span></span> (<span class="italique">io</span> signifie ici <span class="italique">in/out</span>, pour <span class="italique">entrée / sortie</span>). Il n'y a pas loin d'une cinquantaine de classes dans ce package... Heureusement, nous n'allons pas toutes les aborder. <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
<br>
Toute opération sur les entrées / sorties, en Java, doit suivre le schéma suivant :<br>
<ul>
<li>ouverture du flux ;</li>
<li>lecture du flux ;</li>
<li>fermeture du flux.</li>
</ul><br>
<br>
Je ne vous cache pas qu'il existe plusieurs objets différents qui ont tous des spécificités de travail avec les flux. Dans un souci de simplicité, nous n'aborderons que ceux qui traitent avec des fichiers (une liste des types d'objets est disponible en <a href="http://www.siteduzero.com/tuto-3-26778-1-annexe-a-les-objets-travaillant-avec-des-flux.html">annexe</a>).<br>
<br>
Sachez aussi que Java a décomposé les objets traitant des flux en deux catégories : <br>
<ul>
<li>les objets travaillant avec des flux d'entrée (in), <strong>lecture de flux</strong> ;</li>
<li>les objets travaillant avec des flux de sortie (out), <strong>écriture de flux</strong>.</li>
</ul><br>
<br>
Et comme je vous l'ai dit plus haut, il existe un objet Java pour chaque cas.<br>
Par exemple, il existe : <br>
<ul>
<li>l'objet <strong><span class="courrier"><span class="violet">FileInputStream</span></span></strong> pour ouvrir un flux vers un fichier en lecture ;</li>
<li>l'objet <strong><span class="courrier"><span class="violet">FileOutputStream</span></span></strong> pour ouvrir un flux vers un fichier en écriture ;</li>
<li>...</li>
</ul><br>
<br>
Ces objets peuvent prendre une chaîne de caractères, précisant le chemin et le nom du fichier à utiliser, en paramètres de leurs constructeurs ! Cependant, il peut être de bon ton d'utiliser un objet <strong><span class="courrier"><span class="violet">File</span></span></strong>. <br>
Celui-ci permet de faire des tests sur le fichier ou de récupérer des informations le concernant.<br>
<br>
C'est par là que nous commencerons.<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65530">L'objet File</h2>
		<div class="ss_part_texte">
		Avant de commencer, créez-vous un fichier, avec l'extension que vous voulez pour le moment, et enregistrez-le à la racine de votre projet Eclipse ! Personnellement, je me suis fait un fichier <strong>test.txt</strong> dont voici le contenu : <br>
<span class="code">Code : Autre - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
</pre></td><td class="code"><div class="syntax"><pre>Voici&nbsp;une&nbsp;ligne&nbsp;de&nbsp;test.
Voici&nbsp;une&nbsp;autre&nbsp;ligne&nbsp;de&nbsp;test.
Et&nbsp;comme&nbsp;je&nbsp;suis&nbsp;motivé,&nbsp;en&nbsp;voici&nbsp;une&nbsp;troisième&nbsp;!</pre></div></td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Dans votre projet Eclipse, vous pouvez faire un <strong><span class="arial">clic droit (sur le dossier de votre projet) / New / File</span></strong>. Vous pouvez saisir le nom de votre fichier et ensuite y écrire ! <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
<br>
Le nom du dossier contenant mon projet s'appelle "<strong><span class="italique">IO</span></strong>", mon fichier .txt est à cette adresse "<strong><span class="italique">D:\Mes documents\Codage\SDZ\Java-SDZ\IO\test.txt</span></strong>".<br>
Voyez :<br>
<div class="centre"><img src="./java_files/131361.jpg" alt="Image utilisateur"> <img src="./java_files/131362.jpg" alt="Image utilisateur"></div><br>
<br>
Maintenant, nous allons voir ce que sait faire l'objet <strong><span class="violet"><span class="courrier">File</span></span></strong>.<br>
Vous allez voir que cet objet est très simple à utiliser et que ses méthodes sont très explicites.<br>
<div class="rmq information">Pour commencer, nous allons retourner en mode console !</div><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Package à importer afin d'utiliser l'objet File</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Création de l'objet File</span>
		<span class="n">File</span> <span class="n">f</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"test.txt"</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Chemin absolu du fichier : "</span> <span class="o">+</span> <span class="n">f</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Nom du fichier : "</span> <span class="o">+</span> <span class="n">f</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Est-ce qu'il existe ? "</span> <span class="o">+</span> <span class="n">f</span><span class="o">.</span><span class="na">exists</span><span class="o">());</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Est-ce un répertoire ? "</span> <span class="o">+</span> <span class="n">f</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">());</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Est-ce un fichier ? "</span> <span class="o">+</span> <span class="n">f</span><span class="o">.</span><span class="na">isFile</span><span class="o">());</span>
		
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Affichage des lecteurs racines du PC : "</span><span class="o">);</span>
		<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">f</span><span class="o">.</span><span class="na">listRoots</span><span class="o">())</span>
		<span class="o">{</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>	
				<span class="c">//On parcourt la liste des fichiers et répertoires</span>
				<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
						<span class="c">//S'il s'agit d'un dossier, on ajoute un "/"</span>
						<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"\t\t"</span> <span class="o">+</span> <span class="o">((</span><span class="n">nom</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="o">?</span> <span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"/"</span> <span class="o">:</span> <span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()));</span>
						<span class="k">if</span><span class="o">((</span><span class="n">i</span><span class="o">%</span><span class="mi">4</span><span class="o">)</span> <span class="o">==</span> <span class="mi">0</span><span class="o">){</span>
							<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
						<span class="o">}</span>
						<span class="n">i</span><span class="o">++;</span>
					<span class="o">}</span>
					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NullPointerException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
				<span class="c">//L'instruction peut générer un NullPointerException s'il n'y a</span>
				<span class="c">//pas de sous-fichier ! !</span>
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Le résultat est bluffant : <br>
<br>
<div class="centre"><img src="./java_files/131366.jpg" alt="Image utilisateur"></div><br>
<br>
Vous conviendrez que les méthodes de cet objet peuvent s'avérer très utiles !<br>
Nous venons d'en essayer quelques-unes et nous avons même listé les sous-fichiers et sous-dossiers de nos lecteurs racines. <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
Vous pouvez aussi effacer le fichier grâce la méthode <span class="code2 java"><span class="n">delete</span><span class="o">()</span>
</span>, créer des répertoires avec la méthode <span class="code2 java"><span class="n">mkdir</span><span class="o">()</span>
</span> (le nom passé à l'objet ne devra pas avoir de ".")...<br>
<br>
Maintenant que vous en savez un peu plus sur cet objet, nous allons pouvoir commencer à travailler avec notre fichier créé précédemment ! 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65529">Les objets FileInputStream et FileOutputStream</h2>
		<div class="ss_part_texte">
		C'est par le biais de ces objets que nous allons pouvoir :<br>
<ul>
<li>lire dans un fichier ;	</li>
<li>écrire dans un fichier.</li>
</ul><br>
Ces classes héritent mutuellement des classes abstraites <strong><span class="violet"><span class="courrier">InputStream</span></span></strong> et <strong><span class="violet"><span class="courrier">OutputStream</span></span></strong>, présentes dans le package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">io</span>
</span>.<br>
<div class="rmq information">Ce sont deux des super-classes présentes dans ce package et une grande partie des objets traitant des flux d'entrée / sortie héritent de ces objets.</div><br>
<br>
Comme vous l'avez sans doute remarqué, il y a une hiérarchie de classe pour les traitements <strong><span class="arial">in</span></strong> et une autre pour les traitements <strong><span class="arial">out</span></strong>.<br>
Ne vous y trompez pas, les classes héritant de <strong><span class="violet"><span class="courrier">InputStream</span></span></strong> sont destinées à la lecture et les classes héritant de <strong><span class="violet"><span class="courrier">OutputStream</span></span></strong> se chargent de l'écriture !<br>
<div class="rmq question">C'est bizarre, j'aurais dit le contraire...</div><br>
Oui, comme beaucoup de gens au début. Mais c'est uniquement parce que vous situez les flux par rapport à vous, et non à votre programme !<br>
<br>
Lorsque ce dernier va lire des informations dans un fichier, ce sont des informations qu'il reçoit, et par conséquent, elles s'apparentent par conséquent à une entrée : <strong><span class="gros">in</span></strong>.<br>
<div class="rmq information">Sachez tout de même que, lorsque vous tapez au clavier, cette action est considérée comme un flux d'entrée !</div><br>
Au contraire, lorsque celui-ci va écrire dans un fichier (ou à l'écran, souvenez-vous de <span class="code2 java"><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span>
</span>), par exemple, il va faire sortir des informations : donc, pour lui, ce mouvement de données correspond à une sortie : <strong><span class="gros"><span class="arial">out</span></span></strong>. <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
Nous allons enfin commencer à travailler avec notre fichier...<br>
Le but est d'aller en lire le contenu et de le copier dans un autre, dont nous spécifierons le nom dans notre programme, par le biais d'un programme Java !<br>
<br>
Ce code est assez compliqué... Donc accrochez-vous à vos claviers !<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Package à importer afin d'utiliser les objets</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileNotFoundException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Nous déclarons nos objets en dehors du bloc try/catch</span>
        <span class="n">FileInputStream</span> <span class="n">fis</span><span class="o">;</span>
        <span class="n">FileOutputStream</span> <span class="n">fos</span><span class="o">;</span>
        
        <span class="k">try</span> <span class="o">{</span>
                <span class="c">//On instancie nos objets. </span>
        	<span class="c">//fis va lire le fichier et </span>
        	<span class="c">//fos va écrire dans le nouveau !</span>
                <span class="n">fis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"test.txt"</span><span class="o">));</span>
                <span class="n">fos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"test2.txt"</span><span class="o">));</span>

                <span class="c">//On créer un tableau de byte </span>
                <span class="c">//pour dire de combien en combien on va lire les données</span>
                <span class="kt">byte</span><span class="o">[]</span> <span class="n">buf</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">8</span><span class="o">];</span>
                
                <span class="c">//On crée une variable de type int </span>
                <span class="c">//pour affecter le résultat de la lecture </span>
                <span class="c">//retourne -1 quand c'est fini</span>
                <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                
                <span class="c">//Tant que l'affectation dans la variable est possible, on boucle.</span>
                <span class="c">//Lorsque le fichier est terminé, l'affectation n'est plus possible ! </span>
                <span class="c">//Donc on sort de la boucle.</span>
                <span class="k">while</span><span class="o">((</span><span class="n">n</span> <span class="o">=</span> <span class="n">fis</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buf</span><span class="o">))</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">)</span>
                <span class="o">{</span>
                        <span class="c">//On écrit dans notre deuxième fichier</span>
                		<span class="c">//avec l'objet adéquat </span>
                        <span class="n">fos</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">buf</span><span class="o">);</span>       
                        <span class="c">//On affiche ce qu'a lu notre boucle</span>
                        <span class="c">//au format byte et au format char</span>
                        <span class="k">for</span><span class="o">(</span><span class="kt">byte</span> <span class="n">bit</span> <span class="o">:</span> <span class="n">buf</span><span class="o">)</span>
                        	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"\t"</span> <span class="o">+</span> <span class="n">bit</span> <span class="o">+</span> <span class="s">"("</span> <span class="o">+</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span><span class="n">bit</span> <span class="o">+</span> <span class="s">")"</span><span class="o">);</span>
                        
                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
                <span class="o">}</span>
                
                <span class="c">//On ferme nos flux de données</span>
                <span class="n">fis</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
                <span class="n">fos</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Copie terminée !"</span><span class="o">);</span>
                
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
    		<span class="c">//Cette exception est levée </span>
    		<span class="c">//si l'objet FileInputStream ne trouve aucun fichier</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        	<span class="c">//Celle-ci se produit lors d'une erreur</span>
        	<span class="c">//d'écriture ou  de lecture</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>     	
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq erreur">Pour que l'objet <strong><span class="courrier">FileInputStream</span></strong> fonctionne, le fichier DOIT exister ! Sinon l'exception <strong><span class="courrier">FileNotFoundException</span></strong> est levée.<br>
<strong>Par contre, si vous ouvrez un flux en écriture (<span class="courrier">FileOutputStream</span>) vers un fichier inexistant, celui-ci sera créé AUTOMATIQUEMENT ! </strong></div><br>
<br>
<div class="rmq information">Notez bien les imports pour pouvoir utiliser ces objets ! Mais comme vous le savez déjà, vous pouvez taper votre code et ensuite faire "<strong><span class="italique">control + shift + O</span></strong>" pour faire les imports automatiques.</div><br>
<br>
À l'exécution de ce code, vous pouvez voir que le fichier "<strong><span class="arial">test2.txt</span></strong>" a bien été créé et qu'il contient exactement la même chose que "<strong><span class="arial">test.txt</span></strong>" !<br>
<br>
De plus, j'ai ajouté dans la console les données que votre programme va utiliser (lecture et écriture).<br>
Voici le résultat de ce code : <br>
<br>
<div class="centre"><img src="./java_files/131390.jpg" alt="Image utilisateur"></div><br>
<br>
Les objets <strong><span class="courrier"><span class="violet">FileInputStream</span></span></strong> et <strong><span class="courrier"><span class="violet">FileOutputStream</span></span></strong> sont assez rudimentaires car ils travaillent avec un certain nombre d'octets à lire. Ceci explique pourquoi ma condition de boucle était si tordue...<br>
<br>
<div class="rmq question">Justement, tu ne pourrais pas nous expliquer un peu plus...</div><br>
Mais bien sûr, je n'allais pas vous laisser comme ça... <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
<strong><span class="souligne">Voici un rappel important.</span></strong><br>
Lorsque vous voyez des caractères dans un fichier ou sur votre écran, ceux-ci ne veulent pas dire grand-chose pour votre PC, car lui, il ne comprend que le binaire ! Vous savez, les suites de 0 et de 1...<br>
Donc, afin de pouvoir afficher et travailler avec des caractères, un système d'encodage a été mis au point (qui a fort évolué d'ailleurs) !<br>
<br>
Sachez qu'à chaque caractère que vous saisissez ou que vous lisez dans un fichier, correspond à un code binaire et ce code binaire correspond à un code décimal : voici <a href="http://www.table-ascii.com/">la table de jeu de caractères</a>. <br>
<br>
Cependant, au début, seuls les caractères de a-z, de A-Z et les chiffres de 0-9 (127 premiers caractères de la table du lien ci-dessus) étaient codés (codage <a href="http://unicode.org/standard/translations/french.html">UNICODE 1</a>) correspondant aux caractères se trouvant dans la langue anglaise mais, rapidement, ce codage s'est avéré trop limité pour des langues ayant des caractères accentués (français, espagnol...). Un jeu de codage étendu a été mis en place afin de pallier ce problème !<br>
<br>
Chaque code binaire UNICODE 1 est codé sur 8 bits, soit 1 octet. Une variable de type <strong><span class="violet"><span class="courrier">byte</span></span></strong>, en Java, correspond en fait à 1 octet et non 1 bit !<br>
<br>
Les objets que nous venons d'utiliser emploient la première version d'UNICODE 1 qui ne comprend pas les caractères accentués, c'est pour cela que les caractères de ce type, dans notre fichier, ont un code décimal négatif !<br>
Lorsque nous définissons un tableau de <strong><span class="violet"><span class="courrier">byte</span></span></strong> à 8 entrées, cela signifie que nous allons lire 8 octets à la fois.<br>
<br>
Vous pouvez voir qu'à chaque tour de boucle, notre tableau de <strong><span class="violet"><span class="courrier">byte</span></span></strong> contient huit valeurs correspondant chacune à un code décimal qui, lui, correspond à un caractère (valeur entre parenthèses à côté du code décimal). <br>
<br>
Vous pouvez voir que les codes décimaux négatifs sont inconnus car ils sont représentés par "<strong><span class="arial">?</span></strong>" ; de plus, il y a des caractères invisibles dans notre fichier :<br>
<ul>
<li>les espaces : SP pour SPace, code décimal 32 ;</li>
<li>les sauts de lignes : LF pour Line Feed, code décimal 13 ;</li>
<li>les retours chariot : CR pour Cariage Return, code décimal 10.</li>
</ul><br>
<br>
Il en existe d'autres ; en fait, les 32 premiers caractères du tableau des caractères sont invisibles ! <img src="./java_files/smile.png" alt=":)" class="smilies"> <br>
<br>
<div class="rmq question">On comprend mieux... </div><br>
Vous voyez que le traitement des flux suivent une logique et une syntaxe précises !<br>
Lorsque nous avons copié notre fichier, nous avons récupéré un certain nombre d'octets dans un flux entrant que nous avons passé à un flux sortant.<br>
À chaque tour de boucle, le flux entrant est lu en suivant tandis que le flux sortant, lui, écrit dans un fichier en suivant.<br>
<br>
Cependant, il existe à présent des objets beaucoup plus faciles à utiliser, mais ceux-ci travaillent tout de même avec les deux objets que nous venons de voir !:D<br>
Ces objets font aussi partie de la hiérarchie citée précédemment... Seulement, il existe une super-classe définissant ceux-ci. <br>
<br>
Continuons avec les flux filtrés.<br>
<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65528">Les flux filtrés : les classes FilterInputStream et FilterOutputStream</h2>
		<div class="ss_part_texte">
		Ces deux classes sont en fait des classes abstraites. Elles définissent un comportement global pour ces classes filles qui, elles, permettent d'ajouter des fonctionnalités aux flux d'entrée / sortie !<br>
<br>
Voici un diagramme de classe représentant la hiérarchie de classes : <br>
<br>
<div class="centre"><img src="./java_files/131427.png" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir qu'il y a quatre classes filles héritant de <strong><span class="violet"><span class="courrier">FilterInputStream</span></span></strong> (idem pour <strong><span class="violet"><span class="courrier">FilterOutputStream</span></span></strong>) : <br>
<ul>
<li><strong><span class="violet"><span class="courrier">DataInputStream </span></span></strong>: offre la possibilité de lire directement des types primitifs (<strong><span class="violet"><span class="courrier">double, char, int</span></span></strong>), ceci grâce à des méthodes comme <span class="code2 java"><span class="n">readDouble</span><span class="o">()</span>
</span>, <span class="code2 java"><span class="n">readInt</span><span class="o">()</span>
</span>...</li>
<li><strong><span class="violet"><span class="courrier">BufferedInputStream </span></span></strong>: cette classe permet d'avoir un tampon à disposition dans la lecture du flux. En gros, les données vont tout d'abord remplir le tampon et, dès que celui-ci est rempli, le programme a accès aux données ;</li>
<li><strong><span class="violet"><span class="courrier">PushbackInputStream </span></span></strong>: permet de remettre un octet déjà lu dans le flux entrant ;</li>
<li><strong><span class="violet"><span class="courrier">LineNumberInputStream </span></span></strong>: cette classe offre la possibilité de récupérer le numéro de ligne lue à un instant T.</li>
</ul><br>
<br>
<div class="rmq information">Les classes dérivant de <strong><span class="violet"><span class="courrier">FilterOutputStream</span></span></strong> ont les mêmes fonctionnalités mais pour l'écriture !</div><br>
<br>
Ces classes prennent une instance dérivant des classes <strong><span class="violet"><span class="courrier">InputStream </span></span></strong>(pour les classes héritant de <strong><span class="violet"><span class="courrier">FilterInputStream</span></span></strong>) ou de <strong><span class="violet"><span class="courrier">OutputStream</span></span></strong> (pour les classes héritant de <strong><span class="violet"><span class="courrier">FilterOutputStream</span></span></strong>)...<br>
<br>
Vous pouvez cumuler les filtres, c'est-à-dire que, vu que ces classes acceptent une instance de leur super-classe, ils acceptent une instance de leur cousin ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
Donc, vous pouvez avoir des choses du genre : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="syntax"><pre><span class="n">FileInputStream</span> <span class="n">fis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"toto.txt"</span><span class="o">));</span>
<span class="n">DataInputStream</span> <span class="n">dis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DataInputStream</span><span class="o">(</span><span class="n">fis</span><span class="o">);</span>
<span class="n">BufferedInputStream</span> <span class="n">bis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span><span class="n">dis</span><span class="o">);</span>

<span class="c">//Ou en condensé : </span>
<span class="c">//BufferedInputStream  bis = new BufferredInputStream(new DataInputStream(FileInputStream(new File("toto.txt"))));</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Afin de vous rendre compte des améliorations apportées par ces classes, nous allons lire un  ÉNORME fichier texte (3.6Mo) de façon conventionnelle avec l'objet vu précédemment et avec un buffer !<br>
Pour obtenir cet énorme fichier, rendez-vous à <a href="http://www.pallier.org/ressources/dicofr/liste.de.mots.francais.frgut.txt">cette adresse</a>. Faites un <strong><span class="arial">clic droit / Enregistrer sous...</span></strong> et remplacez le contenu de votre fichier test.txt par le contenu de ce fichier.<br>
Maintenant, voici un code qui permet de tester le temps d'exécution de la lecture : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Package à importer afin d'utiliser l'objet File</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.DataInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileNotFoundException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Nous déclarons nos objets en dehors du bloc try/catch</span>
        <span class="n">FileInputStream</span> <span class="n">fis</span><span class="o">;</span>
        <span class="n">BufferedInputStream</span> <span class="n">bis</span><span class="o">;</span>
        
        <span class="k">try</span> <span class="o">{</span>
        	<span class="n">fis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"test.txt"</span><span class="o">));</span>
                <span class="n">bis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"test.txt"</span><span class="o">)));</span>
                <span class="kt">byte</span><span class="o">[]</span> <span class="n">buf</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">8</span><span class="o">];</span>
                
                <span class="c">//On récupère le temps du système</span>
                <span class="kt">long</span> <span class="n">startTime</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
                <span class="c">//Inutile de faire des traitements dans notre boucle</span>
                <span class="k">while</span><span class="o">(</span><span class="n">fis</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buf</span><span class="o">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">);</span>
                <span class="c">//On affiche le temps d'exécution</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Temps de lecture avec FileInputStream : "</span> <span class="o">+</span> <span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">));</span>
                
                <span class="c">//On réinitialise                </span>
                <span class="n">startTime</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
                <span class="c">//Inutile de faire des traitements dans notre boucle</span>
                <span class="k">while</span><span class="o">(</span><span class="n">bis</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buf</span><span class="o">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">);</span>
                <span class="c">//On réaffiche</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Temps de lecture avec BufferedInputStream : "</span> <span class="o">+</span> <span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">));</span>
                
                <span class="c">//On ferme nos flux de données</span>
                <span class="n">fis</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
                <span class="n">bis</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
                
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>     	
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat est bluffant : <br>
<br>
<div class="centre"><img src="./java_files/131408.jpg" alt="Image utilisateur"></div><br>
<br>
La différence de temps est ÉNORME ! 1.578 secondes pour la première méthode et 0.094 seconde pour la deuxième ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
Vous conviendrez que l'utilisation d'un buffer permet une nette amélioration des performances de votre code !<br>
Je vous conseille de faire le test pour l'écriture. D'ailleurs, nous allons le faire de ce pas : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Package à importer afin d'utiliser l'objet File</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileNotFoundException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Nous déclarons nos objets en dehors du bloc try/catch</span>
        <span class="n">FileInputStream</span> <span class="n">fis</span><span class="o">;</span>
        <span class="n">FileOutputStream</span> <span class="n">fos</span><span class="o">;</span>
        <span class="n">BufferedInputStream</span> <span class="n">bis</span><span class="o">;</span>
        <span class="n">BufferedOutputStream</span> <span class="n">bos</span><span class="o">;</span> 
        
        <span class="k">try</span> <span class="o">{</span>
        	<span class="n">fis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"test.txt"</span><span class="o">));</span>
        	<span class="n">fos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"test2.txt"</span><span class="o">));</span>
        	<span class="n">bis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"test.txt"</span><span class="o">)));</span>
                <span class="n">bos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"test3.txt"</span><span class="o">)));</span>
                <span class="kt">byte</span><span class="o">[]</span> <span class="n">buf</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">8</span><span class="o">];</span>
                
                <span class="c">//On récupère le temps du system</span>
                <span class="kt">long</span> <span class="n">startTime</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
                
                <span class="k">while</span><span class="o">(</span><span class="n">fis</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buf</span><span class="o">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">){</span>
                	<span class="n">fos</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">buf</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="c">//On affiche le temps d'exécution</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Temps de lecture + écriture avec FileInputStream et FileOutputStream : "</span> <span class="o">+</span> <span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">));</span>
                
                <span class="c">//On réinitialise                </span>
                <span class="n">startTime</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>

                <span class="k">while</span><span class="o">(</span><span class="n">bis</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buf</span><span class="o">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">){</span>
                	<span class="n">bos</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">buf</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="c">//On réaffiche</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Temps de lecture + écriture avec BufferedInputStream et BufferedOutputStream : "</span> <span class="o">+</span> <span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">));</span>
                
                <span class="c">//On ferme nos flux de données</span>
                <span class="n">fis</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
                <span class="n">bis</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
                
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>     	
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
Là, la différence de performance devient démentiel :<br>
<br>
<div class="centre"><img src="./java_files/131409.jpg" alt="Image utilisateur"></div><br>
<br>
<strong><span class="vertf">7 secondes en temps normal et 0.1 seconde avec un buffer !</span></strong> <br>
Si avec ça vous n'êtes pas convaincus de l'utilité des buffers !<br>
<br>
Je ne vais pas passer en revue tous les objets cités un peu plus haut, mais vu que vous risquez d'utiliser les objets <strong><span class="violet"><span class="courrier">Data(Input/Output)Stream</span></span></strong>, nous allons les aborder rapidement, puisqu'ils s'utilisent comme les objets <strong><span class="violet"><span class="courrier">BufferedInputStream</span></span></strong>. Je vous ai dit plus haut que ceux-ci ont des méthodes de lecture pour chaque type primitif : cependant, il faut que le fichier soit généré par le biais d'un <strong><span class="violet"><span class="courrier">DataOutputStream</span></span></strong> pour que les méthodes fonctionnent correctement.<br>
<br>
Nous allons donc créer un fichier de toute pièce pour le lire par la suite.<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Package à importer afin d'utiliser l'objet File</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.DataInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.DataOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileNotFoundException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Nous déclarons nos objets en dehors du bloc try/catch</span>
        <span class="n">DataInputStream</span> <span class="n">dis</span><span class="o">;</span>
        <span class="n">DataOutputStream</span> <span class="n">dos</span><span class="o">;</span>
        <span class="k">try</span> <span class="o">{</span>
        	<span class="n">dos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DataOutputStream</span><span class="o">(</span>
        				<span class="k">new</span> <span class="nf">BufferedOutputStream</span><span class="o">(</span>
        						<span class="k">new</span> <span class="nf">FileOutputStream</span><span class="o">(</span>
        								<span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="s">"sdz.txt"</span><span class="o">))));</span>
        	
        	<span class="c">//Nous allons écrire chaque primitif</span>
        	<span class="n">dos</span><span class="o">.</span><span class="na">writeBoolean</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        	<span class="n">dos</span><span class="o">.</span><span class="na">writeByte</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
        	<span class="n">dos</span><span class="o">.</span><span class="na">writeChar</span><span class="o">(</span><span class="sc">'C'</span><span class="o">);</span>
        	<span class="n">dos</span><span class="o">.</span><span class="na">writeDouble</span><span class="o">(</span><span class="mf">12.05</span><span class="o">);</span>
        	<span class="n">dos</span><span class="o">.</span><span class="na">writeFloat</span><span class="o">(</span><span class="mf">100.52f</span><span class="o">);</span>
        	<span class="n">dos</span><span class="o">.</span><span class="na">writeInt</span><span class="o">(</span><span class="mi">1024</span><span class="o">);</span>
        	<span class="n">dos</span><span class="o">.</span><span class="na">writeLong</span><span class="o">(</span><span class="mi">123456789654321L</span><span class="o">);</span>
        	<span class="n">dos</span><span class="o">.</span><span class="na">writeShort</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
        	<span class="n">dos</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        	
        	<span class="c">//On récupère maintenant les données !</span>
        	<span class="n">dis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DataInputStream</span><span class="o">(</span>
    				<span class="k">new</span> <span class="nf">BufferedInputStream</span><span class="o">(</span>
    						<span class="k">new</span> <span class="nf">FileInputStream</span><span class="o">(</span>
    								<span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="s">"sdz.txt"</span><span class="o">))));</span>
            
        	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">dis</span><span class="o">.</span><span class="na">readBoolean</span><span class="o">());</span>
        	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">dis</span><span class="o">.</span><span class="na">readByte</span><span class="o">());</span>
        	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">dis</span><span class="o">.</span><span class="na">readChar</span><span class="o">());</span>
        	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">dis</span><span class="o">.</span><span class="na">readDouble</span><span class="o">());</span>
        	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">dis</span><span class="o">.</span><span class="na">readFloat</span><span class="o">());</span>
        	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">dis</span><span class="o">.</span><span class="na">readInt</span><span class="o">());</span>
        	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">dis</span><span class="o">.</span><span class="na">readLong</span><span class="o">());</span>
        	<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">dis</span><span class="o">.</span><span class="na">readShort</span><span class="o">());</span>
        	
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>     	
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat<br>
<br>
<div class="centre"><img src="./java_files/131413.jpg" alt="Image utilisateur"></div><br>
<br>
Le code est simple et clair et concis...<br>
Vous avez pu constater que ce type d'objet ne manque pas de fonctionnalités ! Mais vous savez, jusqu'ici, nous ne travaillions qu'avec des types primitifs, mais vous pouvez aussi travailler avec des objets ! <img src="./java_files/waw.png" alt=":waw:" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65527">La sérialisation : les objets ObjectInputStream et ObjectOutputStream</h2>
		<div class="ss_part_texte">
		<div class="rmq question">La quoi ?</div><br>
La sérialisation. C'est le nom que porte l'action de sauvegarder des objets !<br>
Cela fait quelques temps déjà que vous utilisez des objets et, j'en suis sûr, vous auriez aimé que certains d'entre eux aient pu être réutilisés ensuite... <br>
<br>
Le moment est venu de sauver vos objets d'une mort certaine ! <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Pour commencer, nous allons voir comment sérialiser un objet de notre composition.<br>
Voici la classe avec laquelle nous allons travailler : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></div></td><td class="code"><div class="syntax"><pre><span class="c1">//package à importer</span>
<span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Game</span> <span class="kd">implements</span> <span class="n">Serializable</span><span class="o">{</span>
	<span class="kd">private</span> <span class="n">String</span> <span class="n">nom</span><span class="o">,</span> <span class="n">style</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kt">double</span> <span class="n">prix</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Game</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">,</span> <span class="n">String</span> <span class="n">style</span><span class="o">,</span> <span class="kt">double</span> <span class="n">prix</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">nom</span> <span class="o">=</span> <span class="n">nom</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">style</span> <span class="o">=</span> <span class="n">style</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">prix</span> <span class="o">=</span> <span class="n">prix</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">(){</span>
		<span class="k">return</span> 	<span class="s">"Nom du jeu : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">nom</span> <span class="o">+</span> 
				<span class="s">"\nStyle de jeu : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">style</span> <span class="o">+</span> 
				<span class="s">"\nPrix du jeu : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">prix</span> <span class="o">+</span> 
				<span class="s">"\n"</span><span class="o">;</span>
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq question">Qu'est-ce que c'est que cette interface ? Tu n'as même pas implémenté de méthode !</div><br>
En fait, cette interface n'a pas de méthode à redéfinir ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
L'interface <strong><span class="violet"><span class="courrier">Serializable </span></span></strong>est ce qu'on appelle une <strong><span class="vertf">interface marqueur !</span></strong><br>
Juste en implémentant cette interface dans un objet, Java sait que cet objet peut être sérialisé et j'irais même plus loin : <strong><span class="rouge">si vous n'implémentez pas cette interface dans vos objets, ceux-ci ne pourront pas être sérialisés !</span></strong> <br>
<div class="rmq information">Par contre, si une super-classe implémente l'interface <strong><span class="violet"><span class="courrier">Serializable</span></span></strong>, ses enfants seront considérés comme sérialisables !</div><br>
Vous savez quasiment tout...<br>
Maintenant, voilà comment vont se passer les choses : <br>
<ul>
<li>nous allons créer deux ou trois objets <strong><span class="courrier">Game</span></strong> ;</li>
<li>nous allons les sérialiser dans un fichier de notre choix ;</li>
<li>nous allons ensuite les dé-sérialiser afin de pouvoir les réutiliser.</li>
</ul><br>
<div class="rmq question">Nous allons donc pouvoir faire ceci grâce aux objets <strong><span class="violet"><span class="courrier">ObjectInputStream </span></span></strong>et <strong><span class="violet"><span class="courrier">ObjectOutputStream</span></span></strong> ?</div><br>
Tout à fait !<br>
Vous avez sûrement déjà deviné comment se servir de ces objets, mais nous allons tout de même travailler sur un exemple. D'ailleurs, le voici :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55</pre></div></td><td class="code"><div class="syntax"><pre><span class="c1">//Package à importer afin d'utiliser l'objet File</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.DataInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.DataOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileNotFoundException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.ObjectInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.ObjectOutputStream</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">//Nous déclarons nos objets en dehors du bloc try/catch</span>
        <span class="n">ObjectInputStream</span> <span class="n">ois</span><span class="o">;</span>
        <span class="n">ObjectOutputStream</span> <span class="n">oos</span><span class="o">;</span>
        <span class="k">try</span> <span class="o">{</span>
        	<span class="n">oos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectOutputStream</span><span class="o">(</span>
        				<span class="k">new</span> <span class="nf">BufferedOutputStream</span><span class="o">(</span>
        						<span class="k">new</span> <span class="nf">FileOutputStream</span><span class="o">(</span>
        								<span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="s">"game.txt"</span><span class="o">))));</span>
        	
        	<span class="c1">//Nous allons écrire chaque objet Game dans le fichier</span>
        	<span class="n">oos</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="k">new</span> <span class="n">Game</span><span class="o">(</span><span class="s">"Assassin Creed"</span><span class="o">,</span> <span class="s">"Aventure"</span><span class="o">,</span> <span class="mf">45.69</span><span class="o">));</span>
        	<span class="n">oos</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="k">new</span> <span class="n">Game</span><span class="o">(</span><span class="s">"Tomb Raider"</span><span class="o">,</span> <span class="s">"Plateforme"</span><span class="o">,</span> <span class="mf">23.45</span><span class="o">));</span>
        	<span class="n">oos</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="k">new</span> <span class="n">Game</span><span class="o">(</span><span class="s">"Tetris"</span><span class="o">,</span> <span class="s">"Stratégie"</span><span class="o">,</span> <span class="mf">2.50</span><span class="o">));</span>
        	<span class="c1">//NE PAS OUBLIER DE FERMER LE FLUX ! ! !</span>
        	<span class="n">oos</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        	
        	<span class="c1">//On récupère maintenant les données !</span>
        	<span class="n">ois</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectInputStream</span><span class="o">(</span>
    				<span class="k">new</span> <span class="nf">BufferedInputStream</span><span class="o">(</span>
    						<span class="k">new</span> <span class="nf">FileInputStream</span><span class="o">(</span>
    								<span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="s">"game.txt"</span><span class="o">))));</span>
            
        	<span class="k">try</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Affichage des jeux :"</span><span class="o">);</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"*************************\n"</span><span class="o">);</span>
        		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(((</span><span class="n">Game</span><span class="o">)</span><span class="n">ois</span><span class="o">.</span><span class="na">readObject</span><span class="o">()).</span><span class="na">toString</span><span class="o">());</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(((</span><span class="n">Game</span><span class="o">)</span><span class="n">ois</span><span class="o">.</span><span class="na">readObject</span><span class="o">()).</span><span class="na">toString</span><span class="o">());</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(((</span><span class="n">Game</span><span class="o">)</span><span class="n">ois</span><span class="o">.</span><span class="na">readObject</span><span class="o">()).</span><span class="na">toString</span><span class="o">());</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
			<span class="o">}</span>
			<span class="n">ois</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        	
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>     	
     <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq erreur">La dé-sérialisation d'objet peut engendrer une <strong><span class="courrier">ClassNotFoundException</span></strong> ! Pensez donc à capturer cette exception ! </div><br>
Et le résultat : <br>
<br>
<div class="centre"><img src="./java_files/131452.jpg" alt="Image utilisateur"></div><br>
<strong>VICTOIRE ! <br>
</strong>Nos objets sont enregistrés et nous avons réussi à ré-utiliser ceux-ci après enregistrement ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Ce qu'il se passe est simple : les données de vos objets sont enregistrés dans le fichier ; mais que se passerait-il si notre objet <strong><span class="violet"><span class="courrier">Game</span></span></strong> avait un autre objet de votre composition en son sein ?<br>
<br>
Voyons ça tout de suite. Créez la classe <strong><span class="violet"><span class="courrier">Notice</span></span></strong> comme suit : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Notice</span> <span class="o">{</span>
	<span class="kd">private</span> <span class="n">String</span> <span class="n">langue</span> <span class="o">;</span>
	<span class="kd">public</span> <span class="nf">Notice</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">langue</span> <span class="o">=</span> <span class="s">"Français"</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="nf">Notice</span><span class="o">(</span><span class="n">String</span> <span class="n">lang</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">langue</span> <span class="o">=</span> <span class="n">lang</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="s">"\t Langue de la notice : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">langue</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Nous allons maintenant implémenter une notice par défaut dans notre objet <strong><span class="violet"><span class="courrier">Game</span></span></strong>. Voici notre classe modifiée : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Game</span> <span class="kd">implements</span> <span class="n">Serializable</span><span class="o">{</span>
	<span class="kd">private</span> <span class="n">String</span> <span class="n">nom</span><span class="o">,</span> <span class="n">style</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kt">double</span> <span class="n">prix</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">Notice</span> <span class="n">notice</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Game</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">,</span> <span class="n">String</span> <span class="n">style</span><span class="o">,</span> <span class="kt">double</span> <span class="n">prix</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">nom</span> <span class="o">=</span> <span class="n">nom</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">style</span> <span class="o">=</span> <span class="n">style</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">prix</span> <span class="o">=</span> <span class="n">prix</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">notice</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Notice</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">(){</span>
		<span class="k">return</span> 	<span class="s">"Nom du jeu : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">nom</span> <span class="o">+</span> 
				<span class="s">"\nStyle de jeu : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">style</span> <span class="o">+</span> 
				<span class="s">"\nPrix du jeu : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">prix</span> <span class="o">+</span> 
				<span class="s">"\n"</span><span class="o">;</span>
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Réessayez votre code sauvegardant vos objets <strong><span class="violet"><span class="courrier">Game</span></span></strong>. Et voici le résultat : <br>
<br>
<div class="centre"><img src="./java_files/131464.jpg" alt="Image utilisateur"></div><br>
<br>
Eh oui, votre code ne compile plus ! Ceci pour une bonne raison : votre objet <strong><span class="violet"><span class="courrier">Notice </span></span></strong>n'est pas sérialisable !<br>
Une erreur de compilation est levée ! <br>
Maintenant, deux choix s'offrent à vous : <br>
<ul>
<li>soit vous faites en sorte de rendre votre objet sérialisable ;</li>
<li>soit vous spécifiez dans votre classe <strong><span class="violet"><span class="courrier">Game</span></span></strong> que la variable "<strong><span class="courrier">notice</span></strong>" n'a pas à être sérialisée !</li>
</ul><br>
<div class="rmq question">Pour la première option, c'est simple, il suffit d'implémenter l'interface sérialisable dans notre classe <strong><span class="violet"><span class="courrier">Notice</span></span></strong>.<br>
Par contre, on ne voit pas comment dire qu'un attribut n'a pas à être sérialisé... <img src="./java_files/unsure.gif" alt=":euh:" class="smilies"> </div><br>
Vous allez voir que c'est très simple, il suffit de déclarer votre variable : <strong><span class="violet"><span class="courrier">transient</span></span></strong>.<br>
<br>
Comme ceci : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Game</span> <span class="kd">implements</span> <span class="n">Serializable</span><span class="o">{</span>
	<span class="kd">private</span> <span class="n">String</span> <span class="n">nom</span><span class="o">,</span> <span class="n">style</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kt">double</span> <span class="n">prix</span><span class="o">;</span>
	<span class="c1">//Maintenant, cette variable ne sera pas sérialisée</span>
	<span class="c1">//Elle sera tout bonnement ignorée ! !</span>
	<span class="kd">private</span> <span class="kd">transient</span> <span class="n">Notice</span> <span class="n">notice</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Game</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">,</span> <span class="n">String</span> <span class="n">style</span><span class="o">,</span> <span class="kt">double</span> <span class="n">prix</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">nom</span> <span class="o">=</span> <span class="n">nom</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">style</span> <span class="o">=</span> <span class="n">style</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">prix</span> <span class="o">=</span> <span class="n">prix</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">notice</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Notice</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">(){</span>
		<span class="k">return</span> 	<span class="s">"Nom du jeu : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">nom</span> <span class="o">+</span> 
				<span class="s">"\nStyle de jeu : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">style</span> <span class="o">+</span> 
				<span class="s">"\nPrix du jeu : "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">prix</span> <span class="o">+</span>
				<span class="s">"\n"</span><span class="o">;</span>
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq erreur">Vous aurez sans doute remarqué que nous n'utilisons pas la variable <strong><span class="courrier">notice </span></strong>dans la méthode <span class="code2 java"><span class="n">toString</span><span class="o">()</span>
</span> de notre objet <strong><span class="violet"><span class="courrier">Game</span></span></strong>. <br>
Si vous faites ceci, que vous sérialisez puis dé-sérialisez vos objets, vous aurez une <strong><span class="courrier">NullPointerException </span></strong>à l'invocation de la dite méthode. <br>
Eh oui ! L'objet <strong><span class="violet"><span class="courrier">Notice</span></span></strong> est ignoré : il n'existe donc pas ! </div><br>
C'est simple, n'est-ce pas ?<br>
Pour ceux que la sérialisation XML intéresse, je vous propose d'aller faire un tour sur <a href="http://ydisanto.developpez.com/tutoriels/j2se/serialisation/partie2/">ce cours</a>. Il est très bien fait et vous apprendrez beaucoup de choses. <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
<br>
<br>
Ce que je vous propose maintenant, c'est d'appliquer cela avec un cas concret : nous allons sauvegarder les zolis dessins que nous pouvons faire sur notre ardoise mazique...<br>
<br>
Pour ceux qui n'auraient pas gardé le projet, je propose donc d'aller refaire un tour sur <a href="http://www.siteduzero.com/tuto-3-33867-1-tp-l-ardoise-mazique.html#ss_part_3">le TP en question</a>.<br>
<br>
<br>
<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65526">Cas pratique</h2>
		<div class="ss_part_texte">
		Vu que, dans ce projet, les dessins se font grâce à l'objet <strong><span class="violet"><span class="courrier">Point</span></span></strong>, c'est celui-ci que nous allons sérialiser !<br>
Je ne vais pas seulement vous proposer d'en sérialiser un seul, mais plusieurs et dans différents fichiers afin que vous puissiez réutiliser différents objets.<br>
<br>
Nous allons avoir besoin d'un objet très pratique pour réussir ceci : un <strong><span class="violet"><span class="courrier">JFileChooser</span></span></strong> !<br>
Cet objet affiche une mini-fenêtre demandant à l'utilisateur de choisir l'endroit où ouvrir ou sauvegarder des données ! Il possède aussi tout une batterie de méthodes très intéressante : <br>
<ul>
<li><span class="code2 java"><span class="n">showOpenDialog</span><span class="o">()</span>
</span> : affiche une fenêtre d'ouverture de fichier ;</li>
<li><span class="code2 java"><span class="n">showSaveDialog</span><span class="o">()</span>
</span> : ouvre une fenêtre de sauvegarde ;</li>
<li><span class="code2 java"><span class="n">getSelectedFile</span><span class="o">()</span>
</span> : retourne le fichier sélectionné par l'utilisateur ;</li>
<li><span class="code2 java"><span class="n">getSelectedFiles</span><span class="o">()</span>
</span> : retourne les fichiers sélectionnés par l'utilisateur. S'il y a plusieurs sélections... <img src="./java_files/hihi.png" alt="^^" class="smilies"></li>
<li>...</li>
</ul><br>
Grâce à tout ceci, vous pourrez enregistrer vos objets dans des fichiers.<br>
<div class="rmq attention">Vous devez savoir que l'objet <strong><span class="violet"><span class="courrier">JFileChooser</span></span></strong> est très laxiste en matière d'extension de fichier.<br>
Il ne connaît rien du contenu des fichiers qu'il traite... Donc, rien ne vous empêchera de sauvegarder vos fichiers avec l'extension <strong><span class="arial">.exe</span></strong> ou encore <strong><span class="arial">.java</span></strong> et de les relire ! </div><br>
<br>
Afin d'avoir une cohérence dans nos fichiers de sauvegarde, nous allons spécifier à notre <strong><span class="violet"><span class="courrier">JFileChooser</span></span></strong> qu'il ne devra sauvegarder et lire que des fichiers ayant une certaine extension !<br>
Pour faire ceci, nous devons créer une classe à part entière héritant de la classe <strong><span class="violet"><span class="courrier">FileFilter</span></span></strong> car celle-ci est une classe abstraite.<br>
<br>
Cette classe permet de redéfinir deux méthodes : <br>
<ul>
<li><span class="code2 java"><span class="n">accept</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">)</span>
</span> : retourne vrai si le fichier est accepté ;</li>
<li><span class="code2 java"><span class="n">getDescription</span><span class="o">()</span>
</span> : retourne la description de l'extension de fichier.</li>
</ul><br>
<br>
Voici donc la classe ZFileFilter que nous allons utiliser afin de créer des filtres pour nos fichiers : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.filechooser.FileFilter</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ZFileFilter</span> <span class="kd">extends</span> <span class="n">FileFilter</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">String</span> <span class="n">extension</span> <span class="o">=</span> <span class="s">".sdz"</span><span class="o">,</span> <span class="n">description</span> <span class="o">=</span> <span class="s">"Fichier Ardoise Mazique"</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">ZFileFilter</span><span class="o">(</span><span class="n">String</span> <span class="n">ext</span><span class="o">,</span> <span class="n">String</span> <span class="n">descrip</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">extension</span> <span class="o">=</span> <span class="n">ext</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">description</span> <span class="o">=</span> <span class="n">descrip</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">accept</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">){</span>
		<span class="k">return</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">()</span> <span class="o">||</span> <span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">endsWith</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">extension</span><span class="o">));</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="n">String</span> <span class="nf">getDescription</span><span class="o">(){</span>
		<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">extension</span> <span class="o">+</span> <span class="s">" - "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">description</span><span class="o">;</span>
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Maintenant nous pouvons créer des filtres ! <br>
Voici les codes source que vous devriez parfaitement comprendre vu qu'il n'y a pas beaucoup de nouveautés ! <br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<h4><span class="souligne">Point.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Point</span> <span class="kd">implements</span> <span class="n">Serializable</span><span class="o">{</span>

	<span class="c">//Couleur du point</span>
	<span class="kd">private</span> <span class="n">Color</span> <span class="n">color</span> <span class="o">=</span> <span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">;</span>
	<span class="c">//Taille</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
	<span class="c">//position sur l'axe X : initialisé au dehors du conteneur</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="o">;</span>
	<span class="c">//Position sur l'axe Y : initialisé au dehors du conteneur</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="o">;</span>
	<span class="c">//Type de point</span>
	<span class="kd">private</span> <span class="n">String</span> <span class="n">type</span> <span class="o">=</span> <span class="s">"ROND"</span><span class="o">;</span>
	
	<span class="c">/**</span>
<span class="c">	 * Constructeur par défaut</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Point</span><span class="o">(){}</span>
	<span class="c">/**</span>
<span class="c">	 * Constructeur avec paramètre</span>
<span class="c">	 * @param x</span>
<span class="c">	 * @param y</span>
<span class="c">	 * @param size</span>
<span class="c">	 * @param color</span>
<span class="c">	 * @param type</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Point</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="kt">int</span> <span class="n">size</span><span class="o">,</span> <span class="n">Color</span> <span class="n">color</span><span class="o">,</span> <span class="n">String</span> <span class="n">type</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">size</span> <span class="o">=</span> <span class="n">size</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">color</span> <span class="o">=</span> <span class="n">color</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">type</span> <span class="o">=</span> <span class="n">type</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c">//****************************************</span>
	<span class="c">//				ACCESSEURS</span>
	<span class="c">//****************************************</span>
	<span class="kd">public</span> <span class="n">Color</span> <span class="nf">getColor</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">color</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setColor</span><span class="o">(</span><span class="n">Color</span> <span class="n">color</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">color</span> <span class="o">=</span> <span class="n">color</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getSize</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">size</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setSize</span><span class="o">(</span><span class="kt">int</span> <span class="n">size</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">size</span> <span class="o">=</span> <span class="n">size</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getX</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">x</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setX</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getY</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">y</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setY</span><span class="o">(</span><span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="n">String</span> <span class="nf">getType</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">type</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setType</span><span class="o">(</span><span class="n">String</span> <span class="n">type</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">type</span> <span class="o">=</span> <span class="n">type</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">DrawPanel.java</span></h4><br>
J'ai rajouté des accesseurs pour la collection de points à sauvegarder !<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseAdapter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseMotionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
 
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DrawPanel</span> <span class="kd">extends</span> <span class="n">JPanel</span><span class="o">{</span>
 
	<span class="c">//Couleur du pointeur</span>
	<span class="kd">private</span> <span class="n">Color</span> <span class="n">pointerColor</span> <span class="o">=</span> <span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">;</span>
	<span class="c">//Forme du pointeur</span>
	<span class="kd">private</span> <span class="n">String</span> <span class="n">pointerType</span> <span class="o">=</span> <span class="s">"CIRCLE"</span><span class="o">;</span>
	<span class="c">//Position X du pointeur</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">posX</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="o">,</span> <span class="n">oldX</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="o">;</span>
	<span class="c">//Position Y du pointeur</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">posY</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="o">,</span> <span class="n">oldY</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="o">;</span>
	<span class="c">//pour savoir si on doit dessiner ou non</span>
	<span class="kd">private</span> <span class="kt">boolean</span> <span class="n">erasing</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
	<span class="c">//Taille du pointeur</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">pointerSize</span> <span class="o">=</span> <span class="mi">15</span><span class="o">;</span>
	<span class="c">//Collection de points ! </span>
	<span class="kd">private</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Point</span><span class="o">&gt;</span> <span class="n">points</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Point</span><span class="o">&gt;();</span>	
	
	<span class="c">/**</span>
<span class="c">	 * Constructeur</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">DrawPanel</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">addMouseListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MouseAdapter</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">mousePressed</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">e</span><span class="o">){</span>
				<span class="n">points</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Point</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getX</span><span class="o">()</span> <span class="o">-</span> <span class="o">(</span><span class="n">pointerSize</span> <span class="o">/</span> <span class="mi">2</span><span class="o">),</span> <span class="n">e</span><span class="o">.</span><span class="na">getY</span><span class="o">()</span> <span class="o">-</span> <span class="o">(</span><span class="n">pointerSize</span> <span class="o">/</span> <span class="mi">2</span><span class="o">),</span> <span class="n">pointerSize</span><span class="o">,</span> <span class="n">pointerColor</span><span class="o">,</span> <span class="n">pointerType</span><span class="o">));</span>
				<span class="n">repaint</span><span class="o">();</span>
			<span class="o">}</span>
		<span class="o">});</span>
 
		<span class="k">this</span><span class="o">.</span><span class="na">addMouseMotionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MouseMotionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseDragged</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
				<span class="c">//On récupère les coordonnées de la souris </span>
				<span class="c">//et on enlève la moitié de la taille du pointeur</span>
				<span class="c">//pour centrer le tracé</span>
				<span class="n">points</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Point</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getX</span><span class="o">()</span> <span class="o">-</span> <span class="o">(</span><span class="n">pointerSize</span> <span class="o">/</span> <span class="mi">2</span><span class="o">),</span> <span class="n">e</span><span class="o">.</span><span class="na">getY</span><span class="o">()</span> <span class="o">-</span> <span class="o">(</span><span class="n">pointerSize</span> <span class="o">/</span> <span class="mi">2</span><span class="o">),</span> <span class="n">pointerSize</span><span class="o">,</span> <span class="n">pointerColor</span><span class="o">,</span> <span class="n">pointerType</span><span class="o">));</span>
				<span class="n">repaint</span><span class="o">();</span>
			<span class="o">}</span>
 
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseMoved</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
		<span class="o">});</span>
		
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Vous la connaissez maintenant, celle-là ;)</span>
<span class="c">	 */</span>	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
		
		<span class="c">//Si on doit effacer, on ne passe pas dans le else =&gt; pas de dessin</span>
		<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">erasing</span><span class="o">){</span>
			<span class="k">this</span><span class="o">.</span><span class="na">erasing</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="c">//On parcourt notre collection de points</span>
			<span class="k">for</span><span class="o">(</span><span class="n">Point</span> <span class="n">p</span> <span class="o">:</span> <span class="k">this</span><span class="o">.</span><span class="na">points</span><span class="o">)</span>
			<span class="o">{</span>
				<span class="c">//On récupère la couleur</span>
				<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getColor</span><span class="o">());</span>
				
				<span class="c">//Selon le type de point</span>
				<span class="k">if</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getType</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"SQUARE"</span><span class="o">)){</span>
					<span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getY</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getSize</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getSize</span><span class="o">());</span>
				<span class="o">}</span>
				<span class="k">else</span><span class="o">{</span>
					<span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getY</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getSize</span><span class="o">(),</span> <span class="n">p</span><span class="o">.</span><span class="na">getSize</span><span class="o">());</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">}</span>				
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Efface le contenu</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">erase</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">erasing</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">points</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Point</span><span class="o">&gt;();</span>
		<span class="n">repaint</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Définit la couleur du pointeur</span>
<span class="c">	 * @param c</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPointerColor</span><span class="o">(</span><span class="n">Color</span> <span class="n">c</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">pointerColor</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Définit la forme du pointeur</span>
<span class="c">	 * @param str</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPointerType</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">pointerType</span> <span class="o">=</span> <span class="n">str</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Point</span><span class="o">&gt;</span> <span class="n">getPoints</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">points</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPoints</span><span class="o">(</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Point</span><span class="o">&gt;</span> <span class="n">points</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">points</span> <span class="o">=</span> <span class="n">points</span><span class="o">;</span>
		<span class="n">repaint</span><span class="o">();</span>
	<span class="o">}</span>	
		
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Fenetre.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.KeyEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileNotFoundException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.ObjectInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.ObjectOutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.ImageIcon</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFileChooser</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuBar</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JToolBar</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.KeyStroke</span><span class="o">;</span>
 
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
 
	<span class="c">//**************************************</span>
	<span class="c">//		         LE MENU </span>
	<span class="c">//**************************************</span>
	<span class="kd">private</span> <span class="n">JMenuBar</span> <span class="n">menuBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuBar</span><span class="o">();</span>
	<span class="n">JMenu</span> 	<span class="n">fichier</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Fichier"</span><span class="o">),</span>
			<span class="n">edition</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Edition"</span><span class="o">),</span>
			<span class="n">forme</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Forme du pointeur"</span><span class="o">),</span>
			<span class="n">couleur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenu</span><span class="o">(</span><span class="s">"Couleur du pointeur"</span><span class="o">);</span>
	
	<span class="n">JMenuItem</span> 	<span class="n">nouveau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Effacer"</span><span class="o">),</span>
				
				<span class="c">//Nos nouveaux points de menus</span>
				<span class="n">enregistrer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Enregistrer"</span><span class="o">),</span>
				<span class="n">enregistrerSous</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Enregistrer Sous"</span><span class="o">),</span>
				<span class="n">ouvrir</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Ouvrir"</span><span class="o">),</span>
				
				<span class="n">quitter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Quitter"</span><span class="o">),</span>
				<span class="n">rond</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Rond"</span><span class="o">),</span>
				<span class="n">carre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Carré"</span><span class="o">),</span>
				<span class="n">bleu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Bleu"</span><span class="o">),</span>
				<span class="n">rouge</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Rouge"</span><span class="o">),</span>
				<span class="n">vert</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Vert"</span><span class="o">);</span>
	
	<span class="c">//****************************************</span>
	<span class="c">//			LA BARRE D OUTILS</span>
	<span class="c">//****************************************</span>
	
	<span class="n">JToolBar</span> <span class="n">toolBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JToolBar</span><span class="o">();</span>
	
	<span class="n">JButton</span> <span class="n">square</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/carré.jpg"</span><span class="o">)),</span>
			<span class="n">circle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/rond.jpg"</span><span class="o">)),</span>
			<span class="n">red</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/rouge.jpg"</span><span class="o">)),</span>
			<span class="n">green</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/vert.jpg"</span><span class="o">)),</span>
			<span class="n">blue</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"images/bleu.jpg"</span><span class="o">));</span>
	
	<span class="c">//***************************************</span>
	<span class="c">//			LES ÉCOUTEURS</span>
	<span class="c">//***************************************</span>
	<span class="kd">private</span> <span class="n">FormeListener</span> <span class="n">fListener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormeListener</span><span class="o">();</span>
	<span class="kd">private</span> <span class="n">CouleurListener</span> <span class="n">cListener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CouleurListener</span><span class="o">();</span>
	
	<span class="c">//Le JFileChooser</span>
	<span class="c">//ici j'ai créé un répertoire "backup" à la racine de mon projet</span>
	<span class="c">//En le spécifiant dans le constructeur, mon chooser s'ouvrira dans ce répertoire !</span>
	<span class="n">JFileChooser</span> <span class="n">fileChooser</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JFileChooser</span><span class="o">(</span><span class="s">"backup/"</span><span class="o">);</span>
	<span class="c">//Nos filtres</span>
	<span class="n">ZFileFilter</span> <span class="n">zFiltre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZFileFilter</span><span class="o">();</span>
	<span class="n">ZFileFilter</span> <span class="n">filtre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZFileFilter</span><span class="o">(</span><span class="s">".amz"</span><span class="o">,</span> <span class="s">"Fichier Ardoise Mazique"</span><span class="o">);</span>
	<span class="n">File</span> <span class="n">file</span><span class="o">;</span>
	
	<span class="c">//Notre zone de dessin</span>
	<span class="kd">private</span> <span class="n">DrawPanel</span> <span class="n">drawPanel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DrawPanel</span><span class="o">();</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">700</span><span class="o">,</span> <span class="mi">500</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
	
		<span class="c">//On ajoute nos filtres sur l'objet !</span>
		<span class="k">this</span><span class="o">.</span><span class="na">fileChooser</span><span class="o">.</span><span class="na">addChoosableFileFilter</span><span class="o">(</span><span class="n">zFiltre</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">fileChooser</span><span class="o">.</span><span class="na">addChoosableFileFilter</span><span class="o">(</span><span class="n">filtre</span><span class="o">);</span>
		
		
		<span class="c">//On initialise le menu</span>
		<span class="k">this</span><span class="o">.</span><span class="na">initMenu</span><span class="o">();</span>
		<span class="c">//Idem pour la barre d'outils</span>
		<span class="k">this</span><span class="o">.</span><span class="na">initToolBar</span><span class="o">();</span>
		<span class="c">//On positionne notre zone de dessin</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">drawPanel</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>		
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Initialise le menu</span>
<span class="c">	 */</span>
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">initMenu</span><span class="o">(){</span>
		<span class="n">nouveau</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">drawPanel</span><span class="o">.</span><span class="na">erase</span><span class="o">();</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		
		<span class="n">nouveau</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_N</span><span class="o">,</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span><span class="o">));</span>
		
		<span class="n">quitter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		<span class="n">quitter</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_W</span><span class="o">,</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span><span class="o">));</span>
		
		<span class="n">fichier</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">nouveau</span><span class="o">);</span>
		<span class="n">fichier</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
		
		<span class="c">//On ajoute les nouveau menus !</span>
		<span class="n">enregistrer</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_S</span><span class="o">,</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span><span class="o">));</span>
		<span class="c">//On détermine l'action à faire ! </span>
		<span class="n">enregistrer</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>

			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">ObjectOutputStream</span> <span class="n">oos</span> <span class="o">;</span>
				<span class="c">//S'il ne s'agit pas du premier enregistrement !</span>
				<span class="k">if</span><span class="o">(</span><span class="n">file</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
					<span class="k">try</span> <span class="o">{</span>
						
						<span class="n">oos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">file</span><span class="o">));</span>
						<span class="n">oos</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">getPoints</span><span class="o">());</span>
						<span class="n">oos</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
						
					<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
						<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
					<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
						<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
					<span class="o">}</span>
				<span class="o">}</span>
				<span class="c">//Sinon on demande le nom du fichier</span>
				<span class="k">else</span><span class="o">{</span>
					<span class="k">if</span><span class="o">(</span><span class="n">fileChooser</span><span class="o">.</span><span class="na">showSaveDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span> <span class="o">==</span> <span class="n">JFileChooser</span><span class="o">.</span><span class="na">APPROVE_OPTION</span><span class="o">){</span>
						<span class="n">file</span> <span class="o">=</span> <span class="n">fileChooser</span><span class="o">.</span><span class="na">getSelectedFile</span><span class="o">();</span>
						<span class="c">//Si l'extension est valide</span>
						<span class="k">if</span><span class="o">(</span><span class="n">fileChooser</span><span class="o">.</span><span class="na">getFileFilter</span><span class="o">().</span><span class="na">accept</span><span class="o">(</span><span class="n">file</span><span class="o">))</span>
						<span class="o">{</span>
							<span class="k">try</span> <span class="o">{</span>
								
								<span class="n">oos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">file</span><span class="o">));</span>
								<span class="n">oos</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">getPoints</span><span class="o">());</span>
								<span class="n">oos</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
								
							<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
								<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
							<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
								<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
							<span class="o">}</span>
						<span class="o">}</span>						
						<span class="k">else</span><span class="o">{</span>
							<span class="c">//Si vous n'avez pas spécifié une extension valide ! </span>
							<span class="n">JOptionPane</span> <span class="n">alert</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
							<span class="n">alert</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Erreur d'extension de fichier ! \nVotre sauvegarde a échoué !"</span><span class="o">,</span> <span class="s">"Erreur"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">ERROR_MESSAGE</span><span class="o">);</span>
						<span class="o">}</span>						
					<span class="o">}</span>
				<span class="o">}</span>
			<span class="o">}</span>			
		<span class="o">});</span>		
		<span class="n">fichier</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">enregistrer</span><span class="o">);</span>
		
		<span class="n">enregistrerSous</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_S</span><span class="o">,</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span> <span class="o">+</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">SHIFT_DOWN_MASK</span><span class="o">));</span>
		<span class="c">//On détermine l'action à faire ! </span>
		<span class="n">enregistrerSous</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>

			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">fileChooser</span><span class="o">.</span><span class="na">showSaveDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span> <span class="o">==</span> <span class="n">JFileChooser</span><span class="o">.</span><span class="na">APPROVE_OPTION</span><span class="o">){</span>
					<span class="n">file</span> <span class="o">=</span> <span class="n">fileChooser</span><span class="o">.</span><span class="na">getSelectedFile</span><span class="o">();</span>
					<span class="c">//Si l'extension est valide</span>
					<span class="k">if</span><span class="o">(</span><span class="n">fileChooser</span><span class="o">.</span><span class="na">getFileFilter</span><span class="o">().</span><span class="na">accept</span><span class="o">(</span><span class="n">file</span><span class="o">))</span>
					<span class="o">{</span>
						<span class="k">try</span> <span class="o">{</span>
							
							<span class="n">ObjectOutputStream</span> <span class="n">oos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">file</span><span class="o">));</span>
							<span class="n">oos</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">getPoints</span><span class="o">());</span>
							<span class="n">oos</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
							
						<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
							<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
						<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
							<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
						<span class="o">}</span>
					<span class="o">}</span>
					<span class="k">else</span><span class="o">{</span>
						<span class="c">//Si vous n'avez pas spécifié une extension valide ! </span>
						<span class="n">JOptionPane</span> <span class="n">alert</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
						<span class="n">alert</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Erreur d'extension de fichier ! \nVotre sauvegarde a échoué !"</span><span class="o">,</span> <span class="s">"Erreur"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">ERROR_MESSAGE</span><span class="o">);</span>
					<span class="o">}</span>
				<span class="o">}</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		<span class="n">fichier</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">enregistrerSous</span><span class="o">);</span>
		
		<span class="n">ouvrir</span><span class="o">.</span><span class="na">setAccelerator</span><span class="o">(</span><span class="n">KeyStroke</span><span class="o">.</span><span class="na">getKeyStroke</span><span class="o">(</span><span class="n">KeyEvent</span><span class="o">.</span><span class="na">VK_O</span><span class="o">,</span> <span class="n">KeyEvent</span><span class="o">.</span><span class="na">CTRL_DOWN_MASK</span><span class="o">));</span>
		<span class="n">ouvrir</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">){</span>
				<span class="k">if</span><span class="o">(</span><span class="n">fileChooser</span><span class="o">.</span><span class="na">showOpenDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span> <span class="o">==</span><span class="n">JFileChooser</span><span class="o">.</span><span class="na">APPROVE_OPTION</span><span class="o">){</span>
					<span class="n">file</span> <span class="o">=</span> <span class="n">fileChooser</span><span class="o">.</span><span class="na">getSelectedFile</span><span class="o">();</span>
					<span class="k">if</span><span class="o">(</span><span class="n">fileChooser</span><span class="o">.</span><span class="na">getFileFilter</span><span class="o">().</span><span class="na">accept</span><span class="o">(</span><span class="n">file</span><span class="o">))</span>
					<span class="o">{</span>
						<span class="k">try</span> <span class="o">{</span>
							
							<span class="n">ObjectInputStream</span> <span class="n">ois</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="n">file</span><span class="o">));</span>
							<span class="n">drawPanel</span><span class="o">.</span><span class="na">setPoints</span><span class="o">((</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Point</span><span class="o">&gt;)</span><span class="n">ois</span><span class="o">.</span><span class="na">readObject</span><span class="o">());</span>
							<span class="n">ois</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
							
						<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e1</span><span class="o">)</span> <span class="o">{</span>
							<span class="n">e1</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
						<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e1</span><span class="o">)</span> <span class="o">{</span>
							<span class="n">e1</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
						<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassNotFoundException</span> <span class="n">e2</span><span class="o">)</span> <span class="o">{</span>
							<span class="n">e2</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
						<span class="o">}</span>
					<span class="o">}</span>
					<span class="k">else</span><span class="o">{</span>
						<span class="n">JOptionPane</span> <span class="n">alert</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
						<span class="n">alert</span><span class="o">.</span><span class="na">showMessageDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Erreur d'extension de fichier ! \nVotre chargement a échoué !"</span><span class="o">,</span> <span class="s">"Erreur"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">ERROR_MESSAGE</span><span class="o">);</span>
					<span class="o">}</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">});</span>
		<span class="n">fichier</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">ouvrir</span><span class="o">);</span>
		<span class="n">fichier</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
		
		<span class="n">fichier</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">quitter</span><span class="o">);</span>
		<span class="n">fichier</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'F'</span><span class="o">);</span>
		
		<span class="n">carre</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
		<span class="n">rond</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
		<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rond</span><span class="o">);</span>
		<span class="n">forme</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">carre</span><span class="o">);</span>
		
		<span class="n">rouge</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">cListener</span><span class="o">);</span>
		<span class="n">vert</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">cListener</span><span class="o">);</span>
		<span class="n">bleu</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">cListener</span><span class="o">);</span>
		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rouge</span><span class="o">);</span>
		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">vert</span><span class="o">);</span>
		<span class="n">couleur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bleu</span><span class="o">);</span>
		
		<span class="n">edition</span><span class="o">.</span><span class="na">setMnemonic</span><span class="o">(</span><span class="sc">'E'</span><span class="o">);</span>
		<span class="n">edition</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">forme</span><span class="o">);</span>
		<span class="n">edition</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
		<span class="n">edition</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">couleur</span><span class="o">);</span>
		
		<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">fichier</span><span class="o">);</span>
		<span class="n">menuBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">edition</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setJMenuBar</span><span class="o">(</span><span class="n">menuBar</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Initialise la barre d'outils</span>
<span class="c">	 */</span>
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">initToolBar</span><span class="o">(){</span>
		
		<span class="n">JPanel</span> <span class="n">panneau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">square</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
		<span class="n">circle</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">fListener</span><span class="o">);</span>
		<span class="n">red</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">cListener</span><span class="o">);</span>
		<span class="n">green</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">cListener</span><span class="o">);</span>
		<span class="n">blue</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">cListener</span><span class="o">);</span>
		
		<span class="n">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">square</span><span class="o">);</span>
		<span class="n">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">circle</span><span class="o">);</span>
		
		<span class="n">toolBar</span><span class="o">.</span><span class="na">addSeparator</span><span class="o">();</span>
		<span class="n">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">red</span><span class="o">);</span>
		<span class="n">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">blue</span><span class="o">);</span>
		<span class="n">toolBar</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">green</span><span class="o">);</span>
						
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">toolBar</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
	<span class="o">}</span>
	
	
	<span class="c">//ÉCOUTEUR POUR LE CHANGEMENT DE FORME</span>
	<span class="c">//************************************</span>
	<span class="kd">class</span> <span class="nc">FormeListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">().</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"javax.swing.JMenuItem"</span><span class="o">)){</span>
				<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()==</span><span class="n">carre</span><span class="o">)</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerType</span><span class="o">(</span><span class="s">"SQUARE"</span><span class="o">);</span>
				<span class="k">else</span> <span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerType</span><span class="o">(</span><span class="s">"CIRCLE"</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="k">else</span><span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()==</span><span class="n">square</span><span class="o">)</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerType</span><span class="o">(</span><span class="s">"SQUARE"</span><span class="o">);</span>
				<span class="k">else</span> <span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerType</span><span class="o">(</span><span class="s">"CIRCLE"</span><span class="o">);</span>				
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	

	<span class="c">//ÉCOUTEUR POUR LE CHANGEMENT DE COULEUR</span>
	<span class="c">//**************************************</span>
	<span class="kd">class</span> <span class="nc">CouleurListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">().</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>
			<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">().</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"javax.swing.JMenuItem"</span><span class="o">)){</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"OK !"</span><span class="o">);</span>
				<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()==</span><span class="n">vert</span><span class="o">)</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">);</span>
				<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()==</span><span class="n">bleu</span><span class="o">)</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
				<span class="k">else</span> <span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="k">else</span><span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()==</span><span class="n">green</span><span class="o">)</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">);</span>
				<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()==</span><span class="n">blue</span><span class="o">)</span><span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
				<span class="k">else</span> <span class="n">drawPanel</span><span class="o">.</span><span class="na">setPointerColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>				
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
		
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
</div></div><br>
<br>
Vous pouvez tester ce code, il fonctionne très bien !<br>
<div class="rmq information">Vous êtes obligés d'écrire le nom de fichier avec extension pour la sauvegarde et l'ouverture, sinon le traitement sera refusé ! </div><br>
Si vous voulez que l'extension soit ajoutée automatiquement à votre nom de fichier, vous devez créer votre propre <strong><span class="vertf"><span class="courrier">JFileChooser</span></span></strong> et redéfinir la méthode <span class="code2 java"><span class="n">approveSelection</span><span class="o">()</span>
</span>.<br>
<br>
Bon : je crois que le moment est venu d'aller faire un tour sur le topo ! 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65525">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Les classes traitant des entrées / sorties se trouvent dans le package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">io</span>
</span>.</li>
<li>Les classes que nous avons vues dans ce chapitre sont héritées des classes :<br>
<ul>
<li><strong><span class="violet"><span class="courrier">InputStream</span></span></strong>, pour les classes gérant les flux en <strong><span class="rouge">entrées</span></strong> ;</li>
<li><strong><span class="violet"><span class="courrier">OutputStream</span></span></strong>, pour les classes gérant les flux en <strong><span class="rouge">sorties</span></strong>.</li>
</ul> </li>
<li>La façon dont on travaille avec des flux doit respecter la logique suivante : <br>
<ul>
<li>ouverture de flux ;</li>
<li>lecture / écriture de flux ;</li>
<li>fermeture de flux.</li>
</ul></li>
<li>La gestion des flux peut engendrer la levée d'exception comme : <strong><span class="courrier"><span class="violet">FileNotFoundException</span></span></strong>, <strong><span class="violet"><span class="courrier">IOException</span></span></strong>...</li>
<li>L'action de sauvegarder les objets s'appelle <strong><span class="vertf">la sérialisation</span></strong> !</li>
<li>Pour qu'un objet soit sérialisable, celui-ci doit implémenter l'interface <strong><span class="violet"><span class="courrier">Serializable</span></span></strong>.</li>
<li>Si un objet sérialisable a un objet d'instance non sérialisable, une exception sera levée lorsque vous voudrez sauvegarder votre objet.</li>
<li>Une solution consiste à rendre l'objet d'instance sérialisable ou alors à le déclarer <strong><span class="courrier"><span class="violet">transient</span></span></strong> afin que celui-ci soit ignoré à la sérialisation !</li>
<li>L'utilisation de buffer permet une nette amélioration des performances, en lecture et en écriture, avec les fichiers.</li><ul>
</ul>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Vous avez pu voir que ce chapitre était très riche en informations et en nouveautés.<br>
Quand je vous disais que le rythme allait s'accélérer... <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
<br>
Je vous rappelle tout de même que les classes que nous venons de voir dans ce chapitre héritent des classes <strong><span class="violet"><span class="courrier">InputStream </span></span></strong>et <strong><span class="violet"><span class="courrier">OutputStream</span></span></strong>.<br>
Il existe encore des classes dans le package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">io</span>
</span> qui sont très utiles aussi, mais qui n'héritent pas des mêmes classes...<br>
<br>
Vous êtes encore motivés ? Alors, allons-y et terminons-en avec ces maudits flux.  <img src="./java_files/ninja.png" alt=":ninja:" class="smilies">
	</div>
	
	<hr>
	<h1 id="chap_65532">Les flux d'entrées / sorties (2/2)</h1>
	<div id="chap_intro">
	Nous voilà dans la dernière ligne droite concernant le flux d'entrées / sorties.<br>
<br>
Dans ce chapitre, nous allons aborder une autre hiérarchie de classes présente dans le package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">io</span>
</span>.<br>
Les super-classes de la deuxième hiérarchie sont : <br>
<ul>
<li>la classe <strong><span class="violet"><span class="courrier">Reader</span></span></strong> ;</li>
<li>la classe <strong><span class="violet"><span class="courrier">Writer</span></span></strong>.</li>
</ul><br>
<br>
Vous verrez que l'utilisation des classes de cette hiérarchie est très semblable à ce que nous avons vu lors du chapitre précédent, à une différence près : ces classes ne vont pas lire / écrire des données binaires, mais des caractères UNICODE ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
Je ne vais pas vous gâcher la surprise... Alors, on y va ?
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65531">Les objets CharArray(Writer/Reader) et  String(Writer/Reader)</h2>
		<div class="ss_part_texte">
		Nous allons utiliser des objets :<br>
<ul>
<li><strong><span class="violet"><span class="courrier">CharArray(Writer/Reader)</span></span></strong> ;</li>
<li><strong><span class="violet"><span class="courrier">String(Writer/Reader)</span></span></strong>.</li>
</ul><br>
Ces deux types jouent quasiment le même rôle et ont les mêmes méthodes : celles de leur classe mère !<br>
Ces deux objets n'ajoutent donc aucune nouvelle fonctionnalité à leur objet mère.<br>
<br>
Leur principale fonction est de permettre d'écrire un flux de caractères dans un tampon de mémoire adaptatif : un emplacement en mémoire qui peut changer de taille selon les besoins.<br>
<br>
<div class="rmq information">Nous n'en avons pas parlé dans le chapitre précédent afin de ne pas l'alourdir, mais il existe des classes remplissant le même rôle que ces classes-ci : <strong><span class="courrier"><span class="violet">ByteArray(Input/Output)Stream</span></span></strong>.</div><br>
<br>
Voyons comment utiliser ces deux objets.<br>
<br>
Nous allons commencer par un exemple commenté des objets <strong><span class="courrier"><span class="violet">CharArray(Writer/Reader)</span></span></strong>, retour en mode console : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Package à importer afin d'utiliser l'objet File</span>
<span class="kn">import</span> <span class="nn">java.io.CharArrayReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.CharArrayWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">CharArrayWriter</span> <span class="n">caw</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CharArrayWriter</span><span class="o">();</span>
		<span class="n">CharArrayReader</span> <span class="n">car</span><span class="o">;</span>
		
		<span class="k">try</span> <span class="o">{</span>
			<span class="n">caw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"Coucouc les zéros"</span><span class="o">);</span>
			<span class="c">//Appel à la méthode toString </span>
			<span class="c">//de manière tacite, de notre objet</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">caw</span><span class="o">);</span>
			
			<span class="c">//caw.close() n'a aucun effet sur le flux</span>
			<span class="c">//Seul caw.reset() peut tout effacer</span>
			<span class="n">caw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
			
			<span class="c">//on passe un tableau de caractères à l'objet</span>
			<span class="c">//qui va lire le tampon</span>
			<span class="n">car</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CharArrayReader</span><span class="o">(</span><span class="n">caw</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">());</span>
			
			<span class="kt">int</span> <span class="n">i</span> <span class="o">;</span>
			<span class="c">//On remet tous les caractères lus dans un String</span>
			<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
			<span class="k">while</span><span class="o">((</span> <span class="n">i</span> <span class="o">=</span> <span class="n">car</span><span class="o">.</span><span class="na">read</span><span class="o">())</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span>
				<span class="n">str</span> <span class="o">+=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span> <span class="n">i</span><span class="o">;</span>
			
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
			
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">// TODO Auto-generated catch block</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Je vous laisse le soin d'examiner ce code ainsi que ses effets. Celui-ci est assez commenté, il me semble, pour que vous en compreniez toutes les subtilités. <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
<br>
L'objet <strong><span class="violet"><span class="courrier">String(Writer/Reader)</span></span></strong> fonctionne de la même façon : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Package à importer afin d'utiliser l'objet File</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.StringReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.StringWriter</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">StringWriter</span> <span class="n">sw</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringWriter</span><span class="o">();</span>
		<span class="n">StringReader</span> <span class="n">sr</span><span class="o">;</span>
		
		<span class="k">try</span> <span class="o">{</span>
			<span class="n">sw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"Coucouc les zéros"</span><span class="o">);</span>
			<span class="c">//Appel à la méthode toString </span>
			<span class="c">//de manière tacite, de notre objet</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sw</span><span class="o">);</span>
			
			<span class="c">//caw.close() n'a aucun effet sur le flux</span>
			<span class="c">//Seul caw.reset() peut tout effacer</span>
			<span class="n">sw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
			
			<span class="c">//on passe un tableau de caractères à l'objet</span>
			<span class="c">//qui va lire le tampon</span>
			<span class="n">sr</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringReader</span><span class="o">(</span><span class="n">sw</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
			
			<span class="kt">int</span> <span class="n">i</span> <span class="o">;</span>
			<span class="c">//On remet tous les caractères lus dans un String</span>
			<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
			<span class="k">while</span><span class="o">((</span> <span class="n">i</span> <span class="o">=</span> <span class="n">sr</span><span class="o">.</span><span class="na">read</span><span class="o">())</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span>
				<span class="n">str</span> <span class="o">+=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span> <span class="n">i</span><span class="o">;</span>
			
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
			
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">// TODO Auto-generated catch block</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
En fait, il s'agit du même code avec des objets différents ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Vous savez maintenant comment écrire un flux texte dans un tampon de mémoire...<br>
Peut-être en aurez-vous besoin un jour, qui sait ?<br>
<br>
Je vous propose maintenant de voir comment traiter les fichiers texte avec des flux de caractères.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65534">les classes File(Writer/Reader) et Print(Writer/Reader)</h2>
		<div class="ss_part_texte">
		Comme nous l'avons vu dans le chapitre précédent, les objets travaillant avec des flux utilisent des flux binaires.<br>
La conséquence est que, même si vous ne mettez que des caractères dans un fichier, que vous le sauvegardez, les objets vus précédemment traiteront votre fichier comme un fichier contenant des données binaires !<br>
<br>
Nous allons voir que, dans le package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">io</span>
</span>, les objets citées dans le titre de cette sous-section servent à lire / écrire des données d'un fichier texte.<br>
<br>
Ce que nous allons faire, c'est tout simplement créer un nouveau fichier et le lire, et le tout en Java !<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Package à importer afin d'utiliser l'objet File</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileNotFoundException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"testFileWriter.txt"</span><span class="o">);</span>
		
		<span class="n">FileWriter</span> <span class="n">fw</span><span class="o">;</span>
		<span class="n">FileReader</span> <span class="n">fr</span><span class="o">;</span>
		
		
		<span class="k">try</span> <span class="o">{</span>
			<span class="c">//Création de l'objet</span>
			<span class="n">fw</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileWriter</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
			<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"Bonjour à tous amis ZérOs !\n"</span><span class="o">;</span>
			<span class="n">str</span> <span class="o">+=</span> <span class="s">"\tComment allez-vous ? \n"</span><span class="o">;</span>
			<span class="c">//On écrit la chaîne</span>
			<span class="n">fw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
			<span class="c">//On ferme le flux</span>
			<span class="n">fw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
			
			<span class="c">//création de l'objet de lecture</span>
			<span class="n">fr</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileReader</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
			<span class="n">str</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
			<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
			<span class="c">//Lecture des données</span>
			<span class="k">while</span><span class="o">((</span><span class="n">i</span> <span class="o">=</span> <span class="n">fr</span><span class="o">.</span><span class="na">read</span><span class="o">())</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span>
				<span class="n">str</span> <span class="o">+=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span><span class="n">i</span><span class="o">;</span>
			
			<span class="c">//affichage</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
			
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">// TODO Auto-generated catch block</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">// TODO Auto-generated catch block</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>
		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div> <br>
<br>
Vous pouvez voir que l'affichage est bon et qu'un nouveau fichier vient de faire son apparition dans le dossier contenant votre projet Eclipse !<br>
<div class="rmq erreur"><strong>Tout comme dans le chapitre précédent, la lecture d'un fichier inexistant entraîne une <strong><span class="violet"><span class="courrier">FileNotFoundException </span></span></strong>, et l'écriture peut entraîner un <strong><span class="violet"><span class="courrier">IOException</span></span></strong> !</strong></div><br>
<br>
Classes très simples à utiliser maintenant que vous savez utiliser les flux binaires...<br>
En fait ce chapitre est un peu un clone du précédent, mais les objets ne travaillent pas avec le même type de données. <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
<br>
Pour voir la liste des classes présentes dans cette hiérarchie, allez faire un tour dans <a href="http://www.siteduzero.com/tuto-3-26778-1-annexe-b-les-objets-travaillant-avec-des-flux.html">l'annexe prévue à cet effet</a>.<br>
<br>
Cependant, depuis le JDK 1.4, un nouveau package a vu le jour visant à améliorer les performances des flux, buffers... Traités par <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">io</span>
</span>. Car, ce que vous ignorez encore, c'est que le package que nous explorons depuis le chapitre précédent existe depuis la version 1.1 du JDK.<br>
<br>
Il était temps d'avoir une remise à niveau afin d'améliorer les résultats obtenus avec les objets traitant les flux. C'est là que le package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">nio</span>
</span> a vu le jour !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65533">Du renouveau chez les flux : le package java.nio</h2>
		<div class="ss_part_texte">
		Vous l'avez sûrement deviné, mais "<strong><span class="violet"><span class="courrier">nio</span></span></strong>" signifie : <strong><span class="bleu">New I/O</span></strong>.<br>
Comme je vous l'ai dit précédemment, ce package a été créé afin d'améliorer les performances sur le traitement des fichiers, du réseau et des buffers.<br>
<div class="rmq information">Nous parlerons de la programmation réseau dans un chapitre dédié à ce type de programmation.</div><br>
<br>
Ce package offre une nouvelle façon de lire les données. Nous nous intéresserons uniquement à l'aspect fichier, pour le moment.<br>
Vous avez pu constater que les objets du package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">io</span>
</span> traitaient les données par octets. Les objets du package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">nio</span>
</span>, eux, les traitent par blocs de données : ce qui signifie que la lecture en est accélérée !<br>
<br>
Tout repose sur deux objets dans ce nouveau package : les <strong><span class="bleu">channels</span></strong> et les <strong><span class="bleu">buffers </span></strong>.<br>
Les channels sont en fait des flux, tout comme dans l'ancien package, mais ceux-ci sont amenés à travailler avec un buffer dont vous définissez la taille !<br>
<br>
<h4>Pour simplifier au maximum</h4><br>
Lorsque vous ouvrez un flux vers un fichier avec un objet <strong><span class="violet"><span class="courrier">FileInputStream</span></span></strong>, vous pouvez récupérer un canal vers ce fichier. Celui-ci, combiné avec un buffer, vous permettra de lire votre fichier encore plus vite qu'avec un <strong><span class="violet"><span class="courrier">BufferedInputStream</span></span></strong> ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
Reprenez le gros fichier que je vous ai fait faire dans le chapitre précédent. Voici <a href="http://www.pallier.org/ressources/dicofr/liste.de.mots.francais.frgut.txt">l'adresse à laquelle le retrouver </a>pour ceux qui auraient déjà effacé le dit fichier.<br>
<br>
Nous allons maintenant le relire avec ce nouveau package en comparant le buffer conventionnel et la nouvelle façon de faire : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64</pre></td><td class="code"><div class="syntax"><pre><span class="c">//Package à importer afin d'utiliser l'objet File</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileNotFoundException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.nio.ByteBuffer</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.nio.CharBuffer</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.nio.channels.FileChannel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="n">FileInputStream</span> <span class="n">fis</span><span class="o">;</span>
		<span class="n">BufferedInputStream</span> <span class="n">bis</span><span class="o">;</span>
		<span class="n">FileChannel</span> <span class="n">fc</span><span class="o">;</span>
		
		<span class="k">try</span> <span class="o">{</span>
		
			<span class="c">//Création des objets</span>
			<span class="n">fis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"test.txt"</span><span class="o">));</span>
			<span class="n">bis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span><span class="n">fis</span><span class="o">);</span>
			<span class="c">//Démarrage du chrono</span>
			<span class="kt">long</span> <span class="n">time</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
			<span class="c">//Lecture</span>
			<span class="k">while</span><span class="o">(</span><span class="n">bis</span><span class="o">.</span><span class="na">read</span><span class="o">()</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">);</span>
			<span class="c">//Temps d'exécution</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Temps d'exécution avec un buffer conventionnel : "</span> <span class="o">+</span> <span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">time</span><span class="o">));</span>
			
			<span class="c">//Re-création d'un flux de fichier</span>
			<span class="n">fis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"test.txt"</span><span class="o">));</span>
			<span class="c">//On récupère le canal</span>
			<span class="n">fc</span> <span class="o">=</span> <span class="n">fis</span><span class="o">.</span><span class="na">getChannel</span><span class="o">();</span>
			<span class="c">//On en déduit la taille</span>
			<span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="n">fc</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
			<span class="c">//On crée un buffer </span>
			<span class="c">//correspondant à la taille du fichier</span>
			<span class="n">ByteBuffer</span> <span class="n">bBuff</span> <span class="o">=</span> <span class="n">ByteBuffer</span><span class="o">.</span><span class="na">allocate</span><span class="o">(</span><span class="n">size</span><span class="o">);</span>
			
			<span class="c">//Démarrage du chrono</span>
			<span class="n">time</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
			<span class="c">//Démarrage de la lecture</span>
			<span class="n">fc</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">bBuff</span><span class="o">);</span>
			<span class="c">//On prépare à la lecture avec l'appel à flip</span>
			<span class="n">bBuff</span><span class="o">.</span><span class="na">flip</span><span class="o">();</span>
			<span class="c">//Affichage du temps d'exécution</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Temps d'exécution avec un nouveau buffer : "</span> <span class="o">+</span> <span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">time</span><span class="o">));</span>
			
			<span class="c">//Vu que nous avons pris un buffer de byte</span>
			<span class="c">//Afin de récupérer les données, nous pouvons utiliser </span>
			<span class="c">//un tableau de byte</span>
			<span class="c">//La méthode array retourne un tableau de byte</span>
			<span class="kt">byte</span><span class="o">[]</span> <span class="n">tabByte</span> <span class="o">=</span> <span class="n">bBuff</span><span class="o">.</span><span class="na">array</span><span class="o">();</span>
			
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">// TODO Auto-generated catch block</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">// TODO Auto-generated catch block</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>
		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat : <br>
<br>
<div class="centre"><img src="./java_files/131656.jpg" alt="Image utilisateur"></div><br>
<br>
Vous constatez que les gains de performance ne sont pas négligeables...<br>
Il est vrai aussi que ce nouveau package est le plus souvent utilisé pour les flux circulant sur les réseaux...<br>
Je ne m'attarderai donc pas sur le sujet, mais une petite présentation était de mise. <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Vous devez savoir tout de même que ce package offre un buffer par type primitif pour la lecture sur le channel, vous trouverez donc les classes : <br>
<ul>
<li><strong><span class="violet"><span class="courrier">IntBuffer</span></span></strong> ;</li>
<li><strong><span class="violet"><span class="courrier">CharBuffer</span></span></strong> ;</li>
<li><strong><span class="violet"><span class="courrier">ShortBuffer</span></span></strong> ;</li>
<li><strong><span class="violet"><span class="courrier">ByteBuffer</span></span></strong> ;</li>
<li><strong><span class="violet"><span class="courrier">DoubleBuffer</span></span></strong> ;</li>
<li><strong><span class="violet"><span class="courrier">FloatBuffer</span></span></strong> ;</li>
<li><strong><span class="violet"><span class="courrier">LongBuffer</span></span></strong>.</li>
</ul><br>
<br>
<br>
Ce chapitre avait pour vocation de vous présenter le reste des classes disponibles dans la hiérarchie du package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">io</span>
</span> et de vous présenter le package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">nio</span>
</span>.<br>
<br>
Vu qu'il n'y a rien de compliqué et de franchement nouveau (à part <strong><span class="violet"><span class="courrier">nio</span></span></strong>), je vous fais grâce du topo et du QCM... Mais ce sera l'une des rares fois ! <img src="./java_files/hihi.png" alt="^^" class="smilies">
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Je vous conseille de prendre le temps de bien digérer tout ça, de faire des tests, de fumer une clope, de boire un café...<br>
Bref, ne vous jetez pas tout de suite sur le prochain chapitre. <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
La gestion des flux n'est pas quelque chose d'évident.<br>
<br>
Après la pause syndicale, je vous propose un TP des familles, histoire de mettre en pratique tout ce vous avez vu... Les flux y compris. <img src="./java_files/diable.png" alt=":diable:" class="smilies"><br>
<br>
En avant pour : <strong><span class="orange">le jeu du pendu !</span></strong>
	</div>
	
	<hr>
	<h1 id="chap_65538">TP : Le penduZ</h1>
	<div id="chap_intro">
	Ce TP va sûrement être le plus difficile que vous ayez fait jusqu'à présent !<br>
Il fait appel à énormément de choses, et surtout à de la logique.<br>
<br>
Par contre, la solution que je vous apporte utilise des design patterns : je vous conseille donc de lire les quatre premiers chapitres de cette partie avant de commencer.<br>
<br>
Bon, voyons voir à quelle sauce je vais vous manger ! <img src="./java_files/diable.png" alt=":diable:" class="smilies">
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65537">Cahier des charges</h2>
		<div class="ss_part_texte">
		Vous devez faire un jeu du pendu en Java évènementiel avec sauvegarde des 10 meilleurs scores !<br>
Toutefois, j'ai des exigences : <ul>
<li>l'application devra avoir les menus : Nouveau, Scores, Règles, À propos ;</li>
<li>une page d'accueil devra être mise en place ;</li>
<li>les points devront être cumulés sur le total des mots trouvés et selon les erreurs commises ;</li>
<li>il faudra aller vérifier si le joueur est dans le top 10, le cas échéant, on lui demande son pseudo, on enregistre et on redirige vers la page des scores ;</li>
<li>si le joueur n'a pas assez de points, on redirige vers la page d'accueil ;</li>
<li>il faudra essayer d'utiliser au moins le pattern observer !</li>
</ul><br>
<br>
Voici les règles du jeu :<br>
<br>
<div class="centre"><img src="./java_files/131865.jpg" alt="Image utilisateur"></div><br>
<br>
Et voici les écrans que j'ai obtenus : <br>
<br>
<div class="centre"><a href="http://uploads.siteduzero.com/files/131001_132000/131861.jpg"> <img src="./java_files/131861.jpg" alt="Image utilisateur"></a><a href="http://uploads.siteduzero.com/files/131001_132000/131867.jpg"> <img src="./java_files/131867.jpg" alt="Image utilisateur"></a><a href="http://uploads.siteduzero.com/files/131001_132000/131864.jpg"> <img src="./java_files/131864.jpg" alt="Image utilisateur"></a><a href="http://uploads.siteduzero.com/files/131001_132000/131866.jpg"> <img src="./java_files/131866.jpg" alt="Image utilisateur"></a><a href="http://uploads.siteduzero.com/files/131001_132000/131863.jpg"> <img src="./java_files/131863.jpg" alt="Image utilisateur"></a></div><br>
<br>
Je vous donne aussi les images que j'ai utilisées pour faire le pendu :<br>
<br>
<div class="centre"><a href="http://uploads.siteduzero.com/files/131001_132000/131868.jpg"><img src="./java_files/131868.jpg" alt="Image utilisateur"></a><a href="http://uploads.siteduzero.com/files/131001_132000/131869.jpg"> <img src="./java_files/131869.jpg" alt="Image utilisateur"></a><a href="http://uploads.siteduzero.com/files/131001_132000/131870.jpg"> <img src="./java_files/131870.jpg" alt="Image utilisateur"></a><a href="http://uploads.siteduzero.com/files/131001_132000/131871.jpg"> <img src="./java_files/131871.jpg" alt="Image utilisateur"></a><a href="http://uploads.siteduzero.com/files/131001_132000/131872.jpg"> <img src="./java_files/131872.jpg" alt="Image utilisateur"></a><a href="http://uploads.siteduzero.com/files/131001_132000/131873.jpg"><img src="./java_files/131873.jpg" alt="Image utilisateur"></a><a href="http://uploads.siteduzero.com/files/131001_132000/131874.jpg"><img src="./java_files/131874.jpg" alt="Image utilisateur"></a><a href="http://uploads.siteduzero.com/files/131001_132000/131875.jpg"> <img src="./java_files/131875.jpg" alt="Image utilisateur"></a><a href="http://uploads.siteduzero.com/files/131001_132000/131876.jpg"> <img src="./java_files/131876.jpg" alt="Image utilisateur"></a></div><br>
<br>
Vous aurez aussi besoin du fichier que nous avons utilisé dans les chapitres précédents : vous savez, le fichier contenant plein de mots en français. Pour ceux qui l'auraient déjà effacé : <a href="http://www.pallier.org/ressources/dicofr/liste.de.mots.francais.frgut.txt">c'est par là !</a> <br>
<br>
Il me reste encore quelques recommandations...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65536">Prérequis</h2>
		<div class="ss_part_texte">
		Vous allez devoir utiliser les flux afin de parcourir le fichier texte...<br>
Il y a plus de 336000 lignes dedans, vous pouvez donc choisir un chiffre aléatoire entre 0 et 336000 et aller récupérer le mot choisi !<br>
Pour avoir un chiffre aléatoire entre 0 et 336529, j'ai fait ceci : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="n">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()</span> <span class="o">*</span> <span class="mi">100000</span><span class="o">);</span>
<span class="k">while</span><span class="o">(</span><span class="n">i</span> <span class="o">&gt;</span> <span class="mi">336529</span><span class="o">){</span>
  <span class="n">i</span> <span class="o">/=</span> <span class="mi">2</span><span class="o">;</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Mais vous pouvez aussi faire comme ceci : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre><span class="kt">int</span> <span class="n">nbre</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="n">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()*</span><span class="mi">336529</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Pour récupérer les mots par ligne, j'ai utilisé un <strong><span class="violet"><span class="courrier">LineNumberReader</span></span></strong> : vu que cet objet nous retourne le numéro de la ligne en invoquant la méthode <span class="code2 java"><span class="n">getLineNumber</span><span class="o">()</span>
</span>, cet objet était tout indiqué ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Il y a aussi un point qui devrait vous poser problème : la mise à jour de <strong><span class="violet"><span class="courrier">JPanel</span></span></strong>.<br>
J'ai fait comme ceci : j'ai tout retiré de mon conteneur avec la méthode <span class="code2 java"><span class="n">removeAll</span><span class="o">()</span>
</span>, j'y ai remis des composants et invoqué la méthode <span class="code2">revalidate()</span> afin de modifier l'affichage !<br>
<br>
Il va également falloir que vous pensiez à gérer les caractères accentués lorsque vous cliquerez sur le bouton 'E' par exemple, vous devrez aussi afficher les lettres 'E' accentuées... <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
Je ne vais pas tout vous dire... ce serait dommage...<br>
<br>
Par contre, j'insiste sur le fait que c'est un TP difficile, et il vous faudra sûrement plusieurs heures avant d'en venir à bout ! <br>
Prenez donc le temps de poser les problèmes, réfléchissez bien,  et codez bien ! <br>
<br>
Juste pour être bien sûr que vous ayez compris : je vous conseille vivement d'aller lire les chapitres sur les design patterns : j'en ai utilisé, et en plus, j'ai rangé mes classes en packages...<br>
Ne vous inquiétez pas, tout est expliqué dans un des chapitres sur les DP...<br>
<br>
Allez, en avant les zéros !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65535">Correction</h2>
		<div class="ss_part_texte">
		Une fois n'est pas coutume, je ne vais pas mettre tous les codes source ici, je vais vous founir tout mon projet Eclipse avec un .jar exécutable ! <br>
Et pour cause, j'ai beaucoup de classes : <br>
<br>
<div class="centre"><img src="./java_files/131877.jpg" alt="Image utilisateur"></div><br>
<br>
Voici donc une astuce d'Eclipse afin de rapatrier un projet.<br>
<br>
Une fois Eclipse ouvert, faite un clic droit dans la zone où se trouvent vos projets et faites "<strong><span class="arial">import</span></strong>" ; choisissez "<strong><span class="arial">Existing project</span></strong>" dans  "<strong><span class="arial">General</span></strong>" : <br>
<br>
<div class="centre"><img src="./java_files/131878.jpg" alt="Image utilisateur"></div><br>
<br>
Il ne vous reste plus qu'à spécifier l'endroit où vous avez décompressé <a href="http://www.siteduzero.com/uploads/fr/ftp/cysboy/penduz/penduZ.zip">cette archive</a>.<br>
<br>
<div class="rmq information">Une fois décompressé, vous devriez pouvoir lancer le fichier .jar en double cliquant dessus ! <br>
Si rien ne se passe, mettez à jour vos variables d'environnement (<a href="http://www.siteduzero.com/tuto-3-25384-1-votre-premier-programme.html#ss_part_4">cf première partie du tuto</a>).</div><br>
<br>
Vous devriez être capables de comprendre ce code sans souci ! <br>
Avec les progrès en Java que vous venez de faire, c'est du gâteau... <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
<br>
Je reste à disposition par MP pour toute précision !
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Je vous avais prévenus que celui-ci serait difficile !<br>
Mais admettez que vous devez être contents de vous... <br>
<br>
Bon, je vous conseille de faire un 'tite pause. <br>
N'allez pas faire surchauffer vos méninges...<br>
<br>
Dès que vous êtes prêts, on part pour : <strong><span class="orange">Gérez vos conteneurs</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_65571">Gérez vos conteneurs</h1>
	<div id="chap_intro">
	Dans le dernier TP, vous avez dû remarquer que vous devez spécifier une taille spécifique de conteneur. Ceci afin que vos <strong><span class="violet"><span class="courrier">JPanel</span></span></strong> puissent coexister dans une même fenêtre !<br>
Dans ce chapitre, nous allons mettre fin à ce calvaire... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Il y a plusieurs objets qui peuvent vous aider à mieux gérer le contenu de vos IHM ; les deux objets abordés ici vont, je pense, vous rendre un sacré service... <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>

	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65583">Rendre vos conteneurs fractionnables</h2>
		<div class="ss_part_texte">
		<div class="rmq question">Qu'est-ce que tu entends par <span class="italique">fractionnables</span> ?</div><br>
Avant de vous faire un laïus (un petit, je vous rassure), voici à quoi ressemblent des fenêtres à contenus fractionnables : <br>
<br>
<div class="centre"><strong><span class="souligne">votre contenu avec une séparation </span></strong><br>
<br>
<img src="./java_files/136678.jpg" alt="Image utilisateur"> <br>
</div><br>
<div class="centre"><strong><span class="souligne">le même contenu pendant le déplacement de la séparation</span></strong> <br>
<br>
<img src="./java_files/136679.jpg" alt="Image utilisateur"> <br>
</div><br>
<div class="centre"><strong><span class="souligne">et le résultat après déplacement</span></strong> <br>
<br>
<img src="./java_files/136680.jpg" alt="Image utilisateur"></div><br>
<br>
<br>
Ceci correspond à l'intérieur d'un objet <span class="violet"><span class="courrier"><strong>JFrame</strong></span></span>.<br>
La barre au milieu est un objet déplaçable qui permet d'agrandir une zone tout en rétrécissant celle d'à côté...<br>
Ici, dans la première image, le barre est vers la gauche. La deuxième image est prise pendant que je déplace la barre centrale, et enfin la troisième correspond au résultat lorsque j'ai relâché le bouton de ma souris !<br>
Vous pouvez constater que le conteneur de gauche est devenu plus grand au détriment de celui de droite...<br>
<div class="rmq question">C'est comme une espèce de séparateur qui fonctionne à la façon des vases communiquants...</div><br>
Vous avez tout compris !<br>
Je vous rassure tout de suite, ce composant est très simple d'utilisation... <img src="./java_files/ange.png" alt=":ange:" class="smilies"><br>
En fait, les composants abordés dans ce chapitre s'utilisent facilement.<br>
<br>
Je ne vais pas vous faire mariner plus longtemps : l'objet utilisé ici est un <strong><span class="violet"><span class="courrier">JSplitPane</span></span></strong>.<br>
<br>
Voici le code source que j'ai utilisé pour avoir le résultat ci-dessus : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JSplitPane</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="c">//On déclare notre objet JSplitPane</span>
	<span class="kd">private</span> <span class="n">JSplitPane</span> <span class="n">split</span><span class="o">;</span>
	
	<span class="c">//Vous êtes habitués à cette classe, maintenant... ;)</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Gérer vos conteneur"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
				
		<span class="c">//On crée deux conteneurs de couleurs différentes</span>
		<span class="n">JPanel</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">pan</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
		
		<span class="n">JPanel</span> <span class="n">pan2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">pan2</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
		
		<span class="c">//On construit enfin notre séparateur</span>
		<span class="n">split</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSplitPane</span><span class="o">(</span><span class="n">JSplitPane</span><span class="o">.</span><span class="na">HORIZONTAL_SPLIT</span><span class="o">,</span> <span class="n">pan</span><span class="o">,</span> <span class="n">pan2</span><span class="o">);</span>
		
		<span class="c">//On le passe ensuite au contentPane de notre objet Fenetre</span>
		<span class="c">//placé au centre pour qu'il utilise tout l'espace disponible</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">split</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq question">Nous voyons l'attribut <span class="code2 java"><span class="n">JSplitPane</span><span class="o">.</span><span class="na">HORIZONTAL_SPLIT</span>
</span> dans le constructeur de l'objet : cela veut-il dire que nous pouvons avoir d'autres types de séparations ?</div><br>
Je vois que vous comprenez très vite ! <br>
Vous pouvez avoir une séparation verticale en utilisant l'attribut <span class="code2 java"><span class="n">JSplitPane</span><span class="o">.</span><span class="na">VERTICAL_SPLIT</span>
</span> : <br>
<br>
<div class="centre"><img src="./java_files/136685.jpg" alt="Image utilisateur"></div><br>
<div class="rmq question">On le savait ! <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
Mais, dis-nous, les deux autres paramètres sont nécessairement des <strong><span class="violet"><span class="courrier">JPanel</span></span></strong> ?</div><br>
Ici, j'ai utilisé des <strong><span class="violet"><span class="courrier">JPanel</span></span></strong>, mais en fait, vous pouvez utiliser n'importe quelle classe dérivant de <strong><span class="violet"><span class="courrier">JComponent</span></span></strong> (conteneur, bouton, case à cocher...) : elle n'est pas belle, la vie ?  <img src="./java_files/soleil.png" alt=":soleil:" class="smilies"> <br>
<br>
Je ne vous avais donc pas menti : cet objet est vraiment très simple d'utilisation, mais je ne vais pas vous laisser tout de suite...<br>
Vous ne l'avez peut-être pas remarqué mais ces objets ne peuvent pas faire disparaître entièrement les côtés. <br>
Dans notre cas, la fenêtre est petite, mais vous aurez peut-être l'occasion d'avoir une grande IHM et souvent d'agrandir / de rétrécir vos contenus.<br>
L'objet <strong><span class="violet"><span class="courrier">JSplitPane</span></span></strong> a une méthode qui permet de rendre la barre de séparation intelligente, enfin presque...<br>
La dite méthode ajoute deux petits boutons sur votre barre et, lorsque vous cliquerez dessus, rétrécira le côté vers lequel pointe la flèche dans le bouton.<br>
<div class="rmq question">Hein ?!?  <img src="./java_files/pinch.png" alt="&gt;_&lt;" class="smilies"> </div><br>
Voici l'illustration de mes propos : <br>
<br>
<div class="centre"><img src="./java_files/136687.jpg" alt="Image utilisateur"></div><br>
<br>
Pour avoir ces deux boutons en plus sur votre barre, il vous suffit d'invoquer la méthode <span class="code2 java"><span class="n">split</span><span class="o">.</span><span class="na">setOneTouchExpandable</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span> (mon objet s'appelle toujours <span class="courrier">split</span>) et le tour est joué !<br>
Amusez-vous à cliquer sur ces boutons et vous verrez à quoi ils servent.<br>
<br>
Avant de vous laisser fouiner un peu sur cet objet, vous devez savoir que vous pouvez définir une taille de séparateur grâce à la méthode <span class="code2 java"><span class="n">split</span><span class="o">.</span><span class="na">setDividerSize</span><span class="o">(</span><span class="kt">int</span> <span class="n">size</span><span class="o">)</span>
</span> ; voici ce que j'ai obtenu avec une taille de 35 : <br>
<br>
<div class="centre"><img src="./java_files/136690.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez également définir où doit s'afficher la barre de séparation. Ceci se fait grâce à la méthode <span class="code2 java"><span class="n">setDividerLocation</span><span class="o">(</span><span class="kt">int</span> <span class="n">location</span><span class="o">);</span>
</span> ou <span class="code2 java"><span class="n">setDividerLocation</span><span class="o">(</span><span class="kt">double</span> <span class="n">location</span><span class="o">);</span>
</span>.<br>
Avant de vous montrer un exemple de code utilisant cette méthode, vous avez dû comprendre que, vu que cet objet peut prendre des sous-classes de <strong><span class="violet"><span class="courrier">JComponent</span></span></strong>, il pouvait donc aussi prendre des <strong><span class="violet"><span class="courrier">JSplitPane</span></span></strong> ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
Voici ce que j'ai pu obtenir : <br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<div class="centre"><img src="./java_files/136770.jpg" alt="Image utilisateur"></div><br>
</div></div><br>
Ceci, avec ce code : <br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JSplitPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTextArea</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="c">//On déclare notre objet JTextPane</span>
	<span class="kd">private</span> <span class="n">JTextArea</span> <span class="n">textPane</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTextArea</span><span class="o">();</span>
	<span class="c">//L'objet qui va gérer le scroll</span>
	<span class="c">//En lui passant un objet JComponent dans le constructeur</span>
	<span class="kd">private</span> <span class="n">JScrollPane</span> <span class="n">scroll</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">textPane</span><span class="o">);</span>
	
	<span class="c">//Vous êtes habitués à cette classe, maintenant... ;)</span>
	<span class="c">//On déclare notre objet JSplitPane</span>
	<span class="kd">private</span> <span class="n">JSplitPane</span> <span class="n">split</span><span class="o">,</span> <span class="n">split2</span><span class="o">,</span> <span class="n">split3</span><span class="o">;</span>
	
	<span class="c">//Familiers avec celle-là également... ;)</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Gérer vos conteneur"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
		
		
		<span class="c">//On crée deux conteneurs de couleurs différentes</span>
		<span class="n">JPanel</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">pan</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>		
		<span class="n">JPanel</span> <span class="n">pan2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">pan2</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
		<span class="n">JPanel</span> <span class="n">pan3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">pan3</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">orange</span><span class="o">);</span>
		<span class="n">JPanel</span> <span class="n">pan4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">pan4</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">YELLOW</span><span class="o">);</span>
		<span class="c">//On construit enfin notre séparateur</span>
		<span class="n">split</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSplitPane</span><span class="o">(</span><span class="n">JSplitPane</span><span class="o">.</span><span class="na">HORIZONTAL_SPLIT</span><span class="o">,</span> <span class="n">pan</span><span class="o">,</span> <span class="n">pan4</span><span class="o">);</span>
		<span class="c">//On place le séparateur</span>
		<span class="n">split</span><span class="o">.</span><span class="na">setDividerLocation</span><span class="o">(</span><span class="mi">80</span><span class="o">);</span>
		<span class="n">split2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSplitPane</span><span class="o">(</span><span class="n">JSplitPane</span><span class="o">.</span><span class="na">HORIZONTAL_SPLIT</span><span class="o">,</span> <span class="n">pan3</span><span class="o">,</span> <span class="n">pan2</span><span class="o">);</span>
		<span class="c">//On place le séparateur</span>
		<span class="n">split2</span><span class="o">.</span><span class="na">setDividerLocation</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
		<span class="c">//On passe les deux précédents JSplitPane à celui-ci</span>
		<span class="n">split3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSplitPane</span><span class="o">(</span><span class="n">JSplitPane</span><span class="o">.</span><span class="na">VERTICAL_SPLIT</span><span class="o">,</span> <span class="n">split</span><span class="o">,</span> <span class="n">split2</span><span class="o">);</span>
		<span class="c">//On place le séparateur</span>
		<span class="n">split3</span><span class="o">.</span><span class="na">setDividerLocation</span><span class="o">(</span><span class="mi">80</span><span class="o">);</span>
		
		<span class="c">//On le passe ensuite au contentPane de notre objet Fenetre</span>
		<span class="c">//placé au centre pour qu'il utilise tout l'espace disponible</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">split3</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
<br>
Ce que je peux vous conseiller, c'est d'essayer d'adapter cet objet au dernier TP.<br>
Je pense que vous en savez assez pour utiliser cet objet comme il convient. Nous allons à présent voir un autre objet bien pratique, lui aussi. Il permet d'avoir un scroll à côté de vos conteneurs afin de pouvoir dépasser les limites de ceux-ci ! <img src="./java_files/waw.png" alt=":waw:" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65582">Ajouter des scrolls</h2>
		<div class="ss_part_texte">
		Afin que vous puissiez mieux juger de l'utilité de l'objet que nous allons utiliser ici, nous allons voir un nouvel objet de texte : un <strong><span class="violet"><span class="courrier">JTextArea</span></span></strong>.<br>
Cet objet est très simple au demeurant, c'est une forme de <strong><span class="violet"><span class="courrier">JTextField</span></span></strong>, mais plus grand ! Voyez plutôt : <br>
<br>
<div class="centre"><img src="./java_files/136760.jpg" alt="Image utilisateur"></div><br>
<br>
Voici le code source utilisé pour avoir ce résultat (sans le texte, hein...) : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTextArea</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="c">//On déclare notre objet JTextArea</span>
	<span class="kd">private</span> <span class="n">JTextArea</span> <span class="n">textPane</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTextArea</span><span class="o">();</span>
	
	<span class="c">//Vous êtes habitués à cette classe, maintenant... ;)</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Gérer vos conteneur"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
		
		<span class="c">//On ajoute l'objet au contentPane de notre fenêtre</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">textPane</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pourrez voir que nous pouvons directement écrire dans ce composant, et que celui-ci ne retourne pas directement à la ligne si vous atteignez le bord droit de la fenêtre.<br>
<br>
Afin de voir si les lettres tapées au clavier sont bien dans notre objet, vous pouvez récupérer le texte saisi grâce à la méthode <span class="code2 java"><span class="n">getText</span><span class="o">()</span>
</span>. <br>
Voici un code d'exemple ainsi que le résultat obtenu : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTextArea</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="c">//On déclare notre objet JTextArea</span>
	<span class="kd">private</span> <span class="n">JTextArea</span> <span class="n">textPane</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTextArea</span><span class="o">();</span>
	
	<span class="c">//Vous êtes habitués à cette classe, maintenant... ;)</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Gérer vos conteneur"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
		
		<span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span>  <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Bouton"</span><span class="o">);</span>
		<span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">){</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Texte écrit dans le JTextArea : "</span><span class="o">);</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"--------------------------------"</span><span class="o">);</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">textPane</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>				
			<span class="o">}</span>
		<span class="o">});</span>
		<span class="c">//On ajoute l'objet au contentPane de notre fenêtre</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">textPane</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
Et le résultat : <br>
<br>
<div class="centre"><img src="./java_files/136761.jpg" alt="Image utilisateur"></div><br>
<br>
Le code est simple et clair !<br>
Cependant, les plus curieux d'entre vous l'auront remarqué : si vous écrivez trop de lignes, vous dépassez la limite imposée par le bas de votre fenêtre... Le texte est bien écrit mais vous ne le voyez pas... <img src="./java_files/triste.png" alt=":(" class="smilies"><br>
Exactement comme pour le bord droit...<br>
<br>
Pour ce genre de problème, il existe ce qu'on appelle <strong>des scrolls</strong>.<br>
Ce sont de petit ascenseurs positionnés sur le côté et / ou sur le bas de votre fenêtre et qui vous permettent de dépasser les limites imposées par la dite fenêtre !<br>
<br>
Voyez plutôt : <br>
<br>
<div class="centre"><img src="./java_files/136762.jpg" alt="Image utilisateur"></div><br>
<br>
Vous voyez le petit ascenseur à droite et en bas de la fenêtre...<br>
Avec ceux-ci, fini les problèmes de taille de vos conteneurs ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
Voici le code que j'ai utilisé afin d'avoir ce résultat : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTextArea</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="c">//On déclare notre objet JTextArea</span>
	<span class="kd">private</span> <span class="n">JTextArea</span> <span class="n">textPane</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTextArea</span><span class="o">();</span>
	<span class="c">//L'objet qui va gérer le scroll</span>
	<span class="c">//En lui passant un objet JComponent dans le constructeur</span>
	<span class="kd">private</span> <span class="n">JScrollPane</span> <span class="n">scroll</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">textPane</span><span class="o">);</span>
	
	<span class="c">//Vous êtes habitués à cette classe, maintenant... ;)</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Gérer vos conteneur"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
		
		<span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span>  <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Bouton"</span><span class="o">);</span>
		<span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">){</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Texte écrit dans le JTextArea : "</span><span class="o">);</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"--------------------------------"</span><span class="o">);</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">textPane</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>				
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="c">//On ajoute l'objet au contentPane de notre fenêtre</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">scroll</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous avez vu que l'objet utilisé afin d'avoir un ascenseur s'appelle un : <strong><span class="violet"><span class="courrier">JScrollPane</span></span></strong>.<br>
Maintenant, vous pouvez écrire aussi loin que vous le voulez, <strong>vers le bas et vers la droite !</strong><br>
Les ascenseurs apparaissent automatiquement lorsque vous dépassez les limites autorisées. Cependant, vous pouvez redéfinir un comportement grâce aux méthodes : <br>
<ul>
<li><span class="code2 java"><span class="n">scroll</span><span class="o">.</span><span class="na">setHorizontalScrollBarPolicy</span><span class="o">(</span><span class="kt">int</span> <span class="n">policy</span><span class="o">)</span>
</span> : permet de définir le comportement du scroll en bas de votre fenêtre ;</li>
<li><span class="code2 java"><span class="n">scroll</span><span class="o">.</span><span class="na">setVerticalScrollBarPolicy</span><span class="o">(</span><span class="kt">int</span> <span class="n">policy</span><span class="o">)</span>
</span> : permet de définir le comportement du scroll à droite de votre fenêtre.</li>
</ul><br>
<br>
Le paramètre de ces méthodes est un entier défini dans la classe <strong><span class="violet"><span class="courrier">JScrollPane</span></span></strong>, il peut prendre les valeurs suivantes : <br>
<ul>
<li><span class="code2 java"><span class="n">JScrollPane</span><span class="o">.</span><span class="na">VERTICAL_SCROLLBAR_AS_NEEDED</span>
</span> : le scroll vertical n'est visible que s'il est nécessaire, donc s'il y a dépassement de la taille en hauteur ;</li>
<li><span class="code2 java"><span class="n">JScrollPane</span><span class="o">.</span><span class="na">VERTICAL_SCROLLBAR_NEVER</span>
</span> : le scroll vertical n'est jamais visible, même si vous dépassez, mais par contre, le conteneur s'allonge tout de même !</li>
<li><span class="code2 java"><span class="n">JScrollPane</span><span class="o">.</span><span class="na">VERTICAL_SCROLLBAR_ALWAYS</span>
</span> : le scroll vertical est toujours visible même si vous ne dépassez pas !</li>
</ul><br>
<div class="rmq information">Les mêmes entiers existent pour le scroll horizontal, mais vous devrez remplacer <span class="courrier">VERTICAL</span> par <span class="courrier">HORIZONTAL</span> !</div><br>
<br>
Vous devez tout de même savoir que cet objet en utilise un autre : un <strong><span class="courrier"><span class="violet">JScrollBar</span></span></strong>. Les deux barres de défilement sont deux instances de cet objet...<br>
<br>
Je pense vous avoir montré le B.A.BA, mais si vous voulez en savoir plus, vous pouvez aller faire un tour <a href="http://java.sun.com/docs/books/tutorial/uiswing/components/scrollpane.html">ici</a>.<br>
<br>
Nous avons vu comment séparer un conteneur, nous avons vu comment agrandir un conteneur, nous allons maintenant voir comment ajouter dynamiquement des conteneurs ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65569">Avoir plusieurs contenus</h2>
		<div class="ss_part_texte">
		Dans ce chapitre, vous allez apprendre à avoir plusieurs "pages" dans votre IHM...<br>
Jusqu'à maintenant, vous ne pouviez pas avoir plusieurs contenus dans votre fenêtre, à moins de leur faire partager l'espace disponible. <img src="./java_files/triste.png" alt=":(" class="smilies"><br>
<br>
Il existe une solution toute simple qui consiste à créer des onglets, et, croyez-moi, c'est aussi très simple à faire.<br>
L'objet à utiliser est un <strong><span class="violet"><span class="courrier">JTabbedPane</span></span></strong>. <br>
Afin d'avoir un exemple plus ludique, j'ai constitué une classe héritée de <strong><span class="violet"><span class="courrier">JPanel</span></span></strong> afin de créer des onglets ayant une couleur de fond différente... Cette classe ne devrait plus vous poser de problèmes : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Panneau</span> <span class="kd">extends</span> <span class="n">JPanel</span><span class="o">{</span>
	
	<span class="kd">private</span> <span class="n">Color</span> <span class="n">color</span> <span class="o">=</span> <span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">COUNT</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Panneau</span><span class="o">(){}</span>
	<span class="kd">public</span> <span class="nf">Panneau</span><span class="o">(</span><span class="n">Color</span> <span class="n">color</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">color</span> <span class="o">=</span> <span class="n">color</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">message</span> <span class="o">=</span> <span class="s">"Contenu du panneau N°"</span> <span class="o">+</span> <span class="o">(++</span><span class="n">COUNT</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">color</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">15</span><span class="o">));</span>
		<span class="n">g</span><span class="o">.</span><span class="na">drawString</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">message</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
J'ai utilisé cet objet afin de créer un tableau de <span class="violet"><strong><span class="courrier">Panneau</span></strong></span>. Chaque instance est ensuite ajoutée à mon objet gérant les onglets via sa méthode <span class="code2 java"><span class="n">add</span><span class="o">(</span><span class="n">String</span> <span class="n">title</span><span class="o">,</span> <span class="n">JComponent</span> <span class="n">comp</span><span class="o">)</span>
</span>.<br>
Vous voudriez peut-être avoir le code tout de suite...<br>
Le voici : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTabbedPane</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTabbedPane</span> <span class="n">onglet</span><span class="o">;</span>
	<span class="c">//Vous êtes habitués à cette classe, maintenant... ;)</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Gérer vos conteneurs"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">400</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
		
		<span class="c">//Création de plusieurs Panneau</span>
		<span class="n">Panneau</span><span class="o">[]</span> <span class="n">tPan</span> <span class="o">=</span> <span class="o">{</span>	<span class="k">new</span> <span class="n">Panneau</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">),</span>
							<span class="k">new</span> <span class="nf">Panneau</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">GREEN</span><span class="o">),</span>
							<span class="k">new</span> <span class="nf">Panneau</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">)};</span>
		
		<span class="c">//Création de notre conteneur d'onglets</span>
		<span class="n">onglet</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTabbedPane</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="n">Panneau</span> <span class="n">pan</span> <span class="o">:</span> <span class="n">tPan</span><span class="o">){</span>
			<span class="c">//Méthode d'ajout d'onglet</span>
			<span class="n">onglet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"Onglet N°"</span><span class="o">+(++</span><span class="n">i</span><span class="o">),</span> <span class="n">pan</span><span class="o">);</span>
			<span class="c">//Vous pouvez aussi utiliser la méthode addTab</span>
			<span class="c">//onglet.addTab("Onglet N°"+(++i), pan);</span>

		<span class="o">}</span>
		<span class="c">//on passe ensuite les onglets au contentPane</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">onglet</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui m'a donné : <br>
<br>
<div class="centre"><img src="./java_files/136779.jpg" alt="Image utilisateur"> <img src="./java_files/136780.jpg" alt="Image utilisateur"> <img src="./java_files/136781.jpg" alt="Image utilisateur"></div><br>
<br>
Vous constatez que l'utilisation de cet objet est très simple, là aussi...<br>
Je vais tout de même vous montrer quelques méthodes bien utiles. Par exemple, vous pouvez ajouter une image en guise d'icône à côté du titre de l'onglet. <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
Ce qui pourrait nous donner : <br>
<br>
<div class="centre"><img src="./java_files/136783.jpg" alt="Image utilisateur"></div><br>
<br>
Le code est identique au précédent, à l'exception de ce qu'il y a dans la boucle : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="syntax"><pre><span class="k">for</span><span class="o">(</span><span class="n">Panneau</span> <span class="n">pan</span> <span class="o">:</span> <span class="n">tPan</span><span class="o">){</span>
	<span class="c">//Méthode d'ajout d'onglets			</span>
	<span class="n">onglet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"Onglet N°"</span><span class="o">+(++</span><span class="n">i</span><span class="o">),</span> <span class="n">pan</span><span class="o">);</span>
        <span class="c">//On ajoute l'image à l'onglet en cours</span>
        <span class="c">//Les index d'onglets fonctionnent comme les tableaux : ils commencent à 0</span>
	<span class="n">onglet</span><span class="o">.</span><span class="na">setIconAt</span><span class="o">((</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">),</span> <span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"java.jpg"</span><span class="o">));</span>
        
        <span class="c">//Vous pouvez aussi utiliser la méthode addTab</span>
        <span class="c">//onglet.addTab("Onglet N°"+(++i), new ImageIcon("java.jpg"), pan);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous avez également la possibilité de changer l'emplacement des entêtes d'onglets en spécifiant le dit emplacement dans le constructeur, comme ceci : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="c">//affiche les onglets en bas de la fenêtre</span>
<span class="n">JTabbedPane</span> <span class="n">onglet</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTabbedPane</span><span class="o">(</span><span class="n">JTabbedPane</span><span class="o">.</span><span class="na">BOTTOM</span><span class="o">);</span>

<span class="c">//affiche les onglets à gauche de la fenêtre</span>
<span class="n">JTabbedPane</span> <span class="n">onglet</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTabbedPane</span><span class="o">(</span><span class="n">JTabbedPane</span><span class="o">.</span><span class="na">LEFT</span><span class="o">);</span>

<span class="c">//affiche les onglets à droite de la fenêtre</span>
<span class="n">JTabbedPane</span> <span class="n">onglet</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTabbedPane</span><span class="o">(</span><span class="n">JTabbedPane</span><span class="o">.</span><span class="na">RIGHT</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici ce que vous pouvez obtenir : <br>
<br>
<div class="centre"><img src="./java_files/136790.jpg" alt="Image utilisateur"> <img src="./java_files/136789.jpg" alt="Image utilisateur"> <img src="./java_files/136791.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Vous pouvez aussi utiliser la méthode <span class="code2 java"><span class="n">setTabPlacement</span><span class="o">(</span><span class="n">JTabbedPane</span><span class="o">.</span><span class="na">BOTTOM</span><span class="o">);</span>
</span> qui a le même effet : ici, la barre d'exploration des onglets sera située en bas du conteneur.</div><br>
<br>
Vous avez aussi la possibilité d'ajouter ou de retirer des onglets. Pour ajouter, vous avez deviné comment procéder ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
Pour retirer un onglet, nous allons utiliser la méthode <span class="code2 java"><span class="n">remove</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">)</span>
</span>. Cette méthode parle d'elle-même, elle va retirer l'onglet ayant pour index le paramètre passé ! <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTabbedPane</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="c">//On déclare notre objet JSplitPane</span>
	<span class="kd">private</span> <span class="n">JTabbedPane</span> <span class="n">onglet</span><span class="o">;</span>
	<span class="c">//Compteur pour le nombre d'onglets</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">nbreTab</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	
	<span class="c">//Vous êtes habitués à cette classe, maintenant... ;)</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Gérer vos conteneurs"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">400</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
		
		<span class="c">//Création de plusieurs Panneau</span>
		<span class="n">Panneau</span><span class="o">[]</span> <span class="n">tPan</span> <span class="o">=</span> <span class="o">{</span>	<span class="k">new</span> <span class="n">Panneau</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">RED</span><span class="o">),</span>
							<span class="k">new</span> <span class="nf">Panneau</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">GREEN</span><span class="o">),</span>
							<span class="k">new</span> <span class="nf">Panneau</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">)};</span>
		
		<span class="c">//Création de notre conteneur d'onglets</span>
		<span class="n">onglet</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTabbedPane</span><span class="o">();</span>
		<span class="k">for</span><span class="o">(</span><span class="n">Panneau</span> <span class="n">pan</span> <span class="o">:</span> <span class="n">tPan</span><span class="o">){</span>
			<span class="c">//Méthode d'ajout d'onglets</span>
			<span class="n">onglet</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="s">"Onglet N°"</span><span class="o">+(++</span><span class="n">nbreTab</span><span class="o">),</span> <span class="n">pan</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="c">//on passe ensuite les onglets au contentPane</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">onglet</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		
		<span class="c">//Ajout du bouton pour ajouter des onglets</span>
		<span class="n">JButton</span> <span class="n">nouveau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Ajouter un onglet"</span><span class="o">);</span>
		<span class="n">nouveau</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">){</span>
				<span class="n">onglet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"Onglet N°"</span><span class="o">+(++</span><span class="n">nbreTab</span><span class="o">),</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">DARK_GRAY</span><span class="o">));</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="c">//Ajout du bouton pour retirer l'onglet sélectionné</span>
		<span class="n">JButton</span> <span class="n">delete</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Effacer l'onglet"</span><span class="o">);</span>
		<span class="n">delete</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">){</span>
				<span class="c">//On récupère l'index de l'onglet sélectionné</span>
				<span class="kt">int</span> <span class="n">selected</span> <span class="o">=</span> <span class="n">onglet</span><span class="o">.</span><span class="na">getSelectedIndex</span><span class="o">();</span>
				<span class="c">//S'il n'y a plus d'onglet, la méthode ci-dessus retourne -1</span>
				<span class="k">if</span><span class="o">(</span><span class="n">selected</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span><span class="n">onglet</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">selected</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="n">JPanel</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">pan</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">nouveau</span><span class="o">);</span>
		<span class="n">pan</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">delete</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>

	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui peut vous donner :<br>
<br>
<div class="centre"><img src="./java_files/136856.jpg" alt="Image utilisateur"></div><br>
<br>
Voilà : vous venez de voir pas mal de choses, simples et utiles !<br>
Il est temps de se diriger vers le topo...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65573">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Vous pouvez scinder le contenu de votre IHM en utilisant un <strong><span class="violet"><span class="courrier">JSplitPane</span></span></strong>.</li>
<li>Celui-ci vous permet de couper votre IHM dans le sens vertical ou horizontal.</li>
<li>Vous pouvez spécifier la taille du séparateur grâce à la méthode <span class="code2 java"><span class="n">split</span><span class="o">.</span><span class="na">setDividerSize</span><span class="o">(</span><span class="kt">int</span> <span class="n">size</span><span class="o">)</span>
</span> et sa position avec <span class="code2 java"><span class="n">split</span><span class="o">.</span><span class="na">setDividerLocation</span><span class="o">(</span><span class="kt">int</span> <span class="n">size</span><span class="o">)</span>
</span>.</li>
<li>Vous avez la possibilité d'ajouter des ascenseurs à vos conteneurs grâce à l'objet <strong><span class="courrier"><span class="violet">JScrollPane</span></span></strong>.</li>
<li>Les ascenseurs de cet objet peuvent être affichés ou non selon le mode d'affichage que vous avez choisi avec la méthode <span class="code2 java"><span class="n">setHorizontalScrollBarPolicy</span><span class="o">(</span><span class="kt">int</span> <span class="n">policy</span><span class="o">)</span>
</span> ou / et  <span class="code2 java"><span class="n">setVerticalScrollBarPolicy</span><span class="o">(</span><span class="kt">int</span> <span class="n">policy</span><span class="o">)</span>
</span>.</li>
<li>Vous pouvez utiliser des onglets grâce à l'objet <strong><span class="violet"><span class="courrier">JTabbedPane</span></span></strong>.</li>
<li>Vous avez la possibilité d'ajouter des onglets grâce à la méthode <span class="code2 java"><span class="n">addtab</span><span class="o">()</span>
</span> ou la méthode <span class="code2 java"><span class="n">add</span><span class="o">()</span>
</span>.</li>
<li>Une icône peut être spécifiée à un emplacement donné grâce à la méthode <span class="code2 java"><span class="n">setIconAt</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">,</span> <span class="n">ImageIcon</span> <span class="n">img</span><span class="o">)</span>
</span>.</li>
<li>Vous avez aussi la possibilité de spécifier où doit se mettre la barre de navigation des onglets en le spécifiant dans le constructeur <span class="code2 java"><span class="k">new</span> <span class="nf">JTabbedPane</span><span class="o">(</span><span class="n">JTabbedPane</span><span class="o">.</span><span class="na">BOTTOM</span><span class="o">)</span>
</span> ou encore grâce à la méthode <span class="code2 java"><span class="o">.</span><span class="na">setTabPlacement</span><span class="o">(</span><span class="n">JTabbedPane</span><span class="o">.</span><span class="na">BOTTOM</span><span class="o">);</span>
</span>.</li>
<li>Des onglets peuvent être retirés en invoquant la méthode <span class="code2 java"><span class="n">removeAt</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">)</span>
</span>.</li>
</ul><br>
<br>
<br>
Je ne vais pas vous faire l'affront de vous faire un QCM tellement ce chapitre était simple...<br>

		</div>
		<hr>
		
	<div id="chap_conclusion">
	Nos venons de voir comment gérer le contenu de vos fenêtres avec différents objets.<br>
Vous pouvez, bien sûr, les cumuler et mettre des panneaux avec séparateurs dans un onglet...<br>
<br>
Vous avez dû remarquer que tous les objets vus dans ce chapitre ont un nom qui se termine avec <strong><span class="violet"><span class="courrier">Pane</span></span></strong>.<br>
Ils appartiennent donc à la famille des conteneurs ! <br>
<br>
Dans le prochain chapitre, nous allons voir un conteneur bien spécial, lui aussi :<strong><span class="orange"><span class="arial"> Les arbres</span></span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_65570">Les arbres</h1>
	<div id="chap_intro">
	Bon : autant les objets vus dans le chapitre précédent étaient simples, autant celui que nous allons voir est assez compliqué.<br>
Cela n'empêche pas que ce dernier est très pratique et très utilisé.<br>
<br>
Vous devez tous déjà avoir vu un arbre, non pas celui du monde végétal, mais celui qui permet d'explorer des dossiers. Nous allons voir comment utiliser et exploiter un tel objet, et interagir avec lui : ne vous inquiétez pas, tout partira de zéro...<br>
<br>
Le mieux, c'est encore de rentrer dans le vif du sujet ! <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>

	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65568">La composition des arbres</h2>
		<div class="ss_part_texte">
		Tout d'abord, pour ceux qui ne verraient pas de quoi je parle, voici ce qu'on appelle un arbre (<strong><span class="violet"><span class="courrier">JTree</span></span></strong>) : <br>
<br>
<div class="centre"><img src="./java_files/137479.jpg" alt="Image utilisateur"></div><br>
<br>
La chose bien pratique avec cet objet, c'est que, même s'il ne ressemble pas à un chêne ou à un autre arbre, celui-ci est composé de la même façon !<br>
<br>
<div class="rmq question">Euh... Qu'est-ce que tu racontes ?</div><br>
En fait, lorsque vous regardez bien un arbre, celui-ci est constitué de plusieurs sous-ensembles : <br>
<ul>
<li>des racines ;</li>
<li>un tronc ;</li>
<li>des branches ;</li>
<li>des feuilles.</li>
</ul><br>
<br>
L'objet <strong><span class="violet"><span class="courrier">JTree</span></span></strong> se base sur la même architecture, enfin presque. Vous aurez donc :<br>
<ul>
<li>une racine : répertoire le plus haut dans la hiérarchie ; ici, seul "<strong><span class="arial">Racine</span></strong>" est considéré comme une racine ;</li>
<li>une ou plusieurs branches : un ou plusieurs sous-répertoires, "<strong><span class="arial">Fichier enfant N°1-2-3-4</span></strong>" sont des branches (ou encore "<strong><span class="arial">Noeud N°2-4-6</span></strong>") ;</li>
<li>une ou plusieurs feuilles : éléments se trouvant en bas de la hiérarchie, ici "<strong><span class="arial">Sous Fichier enfant N°1-2-3-4</span></strong>" ou encore "<strong><span class="arial">Noeud N°1-3-5-7</span></strong>" sont des feuilles. </li>
</ul><br>
<br>
Voici le code que j'ai utilisé : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTree</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultMutableTreeNode</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTree</span> <span class="n">arbre</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Les arbres"</span><span class="o">);</span>
		<span class="c1">//On invoque la méthode de construction de notre arbre</span>
		<span class="n">buildTree</span><span class="o">();</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">buildTree</span><span class="o">(){</span>
		<span class="c1">//Création d'une racine</span>
		<span class="n">DefaultMutableTreeNode</span> <span class="n">racine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="s">"Racine"</span><span class="o">);</span>
		
		<span class="c1">//Nous allons ajouter des branches et des feuilles à notre racine</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">12</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
			<span class="n">DefaultMutableTreeNode</span> <span class="n">rep</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="s">"Noeud N°"</span><span class="o">+</span><span class="n">i</span><span class="o">);</span>
			
			<span class="c1">//S'il s'agit d'un nombre pair, on rajoute une branche</span>
			<span class="k">if</span><span class="o">((</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">)</span> <span class="o">==</span> <span class="mi">0</span><span class="o">){</span>
				<span class="c1">//Et une branche en plus ! Une !</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">;</span> <span class="n">j</span><span class="o">++){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">rep2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="s">"Fichier enfant N°"</span> <span class="o">+</span> <span class="n">j</span><span class="o">);</span>
					<span class="c1">//Cette fois, on ajoute nos feuilles</span>
					<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">;</span> <span class="n">k</span><span class="o">++)</span>
							<span class="n">rep2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="s">"Sous Fichier enfant N°"</span> <span class="o">+</span> <span class="n">k</span><span class="o">));</span>
					<span class="n">rep</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rep2</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="c1">//On ajoute la feuille ou la branche à la racine</span>
			<span class="n">racine</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rep</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="c1">//On crée, avec notre hiérarchie, un arbre</span>
		<span class="n">arbre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">(</span><span class="n">racine</span><span class="o">);</span>
		
		<span class="c1">//Que nous plaçons sur le ContentPane de notre JFrame à l'aide d'un scroll </span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">arbre</span><span class="o">));</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Si vous avez du mal à vous y retrouver, essayez cette version de la méthode <span class="code2 java"><span class="n">buildTree</span><span class="o">()</span>
</span> : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">private</span> <span class="kt">void</span> <span class="nf">buildTree</span><span class="o">(){</span>
	<span class="c1">//Création d'une racine</span>
	<span class="n">DefaultMutableTreeNode</span> <span class="n">racine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="s">"Racine"</span><span class="o">);</span>
		
	<span class="c1">//Nous allons ajouter des branches et des feuilles à notre racine</span>
	<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
		<span class="n">DefaultMutableTreeNode</span> <span class="n">rep</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="s">"Noeud N°"</span><span class="o">+</span><span class="n">i</span><span class="o">);</span>
			
		<span class="c1">//On rajoute 4 branches</span>
		<span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="o">){</span>	
			<span class="n">DefaultMutableTreeNode</span> <span class="n">rep2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="s">"Fichier enfant"</span><span class="o">);</span>
			<span class="n">rep</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rep2</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="c1">//On ajoute la feuille ou la branche à la racine</span>
		<span class="n">racine</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rep</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="c1">//On crée, avec notre hiérarchie, un arbre</span>
	<span class="n">arbre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">(</span><span class="n">racine</span><span class="o">);</span>
	
	<span class="c1">//Que nous plaçons sur le ContentPane de notre JFrame à l'aide d'un scroll </span>
	<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">arbre</span><span class="o">));</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui devrait vous donner : <br>
<br>
<div class="centre"><img src="./java_files/137480.jpg" alt="Image utilisateur"></div><br>
<br>
En ayant manipulé ces deux objets, vous devez vous rendre compte que vous créez une véritable hiérarchie avant de créer votre arbre et d'afficher celui-ci ! <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
Vous devez aussi vous apercevoir que ce type d'objet est tout indiqué pour lister des fichiers ou des répertoires.<br>
D'ailleurs, nous avons vu comment faire ceci lorsque nous avons abordé les flux.<br>
Nous allons utiliser un arbre afin d'afficher notre arborescence de fichiers : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Hashtable</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTree</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeSelectionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeSelectionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultMutableTreeNode</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.TreePath</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTree</span> <span class="n">arbre</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">racine</span><span class="o">;</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Les arbres"</span><span class="o">);</span>
		<span class="c1">//On invoque la méthode de construction de notre arbre</span>
		<span class="n">listRoot</span><span class="o">();</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">listRoot</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">racine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">();</span>
		 
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">File</span><span class="o">.</span><span class="na">listRoots</span><span class="o">())</span>
		<span class="o">{</span>
			<span class="n">DefaultMutableTreeNode</span> <span class="n">lecteur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">node</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
					
					<span class="n">lecteur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">node</span><span class="o">));</span>
					
				<span class="o">}</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NullPointerException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
			
			<span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lecteur</span><span class="o">);</span>
			
			<span class="c1">//Si nous avons parcouru plus de 50 dossiers, on sort</span>
			<span class="c1">//if(count &gt; 50) {break;}</span>
			
		<span class="o">}</span>
		<span class="c1">//On crée, avec notre hiérarchie, un arbre</span>
		<span class="n">arbre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">);</span>
		
		<span class="c1">//Que nous plaçons sur le ContentPane de notre JFrame à l'aide d'un scroll </span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">arbre</span><span class="o">));</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="nf">listFile</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">,</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">node</span><span class="o">){</span>
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		
		<span class="k">if</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isFile</span><span class="o">())</span>
			<span class="k">return</span> <span class="k">new</span> <span class="nf">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
				<span class="n">count</span><span class="o">++;</span>
				<span class="c1">//pas plus de 5 enfants par noeud</span>
				<span class="k">if</span><span class="o">(</span><span class="n">count</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">subNode</span><span class="o">;</span>
					<span class="k">if</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">()){</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
						<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">subNode</span><span class="o">));</span>
					<span class="o">}</span><span class="k">else</span><span class="o">{</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
					<span class="o">}</span>
					<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">subNode</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="n">node</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce type de code ne devrait plus vous faire peur ! <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
Voici ce que ça me donne, après quelques secondes...<br>
<br>
<div class="centre"><img src="./java_files/137485.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq question">Pas mal, mais du coup, le dossier "<strong><span class="arial">Racine</span></strong>" ne correspond à rien ici !</div><br>
Effectivement ; heureusement, il existe une méthode dans l'objet <strong><span class="violet"><span class="courrier">JTree</span></span></strong> qui permet de ne pas afficher la racine d'une arborescence : <span class="code2 java"><span class="n">setRootVisible</span><span class="o">(</span><span class="n">Boolean</span> <span class="n">ok</span><span class="o">);</span>
</span>.<br>
Il vous suffit donc de rajouter cette instruction à la fin de la méthode <span class="code2 java"><span class="n">listRoot</span><span class="o">()</span>
</span> de notre objet <strong><span class="violet"><span class="courrier">JTree</span></span></strong>, <strong>juste avant d'ajouter notre arbre au ContentPane</strong>.<br>
<br>
Bon : vous arrivez à créer et afficher un arbre, maintenant, nous allons voir comment interagir avec celui-ci ! <img src="./java_files/clin.png" alt=";)" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65567">Des arbres qui vous parlent</h2>
		<div class="ss_part_texte">
		Vous connaissez la musique maintenant, nous allons encore implémenter une interface ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
Celle-ci se nomme <strong><span class="violet"><span class="courrier">TreeSelectionListener</span></span></strong>.<br>
Elle ne comporte qu'une méthode à redéfinir : <span class="code2 java"><span class="n">valueChanged</span><span class="o">(</span><span class="n">TreeSelectionEvent</span> <span class="n">event</span><span class="o">)</span>
</span>.<br>
<br>
Voici un code utilisant une implémentation de la dite interface : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Hashtable</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTree</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeSelectionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeSelectionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultMutableTreeNode</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.TreePath</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTree</span> <span class="n">arbre</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">racine</span><span class="o">;</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Les arbres"</span><span class="o">);</span>
		<span class="c">//On invoque la méthode de construction de notre arbre</span>
		<span class="n">listRoot</span><span class="o">();</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">listRoot</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">racine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">();</span>
		 
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">File</span><span class="o">.</span><span class="na">listRoots</span><span class="o">())</span>
		<span class="o">{</span>
			<span class="n">DefaultMutableTreeNode</span> <span class="n">lecteur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">node</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
					
					<span class="n">lecteur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">node</span><span class="o">));</span>
					
				<span class="o">}</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NullPointerException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
			
			<span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lecteur</span><span class="o">);</span>
			
			<span class="c">//Si nous avons parcouru plus de 50 dossiers, on sort</span>
			<span class="c">//if(count &gt; 50) {break;}</span>
			
		<span class="o">}</span>
		<span class="c">//On crée, avec notre hiérarchie, un arbre</span>
		<span class="n">arbre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setRootVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">addTreeSelectionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">TreeSelectionListener</span><span class="o">(){</span>

			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">valueChanged</span><span class="o">(</span><span class="n">TreeSelectionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">});</span>
		<span class="c">//Que nous plaçons sur le ContentPane de notre JFrame à l'aide d'un scroll </span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">arbre</span><span class="o">));</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="nf">listFile</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">,</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">node</span><span class="o">){</span>
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		
		<span class="k">if</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isFile</span><span class="o">())</span>
			<span class="k">return</span> <span class="k">new</span> <span class="nf">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
				<span class="n">count</span><span class="o">++;</span>
				<span class="c">//pas plus de 5 enfants par noeud</span>
				<span class="k">if</span><span class="o">(</span><span class="n">count</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">subNode</span><span class="o">;</span>
					<span class="k">if</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">()){</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
						<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">subNode</span><span class="o">));</span>
					<span class="o">}</span><span class="k">else</span><span class="o">{</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
					<span class="o">}</span>
					<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">subNode</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="n">node</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui me donne (ben oui, on n'a toujours pas les mêmes dossiers) : <br>
<br>
<div class="centre"><img src="./java_files/137586.jpg" alt="Image utilisateur"></div><br>
<br>
Vous avez maintenant un arbre réactif !<br>
Lorsque vous sélectionnez un dossier, ou un fichier, le nom de ce dernier s'affiche.<br>
Ceci se fait grâce à la méthode <span class="code2 java"><span class="n">getLastSelectedPathComponent</span><span class="o">()</span>
</span> qui retourne un <strong><span class="violet"><span class="courrier">Object</span></span></strong> correspondant au dernier point de l'arbre qui a été cliqué. Il ne reste plus qu'à utiliser la méthode <span class="code2 java"><span class="n">toString</span><span class="o">()</span>
</span> afin de retourner son libellé... <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
Nous avons réussi à afficher le nom du dernier noeud cliqué, mais nous n'allons pas nous arrêter là... Dans notre cas, il peut être intéressant de connaître le chemin d'accès du noeud dans l'arbre ! Surtout dans notre cas, puisque nous listons le contenu de notre disque.<br>
Nous pouvons donc avoir des informations supplémentaires sur une feuille ou une branche en utilisant un objet <strong><span class="violet"><span class="courrier">File</span></span></strong>, par exemple.<br>
<br>
<div class="rmq question">Comment fait-on pour connaître le chemin de l'arborescence ?</div><br>
C'est un tout petit peu plus compliqué, mais rien d'insurmontable... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
L'objet <strong><span class="courrier"><span class="violet">TreeEvent</span></span></strong> en paramètre de la méthode de l'interface vous donne de précieux renseignements, dont la méthode <span class="code2 java"><span class="n">getPath</span><span class="o">()</span>
</span> qui vous retourne un objet <strong><span class="violet"><span class="courrier">TreePath</span></span></strong> qui, lui, contient les objets correspondant aux noeuds du chemin d'accès à un point de l'arbre.<br>
<br>
<div class="rmq question">C'est un peu confus, là...</div><br>
Ne vous inquiétez pas, vous n'avez pas à changer beaucoup de choses pour avoir ce résultat.<br>
En fait, je n'ai modifié que la classe anonyme utilisée pour gérer l'événement déclenché sur l'arbre.<br>
Voici la nouvelle version de votre classe anonyme : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="syntax"><pre><span class="n">arbre</span><span class="o">.</span><span class="na">addTreeSelectionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">TreeSelectionListener</span><span class="o">(){</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">valueChanged</span><span class="o">(</span><span class="n">TreeSelectionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
			<span class="c">//La méthode getPath retourne un objet TreePath</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getAbsolutePath</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getPath</span><span class="o">()));</span>
		<span class="o">}</span>
	<span class="o">}</span>
			
	<span class="kd">private</span> <span class="n">String</span> <span class="nf">getAbsolutePath</span><span class="o">(</span><span class="n">TreePath</span> <span class="n">treePath</span><span class="o">){</span>
		<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
		<span class="c">//On balaie le contenu de notre TreePath</span>
		<span class="k">for</span><span class="o">(</span><span class="n">Object</span> <span class="n">name</span> <span class="o">:</span> <span class="n">treePath</span><span class="o">.</span><span class="na">getPath</span><span class="o">()){</span>
			<span class="c">//Si l'objet à un nom, on l'ajoute au chemin</span>
			<span class="k">if</span><span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
				<span class="n">str</span> <span class="o">+=</span> <span class="n">name</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">str</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">});</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voici ce que j'ai pu obtenir : <br>
<br>
<div class="centre"><img src="./java_files/137588.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir que nous avons maintenant le chemin complet dans notre arbre et, vu que nous utilisons les fichiers de notre système, nous allons pouvoir en savoir plus.<br>
Nous allons donc ajouter un "<strong><span class="italique">coin information</span></strong>" à droite de notre arbre, dans un conteneur à part.<br>
<br>
Essayer de le faire vous-mêmes dans un premier temps, sachant que j'ai obtenu quelque chose comme ça : <br>
<br>
<div class="centre"><img src="./java_files/137593.jpg" alt="Image utilisateur"></div><br>
<br>
Voilà mon code : <br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<h4>Classe Panneau.java</h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTextArea</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Panneau</span> <span class="kd">extends</span> <span class="n">JPanel</span> <span class="o">{</span>
	<span class="kd">private</span> <span class="n">String</span> <span class="n">texte</span> <span class="o">=</span> <span class="s">"Racine de l'arbre."</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JTextArea</span> <span class="n">jta</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Panneau</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">jta</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTextArea</span><span class="o">(</span><span class="n">texte</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setBackground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jta</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTexte</span><span class="o">(</span><span class="n">String</span> <span class="n">texte</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">jta</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">texte</span><span class="o">);</span>
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Classe Fenetre.java</h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JSplitPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTree</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeSelectionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeSelectionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultMutableTreeNode</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.TreePath</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTree</span> <span class="n">arbre</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">racine</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">Panneau</span> <span class="n">panneau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panneau</span><span class="o">();</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">500</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Les arbres"</span><span class="o">);</span>
		<span class="c">//On invoque la méthode de construction de notre arbre</span>
		<span class="n">listRoot</span><span class="o">();</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">listRoot</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">racine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">();</span>
		 
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">File</span><span class="o">.</span><span class="na">listRoots</span><span class="o">())</span>
		<span class="o">{</span>
			<span class="n">DefaultMutableTreeNode</span> <span class="n">lecteur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">node</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
					
					<span class="n">lecteur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">node</span><span class="o">));</span>
					
				<span class="o">}</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NullPointerException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
			
			<span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lecteur</span><span class="o">);</span>
			
			<span class="c">//Si nous avons parcouru plus de 50 dossiers, on sort</span>
			<span class="c">//if(count &gt; 50) {break;}</span>
			
		<span class="o">}</span>
		<span class="c">//On crée, avec notre hiérarchie, un arbre</span>
		<span class="n">arbre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setRootVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">addTreeSelectionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">TreeSelectionListener</span><span class="o">(){</span>

			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">valueChanged</span><span class="o">(</span><span class="n">TreeSelectionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
					<span class="c">//La méthode getPath retourne un objet TreePath</span>
					<span class="n">File</span> <span class="n">file</span><span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">getAbsolutePath</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getPath</span><span class="o">()));</span>
					<span class="n">panneau</span><span class="o">.</span><span class="na">setTexte</span><span class="o">(</span><span class="n">getDescription</span><span class="o">(</span><span class="n">file</span><span class="o">));</span>
				<span class="o">}</span>
			<span class="o">}</span>
			
			<span class="kd">private</span> <span class="n">String</span> <span class="nf">getAbsolutePath</span><span class="o">(</span><span class="n">TreePath</span> <span class="n">treePath</span><span class="o">){</span>
				<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
				<span class="c">//On balaie le contenu de notre TreePath</span>
				<span class="k">for</span><span class="o">(</span><span class="n">Object</span> <span class="n">name</span> <span class="o">:</span> <span class="n">treePath</span><span class="o">.</span><span class="na">getPath</span><span class="o">()){</span>
					<span class="c">//Si l'objet à un nom, on l'ajoute au chemin</span>
					<span class="k">if</span><span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
						<span class="n">str</span> <span class="o">+=</span> <span class="n">name</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
				<span class="o">}</span>
				<span class="k">return</span> <span class="n">str</span><span class="o">;</span>
			<span class="o">}</span>
			<span class="c">/**</span>
<span class="c">			 * Retourne une description d'un objet File</span>
<span class="c">			 * @param file</span>
<span class="c">			 * @return</span>
<span class="c">			 */</span>
			<span class="kd">private</span> <span class="n">String</span> <span class="nf">getDescription</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">){</span> 
				<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"Chemin d'accès sur le disque : \n\t"</span> <span class="o">+</span> <span class="n">file</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">()</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">;</span>
				<span class="n">str</span> <span class="o">+=</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isFile</span><span class="o">())</span> <span class="o">?</span> <span class="s">"Je suis un fichier.\nJe fais "</span> <span class="o">+</span> <span class="n">file</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">+</span> <span class="s">" ko\n"</span> <span class="o">:</span> <span class="s">"Je suis un dossier.\n"</span><span class="o">;</span>
				<span class="n">str</span> <span class="o">+=</span> <span class="s">"J'ai des droits : \n"</span><span class="o">;</span>
				<span class="n">str</span> <span class="o">+=</span> <span class="s">"\t en lecture : "</span> <span class="o">+</span> <span class="o">((</span><span class="n">file</span><span class="o">.</span><span class="na">canRead</span><span class="o">())</span> <span class="o">?</span> <span class="s">"Oui;"</span> <span class="o">:</span> <span class="s">"Non;"</span><span class="o">);</span>
				<span class="n">str</span> <span class="o">+=</span> <span class="s">"\n\t en écriture : "</span> <span class="o">+</span> <span class="o">((</span><span class="n">file</span><span class="o">.</span><span class="na">canWrite</span><span class="o">())</span> <span class="o">?</span> <span class="s">"Oui;"</span> <span class="o">:</span> <span class="s">"Non;"</span><span class="o">);</span>
				<span class="k">return</span> <span class="n">str</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">});</span>
		<span class="c">//On crée un séparateur de conteneur pour réviser</span>
		<span class="n">JSplitPane</span> <span class="n">split</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSplitPane</span><span class="o">(</span><span class="n">JSplitPane</span><span class="o">.</span><span class="na">HORIZONTAL_SPLIT</span><span class="o">,</span> <span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">arbre</span><span class="o">),</span> <span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">panneau</span><span class="o">));</span>
		<span class="c">//On place le séparateur</span>
		<span class="n">split</span><span class="o">.</span><span class="na">setDividerLocation</span><span class="o">(</span><span class="mi">200</span><span class="o">);</span>
		<span class="c">//On ajoute le tout</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">split</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="nf">listFile</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">,</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">node</span><span class="o">){</span>
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		
		<span class="k">if</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isFile</span><span class="o">())</span>
			<span class="k">return</span> <span class="k">new</span> <span class="nf">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
				<span class="n">count</span><span class="o">++;</span>
				<span class="c">//pas plus de 5 enfants par noeud</span>
				<span class="k">if</span><span class="o">(</span><span class="n">count</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">subNode</span><span class="o">;</span>
					<span class="k">if</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">()){</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
						<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">subNode</span><span class="o">));</span>
					<span class="o">}</span><span class="k">else</span><span class="o">{</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
					<span class="o">}</span>
					<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">subNode</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="n">node</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
</div></div><br>
<br>
J'espère que vous n'avez pas trop eu de mal à faire ce petit exercice... <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
Vous devriez maintenant commencer à savoir utiliser ce type d'objet, mais, avant de passer à autre chose, je vous propose de voir comment personnaliser un peu l'affichage de notre arbre !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65581">Décorez vos arbres</h2>
		<div class="ss_part_texte">
		Vous avez la possibilité de changer les icônes pour les répertoires, les fichiers, les icônes d'ouverture, les icônes de fermeture.<br>
Cette opération est très simple à réaliser : il vous suffit d'utiliser un objet <strong><span class="violet"><span class="courrier">DefaultTreeCellRenderer</span></span></strong> (qui est une sorte de modèle), de définir les icônes pour tous ces cas et, ensuite, de spécifier à votre arbre d'utiliser ce modèle en utilisant la méthode <span class="code2 java"><span class="n">setCellRenderer</span><span class="o">(</span><span class="n">DefaultTreeCellRenderer</span> <span class="n">cellRenderer</span><span class="o">)</span>
</span>.<br>
<br>
Voici un exemple qui vous montre trois rendus distincts : <br>
<br>
<div class="centre"><img src="./java_files/137602.jpg" alt="Image utilisateur"></div><br>
<br>
Et voici le code que j'ai utilisé pour arriver à ce résultat : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.ImageIcon</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JSplitPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTree</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultMutableTreeNode</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultTreeCellRenderer</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTree</span> <span class="n">arbre</span><span class="o">,</span> <span class="n">arbre2</span><span class="o">,</span> <span class="n">arbre3</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">racine</span><span class="o">;</span>
	<span class="c">//On va créer deux modèles d'affichage</span>
	<span class="kd">private</span>  <span class="n">DefaultTreeCellRenderer</span><span class="o">[]</span> <span class="n">tCellRenderer</span> <span class="o">=</span> <span class="k">new</span>  <span class="n">DefaultTreeCellRenderer</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">600</span><span class="o">,</span> <span class="mi">350</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Les arbres"</span><span class="o">);</span>
		<span class="c">//On invoque la méthode de construction de notre arbre</span>
		<span class="n">initRenderer</span><span class="o">();</span>
		<span class="n">listRoot</span><span class="o">();</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">	 * Méthode qui permet de créer des modèles d'affichage</span>
<span class="c">	 */</span>
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">initRenderer</span><span class="o">(){</span>
		<span class="c">//Instanciation</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tCellRenderer</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span>  <span class="n">DefaultTreeCellRenderer</span><span class="o">();</span>
		<span class="c">//Initialisation des images pour les actions fermer, ouvrir et pour les feuilles</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tCellRenderer</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">setClosedIcon</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"img/fermer.jpg"</span><span class="o">));</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tCellRenderer</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">setOpenIcon</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"img/ouvert.jpg"</span><span class="o">));</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tCellRenderer</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">setLeafIcon</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"img/feuille.jpg"</span><span class="o">));</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">tCellRenderer</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span>  <span class="n">DefaultTreeCellRenderer</span><span class="o">();</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tCellRenderer</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">setClosedIcon</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tCellRenderer</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">setOpenIcon</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tCellRenderer</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">setLeafIcon</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
	<span class="o">}</span>
	
	
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">listRoot</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">racine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">();</span>
		 
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">File</span><span class="o">.</span><span class="na">listRoots</span><span class="o">())</span>
		<span class="o">{</span>
			<span class="n">DefaultMutableTreeNode</span> <span class="n">lecteur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">node</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
					
					<span class="n">lecteur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">node</span><span class="o">));</span>
					
				<span class="o">}</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NullPointerException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
			
			<span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lecteur</span><span class="o">);</span>
			
			<span class="c">//Si nous avons parcouru plus de 50 dossiers, on sort</span>
			<span class="c">//if(count &gt; 50) {break;}</span>
			
		<span class="o">}</span>
		<span class="c">//On crée, avec notre hiérarchie, un arbre</span>
		<span class="n">arbre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setRootVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="c">//On définit le rendu pour cet arbre</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setCellRenderer</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">tCellRenderer</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
		
		<span class="n">arbre2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">);</span>
		<span class="n">arbre2</span><span class="o">.</span><span class="na">setRootVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="n">arbre2</span><span class="o">.</span><span class="na">setCellRenderer</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">tCellRenderer</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
		
		<span class="n">arbre3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">);</span>
		<span class="n">arbre3</span><span class="o">.</span><span class="na">setRootVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		
		<span class="n">JSplitPane</span> <span class="n">split</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSplitPane</span><span class="o">(</span>	<span class="n">JSplitPane</span><span class="o">.</span><span class="na">HORIZONTAL_SPLIT</span><span class="o">,</span> 
				<span class="k">new</span> <span class="nf">JScrollPane</span><span class="o">(</span><span class="n">arbre2</span><span class="o">),</span> 
				<span class="k">new</span> <span class="nf">JScrollPane</span><span class="o">(</span><span class="n">arbre3</span><span class="o">));</span>
		<span class="n">split</span><span class="o">.</span><span class="na">setDividerLocation</span><span class="o">(</span><span class="mi">200</span><span class="o">);</span>
		
		<span class="n">JSplitPane</span> <span class="n">split2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSplitPane</span><span class="o">(</span>	<span class="n">JSplitPane</span><span class="o">.</span><span class="na">HORIZONTAL_SPLIT</span><span class="o">,</span> 
				<span class="k">new</span> <span class="nf">JScrollPane</span><span class="o">(</span><span class="n">arbre</span><span class="o">),</span> 
				<span class="n">split</span><span class="o">);</span>
		<span class="n">split2</span><span class="o">.</span><span class="na">setDividerLocation</span><span class="o">(</span><span class="mi">200</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">split2</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="nf">listFile</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">,</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">node</span><span class="o">){</span>
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		
		<span class="k">if</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isFile</span><span class="o">())</span>
			<span class="k">return</span> <span class="k">new</span> <span class="nf">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
				<span class="n">count</span><span class="o">++;</span>
				<span class="c">//pas plus de 5 enfants par noeud</span>
				<span class="k">if</span><span class="o">(</span><span class="n">count</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">subNode</span><span class="o">;</span>
					<span class="k">if</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">()){</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
						<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">subNode</span><span class="o">));</span>
					<span class="o">}</span><span class="k">else</span><span class="o">{</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
					<span class="o">}</span>
					<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">subNode</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="n">node</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
C'est simple, n'est-ce pas ?<br>
Vous définissez les nouvelles images à utiliser et vous spécifiez à l'arbre quel modèle utiliser ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Il existe une autre façon de changer l'affichage (le design) de votre application.<br>
Chaque système d'exploitation à son propre "<strong><span class="italique">design</span></strong>", mais vous avez pu constater que vos applications Java ne ressemblent pas du tout à ce que votre <acronym title="Operating System, ou Système d&#39;Exploitation">OS</acronym> vous propose d'habitude ! <br>
<div class="rmq question">C'est vrai que les couleurs ne sont pas comme d'habitude !</div><br>
Les couleurs, mais aussi la façon dont sont dessinés vos composants... <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
Mais il y a un moyen de pallier ce problème : utiliser le "<strong><span class="italique">look and feel</span></strong>" de votre OS.<br>
<br>
J'ai rajouté ces lignes de code dans le constructeur de mon objet, avant l'instruction <span class="code2 java"><span class="n">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>
</span> : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="syntax"><pre><span class="k">try</span> <span class="o">{</span>
   <span class="c">//On force à utiliser le look and feel du system</span>
   <span class="n">UIManager</span><span class="o">.</span><span class="na">setLookAndFeel</span><span class="o">(</span><span class="n">UIManager</span><span class="o">.</span><span class="na">getSystemLookAndFeelClassName</span><span class="o">());</span>
   <span class="c">//Ici on force tous les composants de notre fenêtre (this) à se redessiner avec le look and feel du système</span>
   <span class="n">SwingUtilities</span><span class="o">.</span><span class="na">updateComponentTreeUI</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InstantiationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedLookAndFeelException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalAccessException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui me donne avec l'exemple ci-dessus : <br>
<br>
<div class="centre"><img src="./java_files/137603.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez, bien sûr, utiliser d'autres "look and feel" que ceux de votre système et de Java. Voici un code qui permet de lister ces types d'affichages et d'instancier un objet <span class="courrier"><strong><span class="violet">Fenetre</span></strong></span> en lui spécifiant quel modèle utiliser : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTree</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.SwingUtilities</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.UIManager</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.UnsupportedLookAndFeelException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultMutableTreeNode</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTree</span> <span class="n">arbre</span><span class="o">,</span> <span class="n">arbre2</span><span class="o">,</span> <span class="n">arbre3</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">racine</span><span class="o">;</span>
	
	<span class="c">//On passe maintenant le nom du look and feel à utiliser en paramètre du constructeur</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(</span><span class="n">String</span> <span class="n">lookAndFeel</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="n">String</span> <span class="n">title</span> <span class="o">=</span> <span class="o">(</span><span class="n">lookAndFeel</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">"\\."</span><span class="o">))[(</span><span class="n">lookAndFeel</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">"\\."</span><span class="o">).</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)];</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Nom du 'look and feel : "</span> <span class="o">+</span> <span class="n">title</span><span class="o">);</span>
		<span class="c">//On invoque la méthode de construction de notre arbre</span>
	
		<span class="n">listRoot</span><span class="o">();</span>
		<span class="c">//On force l'utilisation</span>
		<span class="k">try</span> <span class="o">{</span>
			   <span class="n">UIManager</span><span class="o">.</span><span class="na">setLookAndFeel</span><span class="o">(</span><span class="n">lookAndFeel</span><span class="o">);</span>
			   <span class="n">SwingUtilities</span><span class="o">.</span><span class="na">updateComponentTreeUI</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InstantiationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedLookAndFeelException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalAccessException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">listRoot</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">racine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">();</span>
		 
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">File</span><span class="o">.</span><span class="na">listRoots</span><span class="o">())</span>
		<span class="o">{</span>
			<span class="n">DefaultMutableTreeNode</span> <span class="n">lecteur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">node</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
					
					<span class="n">lecteur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">node</span><span class="o">));</span>
					
				<span class="o">}</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NullPointerException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
			
			<span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lecteur</span><span class="o">);</span>
			
			<span class="c">//Si nous avons parcouru plus de 50 dossiers, on sort</span>
			<span class="c">//if(count &gt; 50) {break;}</span>
			
		<span class="o">}</span>
		<span class="c">//On crée, avec notre hiérarchie, un arbre</span>
		<span class="n">arbre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setRootVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">arbre</span><span class="o">));</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="nf">listFile</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">,</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">node</span><span class="o">){</span>
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		
		<span class="k">if</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isFile</span><span class="o">())</span>
			<span class="k">return</span> <span class="k">new</span> <span class="nf">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
				<span class="n">count</span><span class="o">++;</span>
				<span class="c">//pas plus de 5 enfants par noeud</span>
				<span class="k">if</span><span class="o">(</span><span class="n">count</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">subNode</span><span class="o">;</span>
					<span class="k">if</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">()){</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
						<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">subNode</span><span class="o">));</span>
					<span class="o">}</span><span class="k">else</span><span class="o">{</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
					<span class="o">}</span>
					<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">subNode</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="n">node</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="c">//nous allons créer des fenêtres avec des looks différents </span>
		<span class="c">//Cette instruction permet de récupérer tous les looks du système</span>
		<span class="n">UIManager</span><span class="o">.</span><span class="na">LookAndFeelInfo</span><span class="o">[]</span> <span class="n">looks</span> <span class="o">=</span> <span class="n">UIManager</span><span class="o">.</span><span class="na">getInstalledLookAndFeels</span><span class="o">();</span>
		<span class="n">Fenetre</span> <span class="n">fen</span><span class="o">;</span>
		<span class="c">//On parcourt tout le tableau en passant le nom du look à utiliser</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">looks</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
			<span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">(</span><span class="n">looks</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getClassName</span><span class="o">());</span>
		
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
J'ai capturé les fenêtres obtenues (le nom du look se trouve dans le titre de la fenêtre) : <br>
<br>
<div class="centre"><img src="./java_files/137610.jpg" alt="Image utilisateur"></div><br>
<br>
Voici deux captures d'écran vous montrant le rendu obtenu en appliquant le look par défaut sur le pendu : <br>
<br>
<div class="centre"><img src="./java_files/137612.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir que les menus et les boutons ressemblent déjà plus à ce que vous pouvez avoir sous Windows... <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
Et la boîte de dialogue, c'est flagrant : <br>
<br>
<div class="centre"><img src="./java_files/137611.jpg" alt="Image utilisateur"></div><br>
<br>
Nous allons voir comment jouer un peu avec nos arbres... (non, pas sur nos arbres... <img src="./java_files/hihi.png" alt="^^" class="smilies"> )
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65566">Jouons avec nos arbres</h2>
		<div class="ss_part_texte">
		C'est maintenant que les choses compliquées vont commencer !  <img src="./java_files/diable.png" alt=":diable:" class="smilies"> <br>
<br>
Par contre, il va falloir faire la lumière sur certaines choses...<br>
Vous commencez à connaître les arbres, cependant je vous ai caché certaines choses afin de ne pas surcharger le début de ce chapitre.<br>
Voyons :  votre <strong><span class="violet"><span class="courrier">JTree</span></span></strong> est en fait composé de plusieurs objets. Vous vous doutez bien que pour un composant aussi complexe que celui-ci, il y a du monde au balcon...<br>
<br>
Voici une liste des objets que vous serez susceptibles d'utiliser avec ce composant (il y a cinq interfaces et une classe concrète...) :<br>
<ul>
<li><strong><span class="violet"><span class="courrier">TreeModel</span></span></strong> : c'est lui qui contient les noeuds de votre arbre ;</li>
<li><strong><span class="violet"><span class="courrier">TreeNode </span></span></strong> : noeuds et structure de votre arbre ; </li>
<li><strong><span class="violet"><span class="courrier">TreeSelectionModel</span></span></strong> : modèle de sélection de tous vos noeuds ;</li>
<li><strong><span class="violet"><span class="courrier">TreePath </span></span></strong>: objet qui vous permet de connaître le chemin d'un noeud dans l'arbre et voici notre classe concrète ;</li>
<li><strong><span class="violet"><span class="courrier">TreeCellRenderer</span></span></strong> : interface vous permettant de modifier l'apparence d'un noeud ;</li>
<li><strong><span class="violet"><span class="courrier">TreeCellEditor</span></span></strong> : éditeur utilisé lorsqu'un noeud est éditable.</li>
</ul><br>
<br>
Vous allez voir que, même si ces objets sont nombreux, leur utilisation, avec un peu de pratique, n'est pas si compliquée que ça... Nous allons commencer par quelque chose d'assez simple : modifier le libellé d'un noeud !<br>
<br>
<div class="rmq question">C'est bon, on a déjà trouvé ! Il suffit d'invoquer la méthode <span class="code2 java"><span class="n">setEditable</span><span class="o">(</span><span class="n">Boolean</span> <span class="n">bool</span><span class="o">)</span>
</span> de notre <strong><span class="violet"><span class="courrier">JTree</span></span></strong> !</div><br>
<br>
Tout à fait !<br>
Cependant, vous serez peut-être amenés à sauvegarder le nouveau nom de votre noeud... Il vous faudra donc déclencher un traitement lors de la modification d'un noeud. <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
Pour faire cela, nous allons utiliser l'objet <strong><span class="violet"><span class="courrier">TreeModel</span></span></strong> que nous allons écouter afin de déterminer ce qui se passe sur notre arbre !<br>
<br>
Voici un exemple de code utilisant un <strong><span class="violet"><span class="courrier">DefaultTreeModel</span></span></strong> (classe implémentant l'interface <strong><span class="violet"><span class="courrier">TreeModel</span></span></strong>) ainsi qu'une implémentation de l'interface <strong><span class="violet"><span class="courrier">TreeModelListener</span></span></strong> afin d'écouter le dit objet :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTree</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.UIManager</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.UnsupportedLookAndFeelException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeModelEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeModelListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultMutableTreeNode</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultTreeModel</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTree</span> <span class="n">arbre</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">racine</span><span class="o">;</span>
	<span class="c1">//Notre objet modèle</span>
	<span class="kd">private</span> <span class="n">DefaultTreeModel</span> <span class="n">model</span><span class="o">;</span>
	
	<span class="c1">//On passe maintenant le nom du look and feel à utiliser en paramètre du constructeur</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTree"</span><span class="o">);</span>	
		<span class="n">listRoot</span><span class="o">();</span>		
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">listRoot</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">racine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">();</span>
		 
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">File</span><span class="o">.</span><span class="na">listRoots</span><span class="o">())</span>
		<span class="o">{</span>
			<span class="n">DefaultMutableTreeNode</span> <span class="n">lecteur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">node</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
					
					<span class="n">lecteur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">node</span><span class="o">));</span>
					
				<span class="o">}</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NullPointerException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
			<span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lecteur</span><span class="o">);</span>
		<span class="o">}</span>
		
		<span class="c1">//On crée notre modèle</span>
		<span class="k">this</span><span class="o">.</span><span class="na">model</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultTreeModel</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">);</span>
		<span class="c1">//Et nous allons écouter ce que notre modèle a à nous dire ! </span>
		<span class="k">this</span><span class="o">.</span><span class="na">model</span><span class="o">.</span><span class="na">addTreeModelListener</span><span class="o">(</span><span class="k">new</span> <span class="n">TreeModelListener</span><span class="o">()</span> <span class="o">{</span>
			<span class="cm">/**</span>
<span class="cm">			 * Méthode appelée lorsqu'un noeud a changé</span>
<span class="cm">			 */</span>
	        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeNodesChanged</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">evt</span><span class="o">)</span> <span class="o">{</span>
	          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Changement dans l'arbre"</span><span class="o">);</span>
	          <span class="n">Object</span><span class="o">[]</span> <span class="n">listNoeuds</span> <span class="o">=</span> <span class="n">evt</span><span class="o">.</span><span class="na">getChildren</span><span class="o">();</span>
	          <span class="kt">int</span><span class="o">[]</span> <span class="n">listIndices</span> <span class="o">=</span> <span class="n">evt</span><span class="o">.</span><span class="na">getChildIndices</span><span class="o">();</span>
	          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">listNoeuds</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
	            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Index "</span> <span class="o">+</span> <span class="n">listIndices</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">+</span> <span class="s">", nouvelle valeur : "</span>
	                <span class="o">+</span> <span class="n">listNoeuds</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
	          <span class="o">}</span>
	        <span class="o">}</span>
	        <span class="cm">/**</span>
<span class="cm">	         * Méthode appelée lorsqu'un noeud est inséré</span>
<span class="cm">	         */</span>
	        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeNodesInserted</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Un noeud a été inséré !"</span><span class="o">);</span>
				
			<span class="o">}</span>
	        
	        <span class="cm">/**</span>
<span class="cm">	         * Méthode appelée lorsqu'un noeud est supprimé</span>
<span class="cm">	         */</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeNodesRemoved</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Un noeud a été retiré !"</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="cm">/**</span>
<span class="cm">			 * Méthode appelée lorsque la structure d'un noeud a été modifiée</span>
<span class="cm">			 */</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeStructureChanged</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"La structure d'un noeud a changé !"</span><span class="o">);</span>
			<span class="o">}</span>
        <span class="o">});</span>
		<span class="c1">//On crée, avec notre hiérarchie, un arbre</span>
		<span class="n">arbre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">();</span>
		<span class="c1">//On passe notre modèle à notre arbre </span>
		<span class="c1">//===&gt; on pouvait aussi passer l'objet TreeModel au constructeur du JTree</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setModel</span><span class="o">(</span><span class="n">model</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setRootVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="c1">//On rend notre arbre éditable</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setEditable</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">arbre</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="nf">listFile</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">,</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">node</span><span class="o">){</span>
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		
		<span class="k">if</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isFile</span><span class="o">())</span>
			<span class="k">return</span> <span class="k">new</span> <span class="nf">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
				<span class="n">count</span><span class="o">++;</span>
				<span class="c1">//pas plus de 5 enfants par noeud</span>
				<span class="k">if</span><span class="o">(</span><span class="n">count</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="o">){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">subNode</span><span class="o">;</span>
					<span class="k">if</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">()){</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
						<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">subNode</span><span class="o">));</span>
					<span class="o">}</span><span class="k">else</span><span class="o">{</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
					<span class="o">}</span>
					<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">subNode</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="n">node</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="c1">//nous allons créer des fenêtres avec des looks différents </span>
		<span class="c1">//Cette instruction permet de récupérer tous les looks du système</span>
		
		<span class="k">try</span> <span class="o">{</span>
			 <span class="n">UIManager</span><span class="o">.</span><span class="na">setLookAndFeel</span><span class="o">(</span><span class="n">UIManager</span><span class="o">.</span><span class="na">getSystemLookAndFeelClassName</span><span class="o">());</span>			   
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InstantiationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedLookAndFeelException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalAccessException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Afin de pouvoir changer le nom d'un noeud, vous devez double-cliquer sur un noeud avec un espace d'environ 1/2 seconde entre chaque clic... Si vous double-cliquez trop vite, vous déplierez le noeud ! ! <img src="./java_files/smile.png" alt=":)" class="smilies"> </div><br>
<br>
Ce qui m'a donné chez moi : <br>
<br>
<div class="centre"><img src="./java_files/138666.jpg" alt="Image utilisateur"> <img src="./java_files/138667.jpg" alt="Image utilisateur"> </div><br>
<div class="centre"><img src="./java_files/138664.jpg" alt="Image utilisateur"></div><br>
Le dossier '<strong><span class="arial">toto</span></strong>' s'appelait '<strong><span class="arial">CNAM/</span></strong>' : vous pouvez voir que lorsque nous changeons le nom d'un noeud, la méthode <span class="code2 java"><span class="n">treeNodesChanged</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">evt</span><span class="o">)</span>
</span> est invoquée !<br>
<br>
Vous voyez que, mis à part le fait que plusieurs objets sont utilisés, ce n'est pas si compliqué que ça...<br>
Maintenant, je vous propose de voir comment ajouter des noeuds à notre arbre !<br>
Pour ce faire, nous allons utiliser un bouton qui va nous demander de spécifier le nom du nouveau noeud, ceci via un <strong><span class="violet"><span class="courrier">JOptionPane</span></span></strong>.<br>
<br>
Voici un code d'exemple : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPopupMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTree</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.UIManager</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.UnsupportedLookAndFeelException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeModelEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeModelListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeSelectionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeSelectionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultMutableTreeNode</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultTreeModel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.TreeNode</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.TreePath</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTree</span> <span class="n">arbre</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">racine</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DefaultTreeModel</span> <span class="n">model</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Ajouter"</span><span class="o">);</span>
	
	<span class="c1">//On passe maintenant le nom du look and feel à utiliser en paramètre du constructeur</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTree"</span><span class="o">);</span>
		<span class="c1">//On invoque la méthode de construction de notre arbre</span>
	
		<span class="n">listRoot</span><span class="o">();</span>
		<span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>						
					<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
					<span class="n">String</span> <span class="n">nodeName</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showInputDialog</span><span class="o">(</span><span class="s">"Saisir un nom de noeud"</span><span class="o">);</span>
					
					<span class="k">if</span><span class="o">(</span><span class="n">nodeName</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">nodeName</span><span class="o">.</span><span class="na">trim</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)){</span>
						
						<span class="n">DefaultMutableTreeNode</span> <span class="n">parentNode</span> <span class="o">=</span>  <span class="o">(</span><span class="n">DefaultMutableTreeNode</span><span class="o">)</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">();</span>
						<span class="n">DefaultMutableTreeNode</span> <span class="n">childNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nodeName</span><span class="o">);</span>
						<span class="n">parentNode</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">childNode</span><span class="o">);</span>
						<span class="n">model</span><span class="o">.</span><span class="na">insertNodeInto</span><span class="o">(</span><span class="n">childNode</span><span class="o">,</span> <span class="n">parentNode</span><span class="o">,</span> <span class="n">parentNode</span><span class="o">.</span><span class="na">getChildCount</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
						<span class="n">model</span><span class="o">.</span><span class="na">nodeChanged</span><span class="o">(</span><span class="n">parentNode</span><span class="o">);</span>						
					<span class="o">}</span>					
				<span class="o">}</span>
				<span class="k">else</span><span class="o">{</span>
					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"AUCUNE SELECTION ! ! !"</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">});</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">listRoot</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">racine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">();</span>
		 
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">File</span><span class="o">.</span><span class="na">listRoots</span><span class="o">())</span>
		<span class="o">{</span>
			<span class="n">DefaultMutableTreeNode</span> <span class="n">lecteur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">node</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>					
					<span class="n">lecteur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">node</span><span class="o">));</span>					
				<span class="o">}</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NullPointerException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
			
			<span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lecteur</span><span class="o">);</span>
			
		<span class="o">}</span>
		<span class="c1">//On crée, avec notre hiérarchie, un arbre</span>
		<span class="n">arbre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">();</span>
		<span class="k">this</span><span class="o">.</span><span class="na">model</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultTreeModel</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">);</span>
		
		<span class="n">arbre</span><span class="o">.</span><span class="na">setModel</span><span class="o">(</span><span class="n">model</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setRootVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setEditable</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">getModel</span><span class="o">().</span><span class="na">addTreeModelListener</span><span class="o">(</span><span class="k">new</span> <span class="n">TreeModelListener</span><span class="o">()</span> <span class="o">{</span>

	        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeNodesChanged</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">evt</span><span class="o">)</span> <span class="o">{</span>
	          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Changement dans l'arbre"</span><span class="o">);</span>
	          <span class="n">Object</span><span class="o">[]</span> <span class="n">listNoeuds</span> <span class="o">=</span> <span class="n">evt</span><span class="o">.</span><span class="na">getChildren</span><span class="o">();</span>
	          <span class="kt">int</span><span class="o">[]</span> <span class="n">listIndices</span> <span class="o">=</span> <span class="n">evt</span><span class="o">.</span><span class="na">getChildIndices</span><span class="o">();</span>
	          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">listNoeuds</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
	            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Index "</span> <span class="o">+</span> <span class="n">listIndices</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">+</span> <span class="s">", noeud déclencheur : "</span>
	                <span class="o">+</span> <span class="n">listNoeuds</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
	          <span class="o">}</span>
	        <span class="o">}</span>	
	        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeNodesInserted</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Un noeud a été inséré !"</span><span class="o">);</span>				
			<span class="o">}</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeNodesRemoved</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Un noeud a été retiré !"</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeStructureChanged</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"La structure d'un noeud a changé !"</span><span class="o">);</span>
			<span class="o">}</span>
        <span class="o">});</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">arbre</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="nf">listFile</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">,</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">node</span><span class="o">){</span>
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		
		<span class="k">if</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isFile</span><span class="o">())</span>
			<span class="k">return</span> <span class="k">new</span> <span class="nf">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
				<span class="n">count</span><span class="o">++;</span>
				<span class="c1">//pas plus de 5 enfants par noeud</span>
				<span class="k">if</span><span class="o">(</span><span class="n">count</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="o">){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">subNode</span><span class="o">;</span>
					<span class="k">if</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">()){</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
						<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">subNode</span><span class="o">));</span>
					<span class="o">}</span><span class="k">else</span><span class="o">{</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
					<span class="o">}</span>
					<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">subNode</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="n">node</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="c1">//nous allons créer des fenêtres avec des looks différents </span>
		<span class="c1">//Cette instruction permet de récupérer tous les looks du système</span>
		
		<span class="k">try</span> <span class="o">{</span>
			   <span class="n">UIManager</span><span class="o">.</span><span class="na">setLookAndFeel</span><span class="o">(</span><span class="n">UIManager</span><span class="o">.</span><span class="na">getSystemLookAndFeelClassName</span><span class="o">());</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InstantiationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedLookAndFeelException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalAccessException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Vous remarquerez que nous avons ajouté des variables d'instances afin d'y avoir accès dans toute notre classe !</div><br>
<br>
Voici quelques captures d'écran : <br>
<br>
<div class="centre"><img src="./java_files/138674.jpg" alt="Image utilisateur"><img src="./java_files/138675.jpg" alt="Image utilisateur"></div><br>
<div class="centre"><img src="./java_files/138677.jpg" alt="Image utilisateur"><img src="./java_files/138678.jpg" alt="Image utilisateur"></div><br>
<br>
Là non plus, rien d'extraordinairement compliqué, mis à part cette portion de code : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">parentNode</span> <span class="o">=</span>  <span class="o">(</span><span class="n">DefaultMutableTreeNode</span><span class="o">)</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">();</span>
<span class="n">DefaultMutableTreeNode</span> <span class="n">childNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nodeName</span><span class="o">);</span>
<span class="n">DefaultMutableTreeNode</span> <span class="n">parentNode</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">childNode</span><span class="o">);</span>
<span class="n">model</span><span class="o">.</span><span class="na">insertNodeInto</span><span class="o">(</span><span class="n">childNode</span><span class="o">,</span> <span class="n">parentNode</span><span class="o">,</span> <span class="n">parentNode</span><span class="o">.</span><span class="na">getChildCount</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
<span class="n">model</span><span class="o">.</span><span class="na">nodeChanged</span><span class="o">(</span><span class="n">parentNode</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Tout d'abord, nous récupérons le dernier noeud sélectionné avec <span class="code2 java"><span class="n">parentNode</span> <span class="o">=</span>  <span class="o">(</span><span class="n">DefaultMutableTreeNode</span><span class="o">)</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">();</span>
</span> ; ensuite, nous créons un nouveau noeud avec <span class="code2 java"><span class="n">DefaultMutableTreeNode</span> <span class="n">childNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nodeName</span><span class="o">);</span>
</span> et nous l'ajoutons dans notre noeud parent avec l'instruction <span class="code2 java"><span class="n">parentNode</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">childNode</span><span class="o">);</span>
</span>, mais nous devons spécifier à notre modèle que celui-ci a un nouveau noeud et donc, qu'il a changé, ceci avec les instructions : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="n">model</span><span class="o">.</span><span class="na">insertNodeInto</span><span class="o">(</span><span class="n">childNode</span><span class="o">,</span> <span class="n">parentNode</span><span class="o">,</span> <span class="n">parentNode</span><span class="o">.</span><span class="na">getChildCount</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
<span class="n">model</span><span class="o">.</span><span class="na">nodeChanged</span><span class="o">(</span><span class="n">parentNode</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voilà !<br>
<br>
Avant de vous laisser, il me reste encore à vous montrer... un code !<br>
Celui-ci permet de retirer dynamiquement un noeud d'un arbre ! <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
Inutile de le commenter, celui-ci est très clair : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPopupMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTree</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.UIManager</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.UnsupportedLookAndFeelException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeModelEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeModelListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeSelectionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeSelectionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultMutableTreeNode</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultTreeModel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.TreeNode</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.TreePath</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTree</span> <span class="n">arbre</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">racine</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DefaultTreeModel</span> <span class="n">model</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Ajouter"</span><span class="o">),</span>  <span class="n">effacer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Effacer"</span><span class="o">);</span>
	
	<span class="c1">//On passe maintenant le nom du look and feel à utiliser en paramètre du constructeur</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTree"</span><span class="o">);</span>
		<span class="c1">//On invoque la méthode de construction de notre arbre</span>
	
		<span class="n">listRoot</span><span class="o">();</span>
		<span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>						
					<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
					<span class="n">String</span> <span class="n">nodeName</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showInputDialog</span><span class="o">(</span><span class="s">"Saisir un nom de noeud"</span><span class="o">);</span>
					
					<span class="k">if</span><span class="o">(</span><span class="n">nodeName</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">nodeName</span><span class="o">.</span><span class="na">trim</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)){</span>						
						<span class="n">DefaultMutableTreeNode</span> <span class="n">parentNode</span> <span class="o">=</span>  <span class="o">(</span><span class="n">DefaultMutableTreeNode</span><span class="o">)</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">();</span>
						<span class="n">DefaultMutableTreeNode</span> <span class="n">childNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nodeName</span><span class="o">);</span>
						<span class="n">parentNode</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">childNode</span><span class="o">);</span>
						<span class="n">model</span><span class="o">.</span><span class="na">insertNodeInto</span><span class="o">(</span><span class="n">childNode</span><span class="o">,</span> <span class="n">parentNode</span><span class="o">,</span> <span class="n">parentNode</span><span class="o">.</span><span class="na">getChildCount</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
						<span class="n">model</span><span class="o">.</span><span class="na">nodeChanged</span><span class="o">(</span><span class="n">parentNode</span><span class="o">);</span>
					<span class="o">}</span>					
				<span class="o">}</span>
				<span class="k">else</span><span class="o">{</span>
					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"AUCUNE SELECTION ! ! !"</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="n">effacer</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>						
					<span class="n">DefaultMutableTreeNode</span> <span class="n">node</span> <span class="o">=</span>  <span class="o">(</span><span class="n">DefaultMutableTreeNode</span><span class="o">)</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">();</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">parentNode</span> <span class="o">=</span>  <span class="o">(</span><span class="n">DefaultMutableTreeNode</span><span class="o">)</span><span class="n">node</span><span class="o">.</span><span class="na">getParent</span><span class="o">();</span>
					<span class="n">model</span><span class="o">.</span><span class="na">removeNodeFromParent</span><span class="o">(</span><span class="n">node</span><span class="o">);</span>
					<span class="n">model</span><span class="o">.</span><span class="na">nodeChanged</span><span class="o">(</span><span class="n">parentNode</span><span class="o">);</span>									
				<span class="o">}</span>
				<span class="k">else</span><span class="o">{</span>
					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"AUCUNE SELECTION ! ! !"</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="n">JPanel</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">pan</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
		<span class="n">pan</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">effacer</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">listRoot</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">racine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">();</span>
		 
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">File</span><span class="o">.</span><span class="na">listRoots</span><span class="o">())</span>
		<span class="o">{</span>
			<span class="n">DefaultMutableTreeNode</span> <span class="n">lecteur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">node</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>					
					<span class="n">lecteur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">node</span><span class="o">));</span>					
				<span class="o">}</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NullPointerException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
			
			<span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lecteur</span><span class="o">);</span>
			
		<span class="o">}</span>
		<span class="c1">//On crée, avec notre hiérarchie, un arbre</span>
		<span class="n">arbre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">();</span>
		<span class="k">this</span><span class="o">.</span><span class="na">model</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultTreeModel</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">);</span>
		
		<span class="n">arbre</span><span class="o">.</span><span class="na">setModel</span><span class="o">(</span><span class="n">model</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setRootVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setEditable</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">getModel</span><span class="o">().</span><span class="na">addTreeModelListener</span><span class="o">(</span><span class="k">new</span> <span class="n">TreeModelListener</span><span class="o">()</span> <span class="o">{</span>

	        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeNodesChanged</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">evt</span><span class="o">)</span> <span class="o">{</span>
	        	
	        <span class="o">}</span>	
	        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeNodesInserted</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Un noeud a été inséré !"</span><span class="o">);</span>				
			<span class="o">}</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeNodesRemoved</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Un noeud a été retiré !"</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeStructureChanged</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"La structure d'un noeud a changé !"</span><span class="o">);</span>
			<span class="o">}</span>
        <span class="o">});</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">arbre</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="nf">listFile</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">,</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">node</span><span class="o">){</span>
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		
		<span class="k">if</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isFile</span><span class="o">())</span>
			<span class="k">return</span> <span class="k">new</span> <span class="nf">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
				<span class="n">count</span><span class="o">++;</span>
				<span class="c1">//pas plus de 5 enfants par noeud</span>
				<span class="k">if</span><span class="o">(</span><span class="n">count</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="o">){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">subNode</span><span class="o">;</span>
					<span class="k">if</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">()){</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
						<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">subNode</span><span class="o">));</span>
					<span class="o">}</span><span class="k">else</span><span class="o">{</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
					<span class="o">}</span>
					<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">subNode</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="n">node</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="c1">//nous allons créer des fenêtres avec des looks différents </span>
		<span class="c1">//Cette instruction permet de récupérer tous les looks du système</span>
		
		<span class="k">try</span> <span class="o">{</span>
			   <span class="n">UIManager</span><span class="o">.</span><span class="na">setLookAndFeel</span><span class="o">(</span><span class="n">UIManager</span><span class="o">.</span><span class="na">getSystemLookAndFeelClassName</span><span class="o">());</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InstantiationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedLookAndFeelException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalAccessException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui me donne :<br>
<br>
<div class="centre"><strong><span class="souligne">Avant toute suppression</span></strong></div><br>
<div class="centre"><img src="./java_files/138703.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="centre"><strong><span class="souligne">Après suppression du dossier "<span class="arial">Installer/</span>"</span></strong></div><br>
<div class="centre"><img src="./java_files/138704.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="centre"><strong><span class="souligne">Après suppression du dossier "<span class="arial">D/</span>"</span></strong></div><br>
<div class="centre"><img src="./java_files/138705.jpg" alt="Image utilisateur"></div><br>
<br>
Avant de clore ce chapitre, voici un petit cadeau.<br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<br>
Voici comment utiliser un menu contextuel avec vos arbres.<br>
Je n'ai implémenté qu'un menu contextuel pour effacer un noeud, mais la démarche est la même pour d'autres actions...<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseAdapter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPopupMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTree</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.UIManager</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.UnsupportedLookAndFeelException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeModelEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.TreeModelListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultMutableTreeNode</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.tree.DefaultTreeModel</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTree</span> <span class="n">arbre</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">racine</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DefaultTreeModel</span> <span class="n">model</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">bouton</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Ajouter"</span><span class="o">),</span>  <span class="n">effacer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Effacer"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JMenuItem</span> <span class="n">eraseMenu</span> <span class="o">;</span>
	
	<span class="c1">//On passe maintenant le nom du look and feel à utiliser en paramètre du constructeur</span>
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTree"</span><span class="o">);</span>
		<span class="c1">//On invoque la méthode de construction de notre arbre</span>
	
		<span class="n">listRoot</span><span class="o">();</span>
		<span class="n">bouton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>						
					<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
					<span class="n">String</span> <span class="n">nodeName</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showInputDialog</span><span class="o">(</span><span class="s">"Saisir un nom de noeud"</span><span class="o">);</span>
					
					<span class="k">if</span><span class="o">(</span><span class="n">nodeName</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">nodeName</span><span class="o">.</span><span class="na">trim</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)){</span>						
						<span class="n">DefaultMutableTreeNode</span> <span class="n">parentNode</span> <span class="o">=</span>  <span class="o">(</span><span class="n">DefaultMutableTreeNode</span><span class="o">)</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">();</span>
						<span class="n">DefaultMutableTreeNode</span> <span class="n">childNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nodeName</span><span class="o">);</span>
						<span class="n">parentNode</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">childNode</span><span class="o">);</span>
						<span class="n">model</span><span class="o">.</span><span class="na">insertNodeInto</span><span class="o">(</span><span class="n">childNode</span><span class="o">,</span> <span class="n">parentNode</span><span class="o">,</span> <span class="n">parentNode</span><span class="o">.</span><span class="na">getChildCount</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
						<span class="n">model</span><span class="o">.</span><span class="na">nodeChanged</span><span class="o">(</span><span class="n">parentNode</span><span class="o">);</span>
					<span class="o">}</span>					
				<span class="o">}</span>
				<span class="k">else</span><span class="o">{</span>
					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"AUCUNE SELECTION ! ! !"</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="n">effacer</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>						
					<span class="n">DefaultMutableTreeNode</span> <span class="n">node</span> <span class="o">=</span>  <span class="o">(</span><span class="n">DefaultMutableTreeNode</span><span class="o">)</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">();</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">parentNode</span> <span class="o">=</span>  <span class="o">(</span><span class="n">DefaultMutableTreeNode</span><span class="o">)</span><span class="n">node</span><span class="o">.</span><span class="na">getParent</span><span class="o">();</span>
					<span class="n">model</span><span class="o">.</span><span class="na">removeNodeFromParent</span><span class="o">(</span><span class="n">node</span><span class="o">);</span>
					<span class="n">model</span><span class="o">.</span><span class="na">nodeChanged</span><span class="o">(</span><span class="n">parentNode</span><span class="o">);</span>									
				<span class="o">}</span>
				<span class="k">else</span><span class="o">{</span>
					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"AUCUNE SELECTION ! ! !"</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="n">JPanel</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">pan</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">bouton</span><span class="o">);</span>
		<span class="n">pan</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">effacer</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">listRoot</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">racine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">();</span>
		 
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">File</span><span class="o">.</span><span class="na">listRoots</span><span class="o">())</span>
		<span class="o">{</span>
			<span class="n">DefaultMutableTreeNode</span> <span class="n">lecteur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">node</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>					
					<span class="n">lecteur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">node</span><span class="o">));</span>					
				<span class="o">}</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NullPointerException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
			
			<span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lecteur</span><span class="o">);</span>
			
		<span class="o">}</span>
		<span class="c1">//On crée, avec notre hiérarchie, un arbre</span>
		<span class="n">arbre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTree</span><span class="o">();</span>
		<span class="k">this</span><span class="o">.</span><span class="na">model</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultTreeModel</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">racine</span><span class="o">);</span>
		
		<span class="n">arbre</span><span class="o">.</span><span class="na">setModel</span><span class="o">(</span><span class="n">model</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setRootVisible</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">setEditable</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">getModel</span><span class="o">().</span><span class="na">addTreeModelListener</span><span class="o">(</span><span class="k">new</span> <span class="n">TreeModelListener</span><span class="o">()</span> <span class="o">{</span>

	        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeNodesChanged</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">evt</span><span class="o">)</span> <span class="o">{</span>
	        	
	        <span class="o">}</span>	
	        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeNodesInserted</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Un noeud a été inséré !"</span><span class="o">);</span>				
			<span class="o">}</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeNodesRemoved</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Un noeud a été retiré !"</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">treeStructureChanged</span><span class="o">(</span><span class="n">TreeModelEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"La structure d'un noeud a changé !"</span><span class="o">);</span>
			<span class="o">}</span>
        <span class="o">});</span>
		
		<span class="cm">/**</span>
<span class="cm">		 * Effacer un noeud avec un menu contextuel ! !</span>
<span class="cm">		 */</span>
		<span class="n">arbre</span><span class="o">.</span><span class="na">addMouseListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MouseAdapter</span><span class="o">(){</span>
			<span class="c1">//Lorsque nous cliquons avec la souris</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">mousePressed</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
				<span class="c1">//Lors d'un clic droit</span>
				<span class="k">if</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getButton</span><span class="o">()</span> <span class="o">==</span> <span class="n">MouseEvent</span><span class="o">.</span><span class="na">BUTTON3</span><span class="o">){</span>
					
					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Clic droit détecté ! !"</span><span class="o">);</span>
					
					<span class="c1">//Si on a cliqué sur l'arbre, on peut récupérer l'indice de la ligne avec cette méthode</span>
					<span class="c1">//Sinon, la méthode retourne -1</span>
					<span class="k">if</span><span class="o">(</span><span class="n">arbre</span><span class="o">.</span><span class="na">getRowForLocation</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">())</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">){</span>
						
						<span class="c1">//On peut récupérer le chemin du noeud qui a généré l'événement</span>
						<span class="n">arbre</span><span class="o">.</span><span class="na">setSelectionPath</span><span class="o">(</span><span class="n">arbre</span><span class="o">.</span><span class="na">getPathForLocation</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">()));</span>
						<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Noeud sélectionné : "</span> <span class="o">+</span> <span class="o">((</span><span class="n">DefaultMutableTreeNode</span><span class="o">)</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">()).</span><span class="na">toString</span><span class="o">());</span>
						
						<span class="c1">//On peut donc en déduire le noeud et le parent</span>
						<span class="n">DefaultMutableTreeNode</span> <span class="n">node</span> <span class="o">=</span>  <span class="o">(</span><span class="n">DefaultMutableTreeNode</span><span class="o">)</span><span class="n">arbre</span><span class="o">.</span><span class="na">getLastSelectedPathComponent</span><span class="o">();</span>
						<span class="n">DefaultMutableTreeNode</span> <span class="n">parentNode</span> <span class="o">=</span>  <span class="o">(</span><span class="n">DefaultMutableTreeNode</span><span class="o">)</span><span class="n">node</span><span class="o">.</span><span class="na">getParent</span><span class="o">();</span>
						
						<span class="c1">//On n'a plus qu'à générer notre menu contextuel !</span>
						<span class="n">JPopupMenu</span> <span class="n">jpm</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPopupMenu</span><span class="o">();</span>
						<span class="n">eraseMenu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Effacer ce noeud"</span><span class="o">);</span>
						<span class="n">eraseMenu</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">EraseMenuListener</span><span class="o">(</span><span class="n">parentNode</span><span class="o">,</span> <span class="n">node</span><span class="o">));</span>	
						<span class="n">jpm</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">eraseMenu</span><span class="o">);</span>
						<span class="n">jpm</span><span class="o">.</span><span class="na">show</span><span class="o">(</span><span class="n">arbre</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">());</span>
						<span class="c1">//Et le tour est joué ! ! !</span>
					<span class="o">}</span>
				<span class="o">}</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">arbre</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="n">DefaultMutableTreeNode</span> <span class="nf">listFile</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">,</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">node</span><span class="o">){</span>
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		
		<span class="k">if</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isFile</span><span class="o">())</span>
			<span class="k">return</span> <span class="k">new</span> <span class="nf">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="n">File</span> <span class="n">nom</span> <span class="o">:</span> <span class="n">file</span><span class="o">.</span><span class="na">listFiles</span><span class="o">()){</span>
				<span class="n">count</span><span class="o">++;</span>
				<span class="c1">//pas plus de 5 enfants par noeud</span>
				<span class="k">if</span><span class="o">(</span><span class="n">count</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="o">){</span>
					<span class="n">DefaultMutableTreeNode</span> <span class="n">subNode</span><span class="o">;</span>
					<span class="k">if</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">()){</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"\\"</span><span class="o">);</span>
						<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listFile</span><span class="o">(</span><span class="n">nom</span><span class="o">,</span> <span class="n">subNode</span><span class="o">));</span>
					<span class="o">}</span><span class="k">else</span><span class="o">{</span>
						<span class="n">subNode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultMutableTreeNode</span><span class="o">(</span><span class="n">nom</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
					<span class="o">}</span>
					<span class="n">node</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">subNode</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="n">node</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="cm">/**</span>
<span class="cm">	 * Listener personnalisé pour le menu contextuel</span>
<span class="cm">	 * @author CHerby</span>
<span class="cm">	 */</span>
	<span class="kd">class</span> <span class="nc">EraseMenuListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>

		<span class="c1">//Nous allons nous servir de ces deux objets</span>
		<span class="n">DefaultMutableTreeNode</span>  <span class="n">parentNode</span><span class="o">,</span> <span class="n">node</span><span class="o">;</span>
		<span class="kd">public</span> <span class="nf">EraseMenuListener</span><span class="o">(</span><span class="n">DefaultMutableTreeNode</span> <span class="n">parent</span><span class="o">,</span> <span class="n">DefaultMutableTreeNode</span> <span class="n">node</span><span class="o">){</span>
			<span class="k">this</span><span class="o">.</span><span class="na">parentNode</span> <span class="o">=</span> <span class="n">parent</span><span class="o">;</span>
			<span class="k">this</span><span class="o">.</span><span class="na">node</span> <span class="o">=</span> <span class="n">node</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="c1">//Ici, vous connaissez !</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">model</span><span class="o">.</span><span class="na">removeNodeFromParent</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">node</span><span class="o">);</span>
			<span class="n">model</span><span class="o">.</span><span class="na">nodeChanged</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">parentNode</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="c1">//nous allons créer des fenêtres avec des looks différents </span>
		<span class="c1">//Cette instruction permet de récupérer tous les looks du système</span>
		
		<span class="k">try</span> <span class="o">{</span>
			   <span class="n">UIManager</span><span class="o">.</span><span class="na">setLookAndFeel</span><span class="o">(</span><span class="n">UIManager</span><span class="o">.</span><span class="na">getSystemLookAndFeelClassName</span><span class="o">());</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InstantiationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedLookAndFeelException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalAccessException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Le résultat est sympa : <br>
<br>
<div class="centre"><img src="./java_files/139228.jpg" alt="Image utilisateur">  <img src="./java_files/139229.jpg" alt="Image utilisateur"></div><br>
<br>
</div></div><br>
<br>
Voilà : je pense que vous en savez assez pour utiliser les arbres dans vos futures applications !<br>
Je vous propose donc un petit tour sur le topo des familles.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65574">Ce que vous devez retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Les arbres sont une combinaison entre des <strong><span class="violet"><span class="courrier">DefaultMutableTreeNode </span></span></strong>et des <strong><span class="violet"><span class="courrier">JTree</span></span></strong>.</li>
<li>Vous pouvez masquer le répertoire "<strong><span class="italique">racine</span></strong>" en invoquant la méthode <span class="code2 java"><span class="n">setRootVisible</span><span class="o">(</span><span class="n">Boolean</span> <span class="n">ok</span><span class="o">)</span>
</span>.</li>
<li>Afin d'intercepter les événements sur un tel composant, vous devrez implémenter l'interface <strong><span class="violet"><span class="courrier">TreeSelectionListener</span></span></strong>.</li>
<li>Cette interface n'a qu'une méthode à redéfinir :  <span class="code2 java"><span class="kd">public</span> <span class="kt">void</span> <span class="nf">valueChanged</span><span class="o">(</span><span class="n">TreeSelectionEvent</span> <span class="n">event</span><span class="o">)</span>
</span>. </li>
<li>L'affichage des différents éléments constituant un arbre peut être modifié en utilisant un <span class="violet"><span class="courrier"><strong>DefaultTreeCellRenderer</strong></span></span>. Définissez et affectez cet objet à l'arbre pour personnaliser l'affichage de votre arbre.</li>
<li>Vous pouvez aussi changer le "<strong><span class="italique">look and feel</span></strong>" et utiliser celui de votre OS.</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Plus de peur que de mal, même si c'est un objet compliqué à utiliser.<br>
Mais maintenant que vous êtes chaud, nous continuons avec un objet tout aussi compliqué (si ce n'est pas plus  <img src="./java_files/siffle.png" alt=":-°" class="smilies">  ) avec : <strong><span class="orange">les tableaux</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_71859">Les tableaux, les vrais</h1>
	<div id="chap_intro">
	Nous continuons notre descente aux enfers avec un autres composant assez complexe.<br>
Il a été une de mes bêtes noires pendant quelques temps : j'espère donc que ce chapitre vous permettra de vous simplifier son apprentissage.<br>
<br>
Bon, je vous propose de commencer dès maintenant !<br>
Je vous le promets : ça ne fera pas mal...<span class="ttpetit"> (ou peut-être un peu <img src="./java_files/diable.png" alt=":diable:" class="smilies"> ).</span><br>

	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_71858">Premiers pas</h2>
		<div class="ss_part_texte">
		Bon. Les tableaux sont des composants qui permettent d'afficher des données de façon structurée : dans un tableau. <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Tout le monde sait ce qu'est un tableau.<br>
Non ? Vous me charriez, là... <img src="./java_files/hihi.png" alt="^^" class="smilies"> En voici un : <br>
<br>
<div class="centre"><img src="./java_files/140446.jpg" alt="Image utilisateur"></div><br>
<br>
Le code source de ce programme est : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTable"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">120</span><span class="o">);</span>
		
                <span class="c">//Les données du tableau</span>
		<span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span> <span class="o">=</span> <span class="o">{</span>	<span class="o">{</span><span class="s">"Cysboy"</span><span class="o">,</span> <span class="s">"28 ans"</span><span class="o">,</span> <span class="s">"1.80 cm"</span><span class="o">},</span>
				<span class="o">{</span><span class="s">"BZHHydde"</span><span class="o">,</span> <span class="s">"28 ans"</span><span class="o">,</span> <span class="s">"1.80 cm"</span><span class="o">},</span>
				<span class="o">{</span><span class="s">"IamBow"</span><span class="o">,</span> <span class="s">"24 ans"</span><span class="o">,</span> <span class="s">"1.90 cm"</span><span class="o">},</span>
				<span class="o">{</span><span class="s">"FunMan"</span><span class="o">,</span> <span class="s">"32 ans"</span><span class="o">,</span> <span class="s">"1.85 cm"</span><span class="o">}</span>
		<span class="o">};</span>
	        <span class="c">//Les titres des colonnes</span>
		<span class="n">String</span>  <span class="n">title</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Pseudo"</span><span class="o">,</span> <span class="s">"Age"</span><span class="o">,</span> <span class="s">"Taille"</span><span class="o">};</span>
		<span class="n">JTable</span> <span class="n">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTable</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">title</span><span class="o">);</span>
                <span class="c">//On ajoute notre tableau à notre contentPane dans un scroll</span>
                <span class="c">//Sinon les titres des colonnes ne s'afficheront pas ! !	</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">tableau</span><span class="o">));</span>
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Code simple et clair ! <br>
Vous instanciez un objet <strong><span class="violet"><span class="courrier">JTable</span></span></strong> en lui passant en paramètres les données qu'il doit utiliser.<br>
<div class="rmq erreur"><strong>Attention :</strong> le tableau correspondant aux titres des colonnes de votre tableau peuvent être des <strong><span class="violet"><span class="courrier">String</span></span></strong> ou de type <strong><span class="courrier"><span class="violet">Object</span></span></strong> ! ! Tandis que les données, elles, sont des <strong><span class="violet"><span class="courrier">Object</span></span></strong>.</div><br>
<br>
<div class="rmq question">Pourquoi les données doivent-elles être de type <strong><span class="violet"><span class="courrier">Object</span></span></strong> ?</div><br>
Vous allez voir, un peu plus loin, que nous pouvons mettre plusieurs types d'éléments dans un tableau ! Mais l'heure n'est pas encore venue pour ce genre de choses... Il vous faut voir comment fonctionne cet objet avant cela ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Je comprends que vous soyez pressés mais tout vient à point à qui sait attendre.<br>
<br>
<div class="rmq question">Bon, d'accord. Mais pourquoi tu as mis le tableau dans un scroll ?</div><br>
En fait, ceux qui ont essayé d'ajouter le tableau dans le <strong><span class="violet"><span class="courrier">contentPane</span></span></strong> sans scroll ont dû voir que <strong>les titres de colonnes n'apparaissent pas</strong>... <img src="./java_files/unsure.gif" alt=":euh:" class="smilies"><br>
Le scroll indique automatiquement à notre tableau où il doit afficher ses titres !<br>
Si vous ne faites pas ceci, <strong><span class="rouge">vous êtes OBLIGÉS de spécifier où mettre l'entête du tableau</span></strong>, comme ceci : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="syntax"><pre><span class="c">//On indique que l'entête doit être au nord, donc au-dessus</span>
<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">tableau</span><span class="o">.</span><span class="na">getTableHeader</span><span class="o">(),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
<span class="c">//Et le corps au centre !</span>
<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">tableau</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Bon, je pense qu'on a fait le tour des préliminaires... Rentrons dans le vif du sujet ! <img src="./java_files/clin.png" alt=";)" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_71855">Les cellules, c'est la vie</h2>
		<div class="ss_part_texte">
		Vos tableaux sont composés de ce qu'on appelle : <strong>des cellules !</strong><br>
Vous pouvez les voir facilement, elles sont encadrées par des bordures noires et contiennent les données que vous avez mises dans le tableau d'<strong><span class="violet"><span class="courrier">Object</span></span></strong> et de <strong><span class="violet"><span class="courrier">String</span></span></strong>.<br>
<br>
Celles-ci peuvent être retrouvées par des coordonnées (x, y) où x correspond au numéro de ligne et y au numéro de la colonne ! <br>
Une cellule est donc une intersection d'une ligne et d'une colonne. <br>
<br>
<div class="rmq question">Donc, afin de pouvoir modifier une cellule, nous allons devoir récupérer la ligne et la colonne auxquelles elle appartient ?</div><br>
Tout à fait... Et là... Vous devez avoir à peu près cette tête-là :  <img src="./java_files/blink.gif" alt="o_O" class="smilies"> <br>
Ne vous inquiétez pas, nous allons prendre tout ça point par point.<br>
<br>
Tout d'abord, nous allons commencer par changer la taille d'une colonne et d'une ligne, ce qui nous donne, au final, quelque chose comme ça :<br>
<br>
<div class="centre"><img src="./java_files/140469.jpg" alt="Image utilisateur"> <img src="./java_files/140470.jpg" alt="Image utilisateur"></div><br>
<br>
Vous allez voir que le code utilisé est simple comme tout, encore fallait-il que vous sachiez quelles méthodes et quels objets utiliser... Voici le code permettant d'obtenir ce résultat : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.TableColumn</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTable</span> <span class="n">tableau</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">change</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Changer la taille"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">retablir</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Rétablir"</span><span class="o">);</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTable"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">240</span><span class="o">);</span>
		
		<span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span> <span class="o">=</span> <span class="o">{</span>	<span class="o">{</span><span class="s">"Cysboy"</span><span class="o">,</span> <span class="s">"28 ans"</span><span class="o">,</span> <span class="s">"1.80 cm"</span><span class="o">},</span>
				<span class="o">{</span><span class="s">"BZHHydde"</span><span class="o">,</span> <span class="s">"28 ans"</span><span class="o">,</span> <span class="s">"1.80 cm"</span><span class="o">},</span>
				<span class="o">{</span><span class="s">"IamBow"</span><span class="o">,</span> <span class="s">"24 ans"</span><span class="o">,</span> <span class="s">"1.90 cm"</span><span class="o">},</span>
				<span class="o">{</span><span class="s">"FunMan"</span><span class="o">,</span> <span class="s">"32 ans"</span><span class="o">,</span> <span class="s">"1.85 cm"</span><span class="o">}</span>
		<span class="o">};</span>
	
		<span class="n">String</span>  <span class="n">title</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Pseudo"</span><span class="o">,</span> <span class="s">"Age"</span><span class="o">,</span> <span class="s">"Taille"</span><span class="o">};</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTable</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">title</span><span class="o">);</span>
		
		<span class="n">JPanel</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		
		<span class="n">change</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>				
				<span class="n">changeSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">80</span><span class="o">);</span>
				<span class="n">change</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
				<span class="n">retablir</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		
		<span class="n">retablir</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
				
				<span class="n">changeSize</span><span class="o">(</span><span class="mi">75</span><span class="o">,</span> <span class="mi">16</span><span class="o">);</span>
				<span class="n">change</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
				<span class="n">retablir</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		
		<span class="n">retablir</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="n">pan</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">change</span><span class="o">);</span>
		<span class="n">pan</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">retablir</span><span class="o">);</span>
		
		<span class="c1">//On remplace cette ligne</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">tableau</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>

	<span class="o">}</span>
	
	<span class="cm">/**</span>
<span class="cm">	 * Change la taille d'une ligne et d'une colonne</span>
<span class="cm">         * J'ai mis deux boucles afin que vous puissiez voir comment parcourir les colonnes et les lignes</span>
<span class="cm">	 * @param width</span>
<span class="cm">	 * @param height</span>
<span class="cm">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">changeSize</span><span class="o">(</span><span class="kt">int</span> <span class="n">width</span><span class="o">,</span> <span class="kt">int</span> <span class="n">height</span><span class="o">){</span>
		<span class="c1">//On crée un objet TableColumn afin de travailler sur notre colonne</span>
		<span class="n">TableColumn</span> <span class="n">col</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">tableau</span><span class="o">.</span><span class="na">getColumnCount</span><span class="o">();</span> <span class="n">i</span><span class="o">++){</span>
			<span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
				<span class="c1">//On récupère le modèle de la colonne</span>
				<span class="n">col</span> <span class="o">=</span> <span class="n">tableau</span><span class="o">.</span><span class="na">getColumnModel</span><span class="o">().</span><span class="na">getColumn</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
				<span class="c1">//On lui affecte la nouvelle valeur</span>
				<span class="n">col</span><span class="o">.</span><span class="na">setPreferredWidth</span><span class="o">(</span><span class="n">width</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>				
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">tableau</span><span class="o">.</span><span class="na">getRowCount</span><span class="o">();</span> <span class="n">i</span><span class="o">++){</span>
			<span class="c1">//On affecte la taille de la ligne à l'indice spécifié !</span>
			<span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span>
				<span class="n">tableau</span><span class="o">.</span><span class="na">setRowHeight</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">height</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq erreur">Tout comme pour les tableaux vus dans la première partie de ce tuto, les indices de colonnes et de lignes d'un <strong><span class="courrier"><span class="violet">JTable</span></span></strong> commencent à 0 ! !</div><br>
<br>
J'ai mis deux boucles afin que vous puissiez voir comment parcourir les colonnes et les lignes de votre objet mais, ici, nous aurions pu nous contenter d'un indice mis en dur dans notre code...<br>
<br>
Ceci mis à part, vous constatez que la ligne et la colonne concernées changent bien de tailles lors du clic sur les boutons !<br>
Vous venez donc de voir comment changer la taille des cellules de façon dynamique. <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
Je dis ça parce que, au cas où vous ne l'auriez pas remarqué, vous pouvez changer la taille des colonnes manuellement. Il vous suffit de cliquer sur un séparateur de colonne, de maintenir le clic et de déplacer le dit séparateur : <br>
<br>
<div class="centre"><img src="./java_files/140475.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq question">D'accord, on a bien compris !<br>
Par contre, cette instruction nous semble bizarre : <span class="code2 java"><span class="n">tableau</span><span class="o">.</span><span class="na">getColumnModel</span><span class="o">().</span><span class="na">getColumn</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span>. Tu pourrais creuser un peu ? </div><br>
<br>
J'allais y venir, mais le fait que vous ayez remarqué ceci est bien la preuve que vous commencez à vous poser les bonnes questions !<br>
<br>
En fait, vous devez savoir qu'il y a un objet qui fait le lien entre votre tableau et vos données. Celui-ci est un ce qu'on appelle un modèle de tableau (ça vous rappelle les modèles d'arbres, non ?).<br>
L'objet en question s'appelle <strong><span class="courrier"><span class="violet">JTableModel</span></span></strong> et vous allez voir qu'il permet de faire des choses très intéressantes ! !<br>
<br>
Par exemple, vous avez vu que vous pouvez mettre des données de n'importe quel type héritant de la classe <strong><span class="violet"><span class="courrier">Object</span></span>.<br>
</strong><br>
Essayez ce morceau de code : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.TableColumn</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTable</span> <span class="n">tableau</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">change</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Changer la taille"</span><span class="o">);</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTable"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">600</span><span class="o">,</span> <span class="mi">140</span><span class="o">);</span>
		
		<span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span> <span class="o">=</span> <span class="o">{</span>	<span class="o">{</span><span class="s">"Cysboy"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"6boy"</span><span class="o">),</span> <span class="k">new</span> <span class="n">Double</span><span class="o">(</span><span class="mf">1.80</span><span class="o">),</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"BZHHydde"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"BZH"</span><span class="o">),</span> <span class="k">new</span> <span class="n">Double</span><span class="o">(</span><span class="mf">1.78</span><span class="o">),</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"IamBow"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"BoW"</span><span class="o">),</span> <span class="k">new</span> <span class="n">Double</span><span class="o">(</span><span class="mf">1.90</span><span class="o">),</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"FunMan"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Year"</span><span class="o">),</span> <span class="k">new</span> <span class="n">Double</span><span class="o">(</span><span class="mf">1.85</span><span class="o">),</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">)}</span>
		<span class="o">};</span>
	
		<span class="n">String</span>  <span class="n">title</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Pseudo"</span><span class="o">,</span> <span class="s">"Age"</span><span class="o">,</span> <span class="s">"Taille"</span><span class="o">,</span> <span class="s">"OK ?"</span><span class="o">};</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTable</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">title</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">tableau</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce code doit vous donner ceci : <br>
<br>
<div class="centre"><img src="./java_files/140484.jpg" alt="Image utilisateur"></div><br>
<br>
Maintenant, vous allez créer votre modèle de tableau ! <br>
Pour cela, il vous suffit de créer une classe héritant de <strong><span class="violet"><span class="courrier">AbstractTableModel</span></span></strong> qui, vous l'avez sûrement deviné, est une classe abstraite...<br>
<br>
Voici donc un code mettant en pratique mes dires : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79</pre></div></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.AbstractTableModel</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTable</span> <span class="n">tableau</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">change</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Changer la taille"</span><span class="o">);</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTable"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">600</span><span class="o">,</span> <span class="mi">140</span><span class="o">);</span>
		
		<span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span> <span class="o">=</span> <span class="o">{</span>	<span class="o">{</span><span class="s">"Cysboy"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"6boy"</span><span class="o">),</span> <span class="k">new</span> <span class="n">Double</span><span class="o">(</span><span class="mf">1.80</span><span class="o">),</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"BZHHydde"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"BZH"</span><span class="o">),</span> <span class="k">new</span> <span class="n">Double</span><span class="o">(</span><span class="mf">1.78</span><span class="o">),</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"IamBow"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"BoW"</span><span class="o">),</span> <span class="k">new</span> <span class="n">Double</span><span class="o">(</span><span class="mf">1.90</span><span class="o">),</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"FunMan"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Year"</span><span class="o">),</span> <span class="k">new</span> <span class="n">Double</span><span class="o">(</span><span class="mf">1.85</span><span class="o">),</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">)}</span>
		<span class="o">};</span>
	
		<span class="n">String</span>  <span class="n">title</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Pseudo"</span><span class="o">,</span> <span class="s">"Age"</span><span class="o">,</span> <span class="s">"Taille"</span><span class="o">,</span> <span class="s">"OK ?"</span><span class="o">};</span>
		
		<span class="n">ZModel</span> <span class="n">model</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZModel</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">title</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Nombre de colonne : "</span> <span class="o">+</span> <span class="n">model</span><span class="o">.</span><span class="na">getColumnCount</span><span class="o">());</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Nombre de ligne : "</span> <span class="o">+</span> <span class="n">model</span><span class="o">.</span><span class="na">getRowCount</span><span class="o">());</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTable</span><span class="o">(</span><span class="n">model</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">tableau</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		
	<span class="o">}</span>
	 
        <span class="c1">//CLASSE MODÈLE PERSONNALISÉE</span>
	<span class="kd">class</span> <span class="nc">ZModel</span> <span class="kd">extends</span> <span class="n">AbstractTableModel</span><span class="o">{</span>

		<span class="kd">private</span> <span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span><span class="o">;</span>
		<span class="kd">private</span> <span class="n">String</span><span class="o">[]</span> <span class="n">title</span><span class="o">;</span>
		<span class="cm">/**</span>
<span class="cm">		 * Constructeur</span>
<span class="cm">		 * @param data</span>
<span class="cm">		 * @param title</span>
<span class="cm">		 */</span>
		<span class="kd">public</span> <span class="nf">ZModel</span><span class="o">(</span><span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">title</span><span class="o">){</span>
			<span class="k">this</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">;</span>
			<span class="k">this</span><span class="o">.</span><span class="na">title</span> <span class="o">=</span> <span class="n">title</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="cm">/**</span>
<span class="cm">		 * Retourne le nombre de colonnes</span>
<span class="cm">		 */</span>
		<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getColumnCount</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">title</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="cm">/**</span>
<span class="cm">		 * Retourne le nombre de lignes</span>
<span class="cm">		 */</span>
		<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getRowCount</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="cm">/**</span>
<span class="cm">		 * Retourne la valeur à l'emplacement spécifié</span>
<span class="cm">		 */</span>
		<span class="kd">public</span> <span class="n">Object</span> <span class="nf">getValueAt</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">[</span><span class="n">row</span><span class="o">][</span><span class="n">col</span><span class="o">];</span>
		<span class="o">}</span>
				
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donne ceci : <br>
<br>
<div class="centre"><img src="./java_files/140485.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq question">Eh ! ! On n'a même plus les titres de nos colonnes ! <img src="./java_files/blink.gif" alt="o_O" class="smilies"> </div><br>
Effectivement. Ceci est dû au fait que vous n'avez redéfini que les méthodes abstraites de la classe <strong><span class="violet"><span class="courrier">AbstractTableModel</span></span></strong>.<br>
Afin de voir nos titres de colonnes apparaître, il faut redéfinir la méthode <span class="code2 java"><span class="n">getColumnName</span><span class="o">(</span><span class="kt">int</span> <span class="n">col</span><span class="o">)</span>
</span>, elle devrait ressembler à ceci : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="cm">/**</span>
<span class="cm">* Retourne le titre de la colonne à l'indice spécifé</span>
<span class="cm">*/</span>
<span class="kd">public</span> <span class="n">String</span> <span class="nf">getColumnName</span><span class="o">(</span><span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
  <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">title</span><span class="o">[</span><span class="n">col</span><span class="o">];</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ré-exécutez votre code, après avoir rajouté cette méthode dans votre objet <strong><span class="violet"><span class="courrier">ZModel</span></span></strong>, et vous devriez avoir ceci : <br>
<br>
<div class="centre"><img src="./java_files/140486.jpg" alt="Image utilisateur"></div><br>
<br>
Vous commencez à faire des choses sympas ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Je vais vous montrer un autre truc marrant avec les modèles.<br>
Regardez ce que vous pouvez obtenir : <br>
<br>
<div class="centre"><img src="./java_files/140571.jpg" alt="Image utilisateur"></div><br>
<br>
Vous avez vu ? Vos booléens se sont transformés en cases à cocher !<br>
Les booléens valant <span class="italique">vrai</span> sont devenus des cases cochées et les booléens valant <span class="italique">faux</span> sont maintenant des cases non cochées !<br>
<br>
<div class="rmq question"><img src="./java_files/blink.gif" alt="o_O" class="smilies"><br>
Comment tu as fait ça ?</div><br>
D'une manière toute simple, j'ai redéfini une méthode dans mon modèle et c'est automatique ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Cette méthode permet de retourner la classe du type de valeur d'un modèle et de transformer vos booléens en cases à cocher...<br>
Au moment où notre objet crée le rendu des cellules, il invoque cette méthode et se sert de cette dernière pour créer certaines choses, comme ce que vous venez de voir. <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
<br>
Pour avoir ce rendu, il vous suffit de redéfinir la méthode <span class="code2 java"><span class="n">getColumnClass</span><span class="o">(</span><span class="kt">int</span> <span class="n">col</span><span class="o">)</span>
</span>. Cette méthode retourne un objet <strong><span class="violet"><span class="courrier">Class</span></span></strong>.<br>
Je vous laisse réfléchir un peu sur le "<strong><span class="italique">comment renvoyer cette valeur</span></strong>".<br>
Pour voir comment faire, c'est juste en dessous : <br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="syntax"><pre><span class="cm">/**</span>
<span class="cm">* Retourne la classe de la donnée de la colonne</span>
<span class="cm">* @param col</span>
<span class="cm">*/</span>
<span class="kd">public</span> <span class="n">Class</span> <span class="nf">getColumnClass</span><span class="o">(</span><span class="kt">int</span> <span class="n">col</span><span class="o">){</span>
	<span class="c1">//On retourne le type de la cellule à la colonne demandée</span>
	<span class="c1">//On se moque de la ligne puisque les données sur chaque ligne sont les mêmes</span>
	<span class="c1">//On choisit donc la première ligne</span>
	<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="n">col</span><span class="o">].</span><span class="na">getClass</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
<br>
Je ne sais pas si vous avez remarqué mais vos cellules ne sont plus éditables ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<div class="rmq question">Oh non ! Qu'est-ce qui se passe ?</div><br>
Je vous avait prévenus que ce composant était pénible... <br>
En fait, vous devez aussi dire à votre modèle d'avertir votre <strong><span class="violet"><span class="courrier">JTable</span></span></strong> que certaines cellules peuvent être éditées et d'autres non (comme le bouton, par exemple).<br>
<br>
Afin de réussir ceci, vous devez redéfinir la méthode <span class="code2 java"><span class="n">isCellEditable</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">)</span>
</span> qui, dans la classe mère retourne tout le temps <span class="code2 java"><span class="kc">false</span>
</span>...<br>
Rajouter donc ce morceau de code dans notre modèle : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="syntax"><pre><span class="cm">/**</span>
<span class="cm"> * Retourne vrai si la cellule est éditable : celle-ci sera donc éditable</span>
<span class="cm"> * @return boolean</span>
<span class="cm"> */</span>
<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isCellEditable</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">){</span>
	<span class="k">return</span> <span class="kc">true</span><span class="o">;</span> 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vos cellules sont de nouveau éditables, cependant, vous n'avez pas dit à votre modèle que la cellule contenant votre bouton ne devait pas être éditable...<br>
<div class="rmq question">T'es gentil, mais comment on fait ça ?</div><br>
Grâce à la méthode <span class="code2 java"><span class="n">getClass</span><span class="o">()</span>
</span> de tout objet Java !<br>
Vous pouvez déterminer de quelle classe est issu votre objet et, pour faire la comparaison avec une classe, on utilise le mot clé <strong><span class="violet"><span class="courrier">instanceof</span></span></strong>.<br>
Regardez comment on procède, c'est <span class="barre">clore comme de l'eau de ruche</span> clair comme de l'eau de roche : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="syntax"><pre><span class="cm">/**</span>
<span class="cm"> * Retourne vrai si la cellule est éditable : celle-ci sera donc éditable</span>
<span class="cm"> * @return boolean</span>
<span class="cm"> */</span>
<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isCellEditable</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">){</span>
	<span class="c1">//On appelle la méthode getValueAt qui retourne la valeur d'une cellule</span>
	<span class="c1">//Et on fait un traitement spécifique si c'est un JButton</span>
	<span class="k">if</span><span class="o">(</span><span class="n">getValueAt</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">col</span><span class="o">)</span> <span class="k">instanceof</span> <span class="n">JButton</span><span class="o">)</span>
		<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
	<span class="k">return</span> <span class="kc">true</span><span class="o">;</span> 
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voilà ! ! !  <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"> <br>
Victoire ! Les cellules sont de nouveau éditables sauf le <strong><span class="violet"><span class="courrier">JButton</span></span></strong> !<br>
Par contre, je vois que certains d'entre vous attendent toujours de voir apparaître un zoli bouton...<br>
Pour réussir à faire ceci, nous n'allons pas utiliser un modèle de tableau, mais un objet qui s'occupe de gérer le contenu et la façon dont ce contenu est affiché.<br>
<br>
Les modèles servent à faire un pont entre ce qu'affiche <strong><span class="violet"><span class="courrier">JTable</span></span></strong> et ce que fait l'utilisateur. Pour changer la façon dont sont affichées les cellules, nous devrons utiliser <strong><span class="courrier"><span class="violet">DefaultCellRenderer</span></span></strong>.<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_71862">Contrôlez l'affichage de vos cellules</h2>
		<div class="ss_part_texte">
		Bon, je ne vais pas vous faire languir plus longtemps...<br>
Cependant, vous devrez faire la distinction entre un <strong><span class="violet"><span class="courrier">TableModel </span></span></strong>et un <strong><span class="violet"><span class="courrier">DefaultTableCellRenderer</span></span></strong>.<br>
<strong><span class="vertf">Le premier fait le lien entre vous et le tableau tandis que le second s'occupe de gérer l'affichage dans les cellules !</span></strong><br>
<br>
Le but du jeu est de définir une nouvelle façon de dessiner les composants dans les cellules.<br>
En définitive, nous n'allons pas vraiment faire ça, mais nous allons dire à notre tableau que la valeur qu'il a dans telle ou telle cellule est un composant (bouton ou autre).<br>
<br>
Rien de plus simple à faire, <span class="ttpetit">encore fallait-il le savoir</span>.<br>
Il suffit de créer une classe héritant de <strong><span class="violet"><span class="courrier">DefaultTableCellRenderer</span></span></strong> et de redéfinir la méthode <span class="code2 java"><span class="kd">public</span> <span class="n">Component</span> <span class="nf">getTableCellRendererComponent</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">isSelected</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">hasFocus</span><span class="o">,</span> <span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">column</span><span class="o">)</span>
</span>.<br>
<div class="rmq question">Waw ! Il y en a des paramètres !</div><br>
En effet, mais dans le cas qui nous intéresse, nous n'en avons besoin que d'un seul : <strong><span class="courrier">value</span></strong>.<br>
Vous voyez que cette méthode retourne un objet <strong><span class="violet"><span class="courrier">Component</span></span></strong>.<br>
Nous allons seulement spécifier de quel type d'objet il s'agit suivant le cas...<br>
<br>
Regarder notre classe héritée : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Component</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.DefaultTableCellRenderer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TableComponent</span> <span class="kd">extends</span> <span class="n">DefaultTableCellRenderer</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="n">Component</span> <span class="nf">getTableCellRendererComponent</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">,</span>
			<span class="n">Object</span> <span class="n">value</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">isSelected</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">hasFocus</span><span class="o">,</span> <span class="kt">int</span> <span class="n">row</span><span class="o">,</span>
			<span class="kt">int</span> <span class="n">column</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Si la valeur de la cellule est un JButton, on transtype notre valeur</span>
		<span class="k">if</span> <span class="o">(</span><span class="n">value</span> <span class="k">instanceof</span> <span class="n">JButton</span><span class="o">){</span>
			<span class="k">return</span> <span class="o">(</span><span class="n">JButton</span><span class="o">)</span> <span class="n">value</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">else</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Une fois cette classe créée, il suffit juste de dire à notre tableau d'utiliser ce rendu de cellules, avec cette instruction : <span class="code2 java"><span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">setDefaultRenderer</span><span class="o">(</span><span class="n">JButton</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="k">new</span> <span class="n">TableComponent</span><span class="o">());</span>
</span>.<br>
Le premier paramètre permet de dire à notre tableau de faire attention à ce type d'objet et enfin, le second lui dit d'utiliser ce modèle de cellules.<br>
<br>
Ce qui nous donne : <br>
<br>
<div class="centre"><img src="./java_files/140579.jpg" alt="Image utilisateur"></div><br>
<br>
<br>
Voilà notre bouton en chair et en os !<br>
Je me doute bien que les plus taquins d'entre vous ont dû essayer de mettre plus d'un type de composant dans le tableau... Et vous vous retrouvez le bec dans l'eau car il ne prend en compte que les boutons pour le moment...<br>
<br>
En fait, une fois que vous avez défini une classe héritée afin de gérer le rendu de vos cellules, vous avez fait le plus gros du travail...<br>
Tenez, si, par exemple, nous avons ce genre de données à mettre dans notre tableau : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="syntax"><pre><span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span> <span class="o">=</span> <span class="o">{</span>	<span class="o">{</span><span class="s">"Cysboy"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"6boy"</span><span class="o">),</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">"toto"</span><span class="o">,</span> <span class="s">"titi"</span><span class="o">,</span> <span class="s">"tata"</span><span class="o">}),</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">)},</span>
			<span class="o">{</span><span class="s">"BZHHydde"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"BZH"</span><span class="o">),</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">"toto"</span><span class="o">,</span> <span class="s">"titi"</span><span class="o">,</span> <span class="s">"tata"</span><span class="o">}),</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">)},</span>
			<span class="o">{</span><span class="s">"IamBow"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"BoW"</span><span class="o">),</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">"toto"</span><span class="o">,</span> <span class="s">"titi"</span><span class="o">,</span> <span class="s">"tata"</span><span class="o">}),</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">)},</span>
			<span class="o">{</span><span class="s">"FunMan"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Year"</span><span class="o">),</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">"toto"</span><span class="o">,</span> <span class="s">"titi"</span><span class="o">,</span> <span class="s">"tata"</span><span class="o">}),</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">)}</span>
		<span class="o">};</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
et si nous conservons l'objet de rendu de cellule tel qu'il est actuellement, nous aurons ceci : <br>
<br>
<div class="centre"><img src="./java_files/140580.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">J'ai augmenté un peu la taille de la fenêtre et des lignes... Mis à part ça, rien n'a changé ! <img src="./java_files/hihi.png" alt="^^" class="smilies"></div><br>
Les boutons s'affichent toujours mais pas les combos !<br>
<div class="rmq question">Comment faire, alors ?</div><br>
Je sais que certains d'entre vous ont presque trouvé la solution, j'en suis même sûr.<br>
Vous n'auriez pas ajouté ce qui suit dans votre objet de rendu de cellule ?<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Component</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.DefaultTableCellRenderer</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TableComponent</span> <span class="kd">extends</span> <span class="n">DefaultTableCellRenderer</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="n">Component</span> <span class="nf">getTableCellRendererComponent</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">,</span>
			<span class="n">Object</span> <span class="n">value</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">isSelected</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">hasFocus</span><span class="o">,</span> <span class="kt">int</span> <span class="n">row</span><span class="o">,</span>
			<span class="kt">int</span> <span class="n">column</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="k">if</span> <span class="o">(</span><span class="n">value</span> <span class="k">instanceof</span> <span class="n">JButton</span><span class="o">){</span>
			<span class="k">return</span> <span class="o">(</span><span class="n">JButton</span><span class="o">)</span> <span class="n">value</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="c">//LIGNE RAJOUTÉE</span>
		<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">value</span> <span class="k">instanceof</span> <span class="n">JComboBox</span><span class="o">){</span>
			<span class="k">return</span> <span class="o">(</span><span class="n">JComboBox</span><span class="o">)</span> <span class="n">value</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">else</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ceux qui ont fait ceci ont trouvé la première partie de la solution !<br>
Vous avez bien spécifié à votre objet de retourner une valeur <span class="italique">castée</span> en cas de rencontre avec une combo !<br>
Seulement, et j'en suis quasiment sûr, <strong>vous avez dû oublier de dire à votre tableau de faire attention aux boutons <span class="gros">ET</span> aux combos !</strong><br>
Rappelez-vous cette instruction : <span class="code2 java"><span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">setDefaultRenderer</span><span class="o">(</span><span class="n">JButton</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="k">new</span> <span class="n">TableComponent</span><span class="o">());</span>
</span>.<br>
<strong><span class="rouge">Votre tableau ne fait attention qu'aux boutons ! !</span></strong><br>
<div class="rmq question">D'accord. Comment fait-on, alors ?</div><br>
Tout simplement en changeant <span class="code2 java"><span class="n">JButton</span><span class="o">.</span><span class="na">class</span>
</span> en <span class="code2 java"><span class="n">JComponent</span><span class="o">.</span><span class="na">class</span>
</span>.<br>
Après avoir fait ces deux modifs, vous devriez avoir ceci : <br>
<br>
<div class="centre"><img src="./java_files/140581.jpg" alt="Image utilisateur"></div><br>
<br>
Alors ! Elle n'est pas belle, la vie ?<br>
Vous devez avoir saisi comment on fait pour utiliser les modèles de tableaux et les rendus de cellules, maintenant...<br>
<br>
Cependant, vous aurez aussi constaté que vos composants sont inertes ! <img src="./java_files/triste.png" alt=":(" class="smilies"><br>
Ceci est dû au fait que vous allez devoir gérer la façon de réagir de vos cellules... Avant d'en arriver là, nous allons voir une autre façon d'afficher correctement des composants dans un <strong><span class="violet"><span class="courrier">JTable</span></span></strong>.<br>
Nous allons pouvoir laisser de côté notre classe servant de modèle et nous concentrer sur les composants.<br>
<br>
Nous allons commencer par revenir à un code plus sobre : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTable</span> <span class="n">tableau</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">change</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Changer la taille"</span><span class="o">);</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTable"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">600</span><span class="o">,</span> <span class="mi">180</span><span class="o">);</span>
		
		<span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span> <span class="o">=</span> <span class="o">{</span>	<span class="o">{</span><span class="s">"Cysboy"</span><span class="o">,</span> <span class="s">"6boy"</span><span class="o">,</span> <span class="s">"Combo"</span><span class="o">,</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"BZHHydde"</span><span class="o">,</span> <span class="s">"BZH"</span><span class="o">,</span> <span class="s">"Combo"</span><span class="o">,</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"IamBow"</span><span class="o">,</span> <span class="s">"BoW"</span><span class="o">,</span> <span class="s">"Combo"</span><span class="o">,</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"FunMan"</span><span class="o">,</span> <span class="s">"Year"</span><span class="o">,</span> <span class="s">"Combo"</span><span class="o">,</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">)}</span>
		<span class="o">};</span>
	
		<span class="n">String</span>  <span class="n">title</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Pseudo"</span><span class="o">,</span> <span class="s">"Age"</span><span class="o">,</span> <span class="s">"Taille"</span><span class="o">,</span> <span class="s">"OK ?"</span><span class="o">};</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTable</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">title</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">setRowHeight</span><span class="o">(</span><span class="mi">30</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">tableau</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		
	<span class="o">}</span>
		<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
De là, nous allons créer une classe qui va permettre d'afficher un bouton dans les cellules de la seconde colonne et une combo dans les cellules de la troisième colonne...<br>
Le principe est simple : nous allons créer une classe qui héritera de la classe <strong><span class="violet"><span class="courrier">JButton </span></span></strong>et qui implémentera l'interface <strong><span class="violet"><span class="courrier">TableCellRenderer</span></span></strong>.<br>
Nous allons ensuite dire à notre tableau d'utiliser ce type de rendu pour la seconde colonne.<br>
<br>
Voici notre classe <strong><span class="courrier"><span class="violet">ButtonRenderer</span></span> </strong> :<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Component</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.TableCellRenderer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ButtonRenderer</span> <span class="kd">extends</span> <span class="n">JButton</span> <span class="kd">implements</span> <span class="n">TableCellRenderer</span><span class="o">{</span>

	<span class="kd">public</span> <span class="n">Component</span> <span class="nf">getTableCellRendererComponent</span><span class="o">(</span>	<span class="n">JTable</span> <span class="n">table</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span>
													<span class="kt">boolean</span> <span class="n">isSelected</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">isFocus</span><span class="o">,</span>
													<span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//On écrit dans le bouton ce que contient la cellule</span>
		<span class="n">setText</span><span class="o">((</span><span class="n">value</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="n">value</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span> <span class="o">:</span> <span class="s">""</span><span class="o">);</span>
		<span class="c">//on retourne notre bouton</span>
		<span class="k">return</span> <span class="k">this</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Il nous suffit maintenant de mettre à jour le tableau grâce à cette méthode <span class="code2 java"><span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Age"</span><span class="o">).</span><span class="na">setCellRenderer</span><span class="o">(</span><span class="k">new</span> <span class="n">ButtonRenderer</span><span class="o">());</span>
</span> : on recupère la colonne grâce à son titre et on applique le rendu !<br>
Résultat : <br>
<br>
<div class="centre"><img src="./java_files/140679.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Votre bouton est de nouveau éditable, mais ce problème sera réglé par la suite... <img src="./java_files/hihi.png" alt="^^" class="smilies"></div><br>
<br>
Pour le rendu de la cellule numéro 3, je vous laisse un peu chercher, ce n'est pas très difficile maintenant que vous avez appris cette méthode. <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Voilà le code et le résultat : <br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Component</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.TableCellRenderer</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ComboRenderer</span> <span class="kd">extends</span> <span class="n">JComboBox</span> <span class="kd">implements</span> <span class="n">TableCellRenderer</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="n">Component</span> <span class="nf">getTableCellRendererComponent</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span>
			<span class="kt">boolean</span> <span class="n">isSelected</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">isFocus</span><span class="o">,</span> <span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Très bien"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Bien"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Mal"</span><span class="o">);</span>
		<span class="k">return</span> <span class="k">this</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Résultat : <br>
<br>
<div class="centre"><img src="./java_files/140681.jpg" alt="Image utilisateur"></div><br>
<br>
</div></div><br>
<br>
La suite logique est donc la gestion des événements...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_71863">Des tableaux très actifs !</h2>
		<div class="ss_part_texte">
		Bon, la dernière ligne droite avant la fin du chapitre...<br>
<br>
Comme je l'ai déjà dit, ici aussi, c'est simple : le tout est d'acquérir les connaissances requises ! <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
<br>
Nous allons commencer par le plus difficile et nous terminerons par le plus simple !<br>
Je vous le donne en mille : le composant le plus difficile à utiliser dans un tableau, entre un bouton et une combo c'est : <strong><span class="vertf">le bouton !</span></strong><br>
<br>
Eh oui, vous verrez que la combo est presque gérée automatiquement, alors que vous allez devoir dire quoi faire à vos boutons...<br>
Afin de réussir à faire ceci, nous allons donc créer une classe que notre tableau va utiliser afin de pouvoir utiliser les boutons pour faire des actions spécifiques.<br>
<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Component</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.DefaultCellEditor</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ButtonEditor</span> <span class="kd">extends</span> <span class="n">DefaultCellEditor</span> <span class="o">{</span>
	  
	<span class="kd">protected</span> <span class="n">JButton</span> <span class="n">button</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kt">boolean</span>   <span class="n">isPushed</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">ButtonListener</span> <span class="n">bListener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ButtonListener</span><span class="o">();</span>
	
	<span class="c">/**</span>
<span class="c">	 * Constructeur avec une checkBox</span>
<span class="c">	 * @param checkBox</span>
<span class="c">	 * @param count</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">ButtonEditor</span><span class="o">(</span><span class="n">JCheckBox</span> <span class="n">checkBox</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Par défaut, ce type d'objet travaille avec un JCheckBox</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">checkBox</span><span class="o">);</span>
	    <span class="c">//On crée à nouveau notre bouton</span>
		<span class="n">button</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">();</span>
	    <span class="n">button</span><span class="o">.</span><span class="na">setOpaque</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	    <span class="c">//On lui attribue un listener</span>
	    <span class="n">button</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">bListener</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="n">Component</span> <span class="nf">getTableCellEditorComponent</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span>
	                   <span class="kt">boolean</span> <span class="n">isSelected</span><span class="o">,</span> <span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">column</span><span class="o">)</span> <span class="o">{</span> 
		<span class="c">//On définit le numéro de ligne à notre listener</span>
		<span class="n">bListener</span><span class="o">.</span><span class="na">setRow</span><span class="o">(</span><span class="n">row</span><span class="o">);</span>
		<span class="c">//Idem pour le numéro de colonne</span>
		<span class="n">bListener</span><span class="o">.</span><span class="na">setColumn</span><span class="o">(</span><span class="n">column</span><span class="o">);</span>
		<span class="c">//On passe aussi le tableau pour des actions potentielles</span>
		<span class="n">bListener</span><span class="o">.</span><span class="na">setTable</span><span class="o">(</span><span class="n">table</span><span class="o">);</span>
		
		<span class="c">//On réaffecte le libellé au bouton</span>
		<span class="n">button</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span> <span class="o">(</span><span class="n">value</span> <span class="o">==</span><span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="s">""</span> <span class="o">:</span> <span class="n">value</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span> <span class="o">);</span>
		<span class="c">//On renvoie le bouton</span>
	    <span class="k">return</span> <span class="n">button</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Notre listener pour le bouton</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 *</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">ButtonListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		  
		  <span class="kd">private</span> <span class="kt">int</span> <span class="n">column</span><span class="o">,</span> <span class="n">row</span><span class="o">;</span>
		  <span class="kd">private</span> <span class="n">JTable</span> <span class="n">table</span><span class="o">;</span>
		  <span class="kd">private</span> <span class="kt">int</span> <span class="n">nbre</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		  
		  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setColumn</span><span class="o">(</span><span class="kt">int</span> <span class="n">col</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">column</span> <span class="o">=</span> <span class="n">col</span><span class="o">;}</span>
		  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRow</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">row</span> <span class="o">=</span> <span class="n">row</span><span class="o">;}</span>
		  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTable</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">table</span> <span class="o">=</span> <span class="n">table</span><span class="o">;}</span>
		  
		  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">//On affiche un Zoli message mais vous pourriez faire les traitements que vous voulez</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"coucou du bouton : "</span> <span class="o">+</span> <span class="o">((</span><span class="n">JButton</span><span class="o">)</span><span class="n">event</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">()</span> <span class="o">);</span>
			<span class="c">//On affecte un nouveau libellé à une cellule de la ligne</span>
			<span class="n">table</span><span class="o">.</span><span class="na">setValueAt</span><span class="o">(</span><span class="s">"New Value "</span> <span class="o">+</span> <span class="o">(++</span><span class="n">nbre</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">row</span><span class="o">,</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">column</span> <span class="o">-</span><span class="mi">1</span><span class="o">));</span>
		  <span class="o">}</span>
	  <span class="o">}</span>
	  
	<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce code n'est pas très difficile à comprendre... Vous commencez à avoir l'habitude de manipuler ce genre d'objet. <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Maintenant, afin d'utiliser cet objet avec votre tableau, nous allons lui spécifier cet éditeur dans la colonne correspondante avec cette instruction : <span class="code2 java"><span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Age"</span><span class="o">).</span><span class="na">setCellEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">ButtonEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">JCheckBox</span><span class="o">()));</span>
</span>.<br>
<br>
Le rendu est très probant : <br>
<br>
<div class="centre"><img src="./java_files/140687.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir que lorsque vous cliquez sur un bouton, la valeur dans la cellule juste à gauche est modifiée.<br>
L'utilisation est donc très simple. Imaginez par conséquent que la gestion des combos est d'autant plus simple ! <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
<br>
Un peu plus tôt, je vous ai fait développer une classe afin de pouvoir afficher la combo normalement. Cependant, il y a beaucoup plus simple... Vous avez pu voir que la classe <strong><span class="violet"><span class="courrier">DefaultCellEditor</span></span></strong> pouvait prendre un objet en paramètre : dans l'exemple utilisé dans le cas du <strong><span class="violet"><span class="courrier">JButton</span></span></strong>, il utilisait un <strong><span class="violet"><span class="courrier">JCheckBox</span></span></strong>.<br>
Vous devez savoir que cet objet peut prendre d'autres types de paramètres : <br>
<ul>
<li>un <strong><span class="violet"><span class="courrier">JComboBox</span></span></strong> ;</li>
<li>un <strong><span class="violet"><span class="courrier">JTextField</span></span></strong>.</li>
</ul><br>
<br>
Nous allons donc pouvoir utiliser l'objet <strong><span class="violet"><span class="courrier">DefaultCellEditor</span></span></strong> directement en lui passant une combo en paramètre... <br>
Nous allons aussi enlever l'objet servant à afficher correctement la combo afin que vous puissiez juger de l'efficacité de cette méthode.<br>
<br>
Voici le nouveau code du constructeur de notre fenêtre : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.DefaultCellEditor</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.AbstractTableModel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.DefaultTableCellRenderer</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTable</span> <span class="n">tableau</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">change</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Changer la taille"</span><span class="o">);</span>
	<span class="c">//Contenu de notre combo</span>
	<span class="kd">private</span> <span class="n">String</span><span class="o">[]</span> <span class="n">comboData</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Très bien"</span><span class="o">,</span> <span class="s">"Bien"</span><span class="o">,</span> <span class="s">"Mal"</span><span class="o">};</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTable"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">600</span><span class="o">,</span> <span class="mi">180</span><span class="o">);</span>
		<span class="c">//Données de notre tableau</span>
		<span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span> <span class="o">=</span> <span class="o">{</span>	<span class="o">{</span><span class="s">"Cysboy"</span><span class="o">,</span> <span class="s">"6boy"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"BZHHydde"</span><span class="o">,</span> <span class="s">"BZH"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"IamBow"</span><span class="o">,</span> <span class="s">"BoW"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"FunMan"</span><span class="o">,</span> <span class="s">"Year"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">)}</span>
		<span class="o">};</span>
		<span class="c">//titre du tableau</span>
		<span class="n">String</span>  <span class="n">title</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Pseudo"</span><span class="o">,</span> <span class="s">"Age"</span><span class="o">,</span> <span class="s">"Taille"</span><span class="o">,</span> <span class="s">"OK ?"</span><span class="o">};</span>
		<span class="c">//Combo à utiliser</span>
		<span class="n">JComboBox</span> <span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">(</span><span class="n">comboData</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTable</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">title</span><span class="o">);</span>		
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">setRowHeight</span><span class="o">(</span><span class="mi">30</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Age"</span><span class="o">).</span><span class="na">setCellRenderer</span><span class="o">(</span><span class="k">new</span> <span class="n">ButtonRenderer</span><span class="o">());</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Age"</span><span class="o">).</span><span class="na">setCellEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">ButtonEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">JCheckBox</span><span class="o">()));</span>
		<span class="c">//On définit l'éditeur par défaut pour la cellule </span>
		<span class="c">//en lui spécifiant quel type d'affichage prendre en compte</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Taille"</span><span class="o">).</span><span class="na">setCellEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">DefaultCellEditor</span><span class="o">(</span><span class="n">combo</span><span class="o">));</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">tableau</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
	<span class="o">}</span>
	
		<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez voir que c'est d'une simplicité enfantine !<br>
Le résultat est, en plus, très convaincant : <br>
<br>
<div class="centre"><img src="./java_files/141130.jpg" alt="Image utilisateur"></div><br>
<br>
Votre cellule se "<strong><span class="italique">transforme</span></strong>" en combo lorsque vous cliquez dessus !<br>
En fait, lorsque le tableau sent une action sur cette cellule, celui-ci utilise l'éditeur que vous avez spécifié pour celle-ci et, comme nous en avons spécifié un afin d'afficher une combo, la dite combo est affichée ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
<div class="rmq information">Si vous préférez que la combo soit affichée directement même sans clic de souris, il vous suffit de laisser l'objet gérant l'affichage et le tour est joué !<br>
De même, pour le bouton, si vous enlevez l'objet de rendu du tableau, celui-ci s'affiche comme un bouton lors du clic sur la cellule ! <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
<br>
Il ne nous reste plus qu'à voir comment rajouter des informations dans notre tableau et l'affaire est entendue... <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
<div class="rmq attention">Certains d'entre-vous l'auront remarqué, les boutons ont un drôle de comportement...<br>
Ceci est dû au fait que vous avez défini des comportements spéciaux à votre tableau... Il vous faut donc définir un modèle à utiliser afin de bien définir tous les points comme l'affichage, la mise à jour...</div><br>
<br>
Nous allons donc utiliser un modèle de tableau perso dont les actions seront définis par nous !<br>
Voici la classe <strong><span class="violet"><span class="arial">Fenetre</span></span></strong> modifiée en conséquence : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">jtable2</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.DefaultCellEditor</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.AbstractTableModel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.DefaultTableCellRenderer</span><span class="o">;</span>



<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTable</span> <span class="n">tableau</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">change</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Changer la taille"</span><span class="o">);</span>
	<span class="c">//Contenu de notre combo</span>
	<span class="kd">private</span> <span class="n">String</span><span class="o">[]</span> <span class="n">comboData</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Très bien"</span><span class="o">,</span> <span class="s">"Bien"</span><span class="o">,</span> <span class="s">"Mal"</span><span class="o">};</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTable"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">600</span><span class="o">,</span> <span class="mi">180</span><span class="o">);</span>
		<span class="c">//Données de notre tableau</span>
		<span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span> <span class="o">=</span> <span class="o">{</span>	<span class="o">{</span><span class="s">"Cysboy"</span><span class="o">,</span> <span class="s">"6boy"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"BZHHydde"</span><span class="o">,</span> <span class="s">"BZH"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"IamBow"</span><span class="o">,</span> <span class="s">"BoW"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">)},</span>
							<span class="o">{</span><span class="s">"FunMan"</span><span class="o">,</span> <span class="s">"Year"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">)}</span>
		<span class="o">};</span>
		<span class="c">//titre du tableau</span>
		<span class="n">String</span>  <span class="n">title</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Pseudo"</span><span class="o">,</span> <span class="s">"Age"</span><span class="o">,</span> <span class="s">"Taille"</span><span class="o">,</span> <span class="s">"OK ?"</span><span class="o">};</span>
		<span class="c">//Combo à utiliser</span>
		<span class="n">JComboBox</span> <span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">(</span><span class="n">comboData</span><span class="o">);</span>
		
		<span class="c">//Nous devons utiliser un modèle d'affichage spécifique afin de pallier aux bugs d'affichage !</span>
		<span class="n">ZModel</span> <span class="n">zModel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZModel</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">title</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTable</span><span class="o">(</span><span class="n">zModel</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">setRowHeight</span><span class="o">(</span><span class="mi">30</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Age"</span><span class="o">).</span><span class="na">setCellRenderer</span><span class="o">(</span><span class="k">new</span> <span class="n">ButtonRenderer</span><span class="o">());</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Age"</span><span class="o">).</span><span class="na">setCellEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">ButtonEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">JCheckBox</span><span class="o">()));</span>
		<span class="c">//On définit l'éditeur par défaut pour la cellule </span>
		<span class="c">//en lui spécifiant quel type d'affichage prendre en compte</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Taille"</span><span class="o">).</span><span class="na">setCellEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">DefaultCellEditor</span><span class="o">(</span><span class="n">combo</span><span class="o">));</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">tableau</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
	<span class="o">}</span>
	
	
	<span class="kd">class</span> <span class="nc">ZModel</span> <span class="kd">extends</span> <span class="n">AbstractTableModel</span><span class="o">{</span>

		<span class="kd">private</span> <span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span><span class="o">;</span>
		<span class="kd">private</span> <span class="n">String</span><span class="o">[]</span> <span class="n">title</span><span class="o">;</span>
		<span class="c">/**</span>
<span class="c">		 * Constructeur</span>
<span class="c">		 * @param data</span>
<span class="c">		 * @param title</span>
<span class="c">		 */</span>
		<span class="kd">public</span> <span class="nf">ZModel</span><span class="o">(</span><span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">title</span><span class="o">){</span>
			<span class="k">this</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">;</span>
			<span class="k">this</span><span class="o">.</span><span class="na">title</span> <span class="o">=</span> <span class="n">title</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="c">/**</span>
<span class="c">		* Retourne le titre de la colonne à l'indice spécifé</span>
<span class="c">		*/</span>
		<span class="kd">public</span> <span class="n">String</span> <span class="nf">getColumnName</span><span class="o">(</span><span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
		  <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">title</span><span class="o">[</span><span class="n">col</span><span class="o">];</span>
		<span class="o">}</span>

		<span class="c">/**</span>
<span class="c">		 * Retourne le nombre de colonnes</span>
<span class="c">		 */</span>
		<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getColumnCount</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">title</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="c">/**</span>
<span class="c">		 * Retourne le nombre de lignes</span>
<span class="c">		 */</span>
		<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getRowCount</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="c">/**</span>
<span class="c">		 * Retourne la valeur à l'emplacement spécifié</span>
<span class="c">		 */</span>
		<span class="kd">public</span> <span class="n">Object</span> <span class="nf">getValueAt</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">[</span><span class="n">row</span><span class="o">][</span><span class="n">col</span><span class="o">];</span>
		<span class="o">}</span>
		
		<span class="c">/**</span>
<span class="c">		 * Défini la valeur à l'emplacement spécifié</span>
<span class="c">		 */</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setValueAt</span><span class="o">(</span><span class="n">Object</span> <span class="n">value</span><span class="o">,</span> <span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">//On interdit la modification sur certaine colonne !</span>
			<span class="k">if</span><span class="o">(!</span><span class="k">this</span><span class="o">.</span><span class="na">getColumnName</span><span class="o">(</span><span class="n">col</span><span class="o">).</span><span class="na">equals</span><span class="o">(</span><span class="s">"Age"</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="k">this</span><span class="o">.</span><span class="na">getColumnName</span><span class="o">(</span><span class="n">col</span><span class="o">).</span><span class="na">equals</span><span class="o">(</span><span class="s">"Suppression"</span><span class="o">))</span>
				<span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">[</span><span class="n">row</span><span class="o">][</span><span class="n">col</span><span class="o">]</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
		<span class="o">}</span>
				
		<span class="c">/**</span>
<span class="c">		* Retourne la classe de la donnée de la colonne</span>
<span class="c">		* @param col</span>
<span class="c">		*/</span>
		<span class="kd">public</span> <span class="n">Class</span> <span class="nf">getColumnClass</span><span class="o">(</span><span class="kt">int</span> <span class="n">col</span><span class="o">){</span>
			<span class="c">//On retourne le type de la cellule à la colonne demandée</span>
			<span class="c">//On se moque de la ligne puisque les données sur chaque ligne sont les mêmes</span>
			<span class="c">//On choisit donc la première ligne</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="n">col</span><span class="o">].</span><span class="na">getClass</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isCellEditable</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">){</span>
			<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	
	
	
		<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
Vous aurez remarqué que nous construisons notre tableau par le biais de notre modèle, ceci implique que nous allons aussi passer par note modèle afin de modifier notre tableau !<br>
La conséquence direct de ceci : nous allons devoir modifier un peu notre classe <strong><span class="violet"><span class="arial">ButtonEditor</span></span></strong>.<br>
<br>
Voici la classe ButtonEditor utilisant le modèle de tableau pour gérer la modification des valeurs :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">jtable2</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.Component</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.DefaultCellEditor</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.AbstractTableModel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ButtonEditor</span> <span class="kd">extends</span> <span class="n">DefaultCellEditor</span> <span class="o">{</span>
	  
	<span class="kd">protected</span> <span class="n">JButton</span> <span class="n">button</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kt">boolean</span>   <span class="n">isPushed</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">ButtonListener</span> <span class="n">bListener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ButtonListener</span><span class="o">();</span>
	
	<span class="c">/**</span>
<span class="c">	 * Constructeur avec une checkBox</span>
<span class="c">	 * @param checkBox</span>
<span class="c">	 * @param count</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">ButtonEditor</span><span class="o">(</span><span class="n">JCheckBox</span> <span class="n">checkBox</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Par défaut, ce type d'objet travaille avec un JCheckBox</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">checkBox</span><span class="o">);</span>
	    <span class="c">//On crée à nouveau notre bouton</span>
		<span class="n">button</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">();</span>
	    <span class="n">button</span><span class="o">.</span><span class="na">setOpaque</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	    <span class="c">//On lui attribue un listener</span>
	    <span class="n">button</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">bListener</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="n">Component</span> <span class="nf">getTableCellEditorComponent</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span>
	                   <span class="kt">boolean</span> <span class="n">isSelected</span><span class="o">,</span> <span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">column</span><span class="o">)</span> <span class="o">{</span> 
		<span class="c">//On définit le numéro de ligne à notre listener</span>
		<span class="n">bListener</span><span class="o">.</span><span class="na">setRow</span><span class="o">(</span><span class="n">row</span><span class="o">);</span>
		<span class="c">//Idem pour le numéro de colonne</span>
		<span class="n">bListener</span><span class="o">.</span><span class="na">setColumn</span><span class="o">(</span><span class="n">column</span><span class="o">);</span>
		<span class="c">//On passe aussi le tableau pour des actions potentielles</span>
		<span class="n">bListener</span><span class="o">.</span><span class="na">setTable</span><span class="o">(</span><span class="n">table</span><span class="o">);</span>
		
		<span class="c">//On réaffecte le libellé au bouton</span>
		<span class="n">button</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span> <span class="o">(</span><span class="n">value</span> <span class="o">==</span><span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="s">""</span> <span class="o">:</span> <span class="n">value</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span> <span class="o">);</span>
		<span class="c">//On renvoie le bouton</span>
	    <span class="k">return</span> <span class="n">button</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Notre listener pour le bouton</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 *</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">ButtonListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		  
		  <span class="kd">private</span> <span class="kt">int</span> <span class="n">column</span><span class="o">,</span> <span class="n">row</span><span class="o">;</span>
		  <span class="kd">private</span> <span class="n">JTable</span> <span class="n">table</span><span class="o">;</span>
		  <span class="kd">private</span> <span class="kt">int</span> <span class="n">nbre</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		  <span class="kd">private</span> <span class="n">JButton</span> <span class="n">button</span><span class="o">;</span>
		  
		  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setColumn</span><span class="o">(</span><span class="kt">int</span> <span class="n">col</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">column</span> <span class="o">=</span> <span class="n">col</span><span class="o">;}</span>
		  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRow</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">row</span> <span class="o">=</span> <span class="n">row</span><span class="o">;}</span>
		  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTable</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">table</span> <span class="o">=</span> <span class="n">table</span><span class="o">;}</span>
		  
		  <span class="kd">public</span> <span class="n">JButton</span> <span class="nf">getButton</span><span class="o">(){</span><span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">button</span><span class="o">;}</span>
		  
		  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">//On affiche un Zoli message mais vous pourriez faire les traitements que vous voulez</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"coucou du bouton : "</span> <span class="o">+</span> <span class="o">((</span><span class="n">JButton</span><span class="o">)</span><span class="n">event</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">()</span> <span class="o">);</span>
			<span class="c">//On affecte un nouveau libellé à une celulle de la ligne</span>
			<span class="o">((</span><span class="n">AbstractTableModel</span><span class="o">)</span><span class="n">table</span><span class="o">.</span><span class="na">getModel</span><span class="o">()).</span><span class="na">setValueAt</span><span class="o">(</span><span class="s">"New Value "</span> <span class="o">+</span> <span class="o">(++</span><span class="n">nbre</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">row</span><span class="o">,</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">column</span> <span class="o">-</span><span class="mi">1</span><span class="o">));</span>	
			<span class="c">//Permet de dire à notre tableau qu'une valeur a changé </span>
			<span class="c">//à l'emplacement déterminé par les valeur passée en paramètre</span>
			<span class="o">((</span><span class="n">AbstractTableModel</span><span class="o">)</span><span class="n">table</span><span class="o">.</span><span class="na">getModel</span><span class="o">()).</span><span class="na">fireTableCellUpdated</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">row</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">column</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
			<span class="k">this</span><span class="o">.</span><span class="na">button</span> <span class="o">=</span> <span class="o">((</span><span class="n">JButton</span><span class="o">)</span><span class="n">event</span><span class="o">.</span><span class="na">getSource</span><span class="o">());</span>
		  <span class="o">}</span>
	  <span class="o">}</span>
	  
	<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voilà, après ceci, le bug d'affichage devrait avoir disparu ! <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
Je vous propose donc de continuer dans notre lancée.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_71856">Ajouter des lignes et des colonnes</h2>
		<div class="ss_part_texte">
		Je vais profiter de ce point pour vous montrer une autre façon d'initialiser un tableau : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="syntax"><pre><span class="c">//data et title sont toujours nos tableaux d'objets !</span>
<span class="n">JTable</span> <span class="n">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTable</span><span class="o">(</span><span class="k">new</span> <span class="n">DefaultTableModel</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">title</span><span class="o">));</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq question">Et l'intérêt de faire comme ça ?</div><br>
C'est très simple : l'ajout et la suppression dynamiques d'entrées dans un tableau se fait via un modèle de rendu, mais vous n'avez pas l'obligation de recréer le vôtre, celui-ci fera très bien l'affaire !<br>
<br>
Dans un premier temps, nous allons ajouter et retirer des lignes à notre tableau.<br>
Nous allons garder le même code que précédemment avec deux - trois ajouts :<br>
<ul>
<li>le bouton pour ajouter un ligne ;</li>
<li>le bouton pour effacer une ligne.</li>
</ul><br>
<br>
Grâce au modèle par défaut défini lors de la création du tableau, nous allons pouvoir avoir accès à deux méthodes fort utiles : <br>
<ul>
<li><span class="code2 java"><span class="n">addRow</span><span class="o">(</span><span class="n">Object</span><span class="o">[]</span> <span class="n">lineData</span><span class="o">)</span>
</span> : permet d'ajouter une ligne au modèle et met automatiquement à jour le tableau ;</li>
<li><span class="code2 java"><span class="n">removeRow</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">)</span>
</span>: efface une ligne du modèle et met automatiquement à jour le tableau.</li>
</ul><br>
<br>
Afin de pouvoir utiliser le dit modèle, nous allons devoir récupérer celui-ci.<br>
En fait, c'est notre tableau qui va nous le fournir en invoquant la méthode <span class="code2 java"><span class="n">getModel</span><span class="o">()</span>
</span> qui retourne un objet <strong><span class="violet"><span class="courrier">TableModel</span></span></strong>.<br>
<br>
<div class="rmq erreur"><strong>Un cast sera nécessaire afin de pouvoir utiliser l'objet retourné !</strong></div><br>
<br>
Au final, voici que nous obtiendrons : <br>
<br>
<div class="centre"><span class="souligne"><strong>au lancement du programme</strong></span><br>
<br>
<img src="./java_files/141195.jpg" alt="Image utilisateur"><br>
</div><br>
<br>
<div class="centre"><span class="souligne"><strong>après ajout d'une ligne</strong></span><br>
<br>
<img src="./java_files/141196.jpg" alt="Image utilisateur"><br>
</div><br>
<br>
<div class="centre"><span class="souligne"><strong>après suppression d'une ligne</strong></span><br>
<br>
<img src="./java_files/141197.jpg" alt="Image utilisateur"><br>
</div><br>
<br>
Vous constatez que j'ai ajouté un bouton "<strong><span class="arial">Ajouter une ligne</span></strong>" ainsi qu'un bouton "<strong><span class="arial">Supprimer la ligne</span></strong>" ; mis à part ça, l'IHM n'a pas changé.<br>
<br>
Voilà les codes source utilisés dans cet exemple. Ceux-ci sont assez documentés et, mis à part l'utilisation de <span class="code2 java"><span class="n">addRow</span><span class="o">(</span><span class="n">Object</span><span class="o">[]</span> <span class="n">lineData</span><span class="o">)</span>
</span> et de <span class="code2 java"><span class="n">removeRow</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">)</span>
</span>, rien n'a changé.<br>
<br>
<div class="rmq attention"><strong>Souvenez-vous bien que nous passons par un modèle de tableau perso !</strong><br>
Nous allons devoir gérer les méthodes d'ajout et de suppression de ligne dans ce modèle.</div><br>
<br>
De ce fait, c'est nous qui allons devoir déterminer et coder les actions d'ajout et de suppression de lignes dans notre tableau !<br>
<br>
<h4><span class="bleu"><span class="souligne">Fenetre.java</span></span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">jtable</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.DefaultCellEditor</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JComponent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.AbstractTableModel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.DefaultTableCellRenderer</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.DefaultTableModel</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JTable</span> <span class="n">tableau</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">change</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Changer la taille"</span><span class="o">);</span>
	<span class="kd">private</span> <span class="n">String</span><span class="o">[]</span> <span class="n">comboData</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Très bien"</span><span class="o">,</span> <span class="s">"Bien"</span><span class="o">,</span> <span class="s">"Mal"</span><span class="o">};</span>
	<span class="kd">private</span> <span class="n">String</span> <span class="n">supp</span> <span class="o">=</span> <span class="s">"Supprimer la ligne"</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JComboBox</span> <span class="n">combo</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTable"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">600</span><span class="o">,</span> <span class="mi">250</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">createContent</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">createContent</span><span class="o">(){</span>
		<span class="c">//Données de notre tableau</span>
		<span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span> <span class="o">=</span> <span class="o">{</span>	<span class="o">{</span><span class="s">"Cysboy"</span><span class="o">,</span> <span class="s">"6boy"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">),</span> <span class="n">supp</span><span class="o">},</span>
							<span class="o">{</span><span class="s">"BZHHydde"</span><span class="o">,</span> <span class="s">"BZH"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">),</span> <span class="n">supp</span><span class="o">},</span>
							<span class="o">{</span><span class="s">"IamBow"</span><span class="o">,</span> <span class="s">"BoW"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">),</span> <span class="n">supp</span><span class="o">},</span>
							<span class="o">{</span><span class="s">"FunMan"</span><span class="o">,</span> <span class="s">"Year"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">true</span><span class="o">),</span> <span class="n">supp</span><span class="o">}</span>
		<span class="o">};</span>

		<span class="c">//titre du tableau</span>
		<span class="n">String</span>  <span class="n">title</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Pseudo"</span><span class="o">,</span> <span class="s">"Age"</span><span class="o">,</span> <span class="s">"Taille"</span><span class="o">,</span> <span class="s">"OK ?"</span><span class="o">,</span> <span class="s">"Suppression"</span><span class="o">};</span>
		<span class="c">//Combo à utiliser</span>
		<span class="n">combo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JComboBox</span><span class="o">(</span><span class="n">comboData</span><span class="o">);</span>
		
		<span class="c">//Nous devons utiliser un modèle d'affichage spécifique afin de pallier aux bugs d'affichage !</span>
		<span class="n">ZModel</span> <span class="n">zModel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZModel</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">title</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTable</span><span class="o">(</span><span class="n">zModel</span><span class="o">);</span>		
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">setRowHeight</span><span class="o">(</span><span class="mi">30</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Age"</span><span class="o">).</span><span class="na">setCellRenderer</span><span class="o">(</span><span class="k">new</span> <span class="n">ButtonRenderer</span><span class="o">());</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Age"</span><span class="o">).</span><span class="na">setCellEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">ButtonEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">JCheckBox</span><span class="o">()));</span>
		
		<span class="c">//On définit l'éditeur par défaut pour la cellule </span>
		<span class="c">//en lui spécifiant quel type d'affichage prendre en compte</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Taille"</span><span class="o">).</span><span class="na">setCellEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">DefaultCellEditor</span><span class="o">(</span><span class="n">combo</span><span class="o">));</span>
		<span class="n">DefaultTableCellRenderer</span> <span class="n">dcr</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultTableCellRenderer</span><span class="o">();</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Taille"</span><span class="o">).</span><span class="na">setCellRenderer</span><span class="o">(</span><span class="n">dcr</span><span class="o">);</span>
		
		<span class="c">//On définit un éditeur pour la colonne "supprimer"</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="s">"Suppression"</span><span class="o">).</span><span class="na">setCellEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">DeleteButtonEditor</span><span class="o">(</span><span class="k">new</span> <span class="n">JCheckBox</span><span class="o">()));</span>
		
		<span class="c">//On ajoute le tableau</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">tableau</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		
		<span class="n">JButton</span> <span class="n">ajouter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Ajouter une ligne"</span><span class="o">);</span>
		<span class="n">ajouter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MoreListener</span><span class="o">());</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">ajouter</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
	<span class="o">}</span>		

	<span class="kd">class</span> <span class="nc">ZModel</span> <span class="kd">extends</span> <span class="n">AbstractTableModel</span><span class="o">{</span>

		<span class="kd">private</span> <span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span><span class="o">;</span>
		<span class="kd">private</span> <span class="n">String</span><span class="o">[]</span> <span class="n">title</span><span class="o">;</span>
		<span class="c">/**</span>
<span class="c">		 * Constructeur</span>
<span class="c">		 * @param data</span>
<span class="c">		 * @param title</span>
<span class="c">		 */</span>
		<span class="kd">public</span> <span class="nf">ZModel</span><span class="o">(</span><span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">title</span><span class="o">){</span>
			<span class="k">this</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">;</span>
			<span class="k">this</span><span class="o">.</span><span class="na">title</span> <span class="o">=</span> <span class="n">title</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="c">/**</span>
<span class="c">		* Retourne le titre de la colonne à l'indice spécifé</span>
<span class="c">		*/</span>
		<span class="kd">public</span> <span class="n">String</span> <span class="nf">getColumnName</span><span class="o">(</span><span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
		  <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">title</span><span class="o">[</span><span class="n">col</span><span class="o">];</span>
		<span class="o">}</span>

		<span class="c">/**</span>
<span class="c">		 * Retourne le nombre de colonnes</span>
<span class="c">		 */</span>
		<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getColumnCount</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">title</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="c">/**</span>
<span class="c">		 * Retourne le nombre de lignes</span>
<span class="c">		 */</span>
		<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getRowCount</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="c">/**</span>
<span class="c">		 * Retourne la valeur à l'emplacement spécifié</span>
<span class="c">		 */</span>
		<span class="kd">public</span> <span class="n">Object</span> <span class="nf">getValueAt</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">[</span><span class="n">row</span><span class="o">][</span><span class="n">col</span><span class="o">];</span>
		<span class="o">}</span>
		
		<span class="c">/**</span>
<span class="c">		 * Défini la valeur à l'emplacement spécifié</span>
<span class="c">		 */</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setValueAt</span><span class="o">(</span><span class="n">Object</span> <span class="n">value</span><span class="o">,</span> <span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">//On interdit la modification sur certaine colonne !</span>
			<span class="k">if</span><span class="o">(!</span><span class="k">this</span><span class="o">.</span><span class="na">getColumnName</span><span class="o">(</span><span class="n">col</span><span class="o">).</span><span class="na">equals</span><span class="o">(</span><span class="s">"Age"</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="k">this</span><span class="o">.</span><span class="na">getColumnName</span><span class="o">(</span><span class="n">col</span><span class="o">).</span><span class="na">equals</span><span class="o">(</span><span class="s">"Suppression"</span><span class="o">))</span>
				<span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">[</span><span class="n">row</span><span class="o">][</span><span class="n">col</span><span class="o">]</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
		<span class="o">}</span>
				
		<span class="c">/**</span>
<span class="c">		* Retourne la classe de la donnée de la colonne</span>
<span class="c">		* @param col</span>
<span class="c">		*/</span>
		<span class="kd">public</span> <span class="n">Class</span> <span class="nf">getColumnClass</span><span class="o">(</span><span class="kt">int</span> <span class="n">col</span><span class="o">){</span>
			<span class="c">//On retourne le type de la cellule à la colonne demandée</span>
			<span class="c">//On se moque de la ligne puisque les données sur chaque ligne sont les mêmes</span>
			<span class="c">//On choisit donc la première ligne</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="n">col</span><span class="o">].</span><span class="na">getClass</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="c">/**</span>
<span class="c">		 * Méthode permettant de retirer une ligne du tableau</span>
<span class="c">		 * @param position</span>
<span class="c">		 */</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">removeRow</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">){</span>
			
			<span class="kt">int</span> <span class="n">indice</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">indice2</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">nbRow</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getRowCount</span><span class="o">()-</span><span class="mi">1</span><span class="o">,</span> <span class="n">nbCol</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getColumnCount</span><span class="o">();</span>
			<span class="n">Object</span> <span class="n">temp</span><span class="o">[][]</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[</span><span class="n">nbRow</span><span class="o">][</span><span class="n">nbCol</span><span class="o">];</span>
			
			<span class="k">for</span><span class="o">(</span><span class="n">Object</span><span class="o">[]</span> <span class="n">value</span> <span class="o">:</span> <span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">){</span>
				<span class="k">if</span><span class="o">(</span><span class="n">indice</span> <span class="o">!=</span> <span class="n">position</span><span class="o">){</span>
					<span class="n">temp</span><span class="o">[</span><span class="n">indice2</span><span class="o">++]</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
				<span class="o">}</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Indice = "</span> <span class="o">+</span> <span class="n">indice</span><span class="o">);</span>
				<span class="n">indice</span><span class="o">++;</span>
			<span class="o">}</span>
			<span class="k">this</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
			<span class="n">temp</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
			<span class="c">//Cette méthode permet d'avertir le tableau que les données ont été modifiées</span>
			<span class="c">//Ce qui permet une mise à jours complète du tableau</span>
			<span class="k">this</span><span class="o">.</span><span class="na">fireTableDataChanged</span><span class="o">();</span>
		<span class="o">}</span>
		
		<span class="c">/**</span>
<span class="c">		 * Permet d'ajouter une ligne dans le tableau</span>
<span class="c">		 * @param data</span>
<span class="c">		 */</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addRow</span><span class="o">(</span><span class="n">Object</span><span class="o">[]</span> <span class="n">data</span><span class="o">){</span>
			<span class="kt">int</span> <span class="n">indice</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">nbRow</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getRowCount</span><span class="o">(),</span> <span class="n">nbCol</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getColumnCount</span><span class="o">();</span>
			
			<span class="n">Object</span> <span class="n">temp</span><span class="o">[][]</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">;</span>
			<span class="k">this</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[</span><span class="n">nbRow</span><span class="o">+</span><span class="mi">1</span><span class="o">][</span><span class="n">nbCol</span><span class="o">];</span>
			
			<span class="k">for</span><span class="o">(</span><span class="n">Object</span><span class="o">[]</span> <span class="n">value</span> <span class="o">:</span> <span class="n">temp</span><span class="o">)</span>
				<span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">[</span><span class="n">indice</span><span class="o">++]</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
			
				
			<span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">[</span><span class="n">indice</span><span class="o">]</span> <span class="o">=</span> <span class="n">data</span><span class="o">;</span>
			<span class="n">temp</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
			<span class="c">//Cette méthode permet d'avertir le tableau que les données ont été modifiées</span>
			<span class="c">//Ce qui permet une mise à jours complète du tableau</span>
			<span class="k">this</span><span class="o">.</span><span class="na">fireTableDataChanged</span><span class="o">();</span>
		<span class="o">}</span>
		
		
		<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isCellEditable</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">){</span>
			<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>

	
	<span class="kd">class</span> <span class="nc">MoreListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">Object</span><span class="o">[]</span> <span class="n">donnee</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[]{</span><span class="s">"Angelo"</span><span class="o">,</span> <span class="s">"Rennais"</span><span class="o">,</span> <span class="n">comboData</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="k">new</span> <span class="n">Boolean</span><span class="o">(</span><span class="kc">false</span><span class="o">),</span> <span class="n">supp</span><span class="o">};</span>
			<span class="o">((</span><span class="n">ZModel</span><span class="o">)</span><span class="n">tableau</span><span class="o">.</span><span class="na">getModel</span><span class="o">()).</span><span class="na">addRow</span><span class="o">(</span><span class="n">donnee</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
		
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="bleu"><span class="souligne">ButtonRenderer.java</span></span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Component</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.TableCellRenderer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ButtonRenderer</span> <span class="kd">extends</span> <span class="n">JButton</span> <span class="kd">implements</span> <span class="n">TableCellRenderer</span><span class="o">{</span>

	<span class="kd">public</span> <span class="n">Component</span> <span class="nf">getTableCellRendererComponent</span><span class="o">(</span>	<span class="n">JTable</span> <span class="n">table</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span>
													<span class="kt">boolean</span> <span class="n">isSelected</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">isFocus</span><span class="o">,</span>
													<span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//On écrit dans le bouton avec la valeur de la cellule</span>
		<span class="n">setText</span><span class="o">((</span><span class="n">value</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="n">value</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span> <span class="o">:</span> <span class="s">""</span><span class="o">);</span>
		<span class="c">//on retourne notre bouton</span>
		<span class="k">return</span> <span class="k">this</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="bleu"><span class="souligne">ButtonEditor.java</span></span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Component</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.DefaultCellEditor</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.DefaultTableModel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ButtonEditor</span> <span class="kd">extends</span> <span class="n">DefaultCellEditor</span> <span class="o">{</span>
	  
	<span class="kd">protected</span> <span class="n">JButton</span> <span class="n">button</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">ButtonListener</span> <span class="n">bListener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ButtonListener</span><span class="o">();</span>
	
	<span class="c">/**</span>
<span class="c">	 * Constructeur avec une checkBox</span>
<span class="c">	 * @param checkBox</span>
<span class="c">	 * @param count</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">ButtonEditor</span><span class="o">(</span><span class="n">JCheckBox</span> <span class="n">checkBox</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Par défaut, ce type d'objet travaille avec un JCheckBox</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">checkBox</span><span class="o">);</span>
	    <span class="c">//On crée à nouveau notre bouton</span>
		<span class="n">button</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">();</span>
	    <span class="n">button</span><span class="o">.</span><span class="na">setOpaque</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	    <span class="c">//On lui attribue un listener</span>
	    <span class="n">button</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">bListener</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="n">Component</span> <span class="nf">getTableCellEditorComponent</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span>
	                   <span class="kt">boolean</span> <span class="n">isSelected</span><span class="o">,</span> <span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">column</span><span class="o">)</span> <span class="o">{</span> 
		<span class="c">//On définit le numéro de lignes à notre listener</span>
		<span class="n">bListener</span><span class="o">.</span><span class="na">setRow</span><span class="o">(</span><span class="n">row</span><span class="o">);</span>
		<span class="c">//Idem pour le numéro de colonnes</span>
		<span class="n">bListener</span><span class="o">.</span><span class="na">setColumn</span><span class="o">(</span><span class="n">column</span><span class="o">);</span>
		<span class="c">//On passe aussi le tableau pour des actions potentielles</span>
		<span class="n">bListener</span><span class="o">.</span><span class="na">setTable</span><span class="o">(</span><span class="n">table</span><span class="o">);</span>
		<span class="c">//On réaffecte le libellé au bouton</span>
		<span class="n">button</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span> <span class="o">(</span><span class="n">value</span> <span class="o">==</span><span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="s">""</span> <span class="o">:</span> <span class="n">value</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span> <span class="o">);</span>
		<span class="c">//On renvoie le bouton</span>
	    <span class="k">return</span> <span class="n">button</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Notre listener pour le bouton</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 *</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">ButtonListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
	  
	  <span class="kd">private</span> <span class="kt">int</span> <span class="n">column</span><span class="o">,</span> <span class="n">row</span><span class="o">;</span>
	  <span class="kd">private</span> <span class="n">JTable</span> <span class="n">table</span><span class="o">;</span>
	  <span class="kd">private</span> <span class="kt">int</span> <span class="n">nbre</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	  <span class="kd">private</span> <span class="n">JButton</span> <span class="n">button</span><span class="o">;</span>
	  
	  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setColumn</span><span class="o">(</span><span class="kt">int</span> <span class="n">col</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">column</span> <span class="o">=</span> <span class="n">col</span><span class="o">;}</span>
	  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRow</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">row</span> <span class="o">=</span> <span class="n">row</span><span class="o">;}</span>
	  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTable</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">table</span> <span class="o">=</span> <span class="n">table</span><span class="o">;}</span>
	  <span class="kd">public</span> <span class="n">JButton</span> <span class="nf">getButton</span><span class="o">(){</span><span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">button</span><span class="o">;}</span>
	  
	  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//On affiche un Zoli message mais vous pourriez faire les traitements que vous voulez</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"coucou du bouton : "</span> <span class="o">+</span> <span class="o">((</span><span class="n">JButton</span><span class="o">)</span><span class="n">event</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">()</span> <span class="o">);</span>
		<span class="c">//On affecte un nouveau libellé à une celulle de la ligne</span>
		<span class="o">((</span><span class="n">AbstractTableModel</span><span class="o">)</span><span class="n">table</span><span class="o">.</span><span class="na">getModel</span><span class="o">()).</span><span class="na">setValueAt</span><span class="o">(</span><span class="s">"New Value "</span> <span class="o">+</span> <span class="o">(++</span><span class="n">nbre</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">row</span><span class="o">,</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">column</span> <span class="o">-</span><span class="mi">1</span><span class="o">));</span>	
		<span class="c">//Permet de dire à notre tableau qu'une valeur a changé </span>
		<span class="c">//à l'emplacement déterminé par les valeur passée en paramètre</span>
		<span class="o">((</span><span class="n">AbstractTableModel</span><span class="o">)</span><span class="n">table</span><span class="o">.</span><span class="na">getModel</span><span class="o">()).</span><span class="na">fireTableCellUpdated</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">row</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">column</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">button</span> <span class="o">=</span> <span class="o">((</span><span class="n">JButton</span><span class="o">)</span><span class="n">event</span><span class="o">.</span><span class="na">getSource</span><span class="o">());</span>
	  <span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="bleu"><span class="souligne">DeleteButtonEditor.java</span></span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Component</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.DefaultCellEditor</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JCheckBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.DefaultTableModel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DeleteButtonEditor</span> <span class="kd">extends</span> <span class="n">DefaultCellEditor</span> <span class="o">{</span>
	  
	<span class="kd">protected</span> <span class="n">JButton</span> <span class="n">button</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">DeleteButtonListener</span> <span class="n">bListener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DeleteButtonListener</span><span class="o">();</span>
	
	<span class="c">/**</span>
<span class="c">	 * Constructeur avec une checkBox</span>
<span class="c">	 * @param checkBox</span>
<span class="c">	 * @param count</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">DeleteButtonEditor</span><span class="o">(</span><span class="n">JCheckBox</span> <span class="n">checkBox</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Par défaut, ce type d'objet travaille avec un JCheckBox</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">checkBox</span><span class="o">);</span>
	    <span class="c">//On crée à nouveau notre bouton</span>
		<span class="n">button</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">();</span>
	    <span class="n">button</span><span class="o">.</span><span class="na">setOpaque</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	    <span class="c">//On lui attribue un listener</span>
	    <span class="n">button</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">bListener</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="n">Component</span> <span class="nf">getTableCellEditorComponent</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span>
	                   <span class="kt">boolean</span> <span class="n">isSelected</span><span class="o">,</span> <span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">column</span><span class="o">)</span> <span class="o">{</span> 
		<span class="c">//On définit le numéro de lignes à notre listener</span>
		<span class="n">bListener</span><span class="o">.</span><span class="na">setRow</span><span class="o">(</span><span class="n">row</span><span class="o">);</span>
		<span class="c">//On passe aussi le tableau pour des actions potentielles</span>
		<span class="n">bListener</span><span class="o">.</span><span class="na">setTable</span><span class="o">(</span><span class="n">table</span><span class="o">);</span>
		<span class="c">//On réaffecte le libellé au bouton</span>
		<span class="n">button</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span> <span class="o">(</span><span class="n">value</span> <span class="o">==</span><span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="s">""</span> <span class="o">:</span> <span class="n">value</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span> <span class="o">);</span>
		<span class="c">//On renvoie le bouton</span>
	    <span class="k">return</span> <span class="n">button</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Notre listener pour le bouton</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 *</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">DeleteButtonListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		  
		  <span class="kd">private</span> <span class="kt">int</span> <span class="n">row</span><span class="o">;</span>
		  <span class="kd">private</span> <span class="n">JTable</span> <span class="n">table</span><span class="o">;</span>
		  
		  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRow</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">row</span> <span class="o">=</span> <span class="n">row</span><span class="o">;}</span>
		  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTable</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">table</span> <span class="o">=</span> <span class="n">table</span><span class="o">;}</span>
		  
		  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">table</span><span class="o">.</span><span class="na">getRowCount</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">){</span>
				<span class="c">//On affiche un Zoli message mais vous pourriez faire les traitements que vous voulez</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"coucou du bouton : "</span> <span class="o">+</span> <span class="o">((</span><span class="n">JButton</span><span class="o">)</span><span class="n">event</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">()</span> <span class="o">);</span>
				<span class="c">//On affecte un nouveau libellé à une celulle de la ligne</span>
				<span class="o">((</span><span class="n">ZModel</span><span class="o">)</span><span class="n">table</span><span class="o">.</span><span class="na">getModel</span><span class="o">()).</span><span class="na">removeRow</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">row</span><span class="o">);</span>
				
			<span class="o">}</span>
		  <span class="o">}</span>
	  <span class="o">}</span>	 	  
	<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="bleu"><span class="souligne">ComboRenderer.java</span></span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Component</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JComboBox</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.TableCellRenderer</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ComboRenderer</span> <span class="kd">extends</span> <span class="n">JComboBox</span> <span class="kd">implements</span> <span class="n">TableCellRenderer</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="n">Component</span> <span class="nf">getTableCellRendererComponent</span><span class="o">(</span><span class="n">JTable</span> <span class="n">table</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span>
			<span class="kt">boolean</span> <span class="n">isSelected</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">isFocus</span><span class="o">,</span> <span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Très bien"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Bien"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Mal"</span><span class="o">);</span>
		<span class="k">return</span> <span class="k">this</span><span class="o">;</span>
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
C'est assez simple finalement, mais c'est tout de même assez galère lorsqu'on ne sait pas par où commencer ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Maintenant  que vous savez faire tout ceci, ajouter ou retirer des colonnes ne devrait pas vous faire sourciller...<br>
Nous allons toujours utiliser notre modèle de rendu afin d'ajouter ou retirer des colonnes.<br>
Cette fois, j'ai utilisé des menus contextuels afin de faire ceci : faut bien faire varier les plaisirs ! C'est surtout que, comme ça, vous verrez le rapprochement entre les arbres et les tableaux.<br>
<br>
Voilà ce que j'ai obtenu : <br>
<br>
<div class="centre"><strong><span class="souligne">avant effacement d'une colonne</span><br>
<br>
<img src="./java_files/141205.jpg" alt="Image utilisateur"><br>
</strong></div><br>
<br>
<div class="centre"><strong><span class="souligne">après effacement d'une colonne</span><br>
<br>
<img src="./java_files/141206.jpg" alt="Image utilisateur"><br>
</strong></div><br>
<br>
<div class="centre"><strong><span class="souligne">après ajout d'une colonne nommée "<span class="arial">Ville</span>"</span><br>
<br>
<img src="./java_files/141207.jpg" alt="Image utilisateur"><br>
</strong></div><br>
<br>
Pour avoir ce rendu, j'ai refait une classe épurée... On commençait à ne plus s'y retrouver...<br>
<br>
Voici le code de cette classe : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Point</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseAdapter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.MouseEvent</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JMenuItem</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JOptionPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPopupMenu</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.DefaultTableModel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.table.TableColumn</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TableFrame</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
	<span class="kd">private</span> <span class="n">JTable</span> <span class="n">tableau</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">String</span> <span class="n">supp</span> <span class="o">=</span> <span class="s">"Supprimer la ligne"</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">TableFrame</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"JTable"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">120</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">createContent</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">createContent</span><span class="o">(){</span>
		<span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span> <span class="o">=</span> <span class="o">{</span>	<span class="o">{</span><span class="s">"Cysboy"</span><span class="o">,</span> <span class="s">"6boy"</span><span class="o">,</span> <span class="s">"Homme"</span><span class="o">},</span>
							<span class="o">{</span><span class="s">"BZHHydde"</span><span class="o">,</span> <span class="s">"BZH"</span><span class="o">,</span> <span class="s">"Homme"</span><span class="o">},</span>
							<span class="o">{</span><span class="s">"IamBow"</span><span class="o">,</span> <span class="s">"BoW"</span><span class="o">,</span> <span class="s">"Femme"</span><span class="o">},</span>
							<span class="o">{</span><span class="s">"FunMan"</span><span class="o">,</span> <span class="s">"Year"</span><span class="o">,</span> <span class="s">"Homme"</span><span class="o">}</span>
		<span class="o">};</span>

		<span class="n">String</span>  <span class="n">title</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Pseudo"</span><span class="o">,</span> <span class="s">"Age"</span><span class="o">,</span> <span class="s">"sexe"</span><span class="o">};</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTable</span><span class="o">(</span><span class="k">new</span> <span class="n">DefaultTableModel</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">title</span><span class="o">));</span>
		<span class="k">this</span><span class="o">.</span><span class="na">tableau</span><span class="o">.</span><span class="na">getTableHeader</span><span class="o">().</span><span class="na">addMouseListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MouseAdapter</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">mouseReleased</span><span class="o">(</span><span class="n">MouseEvent</span> <span class="n">event</span><span class="o">){</span>
				<span class="k">if</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getButton</span><span class="o">()</span> <span class="o">==</span> <span class="n">event</span><span class="o">.</span><span class="na">BUTTON3</span><span class="o">){</span>
					<span class="c">//Si on est dans le tableau</span>
					<span class="k">if</span><span class="o">(</span><span class="n">tableau</span><span class="o">.</span><span class="na">columnAtPoint</span><span class="o">(</span><span class="k">new</span> <span class="n">Point</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">()))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">){</span>
						
						<span class="c">//ajouter une colonne</span>
						<span class="n">JMenuItem</span> <span class="n">ajouter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Ajouter une colonne"</span><span class="o">);</span>
						<span class="n">ajouter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">AddListener</span><span class="o">());</span>
						
						<span class="c">//Le menu effacer</span>
						<span class="n">JMenuItem</span> <span class="n">erase</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMenuItem</span><span class="o">(</span><span class="s">"Effacer cette colonne"</span><span class="o">);</span>
						<span class="n">erase</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">EraseListener</span><span class="o">(</span><span class="k">new</span> <span class="n">Point</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">())));</span>

						<span class="c">//Ajout du menu contextuel</span>
						<span class="n">JPopupMenu</span> <span class="n">menu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPopupMenu</span><span class="o">();</span>
						<span class="n">menu</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">ajouter</span><span class="o">);</span>
						<span class="n">menu</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">erase</span><span class="o">);</span>
						<span class="n">menu</span><span class="o">.</span><span class="na">show</span><span class="o">(</span><span class="n">tableau</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">(),</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">());</span>
					<span class="o">}</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">});</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">tableau</span><span class="o">),</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
	<span class="o">}</span>		

	<span class="c">/**</span>
<span class="c">	 * Classe gérant la suppression d'une colonne</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">EraseListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">private</span> <span class="n">Point</span> <span class="n">point</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		<span class="kd">private</span> <span class="n">Object</span><span class="o">[][]</span> <span class="n">data</span><span class="o">;</span>
		<span class="kd">private</span> <span class="n">Object</span><span class="o">[]</span> <span class="n">title</span><span class="o">;</span>
		<span class="kd">public</span> <span class="nf">EraseListener</span><span class="o">(</span><span class="n">Point</span> <span class="n">col</span><span class="o">){</span>
			<span class="k">this</span><span class="o">.</span><span class="na">point</span> <span class="o">=</span> <span class="n">col</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">//On récupère l'indice de la colonne</span>
			<span class="kt">int</span> <span class="n">col</span> <span class="o">=</span> <span class="n">tableau</span><span class="o">.</span><span class="na">columnAtPoint</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">point</span><span class="o">);</span>
			<span class="c">//On en déduit la colonne sur laquelle on se trouve</span>
			<span class="n">TableColumn</span> <span class="n">column</span> <span class="o">=</span> <span class="n">tableau</span><span class="o">.</span><span class="na">getColumn</span><span class="o">(</span><span class="n">tableau</span><span class="o">.</span><span class="na">getColumnName</span><span class="o">(</span><span class="n">col</span><span class="o">));</span>
			
			<span class="c">//On avertit le modèle que le tableau a perdu une colonne</span>
			<span class="n">initNewData</span><span class="o">(</span><span class="n">column</span><span class="o">);</span>
			<span class="c">//On donne les nouvelles données au modèle</span>
			<span class="o">((</span><span class="n">DefaultTableModel</span><span class="o">)</span><span class="n">tableau</span><span class="o">.</span><span class="na">getModel</span><span class="o">()).</span><span class="na">setDataVector</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">title</span><span class="o">);</span>
			
		<span class="o">}</span>
		<span class="c">/**</span>
<span class="c">		 * Méthode qui génère un nouveau contenu au modèle</span>
<span class="c">		 * @param column</span>
<span class="c">		 * @return</span>
<span class="c">		 */</span>
		<span class="kd">private</span> <span class="kt">void</span> <span class="nf">initNewData</span><span class="o">(</span><span class="n">TableColumn</span> <span class="n">column</span><span class="o">){</span>
			<span class="k">this</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[</span><span class="n">tableau</span><span class="o">.</span><span class="na">getRowCount</span><span class="o">()][</span><span class="n">tableau</span><span class="o">.</span><span class="na">getColumnCount</span><span class="o">()-</span><span class="mi">1</span><span class="o">];</span>
			<span class="k">this</span><span class="o">.</span><span class="na">title</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[</span><span class="n">tableau</span><span class="o">.</span><span class="na">getColumnCount</span><span class="o">()-</span><span class="mi">1</span><span class="o">];</span>
			
			<span class="c">//On parcourt toutes les lignes</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">tableau</span><span class="o">.</span><span class="na">getRowCount</span><span class="o">();</span> <span class="n">i</span><span class="o">++){</span>
				
				<span class="c">//Toutes les colonnes</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">tableau</span><span class="o">.</span><span class="na">getColumnCount</span><span class="o">();</span> <span class="n">j</span><span class="o">++){</span>
					<span class="c">//Si la colonne concernée n'est pas celle à effacer</span>
					<span class="k">if</span><span class="o">(!((</span><span class="n">DefaultTableModel</span><span class="o">)</span><span class="n">tableau</span><span class="o">.</span><span class="na">getModel</span><span class="o">()).</span><span class="na">getColumnName</span><span class="o">(</span><span class="n">j</span><span class="o">).</span><span class="na">equals</span><span class="o">(</span><span class="n">column</span><span class="o">.</span><span class="na">getHeaderValue</span><span class="o">())){</span>
						
						<span class="c">//On récupère les titres de colonnes au premier passage</span>
						<span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span><span class="k">this</span><span class="o">.</span><span class="na">title</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="o">((</span><span class="n">DefaultTableModel</span><span class="o">)</span><span class="n">tableau</span><span class="o">.</span><span class="na">getModel</span><span class="o">()).</span><span class="na">getColumnName</span><span class="o">(</span><span class="n">j</span><span class="o">);</span>
						<span class="c">//on récupère les données</span>
						<span class="k">this</span><span class="o">.</span><span class="na">data</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">tableau</span><span class="o">.</span><span class="na">getValueAt</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">j</span><span class="o">);</span>
						<span class="n">k</span><span class="o">++;</span>
					<span class="o">}</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Permet d'ajouter une colonne au tableau, enfin, au modèle du tableau</span>
<span class="c">	 * @author CHerby</span>
<span class="c">	 */</span>
	<span class="kd">class</span> <span class="nc">AddListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
			<span class="c">//On affiche une pop-up</span>
			<span class="n">JOptionPane</span> <span class="n">jop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">(),</span> <span class="n">jop2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JOptionPane</span><span class="o">();</span>
			<span class="n">String</span> <span class="n">nom</span> <span class="o">=</span> <span class="n">jop</span><span class="o">.</span><span class="na">showInputDialog</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="s">"Saisissez le nom de la nouvelle colonne"</span><span class="o">,</span> <span class="s">"Ajout d'une colonne"</span><span class="o">,</span> <span class="n">JOptionPane</span><span class="o">.</span><span class="na">QUESTION_MESSAGE</span><span class="o">);</span>
			<span class="c">//Si les contrôles d'usage sont bons</span>
			<span class="k">if</span><span class="o">(</span><span class="n">nom</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
				<span class="k">if</span><span class="o">(!</span><span class="n">nom</span><span class="o">.</span><span class="na">trim</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)){</span>
					<span class="c">//On ajoute une colonne au modèle</span>
					<span class="o">((</span><span class="n">DefaultTableModel</span><span class="o">)</span><span class="n">tableau</span><span class="o">.</span><span class="na">getModel</span><span class="o">()).</span><span class="na">addColumn</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>							
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">TableFrame</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TableFrame</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voilà un chapitre rondement mené.<br>
Je crois qu'il est temps de faire un topo. <img src="./java_files/hihi.png" alt="^^" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_71852">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Un tableau est en fait un composant appelé <strong><span class="violet"><span class="courrier">JTable</span></span></strong>.</li>
<li>Celui-ci prend en paramètre un tableau d'objets à deux dimensions (les données) et un tableau de chaînes de caractères (le titre des colonnes).</li>
<li>Vous pouvez utiliser, afin de gérer vous-mêmes le contenu du tableau, un modèle de données (<strong><span class="violet"><span class="courrier">TableModel</span></span></strong>).</li>
<li>Afin de pouvoir ajouter ou retirer des lignes dans un tableau, il faut passer par un modèle de données. Ainsi, l'affichage est mis à jour automatiquement.</li>
<li>Il en va de même pour l'ajout et la suppression de colonnes.</li>
<li>La gestion de l'affichage brut (hors édition) des cellules peut se gérer colonne par colonne en utilisant une classe dérivant de <strong><span class="violet"><span class="courrier">TableCellRenderer</span></span></strong>.</li>
<li>La gestion de l'affichage brut lors de l'édition d'une cellule peut se gérer colonne par colonne en utilisant une classe dérivant de <strong><span class="violet"><span class="courrier">DefaultCellEditor</span></span></strong>.</li>
<li>Pour un tableau contenant plusieurs types de données, il peut être préférable de gérer entièrement la façon dont le tableau traite ses cellules.</li>
</ul><br>
<br>
Maintenant, le petit QCM des familles. <img src="./java_files/clin.png" alt=";)" class="smilies">
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Ouf !<br>
Une bonne chose de faite... <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
Je vous avais dit que ce chapitre allait être assez complexe, comme le précédent !<br>
Vous vous en êtes sortis indemnes, ou presque...
	</div>
	
	<hr>
	<h1 id="chap_65572">Ce que vous pouvez voir en plus</h1>
	<div id="chap_intro">
	Il faut être honnête, vous avez vu une bonne partie des objets graphiques proposés par Java. Il en reste bien d'autres, mais le fonctionnement de ceux-ci ne devraient pas vous poser trop de problèmes maintenant que vous êtes initiés à la programmation événementielle... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Je vous propose de faire un tour d'horizon de certains autres objets dont vous pourriez avoir besoin. <br>
Ceux-ci seront accompagnés d'un code facile à comprendre ainsi que d'une brève description !<br>
<br>
En avant pour <strong><span class="rouge">le dernier chapitre de ce tuto Java</span></strong> !
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_96674">D'autres conteneurs graphiques</h2>
		<div class="ss_part_texte">
		Voici quelques objets que vous pourrez trouver sur votre passage.<br>
<br>
<span class="souligne"><strong>Le <span class="violet"><span class="courrier">JWindow</span></span></strong></span><br>
<br>
Pour faire simple, c'est une <strong><span class="violet"><span class="courrier">JFrame </span></span></strong>mais sans les contours de fenêtre permettant de <strong><span class="rouge">réduire, fermer ou agrandir</span></strong> ! Souvent utiliser pour faire des <span class="italique">splash screen</span> : la même chose que vous avez au lancement d'Eclipse... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
<div class="centre"><img src="./java_files/152622.jpg" alt="Image utilisateur"></div><br>
<br>
<span class="souligne"><span class="italique"><strong>Code source</strong></span></span>  :<br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.BorderFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.ImageIcon</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JWindow</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.border.BevelBorder</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Window</span> <span class="kd">extends</span> <span class="n">JWindow</span><span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Window</span> <span class="n">wind</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Window</span><span class="o">();</span>
		<span class="n">wind</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="nf">Window</span><span class="o">(){</span>
		
		<span class="n">setSize</span><span class="o">(</span><span class="mi">220</span><span class="o">,</span> <span class="mi">165</span><span class="o">);</span>
		<span class="n">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		
		<span class="n">JPanel</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="n">JLabel</span> <span class="n">img</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="k">new</span> <span class="n">ImageIcon</span><span class="o">(</span><span class="s">"planète.jpeg"</span><span class="o">));</span>
		<span class="n">img</span><span class="o">.</span><span class="na">setVerticalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="n">img</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		
		<span class="n">pan</span><span class="o">.</span><span class="na">setBorder</span><span class="o">(</span><span class="n">BorderFactory</span><span class="o">.</span><span class="na">createLineBorder</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">));</span>
		<span class="n">pan</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">img</span><span class="o">);</span>
		<span class="n">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
<br>
<strong><span class="souligne">Le <span class="violet"><span class="courrier">JDesktopPane</span></span> combiné à des <span class="violet"><span class="courrier">JInternalFrame</span></span></span></strong><br>
<br>
Ces deux objets sont très souvent associés et permettent de faire des applications multi-fenêtres ! <br>
<br>
<div class="centre"><img src="./java_files/152627.jpg" alt="Image utilisateur"></div><br>
<br>
<span class="souligne"><strong><span class="italique">Code source</span></strong></span> :<br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JDesktopPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JInternalFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JInternalFrame</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Bureau</span> <span class="kd">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">nbreFenetre</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JDesktopPane</span> <span class="n">desktop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JDesktopPane</span><span class="o">();</span>
	<span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">xy</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Bureau</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">400</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="n">JButton</span> <span class="n">ajouter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Ajouter une fenêtre interne"</span><span class="o">);</span>
		<span class="n">ajouter</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">){</span>
				<span class="o">++</span><span class="n">nbreFenetre</span><span class="o">;</span>
				<span class="n">xy</span> <span class="o">+=</span> <span class="mi">2</span><span class="o">;</span>
				<span class="n">desktop</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">MiniFenetre</span><span class="o">(</span><span class="n">nbreFenetre</span><span class="o">),</span> <span class="n">nbreFenetre</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">});</span>

		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">desktop</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">ajouter</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
				
	<span class="o">}</span>
	
	<span class="kd">class</span> <span class="nc">MiniFenetre</span> <span class="kd">extends</span> <span class="n">JInternalFrame</span><span class="o">{</span>
		
		
		
		<span class="kd">public</span> <span class="nf">MiniFenetre</span><span class="o">(</span><span class="kt">int</span> <span class="n">nbre</span><span class="o">){</span>
			<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Fenetre N°"</span><span class="o">+</span><span class="n">nbre</span><span class="o">);</span>
			<span class="k">this</span><span class="o">.</span><span class="na">setClosable</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
			<span class="k">this</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
			<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">80</span><span class="o">);</span>
			<span class="k">this</span><span class="o">.</span><span class="na">setLocation</span><span class="o">(</span><span class="n">xy</span><span class="o">,</span> <span class="n">xy</span><span class="o">);</span>
			<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Bureau</span> <span class="n">bureau</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Bureau</span><span class="o">();</span>
		<span class="n">bureau</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div></div></div>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_96673">D'autres objets graphiques</h2>
		<div class="ss_part_texte">
		Voici un objet sympa mais quelque peu limité par la façon dont il gère son contenu HTML !<br>
<br>
<span class="souligne"><strong>Le <span class="violet"><span class="courrier">JEditorPane</span></span></strong></span> <br>
 <br>
Il permet de réaliser des textes riches avec mise en page. <br>
Il y a aussi le <strong><span class="violet"><span class="courrier">JTextPane</span></span></strong> qui vous permet de faire un mini-éditeur de texte très facilement (enfin, tout est relatif...).<br>
<br>
<div class="centre"><img src="./java_files/152616.jpg" alt="Image utilisateur"><br>
<br>
<img src="./java_files/152615.jpg" alt="Image utilisateur"></div><br>
<br>
<span class="souligne"><strong><span class="italique">Code source de cette fenêtre</span></strong></span>  :<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileNotFoundException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JEditorPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JScrollPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JTabbedPane</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.ChangeEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.ChangeListener</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.text.html.HTMLEditorKit</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JEditorPane</span> <span class="n">editorPane</span><span class="o">,</span> <span class="n">apercu</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JTabbedPane</span> <span class="n">onglet</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JTabbedPane</span><span class="o">();</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">600</span><span class="o">,</span> <span class="mi">400</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Conteneur éditable"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
				
		<span class="n">editorPane</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JEditorPane</span><span class="o">();</span>
		<span class="n">editorPane</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"&lt;HTML&gt;\n&lt;HEAD&gt;&lt;/HEAD&gt;\n&lt;BODY&gt;\n\n&lt;/BODY&gt;\n&lt;/HTML&gt;"</span><span class="o">);</span>
		
		<span class="n">apercu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JEditorPane</span><span class="o">();</span>
		<span class="n">apercu</span><span class="o">.</span><span class="na">setEditable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		
		<span class="n">onglet</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="s">"Editeur HTML"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">editorPane</span><span class="o">));</span>
		<span class="n">onglet</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="s">"Aperçu"</span><span class="o">,</span> <span class="k">new</span> <span class="n">JScrollPane</span><span class="o">(</span><span class="n">apercu</span><span class="o">));</span>
		<span class="n">onglet</span><span class="o">.</span><span class="na">addChangeListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ChangeListener</span><span class="o">(){</span>

			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">stateChanged</span><span class="o">(</span><span class="n">ChangeEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
				
				<span class="n">FileWriter</span> <span class="n">fw</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
				
				<span class="k">try</span> <span class="o">{</span>
					<span class="n">fw</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileWriter</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"tmp/tmp.html"</span><span class="o">));</span>
					<span class="n">fw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">editorPane</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
					<span class="n">fw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
				<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e1</span><span class="o">)</span> <span class="o">{</span>
					<span class="c">// TODO Auto-generated catch block</span>
					<span class="n">e1</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
				<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e1</span><span class="o">)</span> <span class="o">{</span>
					<span class="c">// TODO Auto-generated catch block</span>
					<span class="n">e1</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
				<span class="o">}</span>
				<span class="c">//*</span>
				<span class="k">try</span> <span class="o">{</span>
					<span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">"tmp/tmp.html"</span><span class="o">);</span>
					<span class="n">apercu</span><span class="o">.</span><span class="na">setEditorKit</span><span class="o">(</span><span class="k">new</span> <span class="n">HTMLEditorKit</span><span class="o">());</span>					
					<span class="n">apercu</span><span class="o">.</span><span class="na">setPage</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">toURL</span><span class="o">());</span>
										
				<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e1</span><span class="o">)</span> <span class="o">{</span>
					<span class="c">// TODO Auto-generated catch block</span>
					<span class="n">e1</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
				<span class="o">}</span> 
				
			<span class="o">}</span>				
		<span class="o">});</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">onglet</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
<br>
<span class="souligne"><strong>Le <span class="violet"><span class="courrier">JSlider</span></span></strong></span><br>
<br>
Celui-ci est un outil qui vous permet d'utiliser un système de mesure pour une application : re-dimensionner une image, choisir le tempo d'un morceau de musique, l'opacité d'une couleur...<br>
<br>
<div class="centre"><img src="./java_files/152636.jpg" alt="Image utilisateur"></div><br>
<br>
<span class="souligne"><strong><span class="italique">Code source</span></strong></span> :<br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JSlider</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.ChangeEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.ChangeListener</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Slide</span> <span class="kd">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="kd">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"Valeur actuelle : 30"</span><span class="o">);</span>
	
	<span class="kd">public</span> <span class="nf">Slide</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">250</span><span class="o">,</span> <span class="mi">150</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Slider"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		
		<span class="n">JSlider</span> <span class="n">slide</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSlider</span><span class="o">();</span>
	
		<span class="n">slide</span><span class="o">.</span><span class="na">setMaximum</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setMinimum</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setValue</span><span class="o">(</span><span class="mi">30</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setPaintTicks</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setPaintLabels</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setMinorTickSpacing</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setMajorTickSpacing</span><span class="o">(</span><span class="mi">20</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">addChangeListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ChangeListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">stateChanged</span><span class="o">(</span><span class="n">ChangeEvent</span> <span class="n">event</span><span class="o">){</span>
				<span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Valeur actuelle : "</span> <span class="o">+</span> <span class="o">((</span><span class="n">JSlider</span><span class="o">)</span><span class="n">event</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getValue</span><span class="o">());</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">slide</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>
		
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Slide</span> <span class="n">slide</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Slide</span><span class="o">();</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
<br>
<br>
<span class="souligne"><strong>La <span class="violet"><span class="courrier">JProgessBar</span></span></strong></span><br>
<br>
Elle vous permet de réaliser une barre de progression pour des traitements longs.<br>
<br>
<div class="centre"><img src="./java_files/152974.jpg" alt="Image utilisateur"><br>
<br>
<img src="./java_files/152975.jpg" alt="Image utilisateur"><br>
<br>
<img src="./java_files/152976.jpg" alt="Image utilisateur"></div><br>
<br>
<span class="souligne"><strong><span class="italique">Code source</span></strong></span> :<br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JProgressBar</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Progress</span> <span class="kd">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="kd">private</span> <span class="n">Thread</span> <span class="n">t</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JProgressBar</span> <span class="n">bar</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">JButton</span> <span class="n">launch</span> <span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Progress</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">80</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"*** JProgressBar ***"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		
		
		<span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">Traitement</span><span class="o">());</span>
		<span class="n">bar</span>  <span class="o">=</span> <span class="k">new</span> <span class="n">JProgressBar</span><span class="o">();</span>
		<span class="n">bar</span><span class="o">.</span><span class="na">setMaximum</span><span class="o">(</span><span class="mi">500</span><span class="o">);</span>
		<span class="n">bar</span> <span class="o">.</span><span class="na">setMinimum</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
		<span class="n">bar</span><span class="o">.</span><span class="na">setStringPainted</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">bar</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		
		<span class="n">launch</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="s">"Lancer"</span><span class="o">);</span>
		<span class="n">launch</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">){</span>
				<span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">Traitement</span><span class="o">());</span>
				<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
				
			<span class="o">}</span>
		<span class="o">});</span>		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">launch</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">);</span>		
		<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>		
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>		
	<span class="o">}</span>
	
	<span class="kd">class</span> <span class="nc">Traitement</span> <span class="kd">implements</span> <span class="n">Runnable</span><span class="o">{</span>
	
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(){</span>
			<span class="n">launch</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">val</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">val</span> <span class="o">&lt;=</span> <span class="mi">500</span><span class="o">;</span> <span class="n">val</span><span class="o">++){</span>
				<span class="n">bar</span><span class="o">.</span><span class="na">setValue</span><span class="o">(</span><span class="n">val</span><span class="o">);</span>
				<span class="k">try</span> <span class="o">{</span>
					<span class="n">t</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
				<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
					<span class="c">// TODO Auto-generated catch block</span>
					<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="n">launch</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="o">}</span>	
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Progress</span> <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Progress</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div></div></div><br>
<br>
<div class="rmq information">La modification des valeurs de cet objet doit se faire dans un thread, sinon vous aurez la barre vide, un temps d'attente puis la barre remplie, mais sans défilement des valeurs ! </div>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_96672">Enjoliver vos IHM</h2>
		<div class="ss_part_texte">
		Nous n'avons pas beaucoup abordé ce point tout au long du tuto, mais je vous laisse découvrir les joyeusetés qu'offre Java en la matière... C'est encore en cherchant les infos dont on a besoin qu'on les retient le mieux ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Voici comment ajouter des bordures à vos composants : <br>
<br>
<div class="centre"><img src="./java_files/152979.jpg" alt="Image utilisateur"></div><br>
<br>
<span class="souligne"><strong><span class="italique">Code source</span></strong></span> : <br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.BorderFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.border.BevelBorder</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.border.Border</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.border.EtchedBorder</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BorderDemo</span> <span class="kd">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="kd">private</span> <span class="n">String</span><span class="o">[]</span> <span class="n">list</span> <span class="o">=</span> <span class="o">{</span>	<span class="s">"Bevel Border"</span><span class="o">,</span> 
								<span class="s">"Etched Border"</span><span class="o">,</span> 
								<span class="s">"Line Border"</span><span class="o">,</span> 
								<span class="s">"Matted Border"</span><span class="o">,</span> 
								<span class="s">"Raised Bevel Border"</span><span class="o">,</span> 
								<span class="s">"Title Border"</span><span class="o">,</span>
								<span class="s">"Compound Border"</span>
							<span class="o">};</span>
	
	<span class="kd">private</span> <span class="n">Border</span><span class="o">[]</span> <span class="n">listBorder</span> <span class="o">=</span> <span class="o">{</span>	<span class="n">BorderFactory</span><span class="o">.</span><span class="na">createBevelBorder</span><span class="o">(</span><span class="n">BevelBorder</span><span class="o">.</span><span class="na">LOWERED</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">black</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">),</span>
									<span class="n">BorderFactory</span><span class="o">.</span><span class="na">createEtchedBorder</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">GRAY</span><span class="o">),</span>
									<span class="n">BorderFactory</span><span class="o">.</span><span class="na">createLineBorder</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">),</span>
									<span class="n">BorderFactory</span><span class="o">.</span><span class="na">createMatteBorder</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">MAGENTA</span><span class="o">),</span>
									<span class="n">BorderFactory</span><span class="o">.</span><span class="na">createRaisedBevelBorder</span><span class="o">(),</span>
									<span class="n">BorderFactory</span><span class="o">.</span><span class="na">createTitledBorder</span><span class="o">(</span><span class="s">"Titre"</span><span class="o">),</span>
									<span class="n">BorderFactory</span><span class="o">.</span><span class="na">createCompoundBorder</span><span class="o">(</span>
											<span class="n">BorderFactory</span><span class="o">.</span><span class="na">createBevelBorder</span><span class="o">(</span><span class="n">BevelBorder</span><span class="o">.</span><span class="na">LOWERED</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">black</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">),</span> 
											<span class="n">BorderFactory</span><span class="o">.</span><span class="na">createMatteBorder</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="n">Color</span><span class="o">.</span><span class="na">MAGENTA</span><span class="o">)</span>
										<span class="o">)</span>
								<span class="o">};</span>
	
	<span class="kd">public</span> <span class="nf">BorderDemo</span><span class="o">(){</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Les bordures font la fête !"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">550</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
		
		<span class="n">JPanel</span> <span class="n">pan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">list</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
			
			<span class="n">JLabel</span> <span class="n">lib</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="n">list</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
			<span class="n">lib</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">50</span><span class="o">));</span>
			<span class="n">lib</span><span class="o">.</span><span class="na">setBorder</span><span class="o">(</span><span class="n">listBorder</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
			<span class="n">lib</span><span class="o">.</span><span class="na">setAlignmentX</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
			<span class="n">lib</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
			<span class="n">pan</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">lib</span><span class="o">);</span>
		<span class="o">}</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">pan</span><span class="o">);</span>
	<span class="o">}</span>
	
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">BorderDemo</span> <span class="n">demo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BorderDemo</span><span class="o">();</span>
		<span class="n">demo</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
</div></div><br>
<br>
<h4>Cadeau du chef pour ceux pour auront installé la version 1.6 du JDK</h4><br>
<br>
Jouer sur l'opacité de vos composants : <br>
<br>
<div class="centre"><img src="./java_files/152981.jpg" alt="Image utilisateur"><br>
<br>
<img src="./java_files/152982.jpg" alt="Image utilisateur"><br>
<br>
<img src="./java_files/152983.jpg" alt="Image utilisateur"></div><br>
<br>
<span class="souligne"><span class="italique"><strong>Code source</strong></span></span> : <br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.lang.reflect.Method</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JSlider</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.ChangeEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.event.ChangeListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sun.awt.AWTUtilities</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">OpacityWindow</span> <span class="kd">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="kd">private</span> <span class="n">JSlider</span> <span class="n">slide</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSlider</span><span class="o">();</span>
		
	<span class="kd">public</span> <span class="nf">OpacityWindow</span><span class="o">(){</span>
	
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Transparence !"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">150</span><span class="o">);</span>
		
		<span class="n">slide</span><span class="o">.</span><span class="na">setMaximum</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setMinimum</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setValue</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setPaintTicks</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setPaintLabels</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setMinorTickSpacing</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">setMajorTickSpacing</span><span class="o">(</span><span class="mi">20</span><span class="o">);</span>
		<span class="n">slide</span><span class="o">.</span><span class="na">addChangeListener</span><span class="o">(</span><span class="k">new</span> <span class="n">Changed</span><span class="o">(</span><span class="k">this</span><span class="o">));</span>

		
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">slide</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="n">AWTUtilities</span><span class="o">.</span><span class="na">setWindowOpacity</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="o">((</span><span class="kt">float</span><span class="o">)</span> <span class="n">slide</span><span class="o">.</span><span class="na">getValue</span><span class="o">())</span> <span class="o">/</span> <span class="mf">100.0f</span><span class="o">);</span>
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Changed</span> <span class="kd">implements</span> <span class="n">ChangeListener</span><span class="o">{</span>
		<span class="kd">private</span> <span class="n">JFrame</span> <span class="n">frame</span><span class="o">;</span>
		<span class="kd">public</span> <span class="nf">Changed</span><span class="o">(</span><span class="n">JFrame</span> <span class="n">frame</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">frame</span> <span class="o">=</span> <span class="n">frame</span><span class="o">;}</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">stateChanged</span><span class="o">(</span><span class="n">ChangeEvent</span> <span class="n">event</span><span class="o">){</span>
			<span class="n">AWTUtilities</span><span class="o">.</span><span class="na">setWindowOpacity</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">frame</span><span class="o">,</span> <span class="o">((</span><span class="kt">float</span><span class="o">)</span> <span class="n">slide</span><span class="o">.</span><span class="na">getValue</span><span class="o">())</span> <span class="o">/</span> <span class="mf">100.0f</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">OpacityWindow</span> <span class="n">ow</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OpacityWindow</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
</div></div><br>
<br>
Si vous voulez en savoir plus, il y a un article très complet sur le sujet <a href="http://java.sun.com/developer/technicalArticles/GUI/translucent_shaped_windows/">à cette adresse !</a><br>

		</div>
		<hr>
		
	<div id="chap_conclusion">
	J'espère que ce dernier chapitre vous a plu !<br>
Vous avez encore du temps pour apprendre tout ça, ne vous découragez pas.<br>
<br>
Voilà : la partie événementielle est terminée... Bonne continuation à tous les ZérOs qui sont arrivés jusqu'ici et qui ont réussi à suivre mon tuto !
	</div>
	
<div>
<br>
Vous en avez fini avec la partie événementielle.<br>
Et le tuto s'arrête ici !<br>
<br>
J'espère que vous avez appris tout plein de choses et que vous commencez à faire des choses sympa avec ce langage de programmation.<br>
<br>
Il y a de quoi faire niveau IHM... Vous devez vous en rendre compte. <img src="./java_files/hihi.png" alt="^^" class="smilies">
</div>

<hr>
<h2>Partie 4 : Les Design patterns</h2>
<div>
Ceci est en fait un complément du tuto Java mais vous devez savoir que les chapitres qui suivent peuvent s'adapter à beaucoup de langages (PHP, C#...).<br>
<br>
Dans cette partie, vous pourrez voir et utiliser ce qu'on appelle des <strong><span class="italique">design patterns</span></strong> ou, en français, des modèles de conceptions. <br>
La conception est la phase qui intervient avant le codage, lorsque vous réfléchissez : <br>
<ul>
<li>aux classes dont vous aurez besoin ;</li>
<li>à savoir lier telle classe avec telle autre ;</li>
<li>au type d'interfaces que vous souhaitez créer ;</li>
<li>au type de classes abstraites que vous désirez coder ;</li>
<li>...</li>
</ul><br>
<br>
Afin de schématiser ceci, vous pouvez faire des dessins, mais il y a mieux !<br>
Dans la partie 2, je vous ai initiés ttrrèèèsssss rapidement à UML : nous allons l'utiliser de nouveau ici afin de schématiser les situations.<br>
<br>
Vous constaterez qu'il y a de nombreux DP (j'utiliserai cette abréviation à partir de maintenant) et qu'ils peuvent être extrêmement pratiques.<br>
<br>
Dîtes-vous bien que, malgré le temps que vous passez à coder, quelqu'un d'autre a rencontré, à un moment donné, les mêmes problèmes de conception que vous. Et vous en avez peut-être un en ce moment, sans même le savoir. <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
Rassurez-vous, car d'autres ont trouvé une solution : <br>
<ul>
<li>évolutive ;</li>
<li>souple ;</li>
<li>résistante.</li>
</ul><br>
<br>
L'un des buts des DP est de vous fournir des solutions afin de rendre vos codes moins assujettis à la modification. Je pense qu'après le premier chapitre vous comprendrez mieux ce que je veux dire... Mais il va y avoir une constante, dans cette partie ! <br>
<br>
<strong>Nous partirons du postulat que votre programme est amené à connaître des changements, majeurs ou mineurs. Ces changements pourront être de plusieurs natures mais au final, le but est d'avoir un code réutilisable et non modifiable : on dit aussi "<strong><span class="italique"><span class="vertf">hermétique à la modification</span></span></strong>".</strong><br>
<br>
Je me doute que vous devez être sceptique... Je vous propose donc de commencer !
</div>
	
	<hr>
	<h1 id="chap_65563">Les limites de l'héritage : le pattern strategy</h1>
	<div id="chap_intro">
	Comme je vous le disais dans l'introduction de cette partie, nous allons partir du postulat que vous avez un code qui fonctionne, et par là j'entends un ensemble de classes objets liées par héritage, ou autre.<br>
<br>
Nous allons voir dans ce chapitre que, malgré la toute puissance de l'héritage, celui-ci trouve ses limites lorsque vous êtes amenés à modifier vos hiérarchies de classes afin de répondre à une demande (votre chef, un client...).<br>
Et le fait de toucher à votre hiérarchie peut amener des erreurs non désirables (si une erreur peut l'être...), et même des absurdités. Tout ceci dû au fait que vous allez changer une structure qui fonctionne à cause des contraintes que vous subissez.<br>
<br>
Pour remédier à cela, il y a un concept simple : en fait, il s'agit d'un des fondements de la programmation orientée objet : <strong>l'encapsulation !</strong><br>
<br>
Dans ce chapitre nous parlerons de cette solution, que vous avez déjà vue sans le savoir : ceci si vous avez suivi la partie 3 du tuto. <br>
<br>
Bon, il est temps d'y aller !<br>

	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65562">Posons le problème</h2>
		<div class="ss_part_texte">
		<h3>Voici le tableau</h3> <br>
<br>
Vous êtes un jeune et ambitieux développeur d'une toute nouvelle société qui crée des jeux vidéos.<br>
Le dernier titre en date, Z-Army, un jeu de guerre très réaliste, a été un succès interplanétaire ! Votre patron est content et vous aussi. <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Vous vous êtes pourtant basé sur une architecture vraiment simple afin de créer et utiliser des personnages (guerrier, médecin...). D'ailleurs, la voici : <br>
<br>
<div class="centre"><img src="./java_files/129162.png" alt="Image utilisateur"></div><br>
<br>
Pour ceux qui seraient totalement étrangers à UML, qu'ils fassent un tour dans le <a href="http://www.siteduzero.com/tuto-3-27752-1-apprendre-a-modeliser.html">chapitre consacré à cet effet</a>.<br>
Bon, vous constatez que votre hiérarchie est très simple : la classe <strong><span class="violet"><span class="courrier">Personnage</span></span></strong> est une classe abstraite dont héritent les classes <strong><span class="violet"><span class="courrier">Guerrier </span></span></strong>et <strong><span class="violet"><span class="courrier">Medecin</span></span></strong>.<br>
Les guerriers savent se battre tandis que les médecins soignent les blessés sur le champs de bataille !<br>
<br>
Les ennuis commencent maintenant ! <img src="./java_files/diable.png" alt=":diable:" class="smilies"><br>
Votre patron vous a confié le projet <strong><span class="italique">Z-Army2 "The return of the revenge"</span></strong>.<br>
Vous vous dites : yes !... Mon architecture fonctionne à merveille, je la garde.<br>
Et vous commencez à créer le second volet du jeu.<br>
<br>
Un mois plus tard, votre patron vous convoque dans son bureau et vous dit : "<span class="italique"><strong>Nous avons fait une étude de marché, et il semblerait que les joueurs aimeraient se battre aussi avec les médecins !</strong> </span>".<br>
Vous trouvez l'idée séduisante et vous avez déjà pensé à une solution : déplacer la méthode <strong><span class="courrier">combattre()</span></strong> dans la super-classe <strong><span class="violet"><span class="courrier">Personnage</span></span></strong>, afin de pouvoir la redéfinir dans la classe <strong><span class="violet"><span class="courrier">Medecin</span></span></strong> et jouir du polymorphisme !<br>
<br>
Votre diagramme de classe ressemble donc à ceci : <br>
<br>
<div class="centre"><img src="./java_files/129163.png" alt="Image utilisateur"></div><br>
<br>
À la seconde étude de marché, votre patron vous annonce que vous allez devoir créer des civils, des snipers, des chirurgiens... Toute une panoplie de personnages spécialisés dans leur domaine ! <br>
<br>
Voici à présent votre diagramme de classe :<br>
<br>
<div class="centre"><img src="./java_files/129164.png" alt="Image utilisateur"></div><br>
<br>
<h3>Le code source de ces classes</h3><br>
<br>
<h4><span class="souligne">Personnage.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Personnage</span> <span class="o">{</span>

	<span class="cm">/**</span>
<span class="cm">	 * Méthode de déplacement de personnage</span>
<span class="cm">	 */</span>
	<span class="kd">public</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">seDeplacer</span><span class="o">();</span>
	<span class="cm">/**</span>
<span class="cm">	 * Méthode que les combattants utilisent</span>
<span class="cm">	 */</span>
	<span class="kd">public</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Guerrier.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Guerrier</span> <span class="kd">extends</span> <span class="n">Personnage</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Fusil, pistolet, couteau ! Tout ce que tu veux !"</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">seDeplacer</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me déplace à pied."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Medecin.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Medecin</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Vive le scalpel !"</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">seDeplacer</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me déplace à pied."</span><span class="o">);</span>
	<span class="o">}</span>

        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigner</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je soigne les blessures."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Civil.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Civil</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je ne combats PAS !"</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">seDeplacer</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me déplace à pied."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Chirurgien.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Chirurgien</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je ne combats PAS !"</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">seDeplacer</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me déplace à pied."</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigner</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je fais des opérations."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Sniper.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Sniper</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me sers de mon fusil à lunette !"</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">seDeplacer</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me déplace à pied."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
À ce stade, vous devriez remarquer que : <br>
<ul>
<li>le code contenu dans la méthode <strong><span class="courrier">seDeplacer()</span></strong> est dupliqué dans toutes les classes ! Il est identique dans toutes celles citées ci-dessus ;</li>
<li>le code de la méthode <strong><span class="courrier">combattre()</span></strong> de la classe <strong><span class="violet"><span class="courrier">Chirurgien </span></span></strong>et <strong><span class="violet"><span class="courrier">Civil </span></span></strong>est lui aussi dupliqué !</li>
</ul><br>
<br>
La duplication de code est l'une des choses qui peuvent générer des problèmes dans le futur !<br>
Je m'explique. <br>
Pour le moment, votre chef ne vous a demandé que de créer quelques classes supplémentaires. Qu'en sera-t-il si plusieurs classes, qui n'ont que le seul lien d'héritage existant, ont ce même code dupliqué ? Il ne manquerait plus que votre chef vous demande de modifier à nouveau la façon de se déplacer de ces objets pour en oublier un, voire même plusieurs ! Et voilà les incohérences qui pointent le bout de leur nez...  <img src="./java_files/huh.png" alt=":o" class="smilies"> <br>
<br>
<div class="rmq question">No problemo ! Tu vas voir... Il suffit de mettre un comportement par défaut pour le déplacement et pour le combat dans la super-classe <strong><span class="violet"><span class="courrier">Personnage</span></span></strong>. <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"></div><br>
<br>
Effectivement, votre idée se tient. Donc, ceci nous donne ce qui suit...<br>
<br>
<h4><span class="souligne">Personnage.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Personnage</span> <span class="o">{</span>

	<span class="cm">/**</span>
<span class="cm">	 * Méthode de déplacement de personnage</span>
<span class="cm">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">seDeplacer</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me déplace à pied."</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="cm">/**</span>
<span class="cm">	 * Méthode que les combattants utilisent</span>
<span class="cm">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je ne combats PAS !"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Guerrier.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Guerrier</span> <span class="kd">extends</span> <span class="n">Personnage</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Fusil, pistolet, couteau ! Tout ce que tu veux !"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Medecin.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Medecin</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Vive le scalpel !"</span><span class="o">);</span>
	<span class="o">}</span>

        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigner</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je soigne les blessures."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Civil.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Civil</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Chirurgien.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Chirurgien</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigner</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je fais des opérations."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Sniper.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Sniper</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me sers de mon fusil à lunette !"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici une classe contenant un petit programme afin de tester nos classes : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Personnage</span><span class="o">[]</span> <span class="n">tPers</span> <span class="o">=</span> <span class="o">{</span><span class="k">new</span> <span class="n">Guerrier</span><span class="o">(),</span> <span class="k">new</span> <span class="n">Chirurgien</span><span class="o">(),</span> <span class="k">new</span> <span class="n">Civil</span><span class="o">(),</span> <span class="k">new</span> <span class="n">Sniper</span><span class="o">(),</span> <span class="k">new</span> <span class="n">Medecin</span><span class="o">()};</span>
		<span class="k">for</span><span class="o">(</span><span class="n">Personnage</span> <span class="n">p</span> <span class="o">:</span> <span class="n">tPers</span><span class="o">){</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nInstance de "</span> <span class="o">+</span> <span class="n">p</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"*****************************************"</span><span class="o">);</span>
			<span class="n">p</span><span class="o">.</span><span class="na">combattre</span><span class="o">();</span>
			<span class="n">p</span><span class="o">.</span><span class="na">seDeplacer</span><span class="o">();</span>
		<span class="o">}</span>		
	<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat de ce code : <br>
<br>
<div class="centre"><img src="./java_files/139218.jpg" alt="Image utilisateur"></div><br>
<br>
Apparemment, ce code vous donne ce que vous voulez !<br>
Plus de redondance... Mais, personnellement, un problème me chiffonne. Vous ne pouvez pas utiliser les classes <strong><span class="violet"><span class="courrier">Medecin </span></span></strong>et <strong><span class="violet"><span class="courrier">Chirurgien </span></span></strong>de façon polymorphe, vu que la méthode <strong><span class="courrier">soigner()</span></strong> leur est propre !<br>
<div class="rmq question">Alors, on définit un comportement par défaut (ne pas soigner) dans la super-classe <strong><span class="violet"><span class="courrier">Personnage </span></span></strong> et le tour est joué !</div><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></div></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Personnage</span> <span class="o">{</span>

	<span class="cm">/**</span>
<span class="cm">	 * Méthode de déplacement de personnage</span>
<span class="cm">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">seDeplacer</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me déplace à pied."</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="cm">/**</span>
<span class="cm">	 * Méthode que les combattants utilisent</span>
<span class="cm">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je ne combats PAS !"</span><span class="o">);</span>
	<span class="o">}</span>
        <span class="cm">/**</span>
<span class="cm">         * Méthode de soin</span>
<span class="cm">         */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigner</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je ne soigne pas."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Au même moment, votre chef rentre dans votre bureau et vous dit :<br>
"<strong><span class="italique">Nous avons bien réfléchi, et il serait de bon ton que nos guerriers puissent administrer les premiers soins</span></strong>".<br>
À ce moment précis, vous vous délectez de votre capacité d'anticipation ! Vous savez que maintenant, il vous suffit de redéfinir la méthode <strong><span class="courrier">soigner()</span></strong> dans la classe concernée et tout le monde est content ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Seulement voilà ! Votre chef n'avait pas fini son speech...<br>
"<strong><span class="italique">Au fait, il faudrait adapter un comportement différent à nos personnages selon leurs armes, leurs habits, leurs trousses de soin... Enfin tu vois ! Les comportements figés pour des personnages de jeux, de nos jours... c'est un peu ringard !</span></strong>"<br>
<br>
Vous commencez à voir ce dont il retourne ! Vous allez apporter des modifications à votre code, encore et encore... <br>
<div class="rmq attention"><strong><span class="souligne">Problème</span></strong> : <strong><span class="arial">à chaque modification de comportement de vos personnages, vous êtes obligés de modifier le code source de la classe concernée !</span></strong></div><br>
<br>
Bon : pour un programmeur, ceci est le train-train quotidien, j'en conviens.<br>
Cependant, si nous suivons les consignes de notre chef et que nous continuons sur notre lancée, les choses vont se compliquer... Voyons voir.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65559">Un problème supplémentaire</h2>
		<div class="ss_part_texte">
		Attelons-nous à appliquer les modifications dans notre programme.<br>
Si nous suivons les consignes de notre chef, et c'est ce que nous allons faire, nous allons devoir gérer des comportements différents selon les accessoires de nos personnages.<br>
En fait, nous pouvons utiliser des variables d'instance et utiliser celles-ci pour appliquer tel ou tel comportement.<br>
<br>
<div class="rmq information">Afin de simplifier l'exemple, nous n'allons utiliser que des objets <strong><span class="courrier"><span class="violet">String</span></span></strong>.</div> <br>
<br>
Voici le diagramme de classes de notre programme : <br>
<br>
<div class="centre"><img src="./java_files/129161.png" alt="Image utilisateur"></div><br>
<br>
Vous avez remarqué que nos personnages vont avoir des accessoires. Selon ceux-ci, nos personnages feront des choses différentes. <br>
Voici les recommandations de notre chef bien-aimé : <br>
<ul>
<li>le guerrier devra pouvoir utiliser un couteau, un pistolet ou un fusil de sniper ;</li>
<li>le sniper peut utiliser son fusil de sniper mais aussi un fusil à pompe ;</li>
<li>le médecin a une trousse simple pour soigner mais peut utiliser un pistolet;</li>
<li>le chirurgien a une grosse trousse médicale mais ne peut pas utiliser d'arme ;</li>
<li>le civil, quant à lui, peut utiliser un couteau seulement quand il en a un ;</li>
<li>tous les personnages hormis le chirurgien peuvent avoir des baskets pour courir.</li>
</ul><br>
Il va nous falloir des accesseurs pour ces variables, mettons-les dans la super-classe ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<div class="rmq information">Inutile de mettre les méthodes de renvoi (<strong><span class="courrier">get</span></strong>), nous ne nous servirons que des mutateurs !</div><br>
<br>
Bon, les modifications sont faites, les caprices de notre cher et tendre chef sont satisfaits ? Voyons ça tout de suite.<br>
<br>
<h4><span class="souligne">Personnage.java</span></h4> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Personnage</span> <span class="o">{</span>

	<span class="kd">protected</span> <span class="n">String</span> <span class="n">armes</span> <span class="o">=</span> <span class="s">""</span><span class="o">,</span> <span class="n">chaussure</span> <span class="o">=</span> <span class="s">""</span><span class="o">,</span> <span class="n">sacDeSoin</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
	<span class="c">/**</span>
<span class="c">	 * Méthode de déplacement de personnage</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">seDeplacer</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me déplace à pied."</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">	 * Méthode que les combattants utilisent</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je ne combats PAS !"</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">     * Méthode de soin</span>
<span class="c">     */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigner</span><span class="o">(){</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je ne soigne pas."</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">setArmes</span><span class="o">(</span><span class="n">String</span> <span class="n">armes</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">armes</span> <span class="o">=</span> <span class="n">armes</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">setChaussure</span><span class="o">(</span><span class="n">String</span> <span class="n">chaussure</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">chaussure</span> <span class="o">=</span> <span class="n">chaussure</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">setSacDeSoin</span><span class="o">(</span><span class="n">String</span> <span class="n">sacDeSoin</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">sacDeSoin</span> <span class="o">=</span> <span class="n">sacDeSoin</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Guerrier.java</span></h4> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Guerrier</span> <span class="kd">extends</span> <span class="n">Personnage</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">armes</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"pistolet"</span><span class="o">))</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Attaque au pistolet !"</span><span class="o">);</span>
		<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">armes</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"fusil de sniper"</span><span class="o">))</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Attaque au fusil de sniper !"</span><span class="o">);</span>
		<span class="k">else</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Attaque au couteau !"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Sniper.java</span></h4> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Sniper</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">armes</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"fusil à pompe"</span><span class="o">))</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Attaque au fusil à pompe !"</span><span class="o">);</span>
		<span class="k">else</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me sers de mon fusil à lunette !"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Civil.java</span></h4> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Civil</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">(){</span>
		<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">armes</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"couteau"</span><span class="o">))</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Attaque au couteau !"</span><span class="o">);</span>
		<span class="k">else</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je ne combats PAS !"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Medecin.java</span></h4> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Medecin</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">armes</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"pistolet"</span><span class="o">))</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Attaque au pistolet !"</span><span class="o">);</span>
		<span class="k">else</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Vive le scalpel !"</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigner</span><span class="o">(){</span>
		<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">sacDeSoin</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"petit sac"</span><span class="o">))</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je peux recoudre des blessures."</span><span class="o">);</span>
		<span class="k">else</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je soigne les blessures."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Chirurgien.java</span></h4> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Chirurgien</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigner</span><span class="o">(){</span>
		<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">sacDeSoin</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"gros sac"</span><span class="o">))</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je fais des merveilles."</span><span class="o">);</span>
		<span class="k">else</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je fais des opérations."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici un programme de test : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="syntax"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Personnage</span><span class="o">[]</span> <span class="n">tPers</span> <span class="o">=</span> <span class="o">{</span><span class="k">new</span> <span class="n">Guerrier</span><span class="o">(),</span> <span class="k">new</span> <span class="n">Chirurgien</span><span class="o">(),</span> <span class="k">new</span> <span class="n">Civil</span><span class="o">(),</span> <span class="k">new</span> <span class="n">Sniper</span><span class="o">(),</span> <span class="k">new</span> <span class="n">Medecin</span><span class="o">()};</span>
		<span class="n">String</span><span class="o">[]</span> <span class="n">tArmes</span> <span class="o">=</span> <span class="o">{</span><span class="s">"pistolet"</span><span class="o">,</span> <span class="s">"pistolet"</span><span class="o">,</span> <span class="s">"couteau"</span><span class="o">,</span> <span class="s">"fusil à pompe"</span><span class="o">,</span> <span class="s">"couteau"</span><span class="o">};</span> 
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">tPers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nInstance de "</span> <span class="o">+</span> <span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"*****************************************"</span><span class="o">);</span>
			<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">combattre</span><span class="o">();</span>
			<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setArmes</span><span class="o">(</span><span class="n">tArmes</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
			<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">combattre</span><span class="o">();</span>
			<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">seDeplacer</span><span class="o">();</span>
			<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">soigner</span><span class="o">();</span>
		<span class="o">}</span>		
	<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat de ce test : <br>
<br>
<div class="centre"><img src="./java_files/139219.jpg" alt="Image utilisateur"></div><br>
<br>
Vous constatez avec émerveillement que votre code fonctionne très bien. Les actions par défaut sont respectées, les affectations d'actions aussi. Tout est parfait ! <br>
Vraiment ? Vous êtes sûr de ça ?<br>
<div class="rmq question">Je ne vois pas ce qui cloche ! <img src="./java_files/blink.gif" alt="o_O" class="smilies"></div><br>
Pourtant, je vois du code dupliqué dans certaines classes !  <img src="./java_files/mechant.png" alt=":colere2:" class="smilies"> <br>
En plus, nous n'arrêtons pas de modifier nos classes sans arrêt... <br>
Lors de Z-Army1, celles-ci étaient pourtant très bien ! Qu'est-ce qui ne va pas ? Je ne comprends pas !<br>
<br>
Là-dessus, votre patron rentre dans votre bureau pour vous dire que : "<strong><span class="arial"><span class="italique">les actions de vos personnages devront pouvoir êtres utilisables à la volée et, en fait, les personnages pouvaient très bien apprendre au fil du jeu...</span></span></strong>"<br>
<br>
Et là, inutile de demander un congé à votre patron pour cause de migraine ! <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
Les changements s'accumulent, votre code devient de moins en moins lisible et réutilisable, bref, l'enfer sur terre.<br>
<br>
Faisons un point sur la situation :<br>
<ul>
<li>du code dupliqué s'insinue dans votre code ;</li>
<li>à chaque modification de comportement, vous êtes obligés de modifier le code source de la (ou des) classe(s) concernée(s) ;</li>
<li>votre code perd en <span class="italique">réutilisabilité</span> et, du coup, votre code n'est pas extensible du tout !</li>
</ul><br>
<div class="rmq question">Extensible ? Tu entends quoi par là ?</div><br>
Par là j'entends que vos objets, sortis de leurs contexte, ne pourront plus être réutilisés. Ils auront été modelés pour l'application que vous êtes en train de programmer. Ceci est dû au fait que nous avons utilisé l'héritage à outrance... <br>
<div class="rmq attention"><br>
<strong><span class="souligne">Problème</span></strong> <strong><span class="arial"> : le fait est que dans notre programme, les personnages sont liés entre eux mais ceux-ci ont des comportements tellement différents que nous ne savons pas quoi en faire ! Nous avons essayé de placer ces derniers à différents endroits dans notre hiérarchie mais le problème persiste, au final...</span></strong></div><br>
<br>
Voyons comment résoudre ce problème. <img src="./java_files/smile.png" alt=":)" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65558">Une solution simple et robuste : le pattern strategy</h2>
		<div class="ss_part_texte">
		Après toutes ces émotions, vous allez enfin avoir une solution à ce problème de modification de code source !<br>
Si vous vous souvenez de ce que j'ai dit dans l'introduction, un des fondements de la programmation orientée objet est : <strong>l'encapsulation !</strong><br>
<br>
Le pattern strategy est basé sur ce principe simple.<br>
<br>
<div class="rmq information"><strong><span class="souligne">L'encapsulation</span></strong> est un mécanisme visant à rassembler des données et / ou des méthodes au sein d'une structure spécifique.<br>
Ces méthodes et / ou ces données sont ainsi réutilisables partout ailleurs dans le programme.</div><br>
Je me doute que cette phrase semble pompeuse... Mais remplacez "<strong><span class="italique">une structure</span></strong>" par "<strong><span class="italique">un objet</span></strong>". <br>
Vous devez mieux comprendre le sens de cette phrase, non ? <br>
<br>
Bon, vous avez compris que le pattern strategy consiste à créer des objets avec des données et / ou méthodes.<br>
<div class="rmq question">Oui, on comprend bien, mais lesquelles ?</div><br>
Tout simplement ce qui change dans votre programme ! <br>
<br>
<strong><span class="souligne">Le principe de base de ce pattern est le suivant</span> : </strong><br>
<strong><span class="gros"><span class="vertf">isolez ce qui varie dans votre programme et encapsulez-le !</span></span></strong><br>
<div class="rmq question">Désolé, mais on ne comprend toujours pas... <img src="./java_files/triste.png" alt=":(" class="smilies"> </div><br>
Pas de panique, nous allons y aller doucement.<br>
<br>
Déjà, quels sont les éléments qui ne cessent de varier dans notre programme ?<br>
<ul>
<li>La méthode <strong><span class="courrier">combattre()</span></strong> ;</li>
<li>la méthode <strong><span class="courrier">seDeplacer()</span></strong> ;</li>
<li>la méthode <strong><span class="courrier">soigner()</span></strong>.</li>
</ul><br>
Nous avons tenté, en vain, de déployer ces comportements dans notre hiérarchie de classe, mais sans grand succès dû aux problèmes cités plus haut... <br>
<div class="rmq question">Ce qui serait vraiment grandiose, ce serait d'avoir la possibilité de ne modifier que les comportements et non les objets qui ont ces comportements !</div><br>
<br>
Là, je vous arrête un moment. Vous venez de fournir la solution de vive voix. Vous avez dit : "<span class="arial"><strong><span class="italique">Ce qui serait vraiment grandiose, ce serait d'avoir la possibilité de</span></strong> <strong><span class="vertf"><span class="gros"><span class="italique"> ne modifier que les comportements et non les objets qui ont ces comportements</span></span></span></strong></span>".<br>
<br>
Lorsque je vous ai présenté les diagrammes UML, je vous ai fourni une astuce pour bien différencier les liens entre les objets. Dans notre cas, nos classes héritant de <strong><span class="violet"><span class="courrier">Personnage</span></span></strong> héritent aussi des ses comportements et, par conséquent, on peut dire que nos classes filles sont des <strong><span class="violet"><span class="courrier">Personnage</span></span></strong>. <br>
Concernant les comportements de la classe mère, ils semblent ne pas être au bon endroit dans la hiérarchie. Vous ne savez plus quoi en faire et vous vous demandez s'ils ont vraiment leur place dans cette classe ?<br>
 <br>
Il vous suffit de sortir ces comportements de la classe mère, de créer une classe abstraite ou une interface symbolisant ce comportement, et de dire à votre classe <strong><span class="violet"><span class="courrier">Personnage</span></span></strong> d'<strong><span class="vertf">avoir ces comportements</span></strong>.<br>
Voici mon nouveau diagramme de classes : <br>
<br>
<div class="centre"><img src="./java_files/129206.png" alt="Image utilisateur"></div><br>
<br>
<div class="rmq question">Ouh là ! Qu'est-ce que c'est que toutes ces interfaces ?</div><br>
Je me doutais un peu que vous fronceriez les sourcils... <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
N'oubliez pas que votre code doit être souple et robuste et, même si ce chapitre vous montre les limites de l'héritage, n'oubliez pas que le polymorphisme est inhérent à l'héritage (et aux implémentations d'interfaces).<br>
Il faut que vous vous rendiez compte qu'utiliser une interface de cette manière revient à créer un super-type de variable et, du coup, nous pourrons utiliser les classes héritant de ces interfaces de façon polymorphe, sans se soucier de savoir de quelle classe nos objets sont issus !<br>
Dans notre cas, nous allons avoir des objets de type <strong><span class="violet"><span class="courrier">EspritCombatif</span></span></strong>, <strong><span class="courrier"><span class="violet">Soin </span></span></strong>et <strong><span class="violet"><span class="courrier">Deplacement </span></span></strong>dans notre classe <strong><span class="violet"><span class="courrier">Personnage</span></span></strong> !<br>
<br>
<div class="rmq information"><strong>Nous pouvons résumer la situation comme ceci : dans nos hiérarchies de classes, il est parfois préférable de privilégier la composition (= "a un") à l'héritage (= "est un")</strong> <span class="italique">[cf. <a href="http://www.siteduzero.com/tutoriel-3-10363-0-apprendre-a-modeliser.html">chapitre sur UML</a>]</span>. <br>
Les comportements susceptibles d'être trop difficiles à généraliser dans la classe mère pourront ainsi être isolés en créant un nouveau type d'objet (encapsulation) correspondant à chaque comportement !</div><br>
<br>
Avant de nous lancer dans le codage de nos nouvelles classes, vous devez vous rendre compte que leur nombre a considérablement augmenté depuis le début de ce chapitre. <br>
Afin de pouvoir y voir plus clair et ainsi gagner en clarté, nous allons gérer nos différentes classes avec différents <strong><span class="courrier"><span class="violet">packages</span></span></strong>.<br>
<div class="rmq information">Comme je vous l'avais déjà dit dans un précédent chapitre, un package est un dossier comprenant plusieurs classes ou dossiers en son sein. Les classes sont regroupées par utilité ou par thème.</div><br>
L'un des avantages de faire ceci est que nous allons gagner en lisibilité dans notre package par défaut mais aussi que les classes mises dans un package sont plus facilement transportables d'une application à l'autre. Pour cela, il vous suffira d'inclure le dossier de votre package dans un projet et d'importer les classes qui vous intéressent ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
<div class="rmq question">Comment crée-t-on un nouveau package ?</div><br>
Ah, ce n'est pas difficile du tout, il vous suffit de cliquer sur cette icône : <br>
<br>
<div class="centre"><img src="./java_files/130117.jpg" alt="Image utilisateur"></div><br>
<br>
Une boîte va s'ouvrir vous demandant le nom de votre package : <br>
<br>
<div class="centre"><img src="./java_files/130118.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq erreur"><strong><span class="souligne">Attention</span></strong> : il existe aussi une convention de nommage pour les packages ! <br>
<ul>
<li>Ceux-ci doivent être écrits entièrement en minuscules.</li>
<li>Les caractères doivent être de a à z, de 0 à 9 et un point (.).</li>
<li>Sun indique que tout package doit commencer par : com, edu, gov, mil, net, org ou les deux lettres identifiants un pays (ISO Standard 3166, 1981) donc, fr =&gt; France, eng =&gt; England...</li>
</ul><br>
</div><br>
<br>
Nous sommes sur le Site du Zér0, j'ai donc pris le nom à l'envers : sdz.com =&gt; com.sdz.<br>
Par exemple, mes packages ont tendance à s'appeler <strong>com.cysboy.&lt;nom&gt;</strong>.<br>
<br>
Bon, fin de l'aparte.<br>
<br>
Cliquez sur "<span class="arial"><strong>Finish</strong></span>" pour créer le package. Ensuite, il ne vous reste plus qu'à créer les interfaces de notre diagramme de classe dans ce package (clic droit dessus, "<strong><span class="arial">new / interface</span></strong>").<br>
Et voilà ! Votre package est prêt à l'emploi :<br>
<br>
<div class="centre"><img src="./java_files/130119.jpg" alt="Image utilisateur"></div><br>
<br>
Ce sera donc dans ce package que nous allons développer nos comportements !<br>
<div class="rmq information">Vous pouvez très bien déclarer un package par comportement... Comme si vous rangiez des dossiers dans un classeur ! <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
<br>
<div class="rmq question">Doucement ! Tu ne pourrais pas plutôt nous expliquer un peu plus tout ce mic-mac avec tes interfaces...  <img src="./java_files/blink.gif" alt="o_O" class="smilies"> </div><br>
J'allais justement le faire.<br>
Comme nous l'avons remarqué tout au long de ce chapitre, les comportements de nos personnages sont trop épars pour être définis dans notre super-classe <strong><span class="courrier"><span class="violet">Personnage</span></span></strong>. Vous l'avez dit vous-mêmes, il faudrait que l'on ne puisse modifier que les comportements et non les classes héritant de notre super-classe !<br>
Les interfaces nous servent à créer un super-type d'objet ; ainsi, nous utiliserons des objets de type : <br>
<ul>
<li><strong><span class="courrier"><span class="violet">EspritCombatif </span></span></strong>qui ont une méthode <strong><span class="courrier">combat()</span></strong> ;</li>
<li><strong><span class="courrier"><span class="violet">Soin </span></span></strong>qui ont une méthode <strong><span class="courrier">soigne()</span></strong> ;</li>
<li><strong><span class="courrier"><span class="violet">Deplacement </span></span></strong>qui ont une méthode <strong><span class="courrier">deplace()</span></strong>.</li>
</ul><br>
Dans notre classe <strong><span class="violet"><span class="courrier">Personnage</span></span></strong>, nous avons ajouté une instance de chaque type de comportement, vous avez dû le remarquer : il y a ces attributs dans notre schéma ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
Nous allons développer un comportement par défaut pour chaque type de comportement et nous allons affecter cet objet dans notre super-classe. Les classes filles, elles, auront des instances différentes, correspondant à leur besoin.<br>
<div class="rmq question">Du coup, que fait-on des méthodes de la super-classe <strong><span class="courrier"><span class="violet">Personnage</span></span></strong> ?</div><br>
Nous les gardons, mais, au lieu d'avoir une redéfinition de ces dernières, la super-classe va invoquer la méthode de comportement de chaque objet. Ainsi, nous n'avons plus à redéfinir ou à modifier nos classes ! La seule chose qu'il vous reste à faire, c'est d'affecter une instance de comportement à vos objets.<br>
<br>
Vous comprendrez mieux avec un exemple. Voici quelques implémentations de comportements.<br>
<br>
<h4>Implémentations de l'interface <strong><span class="courrier"><span class="violet">EspritCombatif</span></span></strong></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">comportement</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Pacifiste</span> <span class="kd">implements</span> <span class="n">EspritCombatif</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combat</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je ne combats pas ! "</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">comportement</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CombatPistolet</span> <span class="kd">implements</span> <span class="n">EspritCombatif</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combat</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je combats au pitolet !"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">comportement</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CombatCouteau</span> <span class="kd">implements</span> <span class="n">EspritCombatif</span> <span class="o">{</span>	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combat</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me bats au couteau !"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4>Implémentations de l'interface <strong><span class="courrier"><span class="violet">Deplacement</span></span></strong></h4> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">comportement</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Marcher</span> <span class="kd">implements</span> <span class="n">Deplacement</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">deplacer</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me déplace en marchant."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">comportement</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Courir</span> <span class="kd">implements</span> <span class="n">Deplacement</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">deplacer</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je me déplace en courant."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Implémentations de l'interface <strong><span class="courrier"><span class="violet">Soin</span></span></strong></h4> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">comportement</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">PremierSoin</span> <span class="kd">implements</span> <span class="n">Soin</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigne</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je donne les premiers soins."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">comportement</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Operation</span> <span class="kd">implements</span> <span class="n">Soin</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigne</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je pratique des opérations !"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">comportement</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AucunSoin</span> <span class="kd">implements</span> <span class="n">Soin</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigne</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je ne donne AUCUN soin !"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici ce que vous devriez avoir dans votre nouveau package : <br>
<br>
<div class="centre"><img src="./java_files/130128.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq erreur">Les classes mises dans un package et destinées à être utilisées à l'extérieur du dit package <strong>DOIVENT être déclarées </strong><span class="code2 java"><span class="kd">public</span>
</span> ! ! <br>
Sinon, les classes ne seront visible qu'à l'intérieur du package et vous ne pourrez pas les utiliser !</div><br>
<br>
Maintenant que nous avons défini des objets de comportements, nous allons pouvoir remanier notre classe <strong><span class="courrier"><span class="violet">Personnage</span></span></strong>. <br>
Nous allons ajouter les variables d'instances, des mutateurs et des constructeurs afin de pouvoir initialiser nos objets.<br>
<br>
Voici la nouvelle version de notre super-classe : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">com.sdz.comportement.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Personnage</span> <span class="o">{</span>

	<span class="c">//Nos instances de comportements</span>
	<span class="kd">protected</span> <span class="n">EspritCombatif</span> <span class="n">espritCombatif</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Pacifiste</span><span class="o">();</span>
	<span class="kd">protected</span> <span class="n">Soin</span> <span class="n">soin</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AucunSoin</span><span class="o">();</span>
	<span class="kd">protected</span> <span class="n">Deplacement</span> <span class="n">deplacement</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Marcher</span><span class="o">();</span>
	
	<span class="c">/**</span>
<span class="c">	 * Constructeur par défaut</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Personnage</span><span class="o">(){}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Constructeur avec paramètres</span>
<span class="c">	 * @param espritCombatif</span>
<span class="c">	 * @param soin</span>
<span class="c">	 * @param deplacement</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Personnage</span><span class="o">(</span><span class="n">EspritCombatif</span> <span class="n">espritCombatif</span><span class="o">,</span> <span class="n">Soin</span> <span class="n">soin</span><span class="o">,</span>
			<span class="n">Deplacement</span> <span class="n">deplacement</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">espritCombatif</span> <span class="o">=</span> <span class="n">espritCombatif</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">soin</span> <span class="o">=</span> <span class="n">soin</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">deplacement</span> <span class="o">=</span> <span class="n">deplacement</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">	 * Méthode de déplacement de personnage</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">seDeplacer</span><span class="o">(){</span>
		<span class="c">//On utilise les objets de déplacement de façon polymorphe</span>
		<span class="n">deplacement</span><span class="o">.</span><span class="na">deplacer</span><span class="o">();</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">	 * Méthode que les combattants utilisent</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combattre</span><span class="o">(){</span>
		<span class="c">//On utilise les objets de déplacement de façon polymorphe</span>
		<span class="n">espritCombatif</span><span class="o">.</span><span class="na">combat</span><span class="o">();</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">     * Méthode de soin</span>
<span class="c">     */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigner</span><span class="o">(){</span>
		<span class="c">//On utilise les objets de déplacement de façon polymorphe</span>
		<span class="n">soin</span><span class="o">.</span><span class="na">soigne</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="c">//************************************************************</span>
	<span class="c">//						ACCESSEURS</span>
	<span class="c">//************************************************************</span>
	
	<span class="c">/**</span>
<span class="c">	 * Redéfinit le comportement au combat</span>
<span class="c">	 * @param espritCombatif</span>
<span class="c">	 */</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">setEspritCombatif</span><span class="o">(</span><span class="n">EspritCombatif</span> <span class="n">espritCombatif</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">espritCombatif</span> <span class="o">=</span> <span class="n">espritCombatif</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">	 * Redéfinit le comportement de Soin</span>
<span class="c">	 * @param soin</span>
<span class="c">	 */</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">setSoin</span><span class="o">(</span><span class="n">Soin</span> <span class="n">soin</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">soin</span> <span class="o">=</span> <span class="n">soin</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">	 * Redéfinit le comportement de déplacement</span>
<span class="c">	 * @param deplacement</span>
<span class="c">	 */</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">setDeplacement</span><span class="o">(</span><span class="n">Deplacement</span> <span class="n">deplacement</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">deplacement</span> <span class="o">=</span> <span class="n">deplacement</span><span class="o">;</span>
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Il y a eu du changement depuis le début... Mais maintenant, nous n'utilisons plus des méthodes définies dans notre hiérarchie de classe, mais des implémentations concrètes d'interfaces !<br>
Les méthodes que nos objets appellent utilisent chacune d'elle un objet de comportement. Nous pouvons donc définir des guerriers, des civils, des médecins... tous personnalisables puisqu'il suffit de changer leurs instances de comportements pour que les comportements de ceux-ci changent instantanément. La preuve en image.<br>
<br>
Je ne vais pas vous donner les codes de toutes les classes... En voici seulement quelques-unes.<br>
<br>
<h4>Guerrier.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">com.sdz.comportement.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Guerrier</span> <span class="kd">extends</span> <span class="n">Personnage</span> <span class="o">{</span>	
	<span class="c">/**</span>
<span class="c">	 * Constructeur par défaut</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Guerrier</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">espritCombatif</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CombatPistolet</span><span class="o">();</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">	 * Constructeur personnalisé</span>
<span class="c">	 * @param espritCombatif</span>
<span class="c">	 * @param soin</span>
<span class="c">	 * @param deplacement</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Guerrier</span><span class="o">(</span><span class="n">EspritCombatif</span> <span class="n">espritCombatif</span><span class="o">,</span> <span class="n">Soin</span> <span class="n">soin</span><span class="o">,</span>
			<span class="n">Deplacement</span> <span class="n">deplacement</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Appel au constructeur de la super classe</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">espritCombatif</span><span class="o">,</span> <span class="n">soin</span><span class="o">,</span> <span class="n">deplacement</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Civil.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">com.sdz.comportement.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Civil</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>

	<span class="kd">public</span> <span class="nf">Civil</span><span class="o">()</span> <span class="o">{}</span>

	<span class="kd">public</span> <span class="nf">Civil</span><span class="o">(</span><span class="n">EspritCombatif</span> <span class="n">espritCombatif</span><span class="o">,</span> <span class="n">Soin</span> <span class="n">soin</span><span class="o">,</span>
			<span class="n">Deplacement</span> <span class="n">deplacement</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">espritCombatif</span><span class="o">,</span> <span class="n">soin</span><span class="o">,</span> <span class="n">deplacement</span><span class="o">);</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Medecin.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">com.sdz.comportement.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Medecin</span> <span class="kd">extends</span> <span class="n">Personnage</span><span class="o">{</span>

	<span class="kd">public</span> <span class="nf">Medecin</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">soin</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PremierSoin</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="nf">Medecin</span><span class="o">(</span><span class="n">EspritCombatif</span> <span class="n">espritCombatif</span><span class="o">,</span> <span class="n">Soin</span> <span class="n">soin</span><span class="o">,</span>
			<span class="n">Deplacement</span> <span class="n">deplacement</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">espritCombatif</span><span class="o">,</span> <span class="n">soin</span><span class="o">,</span> <span class="n">deplacement</span><span class="o">);</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq attention"><strong>N'oubliez pas d'importer le package contenant nos classes de comportement !</strong></div><br>
<br>
Maintenant, voici un exemple d'utilisation : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="syntax"><pre><span class="kd">class</span> <span class="nc">Test</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Personnage</span><span class="o">[]</span> <span class="n">tPers</span> <span class="o">=</span> <span class="o">{</span><span class="k">new</span> <span class="n">Guerrier</span><span class="o">(),</span> <span class="k">new</span> <span class="n">Civil</span><span class="o">(),</span> <span class="k">new</span> <span class="n">Medecin</span><span class="o">()};</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">tPers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nInstance de "</span> <span class="o">+</span> <span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"*****************************************"</span><span class="o">);</span>
			<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">combattre</span><span class="o">();</span>
			<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">seDeplacer</span><span class="o">();</span>
			<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">soigner</span><span class="o">();</span>
		<span class="o">}</span>		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Le résultat de ce code nous donne : <br>
<br>
<div class="centre"><img src="./java_files/139220.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir que nos personnages ont tous un comportement par défaut qui leur conviennent bien !<br>
Nous avons spécifié, dans le cas où c'est nécessaire, le comportement par défaut d'un personnage dans son constructeur par défaut : <br>
<ul>
<li>le guerrier se bat avec un pistolet ;</li>
<li>le médecin soigne.</li>
</ul><br>
<br>
Or, voyons comment dire à nos personnages de faire autre chose... Que diriez-vous de faire faire une petite opération chirurgicale à notre objet <strong><span class="courrier"><span class="violet">Guerrier</span></span></strong> ? Pour ce faire, vous pouvez redéfinir son comportement de soin avec son mutateur, présent dans la super-classe : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">com.sdz.comportement.*</span><span class="o">;</span>


<span class="kd">class</span> <span class="nc">Test</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Personnage</span><span class="o">[]</span> <span class="n">tPers</span> <span class="o">=</span> <span class="o">{</span><span class="k">new</span> <span class="n">Guerrier</span><span class="o">(),</span> <span class="k">new</span> <span class="n">Civil</span><span class="o">(),</span> <span class="k">new</span> <span class="n">Medecin</span><span class="o">()};</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">tPers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nInstance de "</span> <span class="o">+</span> <span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"*****************************************"</span><span class="o">);</span>
			<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">combattre</span><span class="o">();</span>
			<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">seDeplacer</span><span class="o">();</span>
			<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">soigner</span><span class="o">();</span>
			<span class="k">if</span><span class="o">(</span><span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"Guerrier"</span><span class="o">)){</span>
				<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setSoin</span><span class="o">(</span><span class="k">new</span> <span class="n">Operation</span><span class="o">());</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">" \t Après modification de comportement de soin : \n \t\t"</span><span class="o">);</span>
				<span class="n">tPers</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">soigner</span><span class="o">();</span>
			<span class="o">}</span>
		<span class="o">}</span>		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui nous donne : <br>
<br>
<div class="centre"><img src="./java_files/139221.jpg" alt="Image utilisateur"></div><br>
<br>
Vous voyez que le comportement de soin de notre objet a changé dynamiquement, sans que nous ayons besoin de changer la moindre ligne de son code source ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
Le plus beau dans le fait de travailler comme ceci, c'est que vous pouvez tout à fait instancier des <strong><span class="violet"><span class="courrier">Guerrier</span></span></strong> avec des comportements différents très simplement, mais vous pouvez aussi leur donner des comportements que vous codez à la volée !<br>
<br>
Regardez ceci : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">com.sdz.comportement.*</span><span class="o">;</span>


<span class="kd">class</span> <span class="nc">Test</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Personnage</span> <span class="n">civil</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Civil</span><span class="o">();</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Comportement par défaut d'un civil : "</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"****************************************"</span><span class="o">);</span>
		<span class="n">civil</span><span class="o">.</span><span class="na">combattre</span><span class="o">();</span>
		<span class="n">civil</span><span class="o">.</span><span class="na">soigner</span><span class="o">();</span>
		<span class="n">civil</span><span class="o">.</span><span class="na">seDeplacer</span><span class="o">();</span>
		
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nTransformation d'un civil : "</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"****************************************"</span><span class="o">);</span>
		<span class="n">civil</span><span class="o">.</span><span class="na">setDeplacement</span><span class="o">(</span><span class="k">new</span> <span class="n">Deplacement</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">deplacer</span><span class="o">()</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je saute sur tout ce qui bouge ! ! ! !"</span><span class="o">);</span>
			<span class="o">}</span>			
		<span class="o">});</span>
		<span class="n">civil</span><span class="o">.</span><span class="na">setSoin</span><span class="o">(</span><span class="k">new</span> <span class="n">Soin</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">soigne</span><span class="o">()</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"L'amputation est ma grande passion ! ! !"</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">});</span>
		<span class="n">civil</span><span class="o">.</span><span class="na">setEspritCombatif</span><span class="o">(</span><span class="k">new</span> <span class="n">EspritCombatif</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">combat</span><span class="o">()</span> <span class="o">{</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Je roule en char d'assaut ! ! ATTENTION DEVANT ! ! !"</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="n">civil</span><span class="o">.</span><span class="na">combattre</span><span class="o">();</span>
		<span class="n">civil</span><span class="o">.</span><span class="na">soigner</span><span class="o">();</span>
		<span class="n">civil</span><span class="o">.</span><span class="na">seDeplacer</span><span class="o">();</span>
		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce qui donne, au final : <br>
<br>
<div class="centre"><img src="./java_files/139223.jpg" alt="Image utilisateur"></div><br>
<br>
Vous avez pu constater que vous n'avez plus de code dupliqué ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
Les modifications de comportement deviennent très simples à faire et vous n'avez plus à modifier le code source de votre classe <strong><span class="violet"><span class="courrier">Personnage</span></span></strong> en cas de changements...<br>
<br>
Je suppose que, maintenant que vous avez vu cet exemple, vous avez deviné où et quand vous avez utilisé le pattern strategy !<br>
Lorsque vous programmiez des implémentations de <strong><span class="violet"><span class="courrier">ActionListener</span></span></strong> pour la gestion de vos événements... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Sauf que, dans ce cas, il y a une nuance. Vous avez utilisé le pattern strategy pour créer des comportements lors d'événements sur votre IHM, mais ces interfaces de gestion d'événements sont utilisées dans un autre pattern : <strong>le pattern observer !</strong><br>
Nous aborderons ce dernier très bientôt... <br>
<br>
Bon, je crois qu'un petit topo s'impose...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65556">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Les design pattern sont des modèles de conception permettant de créer des programmes souples et faciles à maintenir.</li>
<li>Le pattern strategy permet de rendre une hiérarchie hermétique à la modification tout en lui permettant d'avoir des comportements différents.</li>
<li>La base de ce <acronym title="Design Pattern">DP</acronym> réside dans l'encapsulation.</li>
<li>Vous devez isoler les parties qui ont tendance à trop changer dans vos codes et les encapsuler.</li>
<li>L'action ci-dessus permet de ne pas avoir de code dupliqué dans vos applications car les comportements sont encapsulés !</li>
<li>Ceci peut être résumé ainsi : dans certains cas, vous devrez préférer la composition (= "a un") à l'héritage (= "est un").</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Voici un chapitre qui a dû vous montrer l'héritage sous un autre jour !<br>
Vous pouvez voir qu'il y a des solutions simples à utiliser et qui vous permettent d'avoir un code "<strong><span class="italique">hermétique à la modification</span></strong>".<br>
<br>
Le but final, c'est de n'avoir à modifier que l'endroit dans lequel vous utilisez vos objets et non vos objets eux-mêmes, et ce pattern fait ça très bien ! <img src="./java_files/heureux.png" alt=":D" class="smilies"><br>
<br>
Nous avons vu comment faire en sorte de modifier les comportements de vos objets de façon dynamique, nous allons maintenant voir comment rajouter des fonctionnalités à vos objets dynamiquement.<br>
En route pour <strong><span class="orange">le pattern decorator !</span></strong>
	</div>
	
	<hr>
	<h1 id="chap_65552">Ajouter des fonctionnalités dynamiquement à vos objets : le pattern decorator</h1>
	<div id="chap_intro">
	Après votre initiation lors du chapitre précédent, nous allons continuer avec un autre pattern très utilisé.<br>
Celui-ci est utilisé dans une hiérarchie de classes Java ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"> <br>
<br>
Ne vous laissez pas abuser, vous verrez que plusieurs DP sont utilisés dans le langage Java. Je vais m'efforcer de vous les expliquer et de faire le rapprochement avec le langage...<br>
<br>
<span class="vertf"><strong><span class="souligne"><br>
Premier point important</span></strong> : rappelez-vous que ce qui fait la force des DP, c'est de pouvoir avoir des classes hermétiques à la modification mais capables de s'adapter automatiquement !</span><br>
<br>
Dans ce chapitre, nous allons voir qu'il est possible de rajouter des fonctionnalités à vos objets de façon dynamique, donc, sans modifier la moindre ligne de code source dans l'objet utilisant la dite fonctionnalité. <br>
<br>
L'exemple que j'ai choisi est très simple, vous verrez...<br>
<br>
Je sens que vous devez être impatients de commencer... <img src="./java_files/clin.png" alt=";)" class="smilies">
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65551">Posons le problème</h2>
		<div class="ss_part_texte">
		Vous êtes toujours un jeune développeur plein d'avenir dans un société de jeux vidéo.<br>
Seulement, cette fois, vous devez créer un programme permettant de créer des décors. Vous avez déjà fait un premier jet de code qui semble très prometteur ! Voici le diagramme de classe de votre hiérarchie :<br>
<br>
<div class="centre"><img src="./java_files/130279.png" alt="Image utilisateur"></div><br>
<br>
Cette structure doit vous être familière, maintenant... Nous avons une fenêtre héritée de <span class="violet"><span class="courrier"><strong>JFrame</strong></span> </span>qui a un objet hérité, lui, de <span class="violet"><strong><span class="courrier">JPanel</span></strong></span>. Ce dernier a un objet permettant de dessiner un décor de fond, qui n'est autre qu'une implémentation de l'interface <strong><span class="violet"><span class="courrier">Item </span></span></strong>(pattern strategy), afin de prévoir les modifications futures ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
Voici un exemple de code représentant cette hiérarchie :<br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><h4><span class="souligne">Fenetre.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Decorateur"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="k">new</span> <span class="n">Panneau</span><span class="o">());</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span>  <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Panneau.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sdz.decorator.DecorJour</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.decorator.Item</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Panneau</span> <span class="kd">extends</span> <span class="n">JPanel</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">Item</span> <span class="n">decor</span><span class="o">;</span>

	<span class="c">/**</span>
<span class="c">	 * @param decor</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Panneau</span><span class="o">(</span><span class="n">Item</span> <span class="n">decor</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">();</span>
		<span class="k">this</span><span class="o">.</span><span class="na">decor</span> <span class="o">=</span> <span class="n">decor</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">	 * Par défaut</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Panneau</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">decor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DecorJour</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">decor</span><span class="o">.</span><span class="na">paintComponent</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">Item.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">decorator</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Item</span> <span class="o">{</span>

	<span class="c">/**</span>
<span class="c">	 * conteneur parent</span>
<span class="c">	 */</span>
	<span class="kd">protected</span> <span class="n">JPanel</span> <span class="n">parent</span><span class="o">;</span>

	<span class="c">/**</span>
<span class="c">	 * Constructeur avec paramètres</span>
<span class="c">	 * @param width</span>
<span class="c">	 * @param height</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Item</span><span class="o">(</span><span class="n">JPanel</span> <span class="n">pan</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">parent</span> <span class="o">=</span> <span class="n">pan</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="c">/**</span>
<span class="c">	 * Constructeur par défaut</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Item</span><span class="o">()</span> <span class="o">{}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getGraphicsConfiguration</span><span class="o">();</span>
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">DecorJour.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">decorator</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DecorJour</span> <span class="kd">extends</span> <span class="n">Item</span> <span class="o">{</span>
	
	<span class="c">/**</span>
<span class="c">	 * </span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">DecorJour</span><span class="o">()</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c">/**</span>
<span class="c">	 * @param width</span>
<span class="c">	 * @param height</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">DecorJour</span><span class="o">(</span><span class="n">JPanel</span> <span class="n">pan</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">pan</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">.</span><span class="na">paintComponent</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
		<span class="c">//Ciel bleu</span>
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">blue</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">3</span><span class="o">);</span>
		<span class="c">//Pelouse</span>
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">green</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">3</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
		<span class="c">//Le soleil</span>
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">yellow</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">-</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">4</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">12</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">6</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">6</span><span class="o">);</span>
		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4><span class="souligne">DecorNuit.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">decorator</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DecorNuit</span> <span class="kd">extends</span> <span class="n">Item</span> <span class="o">{</span>	
	<span class="c">/**</span>
<span class="c">	 * </span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">DecorNuit</span><span class="o">()</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c">/**</span>
<span class="c">	 * @param pan</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">DecorNuit</span><span class="o">(</span><span class="n">JPanel</span> <span class="n">pan</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">pan</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">.</span><span class="na">paintComponent</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
		<span class="c">//La nuit</span>
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">black</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">3</span><span class="o">);</span>
		<span class="c">//Pelouse</span>
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="k">new</span> <span class="n">Color</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">138</span><span class="o">,</span> <span class="mi">0</span><span class="o">));</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">3</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
		<span class="c">//La lune</span>
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">-</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">4</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">12</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">6</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="mi">6</span><span class="o">);</span>
		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
</div></div><br>
<br>
Vous devriez comprendre ce code sans problème si vous avez lu la partie 3 du tutoriel ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
La seule chose qui change, c'est l'appel à la méthode <span class="code2 java"><span class="n">getGraphicsConfiguration</span><span class="o">()</span>
</span> qui donne l'autorisation de peindre dans notre composant depuis l'extérieur.<br>
<br>
Voici le rendu des deux classes dérivant de la classe <strong><span class="violet"><span class="courrier">Item</span></span></strong> :<br>
<br>
<div class="centre"><img src="./java_files/130275.jpg" alt="Image utilisateur"> <img src="./java_files/130273.jpg" alt="Image utilisateur"> </div><br>
<br>
La différence entre les deux affichages est minime... Les couleurs changent, c'est tout... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Maintenant, afin de ne pas trop compliquer les choses, nous n'allons travailler que sur l'ajout de fonctionnalités sur la classe <strong><span class="violet"><span class="courrier">DecorJour</span></span></strong>. Ce que nous voulons faire, c'est trouver un moyen simple et efficace de pouvoir ajouter des éléments à notre décor : <br>
<ul>
<li>un arbre ;</li>
<li>un nuage ;</li>
<li>...</li>
</ul><br>
Vu que vous connaissez le pattern strategy, vous pouvez trouver une méthode simple : créer une collection pouvant contenir plusieurs objets de type <span class="violet"><strong><span class="courrier">Item </span></strong></span>et balayer celle-ci lors de l'appel à la méthode <span class="code2 java"><span class="n">painComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span>
</span> de votre objet <strong><span class="courrier"><span class="violet">DecorJour</span></span></strong>. Cette façon de faire est bonne mais il y a une autre façon de faire...<br>
Et si je vous dit en prime qu'il y a un moyen d'arriver à faire ceci sans utiliser de boucle et sans modifier le code source de notre classe <strong><span class="violet"><span class="courrier">DecorJour</span></span></strong> ? <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
<div class="rmq question">On serait curieux de savoir comment tu vas t'y prendre !</div><br>
Tout simplement en utilisant le pattern decorator. Vous allez voir que celui-ci peut s'avérer très utile dans certaines situations !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65550">Le pattern decorator</h2>
		<div class="ss_part_texte">
		Vous avez vu, lors du chapitre précédent, que la composition (= "a un") est souvent préférable à l'héritage (= "est un") : vous aviez défini de nouveaux comportements pour vos objets en créant un super-type d'objet par comportement. <br>
Ce pattern aussi utilise la composition comme principe de base ! En fait, au final, vous allez voir que nos objets seront composés d'autres objets. La différence résidera dans le fait que nos nouvelles fonctionnalités ne seront pas obtenues uniquement en créant de nouveaux objets , <strong>mais en associant ceux-ci avec des objets existants</strong>.<br>
Ce sera cette association qui créera de nouvelles fonctionnalités !<br>
<br>
<div class="rmq question">Tout ça a l'air bien beau, mais on ne comprend pas grand-chose...</div><br>
<br>
Vous allez voir que tout va devenir limpide.<br>
Nous allons procéder de la façon suivante : <br>
<ul>
<li>nous allons créer un objet <strong><span class="courrier"><span class="violet">DecorJour</span></span></strong> ;</li>
<li>nous allons lui ajouter un nuage ;</li>
<li>nous allons aussi lui ajouter un arbre ;</li>
<li>nous appellerons la méthode qui dessine dans notre composant, et celle-ci dessinera le tout !</li>
</ul><br>
<br>
Tout ceci démarre avec un concept fondamental : <strong><span class="rouge">l'objet de base et les objets qui le décorent DOIVENT avoir le même type !</span></strong><br>
Ceci pour une bonne raison : polymorphisme, <span class="gros">polymorphisme</span> et <span class="tgros"><strong>polymorphisme !</strong></span> <br>
<div class="rmq question">Ouh là, on ne te suit pas du tout !</div><br>
Vous allez comprendre. En fait, les objets qui vont décorer notre décor vont avoir la même méthode <span class="code2 java"><span class="n">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span>
</span> que notre objet principal et nous allons faire fondre cet objet dans les autres !<br>
Ceci signifie que nos objets qui vont servir de décorateur vont avoir une instance de type <strong><span class="violet"><span class="courrier">Item</span></span></strong> en leur sein ! Ceux-ci vont englober les instances les unes après les autres et du coup, nous pourrons appeler la méthode <span class="code2 java"><span class="n">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span>
</span> de manière récursive !<br>
Vous pouvez voir les décorateurs comme des poupées russes : vous pouvez mettre une poupée dans une autre !<br>
Ce qui signifie que si nous décorons notre décor avec un objet nuage, la situation pourrait être symbolisée comme suit : <br>
<br>
<div class="centre"><img src="./java_files/130276.png" alt="Image utilisateur"></div><br>
<br>
Vous pouvez voir que nos deux objets ont une méthode <span class="code2 java"><span class="n">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span>
</span> et que l'instance de notre décor se trouve maintenant dans notre objet <strong><span class="violet"><span class="courrier">Nuage</span></span></strong>. À ce stade, si nous voulons rajouter un élément de décoration, il nous suffit d'appliquer le même principe. Voici un schéma symbolisant l'ajout d'un arbre décorant le nouvel objet : <br>
<br>
<div class="centre"><img src="./java_files/130277.png" alt="Image utilisateur"></div><br>
<br>
L'arbre contient l'instance de la classe <strong><span class="violet"><span class="courrier">Nuage</span></span></strong> qui, elle, contient l'instance de <strong><span class="violet"><span class="courrier">DecorJour</span></span></strong>...<br>
<br>
<div class="rmq question">En fait, on va passer notre instance d'objet en objet ! </div><br>
À peu de chose près, c'est ça ! Sauf que seuls les éléments décorant prendront une instance en paramètre...<br>
<div class="rmq question">Et comment tu vas faire pour ajouter les fonctionnalités des objets décorant ?</div><br>
Tout simplement en appelant la méthode <span class="code2 java"><span class="n">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span>
</span> de l'instance se trouvant dans l'objet avant de faire les traitements de la même méthode de l'objet courant !<br>
Souvenez-vous lorsque j'expliquais comment fonctionne la pile d'invocation des méthodes dans un thread.<br>
<ul>
<li>La méthode de l'objet le plus global, <strong><span class="violet"><span class="courrier">Arbre</span></span></strong>, est appelé en premier.</li>
<li>Celle-ci appelle la méthode de l'objet de type <strong><span class="violet"><span class="courrier">Item</span></span></strong>, ici, un objet <strong><span class="violet"><span class="courrier">Nuage</span></span></strong>, se trouvant en son sein.</li>
<li>La méthode du dit objet est à son tour invoquée, mais invoque aussi la méthode de l'objet <strong><span class="violet"><span class="courrier">Item</span></span></strong> qu'il englobe ; nous arrivons à notre objet <strong><span class="violet"><span class="courrier">DecorJour</span></span></strong>.</li>
<li>Celui-ci va tracer la pelouse, le soleil et le ciel.</li>
<li>La méthode terminée, les instructions de l'objet <strong><span class="violet"><span class="courrier">Nuage</span></span></strong> sont exécutées, celui-ci trace un nuage.</li>
<li>Et pour finir, les instructions de l'objet <strong><span class="violet"><span class="courrier">Arbre</span></span></strong> sont exécutées, un arbre apparaît !</li>
</ul><br>
<br>
Voici un schéma résumant la situation : <br>
<br>
<div class="centre"><img src="./java_files/130278.png" alt="Image utilisateur"></div><br>
<br>
Je pense que vous devez y voir un peu plus clair... Mais un exemple concret est toujours plus parlant.<br>
<br>
Voici le diagramme de classe de notre programme : <br>
<br>
<div class="centre"><img src="./java_files/130280.png" alt="Image utilisateur"></div><br>
<br>
<div class="rmq question">Heu... <img src="./java_files/unsure.gif" alt=":euh:" class="smilies"> <br>
Pourquoi tu as mis une classe abstraite entre les objets qui vont nous servir de décorateur et la super-classe <strong><span class="violet"><span class="courrier">Item</span></span></strong> ?</div><br>
Tout simplement parce nous voulons que seuls les objets décorant aient une instance d'<strong><span class="violet"><span class="courrier">Item</span></span></strong> en leur sein ! Si nous n'avions pas la relation entre <strong><span class="violet"><span class="courrier">Decorator</span></span></strong> et <strong><span class="violet"><span class="courrier">Item</span></span></strong>, nous aurions eu une liaison de notre super-classe vers elle-même... Et du coup, nos objets de décor (<strong><span class="violet"><span class="courrier">DecorJour</span></span></strong> et <strong><span class="violet"><span class="courrier">DecorNuit</span></span></strong>) auraient eu une instance d'eux-mêmes, ce qui aurait signifié qu'un objet <strong><span class="violet"><span class="courrier">DecorJour</span></span></strong> peut en décorer un autre ! Et nous ne voulons pas ça !<br>
Voilà pourquoi il y a une classe abstraite. <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<div class="rmq information">Tout comme pour le pattern strategy, l'utilisation d'une classe abstraite permet de définir un super-type d'objet. Nous aurions très bien pu utiliser une interface...</div><br>
<br>
Voici le code source des classes rajoutées dans notre hiérarchie, mais avant de regarder, essayez de créer ces implémentations tous seuls : <br>
<br>
<span class="spoiler_hidden">Secret <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" onclick="switch_spoiler_hidden(this); return false;">(cliquez pour afficher)</a></span><div class="spoiler2_hidden"><div class="spoiler3_hidden"><br>
<br>
<h4>Decorator.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">decorator</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Decorator</span> <span class="kd">extends</span> <span class="n">Item</span> <span class="o">{</span>
	<span class="kd">protected</span> <span class="n">Item</span> <span class="n">item</span><span class="o">;</span>

	<span class="c">/**</span>
<span class="c">	 * @param pan</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Decorator</span><span class="o">(</span><span class="n">JPanel</span> <span class="n">pan</span><span class="o">,</span> <span class="n">Item</span> <span class="n">item</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">pan</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">item</span> <span class="o">=</span> <span class="n">item</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Nous appelons la méthode de la super-classe</span>
		<span class="kd">super</span><span class="o">.</span><span class="na">paintComponent</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
		<span class="c">//Enfin nous appelons la méthode de notre instance !</span>
		<span class="k">this</span><span class="o">.</span><span class="na">item</span><span class="o">.</span><span class="na">paintComponent</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Nuage.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">decorator</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Nuage</span> <span class="kd">extends</span> <span class="n">Decorator</span> <span class="o">{</span>

	<span class="c">/**</span>
<span class="c">	 * @param pan</span>
<span class="c">	 * @param item</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Nuage</span><span class="o">(</span><span class="n">JPanel</span> <span class="n">pan</span><span class="o">,</span> <span class="n">Item</span> <span class="n">item</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">item</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//On invoque la méthode de la classe Decorator</span>
		<span class="kd">super</span><span class="o">.</span><span class="na">paintComponent</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
		
		<span class="c">//On trace notre nuage de taille 30 de haut</span>
		<span class="c">//à un endroit au hasard dans le ciel</span>
		
		<span class="c">//Ordonnée à ne pas dépasser</span>
		<span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">3</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">();</span>
		
		<span class="kt">int</span> <span class="n">ordY</span> <span class="o">=</span> <span class="n">y</span><span class="o">,</span> <span class="n">ordX</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
		
		<span class="c">//tant que les coordonnées ne sont pas bonnes</span>
		<span class="k">do</span><span class="o">{</span>
			<span class="n">ordY</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="n">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()</span> <span class="o">*</span> <span class="mi">100</span><span class="o">);</span>
			<span class="n">ordX</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="n">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()</span> <span class="o">*</span> <span class="mi">100</span><span class="o">);</span>
		<span class="o">}</span><span class="k">while</span><span class="o">((</span><span class="n">ordY</span> <span class="o">&gt;</span> <span class="n">y</span> <span class="o">&amp;&amp;</span> <span class="n">ordY</span> <span class="o">&lt;</span> <span class="mi">55</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">ordX</span> <span class="o">&gt;</span> <span class="n">x</span> <span class="o">&amp;&amp;</span> <span class="n">ordX</span> <span class="o">&lt;</span> <span class="n">x</span><span class="o">+</span><span class="mi">80</span><span class="o">));</span>
		
		<span class="c">//Couleur des nuages : blanc</span>
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">white</span><span class="o">);</span>
		<span class="c">//On dessine des ronds blancs de différentes dimensions</span>
		<span class="c">//presque collés</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">ordX</span><span class="o">+</span><span class="mi">30</span><span class="o">,</span> <span class="n">ordY</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">ordX</span><span class="o">+</span><span class="mi">42</span><span class="o">,</span> <span class="n">ordY</span><span class="o">-</span><span class="mi">8</span><span class="o">,</span> <span class="mi">28</span><span class="o">,</span> <span class="mi">28</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">ordX</span><span class="o">+</span><span class="mi">60</span><span class="o">,</span> <span class="n">ordY</span><span class="o">-</span><span class="mi">14</span><span class="o">,</span> <span class="mi">34</span><span class="o">,</span> <span class="mi">34</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">ordX</span><span class="o">+</span><span class="mi">80</span><span class="o">,</span> <span class="n">ordY</span><span class="o">-</span><span class="mi">8</span><span class="o">,</span> <span class="mi">28</span><span class="o">,</span> <span class="mi">28</span><span class="o">);</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">ordX</span><span class="o">+</span><span class="mi">100</span><span class="o">,</span> <span class="n">ordY</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>		
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Arbre.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">decorator</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Arbre</span> <span class="kd">extends</span> <span class="n">Decorator</span> <span class="o">{</span>

	<span class="c">/**</span>
<span class="c">	 * @param pan</span>
<span class="c">	 * @param item</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Arbre</span><span class="o">(</span><span class="n">JPanel</span> <span class="n">pan</span><span class="o">,</span> <span class="n">Item</span> <span class="n">item</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">pan</span><span class="o">,</span> <span class="n">item</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//On invoque la méthode de la classe Decorator</span>
		<span class="kd">super</span><span class="o">.</span><span class="na">paintComponent</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
		
		<span class="c">//On trace notre nuage de taille 30 de haut</span>
		<span class="c">//à un endroit au hasard dans le ciel</span>
		
		<span class="c">//Ordonnée à ne pas dépasser</span>
		<span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">3</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getWidth</span><span class="o">();</span>
		
		<span class="kt">int</span> <span class="n">ordY</span> <span class="o">=</span> <span class="n">y</span><span class="o">,</span> <span class="n">ordX</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
		
		<span class="c">//tant que les coordonnées ne sont pas bonnes	</span>
		<span class="k">do</span><span class="o">{</span>
			<span class="k">do</span><span class="o">{</span>
				<span class="n">ordY</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="n">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()</span> <span class="o">*</span> <span class="mi">1000</span><span class="o">);</span>
				<span class="n">ordX</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="n">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()</span> <span class="o">*</span> <span class="mi">100</span><span class="o">);</span>
			<span class="o">}</span><span class="k">while</span><span class="o">(</span><span class="n">ordY</span> <span class="o">&lt;</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()/</span><span class="mi">3</span><span class="o">));</span>
		<span class="o">}</span><span class="k">while</span><span class="o">(</span><span class="n">ordY</span> <span class="o">&gt;</span> <span class="k">this</span><span class="o">.</span><span class="na">parent</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
		
		<span class="c">//System.out.println("ordY : " + ordY);</span>
		<span class="c">//Couleur du tronc : marron</span>
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="k">new</span> <span class="n">Color</span><span class="o">(</span><span class="mi">169</span><span class="o">,</span> <span class="mi">97</span><span class="o">,</span> <span class="mi">36</span><span class="o">));</span>
		<span class="c">//On crée les coordonnées de nos points</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">tabX</span> <span class="o">=</span> <span class="o">{</span><span class="n">ordX</span><span class="o">,</span> <span class="n">ordX</span><span class="o">+</span><span class="mi">10</span><span class="o">,</span> <span class="n">ordX</span><span class="o">+</span><span class="mi">30</span><span class="o">,</span> <span class="n">ordX</span><span class="o">+</span><span class="mi">40</span><span class="o">,</span> <span class="n">ordX</span><span class="o">+</span><span class="mi">35</span><span class="o">,</span> <span class="n">ordX</span><span class="o">+</span><span class="mi">35</span><span class="o">,</span> <span class="n">ordX</span><span class="o">+</span><span class="mi">5</span><span class="o">,</span> <span class="n">ordX</span><span class="o">+</span><span class="mi">5</span><span class="o">,</span> <span class="n">ordX</span><span class="o">};</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">tabY</span> <span class="o">=</span> <span class="o">{</span><span class="n">ordY</span><span class="o">,</span> <span class="n">ordY</span><span class="o">+</span><span class="mi">5</span><span class="o">,</span>  <span class="n">ordY</span><span class="o">+</span><span class="mi">5</span><span class="o">,</span>  <span class="n">ordY</span> <span class="o">,</span>   <span class="n">ordY</span><span class="o">-</span><span class="mi">5</span><span class="o">,</span>  <span class="n">ordY</span><span class="o">-</span><span class="mi">60</span><span class="o">,</span> <span class="n">ordY</span><span class="o">-</span><span class="mi">60</span><span class="o">,</span> <span class="n">ordY</span><span class="o">-</span><span class="mi">5</span><span class="o">,</span> <span class="n">ordY</span><span class="o">};</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillPolygon</span><span class="o">(</span><span class="n">tabX</span><span class="o">,</span> <span class="n">tabY</span><span class="o">,</span> <span class="mi">9</span><span class="o">);</span>
		
		<span class="n">g</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="k">new</span> <span class="n">Color</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">140</span><span class="o">,</span> <span class="mi">0</span><span class="o">));</span>
		<span class="n">g</span><span class="o">.</span><span class="na">fillOval</span><span class="o">(</span><span class="n">ordX</span><span class="o">-</span><span class="mi">15</span><span class="o">,</span> <span class="n">ordY</span><span class="o">-</span><span class="mi">150</span><span class="o">,</span> <span class="mi">70</span><span class="o">,</span> <span class="mi">100</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Panneau.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Graphics</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sdz.decorator.*</span><span class="o">;</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Panneau</span> <span class="kd">extends</span> <span class="n">JPanel</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">Item</span> <span class="n">decor</span><span class="o">;</span>

	<span class="c">/**</span>
<span class="c">	 * @param decor</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Panneau</span><span class="o">(</span><span class="n">Item</span> <span class="n">decor</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">();</span>
		<span class="k">this</span><span class="o">.</span><span class="na">decor</span> <span class="o">=</span> <span class="n">decor</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">	 * Par défaut</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="nf">Panneau</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">decor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DecorJour</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">decor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Nuage</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">decor</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">decor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Nuage</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">decor</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">decor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Arbre</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">decor</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">decor</span><span class="o">.</span><span class="na">paintComponent</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
</div></div><br>
<br>
Vous pouvez voir ce que ce code donne avec le screenshot ci-dessous : <br>
<br>
<div class="centre"><img src="./java_files/130272.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">Dans les méthodes de nos objets servant à décorer, vous avez pu voir que je génère ces derniers de façon aléatoire dans une zone spécifique : ce screenshot ne sera peut-être pas ce que vous aurez au final... Relancez le programme pour avoir plusieurs aperçus ! <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
<br>
Vous avez remarqué que le seul morceau de code qui a changé se trouvait dans le constructeur de notre objet <strong><span class="violet"><span class="courrier">Panneau</span></span></strong> ! Voici le morceau de code en question : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="c">//On crée notre décor de fond</span>
<span class="k">this</span><span class="o">.</span><span class="na">decor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DecorJour</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
<span class="c">//On ajoute un nuage</span>
<span class="k">this</span><span class="o">.</span><span class="na">decor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Nuage</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">decor</span><span class="o">);</span>
<span class="c">//Un deuxième nuage</span>
<span class="k">this</span><span class="o">.</span><span class="na">decor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Nuage</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">decor</span><span class="o">);</span>
<span class="c">//Et un arbre</span>
<span class="k">this</span><span class="o">.</span><span class="na">decor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Arbre</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">decor</span><span class="o">);</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Comme je vous l'ai expliqué plus haut, lorsque notre objet va invoquer la méthode <span class="code2 java"><span class="n">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span>
</span> de son décor, l'invocation va se faire comme mentionné précédemment.<br>
Ici, nous voulons que les éléments se décorent dans un ordre distinct : <br>
<ul>
<li>le fond se peint en premier ;</li>
<li>ensuite, les décorateurs (nuages, arbre).</li>
</ul><br>
Vous devez comprendre pourquoi : si nous avions peint les décorateurs en premier et le fond en dernier, vous n'auriez vu que le fond puisqu'il recouvre toute la surface de notre conteneur ! Les décorateurs auraient été effacés, tout simplement.<br>
C'est pour cette raison que, dans la méthode <span class="code2 java"><span class="n">paintComponent</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span>
</span> de la super-classe <strong><span class="violet"><span class="courrier">Decorator</span></span></strong>, nous avons mis l'invocation de cette même méthode de l'objet <strong><span class="violet"><span class="courrier">Item</span></span></strong> en son sein avant de faire toute chose ! Ainsi, les décorateurs sont peints après le fond et donc recouvrent celui-ci par une nuage, un arbre...<br>
<br>
<div class="rmq information">Vous devez savoir que le pattern decorator fonctionne aussi dans l'autre sens, c'est-à-dire que vous pouvez exécuter le code du premier objet en tout premier lieu et invoquer la même méthode de l'objet <strong><span class="courrier"><span class="violet">Item</span></span></strong> ensuite.</div><br>
Dans notre cas, ça n'a que peu d'intérêt pour la raison que nous venons de voir...<br>
<br>
Voilà, je vous félicite d'avoir appris à utiliser votre deuxième pattern de conception !<br>
L'avantage de tels modèles de conception doit vous paraître de plus en plus évidente, maintenant.<br>
<br>
<div class="rmq question">C'est sûr que là, on comprend mieux. Il était difficile de croire qu'on puisse ajouter des fonctionnalités à des objets sans modifier le code source de ceux-ci, mais c'est vrai !</div><br>
En plus, nous avons utilisé un principe de conception, très important, sans que je vous le dise : <strong>il est préférable, dans les limites du possible, de restreindre les possibilités de changement d'un objet.</strong><br>
Pour faire simple, il faut éviter qu'un objet soit habilité à faire des actions différentes. Par exemple, vous avez vu que, dans le package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">io</span>
</span>, les classes sont regroupées par fonctionnalité : <br>
<ul>
<li>les classes qui lisent les flux ;</li>
<li>les classes qui écrivent sur les flux.</li>
</ul><br>
Ceci car une classe qui aurait pour rôle de faire les deux actions pourrait être amenée à changer si la façon de lire change OU si la façon d'écrire change, OU les deux !<br>
Vous avez pu constater, lors du chapitre précédent, que les changements éventuels peuvent être des ennemis redoutables : inutile, donc, de leur faciliter la tâche ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
<br>
<div class="rmq question">Au fait, tu nous as dit que ce pattern était utilisé dans des classes Java... </div><br>
Tout à fait ! Le moment est venu de vous révéler ce grand secret.  <img src="./java_files/hihi.png" alt="^^" class="smilies"> 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65549">Les mystères de java.io</h2>
		<div class="ss_part_texte">
		Lorsque nous avons vu les flux d'entrée / sortie en Java, vous avez pu constater qu'il y a un nombre colossal de classes dans le package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">io</span>
</span>.<br>
<br>
Voici un schéma donnant un aperçu des ces classes :<br>
<br>
<div class="centre"><img src="./java_files/130370.jpg" alt="Image utilisateur"></div><br>
<br>
<div class="centre"><img src="./java_files/130371.jpg" alt="Image utilisateur"></div><br>
<br>
Elles ne sont pas toutes présentes, mais ça vous donne un rendu...<br>
 <br>
Cette quantité de classes s'explique car celles-ci utilisent le pattern decorator !<br>
Les classes présentes dans le deuxième schéma correspondent aux décorateurs des classes se trouvant dans le premier schéma !<br>
Par exemple, vous pouvez avoir ce genre de code : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="syntax"><pre><span class="n">FileInputStream</span> <span class="n">fis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="s">"toto.txt"</span><span class="o">);</span>
<span class="c">//Ou encore</span>
<span class="n">BufferedInputStream</span> <span class="n">bis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="s">"toto.txt"</span><span class="o">));</span>
<span class="c">//Ou alors</span>
<span class="n">DataInputStream</span> <span class="n">dis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DataInputSteam</span><span class="o">(</span><span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="s">"toto.txt"</span><span class="o">)));</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous voyez que nous retrouvons la logique du décorateur dans cette façon de faire !<br>
En fait, chaque décorateur ajoute une fonctionnalité à l'objet de base, ce qui rend celui-ci plus performant ou plus intuitif à utiliser...<br>
<br>
<div class="rmq information">Vous pouvez même créer vos propres décorateurs pour ce package ! <img src="./java_files/heureux.png" alt=":D" class="smilies"></div><br>
<br>
Maintenant que vous connaissez et savez utiliser le pattern decorator, vous devriez avoir une meilleurs approche de ce package. <br>
<br>
Bon : ceci dit, il est temps de faire un tour sur le topo...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65548">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Le pattern decorator permet d'ajouter des fonctionnalités de façon dynamique à un objet.</li>
<li>Afin d'utiliser le polymorphisme, les décorateurs et les objets destinés à être décorés doivent dériver d'une même super-classe.</li>
<li>Les objets décorateurs ont une instance du type de leur super-classe en leur sein.</li>
<li>Grâce à cette instance, ils peuvent invoquer la méthode commune et ainsi rajouter des traitements à celle-ci.</li>
<li>La façon d'utiliser un décorateur peut se faire dans deux sens : </li><ul>
<li>soit en exécutant les traitements de l'objet du super-type en premier. Les méthodes seront exécutées du premier objet instancié vers le dernier,</li>
<li>soit en exécutant le code du décorateur en premier : l'exécution se fait en sens contraire, du dernier objet instancié vers le premier.</li>
</ul>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Encore un chapitre riche en nouveautés !<br>
J'espère qu'il vous a plu... <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
Vous commencez à apercevoir la toute puissance des patterns de conception.<br>
Nous allons donc continuer avec un pattern non moins pratique : <span class="orange"><strong>le pattern observer !</strong></span>
	</div>
	
	<hr>
	<h1 id="chap_65547">Soyez à l'écoute de vos objets : le pattern observer</h1>
	<div id="chap_intro">
	Dans ce chapitre, nous verrons comment faire dialoguer vos objets entre eux.<br>
Vous allez voir que ceci est assez facile, au final, mais l'approche n'est pas évidente au premier abord !<br>
<br>
Ce pattern est celui utilisé pour gérer les événements sur vos IHM. C'est par le biais de ce dernier que vos composants peuvent faire des actions lorsque vous cliquez dessus, que vous le survolez...<br>
<br>
Je vois que vous êtes impatients de voir ce dernier ! Donc, let's go les zéros ! <img src="./java_files/pirate.png" alt=":pirate:" class="smilies">
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65546">Posons le problème</h2>
		<div class="ss_part_texte">
		Sachant que vous êtes un développeur Java chevronné, un de vos amis proches vous demande si vous pourriez l'aider à faire une horloge digitale en Java. <br>
Celui-ci a la gentillesse de vous fournir les classes à utiliser afin de permettre de faire son horloge.<br>
<br>
Votre ami a l'air de s'y connaître car ce qu'il vous a fourni est bien structuré. <br>
<br>
<h4><span class="souligne">Package com.sdz.vue classe Fenetre.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">vue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sdz.model.Horloge</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span><span class="o">{</span>

	<span class="kd">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">();</span>
	<span class="kd">private</span> <span class="n">Horloge</span> <span class="n">horloge</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="c">/* On initialise notre JFrame  */</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">80</span><span class="o">);</span>
		<span class="c">/* On initialise l'horloge  */</span>
		<span class="k">this</span><span class="o">.</span><span class="na">horloge</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Horloge</span><span class="o">();</span>
		<span class="c">/* On initialise notre JLabel  */</span>
		<span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"DS-digital"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">TYPE1_FONT</span><span class="o">,</span> <span class="mi">30</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="c">/* On ajoute le JLabel à notre JFrame */</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>		
	<span class="o">}</span>


	<span class="c">/* Méthode main pour lancer le programme */</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Package com.sdz.model classe Horloge.java</span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">model</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Calendar</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Horloge</span> <span class="kd">extends</span> <span class="n">Thread</span><span class="o">{</span>
        <span class="c">//Objet calendrier pour récupérer l'heure courante.</span>
	<span class="kd">private</span> <span class="n">Calendar</span> <span class="n">cal</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">String</span> <span class="n">hour</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Horloge</span><span class="o">(){</span>
		<span class="n">Thread</span> <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
		<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
                                    
                                    <span class="c">//On récupère l'instance d'un calendrier à chaque tour </span>
	                            <span class="c">//celui-ci va nous permettre de récupérer l'heure actuelle</span>
			            <span class="k">this</span><span class="o">.</span><span class="na">cal</span> <span class="o">=</span> <span class="n">Calendar</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
                                    <span class="k">this</span><span class="o">.</span><span class="na">hour</span> <span class="o">=</span> 	<span class="c">/* Les heures */</span>
					<span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">HOUR_OF_DAY</span><span class="o">)</span> <span class="o">+</span> <span class="s">" : "</span> 
					<span class="o">+</span> 
					<span class="o">(</span> 		<span class="c">/* Les minutes */</span>
						<span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">MINUTE</span><span class="o">)</span> <span class="o">&lt;</span> <span class="mi">10</span>
						<span class="o">?</span> <span class="s">"0"</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">MINUTE</span><span class="o">)</span>
						<span class="o">:</span> <span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">MINUTE</span><span class="o">)</span>
					<span class="o">)</span>
					<span class="o">+</span> <span class="s">" : "</span> 
					<span class="o">+</span>
					<span class="o">(</span> 		<span class="c">/* Les secondes */</span>
						<span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">SECOND</span><span class="o">)&lt;</span> <span class="mi">10</span><span class="o">)</span> 
						<span class="o">?</span> <span class="s">"0"</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">SECOND</span><span class="o">)</span> 
						<span class="o">:</span> <span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">SECOND</span><span class="o">)</span>
					<span class="o">);</span>
                        <span class="k">try</span> <span class="o">{</span>
				<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">1000</span><span class="o">);</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
				<span class="c">// TODO Auto-generated catch block</span>
				<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
			<span class="o">}</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<div class="rmq attention">Si vous ne possédez pas la même police d'écriture que j'ai utilisée, prenez-en une autre : <span class="arial"><strong>Arial</strong></span> ou <strong><span class="courrier">Courrier</span></strong> par exemple... <img src="./java_files/clin.png" alt=";)" class="smilies"></div><br>
Le problème auquel il est confronté est simple : <strong>impossible de pouvoir faire communiquer l'horloge avec sa fenêtre... </strong><br>
<br>
<div class="rmq question">Je ne vois pas où est le problème ! Il n'a qu'à faire passer son instance de <span class="courrier"><strong><span class="violet">JLabel </span></strong></span>dans son objet <strong><span class="violet"><span class="courrier">Horloge</span></span></strong> et le tour est joué !</div><br>
En fait, votre ami, dans son infinie sagesse, souhaite ne pas faire dépendre son horloge de son interface graphique et, je le cite, juste au cas où il devrait passer d'une IHM <strong>swing </strong>à une IHM <strong>AWT</strong>.<br>
<br>
C'est vrai que si on passe notre objet d'affichage dans notre horloge, si nous devons changer de type d'IHM, toutes les classes devront être modifiées ! Pas génial...<br>
En fait, lorsque vous faites ceci, on dit que vous <strong>couplez des objets : vous rendez un ou plusieurs objets dépendants d'un ou plusieurs autres objets !</strong><br>
<br>
<strong><span class="rouge">Entendez par là que vous ne pourrez plus utiliser l'(les) objet(s) couplé(s) indépendamment de l'objet (des objets) auquel il(s) est(sont) attaché(s) !</span></strong><br>
<br>
Le couplage entre objets est l'un des problèmes principaux concernant la ré-utilisabilité d'objets...<br>
Dans notre cas, si vous voulez utiliser votre objet <strong><span class="courrier"><span class="violet">Horloge</span></span></strong> ailleurs, vous serez confrontés à pas mal de problèmes puisque cet objet ne s'affichera que dans un <strong><span class="violet"><span class="courrier">JLabel</span></span></strong> !<br>
<br>
<div class="rmq question">Bon, on a compris : le pattern observer va tous nous sauver !</div><br>
Tout à fait ! <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
Celui-ci va permettre de faire communiquer des objets entre eux sans qu'ils se connaissent réellement !<br>
Vous devez être curieux de voir comment faire... je vous propose donc, sans plus tarder, de vous le présenter.
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65544">Des objets qui parlent et qui écoutent : le pattern observer</h2>
		<div class="ss_part_texte">
		Nous allons faire un point sur ce que vous savez de ce pattern pour le moment :<br>
<ul>
<li>il permet de faire communiquer des objets entre eux ;</li>
<li>c'est un bon moyen d'éviter le couplage entre les objets.</li>
</ul><br>
Ce sont tout de même deux points cruciaux, mais il y a encore un point qui va vous plaire et que vous ne savez pas encore : <strong>tout se fera automatiquement ! </strong><br>
<br>
Comment les choses vont se passer ? Faisons un point de ce que nous voulons pour notre horloge digitale : celle-ci doit pouvoir avertir notre objet servant à afficher l'heure lorsque celui-ci doit mettre à jour son affichage.<br>
Ici, vu que les horloges du monde entier se mettent à jour toutes les secondes, la nôtre fera de même... <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
La chose merveilleuse avec ce pattern, c'est que notre horloge ne se contentera pas de mettre un objet au courant que sa valeur a changé, elle pourra même mettre plusieurs observateurs au courant ! ! <img src="./java_files/waw.png" alt=":waw:" class="smilies"><br>
<br>
En fait, pour schématiser au maximum, voyez la relation entre les objets implémentant le pattern observer comme un éditeur de journal et ses clients : <br>
<br>
<div class="centre"><img src="./java_files/130414.png" alt="Image utilisateur"></div><br>
<br>
Avec ce schéma, vous pouvez en conclure que notre objet défini comme observable pourra avoir plusieurs objets qui l'observent. <strong>On dit que cet objet a <span class="italique"><span class="arial">une relation de un à plusieurs</span></span> vers l'objet <span class="violet"><span class="courrier">Observateur</span></span></strong>.<br>
Avant de vous expliquer un peu plus le principe de ce pattern, voici le diagramme de classe de notre application : <br>
<br>
<div class="centre"><img src="./java_files/130545.png" alt="Image utilisateur"></div><br>
<br>
Avec ce diagramme, vous pouvez vous apercevoir que ce ne sont pas nos instances d'<strong><span class="violet"><span class="courrier">Horloge</span></span></strong> ou de <strong><span class="violet"><span class="courrier">JLabel </span></span></strong>que nous allons passer, mais des implémentations d'interfaces !<br>
<br>
En effet, vous savez maintenant que les classes implémentant une interface peuvent être appelées par le type de l'interface. Dans notre cas, notre classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong> va implémenter l'interface <strong><span class="violet"><span class="courrier">Observateur</span></span></strong>, celle-ci pourra donc être considérée comme un type <strong><span class="violet"><span class="courrier">Observateur</span></span></strong> !<br>
Vous constaterez aussi que dans la deuxième interface, celle dédiée à l'objet <strong><span class="violet"><span class="courrier">Horloge</span></span></strong>, nous avons trois méthodes : <br>
<ul>
<li>une qui permet d'ajouter des observateurs, nous allons donc gérer une collection d'observateurs ;</li>
<li>une qui permet de retirer les observateurs ;</li>
<li>et enfin une qui permet de mettre à jour les observateurs ! </li>
</ul><br>
Grâce à ceci, nos objets ne sont plus liés par leur type respectif, mais par leurs interfaces ! <br>
L'interface qui va apporter les méthodes de mise à jour, d'ajout observateur... va travailler avec des objets de type <strong><span class="violet"><span class="courrier">Observateur</span></span></strong> ! <br>
<br>
Ainsi le couplage ne se fait plus directement, mais il s'opère par le biais de ces interfaces.<br>
<div class="rmq question">Tu nous as dit qu'il fallait éviter le couplage !</div><br>
Oui, mais dans certains cas il est nécessaire... Ici, il faut que nos deux interfaces soient couplées pour que le système fonctionne. De même que, lors du chapitre précédent, nos classes étaient très fortement couplées puisqu'elles devaient travailler ensemble, nous devions donc faire en sorte de ne pas les séparer. <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Voici comment l'application va fonctionner. <br>
<ul>
<li>Nous allons avoir une instance de la classe <strong><span class="violet"><span class="courrier">Horloge</span></span></strong> dans notre classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong>.</li>
<li>Cette dernière va implémenter l'interface <strong><span class="violet"><span class="courrier">Observateur</span></span></strong>.</li>
<li>Notre objet <strong><span class="violet"><span class="courrier">Horloge</span></span></strong>, implémentant l'interface <strong><span class="violet"><span class="courrier">Observable</span></span></strong>, va attendre d'avoir des objets à prévenir de ses changements.</li>
<li>Nous allons informer notre horloge que notre fenêtre va l'observer.</li>
<li>À partir de là, notre objet <strong><span class="violet"><span class="courrier">Horloge</span></span></strong> va faire le reste : à chaque changement, nous allons appeler la méthode qui met à jour tous les observateurs ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"> </li>
</ul><br>
<br>
Voici le code source de ces interfaces (j'ai créé un package com.sdz.observer). <br>
<br>
<h4>Observateur.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">observer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Observateur</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">update</span><span class="o">(</span><span class="n">String</span> <span class="n">hour</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Observer.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">observer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Observable</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addObservateur</span><span class="o">(</span><span class="n">Observateur</span> <span class="n">obs</span><span class="o">);</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">updateObservateur</span><span class="o">();</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">delObservateur</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voici maintenant le code de nos deux classes, travaillant main dans la main mais ne se rencontrant JAMAIS.<br>
<br>
<h4>Horloge.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">model</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Calendar</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sdz.observer.Observable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.observer.Observateur</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Horloge</span> <span class="kd">extends</span> <span class="n">Thread</span> <span class="kd">implements</span> <span class="n">Observable</span><span class="o">{</span>

	<span class="c">//On récupère l'instance d'un calendrier </span>
	<span class="c">//celui-ci va nous permettre de récupérer l'heure actuelle</span>
	<span class="kd">private</span> <span class="n">Calendar</span> <span class="n">cal</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">String</span> <span class="n">hour</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
	<span class="c">//Notre collection d'observateurs !</span>
	<span class="kd">private</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Observateur</span><span class="o">&gt;</span> <span class="n">listObservateur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Observateur</span><span class="o">&gt;();</span>
	
	<span class="kd">public</span> <span class="nf">Horloge</span><span class="o">(){</span>
		<span class="n">Thread</span> <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
		<span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
			<span class="k">this</span><span class="o">.</span><span class="na">cal</span> <span class="o">=</span> <span class="n">Calendar</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
			<span class="k">this</span><span class="o">.</span><span class="na">hour</span> <span class="o">=</span> 	<span class="c">/* Les heures */</span>
					<span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">HOUR_OF_DAY</span><span class="o">)</span> <span class="o">+</span> <span class="s">" : "</span> 
					<span class="o">+</span> 
					<span class="o">(</span> 		<span class="c">/* Les minutes */</span>
						<span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">MINUTE</span><span class="o">)</span> <span class="o">&lt;</span> <span class="mi">10</span>
						<span class="o">?</span> <span class="s">"0"</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">MINUTE</span><span class="o">)</span>
						<span class="o">:</span> <span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">MINUTE</span><span class="o">)</span>
					<span class="o">)</span>
					<span class="o">+</span> <span class="s">" : "</span> 
					<span class="o">+</span>
					<span class="o">(</span> 		<span class="c">/* Les secondes */</span>
						<span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">SECOND</span><span class="o">)&lt;</span> <span class="mi">10</span><span class="o">)</span> 
						<span class="o">?</span> <span class="s">"0"</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">SECOND</span><span class="o">)</span> 
						<span class="o">:</span> <span class="k">this</span><span class="o">.</span><span class="na">cal</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">Calendar</span><span class="o">.</span><span class="na">SECOND</span><span class="o">)</span>
					<span class="o">);</span>
			
			<span class="c">//On avertit les observateurs que l'heure a été mise à jour !</span>
			<span class="k">this</span><span class="o">.</span><span class="na">updateObservateur</span><span class="o">();</span>
			
			<span class="k">try</span> <span class="o">{</span>
				<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">1000</span><span class="o">);</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
				<span class="c">// TODO Auto-generated catch block</span>
				<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
			<span class="o">}</span>
		<span class="o">}</span>
	<span class="o">}</span>

	<span class="c">/**</span>
<span class="c">	 * Ajoute un observateur à la liste</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addObservateur</span><span class="o">(</span><span class="n">Observateur</span> <span class="n">obs</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">listObservateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">obs</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">	 * Retire tous les observateurs de la liste</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">delObservateur</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">listObservateur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Observateur</span><span class="o">&gt;();</span>
	<span class="o">}</span>
	<span class="c">/**</span>
<span class="c">	 * Avertit les observateurs que l'observable a changé </span>
<span class="c">	 * et invoque la méthode update de chaque observateur !</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">updateObservateur</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">for</span><span class="o">(</span><span class="n">Observateur</span> <span class="n">obs</span> <span class="o">:</span> <span class="k">this</span><span class="o">.</span><span class="na">listObservateur</span> <span class="o">)</span>
			<span class="n">obs</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">hour</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<h4>Fenetre.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">vue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sdz.model.Horloge</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.observer.Observateur</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">();</span>
	<span class="kd">private</span> <span class="n">Horloge</span> <span class="n">horloge</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="c">/* On initialise notre JFrame  */</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">80</span><span class="o">);</span>
		
		<span class="c">/* On initialise l'horloge  */</span>
		<span class="k">this</span><span class="o">.</span><span class="na">horloge</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Horloge</span><span class="o">();</span>
		<span class="c">//On place un écouteur sur notre horloge</span>
		<span class="k">this</span><span class="o">.</span><span class="na">horloge</span><span class="o">.</span><span class="na">addObservateur</span><span class="o">(</span><span class="k">new</span> <span class="n">Observateur</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">update</span><span class="o">(</span><span class="n">String</span> <span class="n">hour</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">hour</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="c">/* On initialise notre JLabel  */</span>
		<span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"DS-digital"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">TYPE1_FONT</span><span class="o">,</span> <span class="mi">30</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="c">/* On ajoute le JLabel à notre JFrame */</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>		
	<span class="o">}</span>


	<span class="c">/* Méthode main pour lancer le programme */</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Exécutez ce code et vous verrez que tout fonctionne à merveille ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
Vous venez de faire communiquer deux objets entre eux avec un couplage proche de zéro ! Félicitations !<br>
<br>
Vous pouvez donc voir de vos yeux que lorsque l'heure change, la méthode <span class="code2 java"><span class="n">updateObservateur</span><span class="o">()</span>
</span> est invoquée. Celle-ci parcourt sa collection d'objets <strong><span class="violet"><span class="courrier">Observateur</span></span></strong> et appelle la méthode <span class="code2 java"><span class="n">update</span><span class="o">(</span><span class="n">String</span> <span class="n">hour</span><span class="o">)</span>
</span> de celui-ci. La méthode étant redéfinie dans notre classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong> afin de mettre à jour le <strong><span class="violet"><span class="courrier">JLabel</span></span></strong>, l'heure s'affiche !<br>
<br>
La seule chose qui me dérange dans mon exemple tel qu'il est fait, c'est que vous ne voyez pas que l'objet observé met à jour tous les objets qui l'écoutent...<br>
Afin de remédier à cela, nous allons quelque peu modifier notre objet <strong><span class="courrier"><span class="violet">Fenetre</span></span></strong> afin que celle-ci n'initialise pas tout de suite l'objet <strong><span class="violet"><span class="courrier">Horloge</span></span></strong>, et donc ne lui dise pas tout de suite que celui-ci est observé...<br>
<br>
Pour ce faire, nous allons initialiser notre <strong><span class="courrier"><span class="violet">Horloge </span></span></strong>avec un mutateur dans la classe <strong><span class="violet"><span class="courrier">Fenetre</span></span></strong> et créer une autre classe, <strong><span class="violet"><span class="courrier">ZFenetre</span></span></strong>, qui elle, sera codée avec <strong><span class="violet"><span class="courrier">AWT</span></span></strong>.<br>
<div class="rmq information">Pour faire très simple, pour passer de <strong><span class="violet"><span class="courrier">swing</span></span></strong> à <strong><span class="violet"><span class="courrier">AWT</span></span></strong>, il vous suffit d'utiliser les mêmes objets en enlevant le "<strong>J</strong>" du début. Donc, <strong><span class="violet"><span class="courrier">JButton </span></span></strong>devient <strong><span class="violet"><span class="courrier">Button</span></span></strong>, <strong><span class="violet"><span class="courrier">JFrame</span></span></strong> devient <strong><span class="violet"><span class="courrier">Frame</span></span></strong>...</div><br>
<br>
Voici les codes sources de ces deux classes.<br>
<br>
<h4>ZFenetre.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">vue</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.WindowEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.WindowListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sdz.model.Horloge</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.observer.Observateur</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ZFenetre</span> <span class="kd">extends</span> <span class="n">Frame</span><span class="o">{</span>
	<span class="kd">private</span> <span class="n">Label</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Label</span><span class="o">();</span>
	<span class="kd">private</span> <span class="n">Horloge</span> <span class="n">horloge</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">ZFenetre</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">80</span><span class="o">);</span>
				
		<span class="c">/* On initialise notre JLabel  */</span>
		<span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"DS-digital"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">TYPE1_FONT</span><span class="o">,</span> <span class="mi">30</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
		<span class="c">/* On ajoute le JLabel à notre JFrame */</span>
		<span class="k">this</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>		
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setHorloge</span><span class="o">(</span><span class="n">Horloge</span> <span class="n">horloge</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">horloge</span> <span class="o">=</span> <span class="n">horloge</span><span class="o">;</span>
		<span class="c">//On place un écouteur sur notre horloge</span>
		<span class="k">this</span><span class="o">.</span><span class="na">horloge</span><span class="o">.</span><span class="na">addObservateur</span><span class="o">(</span><span class="k">new</span> <span class="n">Observateur</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">update</span><span class="o">(</span><span class="n">String</span> <span class="n">hour</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">hour</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">});</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Fenetre.java</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">vue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sdz.model.Horloge</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.observer.Observateur</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fenetre</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">();</span>
	<span class="kd">private</span> <span class="n">Horloge</span> <span class="n">horloge</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">Fenetre</span><span class="o">(){</span>
		<span class="c">/* On initialise notre JFrame  */</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">200</span><span class="o">,</span> <span class="mi">80</span><span class="o">);</span>
				
		<span class="c">/* On initialise notre JLabel  */</span>
		<span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"DS-digital"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">TYPE1_FONT</span><span class="o">,</span> <span class="mi">30</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">label</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		<span class="c">/* On ajoute le JLabel à notre JFrame */</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">label</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>		
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setHorloge</span><span class="o">(</span><span class="n">Horloge</span> <span class="n">horloge</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">horloge</span> <span class="o">=</span> <span class="n">horloge</span><span class="o">;</span>
		<span class="c">//On place un écouteur sur notre horloge</span>
		<span class="k">this</span><span class="o">.</span><span class="na">horloge</span><span class="o">.</span><span class="na">addObservateur</span><span class="o">(</span><span class="k">new</span> <span class="n">Observateur</span><span class="o">(){</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">update</span><span class="o">(</span><span class="n">String</span> <span class="n">hour</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">hour</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">});</span>
	<span class="o">}</span>

	<span class="c">/* Méthode main pour lancer le programme */</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="c">//Notre horloge UNIQUE</span>
		<span class="n">Horloge</span> <span class="n">horloge</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Horloge</span><span class="o">();</span>
		
		<span class="c">//Notre fenêtre héritant de JFrame</span>
		<span class="n">Fenetre</span> <span class="n">fen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Fenetre</span><span class="o">();</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="n">fen</span><span class="o">.</span><span class="na">setHorloge</span><span class="o">(</span><span class="n">horloge</span><span class="o">);</span>
		
		<span class="n">ZFenetre</span> <span class="n">zFen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZFenetre</span><span class="o">();</span>
		<span class="n">zFen</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
		<span class="n">zFen</span><span class="o">.</span><span class="na">setHorloge</span><span class="o">(</span><span class="n">horloge</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Les deux codes diffèrent légèrement, vous avez dû remarquer que certaines méthodes de notre première fenêtre avaient disparu dans la deuxième...</div><br>
<br>
Ce qui nous donne : <br>
<br>
<div class="centre"><img src="./java_files/130445.jpg" alt="Image utilisateur"></div><br>
<br>
À gauche, la fenêtre faite avec <strong><span class="violet"><span class="courrier">AWT</span></span></strong> et à droite, celle faite avec <strong><span class="courrier"><span class="violet">swing</span></span></strong> !<br>
<br>
Voilà, vous venez d'apprendre à utiliser votre troisième pattern de conception. <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
Je ne vous ai pas caché que celui-ci sert dans la gestion des événements d'interfaces graphiques. Vous avez remarqué que la syntaxe est identique.<br>
Par contre, je vous ai caché quelque chose : il existe des classes Java qui permettent d'utiliser le pattern observer sans que vous ayez à coder les interfaces ! 
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65543">le pattern observer : le retour</h2>
		<div class="ss_part_texte">
		En fait, il existe une classe abstraite, <strong><span class="violet"><span class="courrier">Observable </span></span></strong>et une interface <strong><span class="violet"><span class="courrier">Observer</span></span></strong> dans les classes Java !<br>
<br>
Celles-ci fonctionnent de manière quasiment identique à notre façon de faire. Seuls quelques légers détails diffèrent.<br>
Personnellement, je préfère de loin utiliser un pattern observer "<span class="italique">maison</span>".<br>
<br>
<div class="rmq question">Pourquoi ça ?</div><br>
Tout simplement parce que l'objet que vous souhaitez observer DOIT hériter de la classe <strong><span class="violet"><span class="courrier">Observable</span></span></strong>. <strong>Ceci a donc pour conséquence que votre classe ne pourra plus hériter d'une autre classe vu que Java ne gère pas l'héritage multiple ! <br>
</strong><br>
<br>
<div class="centre"><img src="./java_files/130533.jpg" alt="Image utilisateur"></div><br>
<div class="rmq information">Pour les zéros qui ne l'auraient pas compris, ce qui entoure les deux classes sur notre schéma est en fait la symbolique UML d'un package ! Dans ce cas, le package <span class="code2 java"><span class="n">java</span><span class="o">.</span><span class="na">util</span>
</span>.</div><br>
Vous pouvez voir que celui-ci fonctionne quasiment de la même manière que celui que nous avons développé. Il y a un toutefois un changement dans la méthode <span class="code2 java"><span class="n">update</span><span class="o">(</span><span class="n">Observable</span> <span class="n">obs</span><span class="o">,</span> <span class="n">Object</span> <span class="n">obj</span><span class="o">)</span>
</span> : la signature (les paramètres) de la méthode a changé !<br>
Celle-ci prend deux paramètres : <br>
<ul>
<li>un objet <strong><span class="violet"><span class="courrier">Observable</span></span></strong> ;</li>
<li>un <strong><span class="violet"><span class="courrier">Object </span></span></strong>: donnée supplémentaire que vous souhaitez faire passer !</li>
</ul><br>
<br>
Vous connaissez le principe de fonctionnement de ce pattern. Il vous est donc facile de comprendre ce schéma. Toutefois, je vous invite à faire vos propres recherches sur l'implémentation de ce pattern dans Java. Vous verrez qu'il y a des subtilités (rien de méchant... <img src="./java_files/hihi.png" alt="^^" class="smilies"> ).<br>
<br>
Je ne vais pas détailler cette implémentation ici, ce n'est pas le but de ce tutoriel.<br>
Je voulais seulement vous montrer un pattern de conception et vous en expliquer le fonctionnement. Vous avez compris, vous savez l'utiliser et le refaire, par conséquent une petite recherche sur les classes <strong><span class="violet"><span class="courrier">Observer </span></span></strong>et <strong><span class="violet"><span class="courrier">Observable </span></span></strong>ne devrait pas vous poser beaucoup de problèmes ! <img src="./java_files/siffle.png" alt=":-°" class="smilies"><br>
Personnellement, j'ai été obligé de refaire l'implémentation de ce pattern à chaque fois car mes objets héritaient déjà d'une autre classe...
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65542">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Le pattern observer permet d'avoir des objets faiblement couplés.</li>
<li>Ce pattern est basé sur une relation : de un à plusieurs.</li>
<li>Au lieu de coupler nos objets directement, on préfère coupler les interfaces qu'ils implémentent.</li>
<li>Grâce à ce pattern, nos objets restent indépendants les uns des autres !</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Chapitre très intéressant, n'est-ce pas ?<br>
Vous pouvez maintenant faire communiquer vos objets entre eux sans problème et façon très optimisée.<br>
Prenez le temps de bien assimiler ce pattern car il pourra sans doute vous sortir de situations complexes...<br>
<br>
De plus, ce pattern est la base d'un pattern très connu : <strong><span class="orange">le pattern MVC (modèle, vue, contrôleur)</span></strong>.<br>
<br>
D'ailleurs, il est temps de voir celui-ci ! <img src="./java_files/pirate.png" alt=":pirate:" class="smilies">
	</div>
	
	<hr>
	<h1 id="chap_65541">Un pattern puissant : le pattern MVC</h1>
	<div id="chap_intro">
	Voici un chapitre qui risque d'être dur à digérer...<br>
En effet, si le DP <acronym title="Modèle - Vue - Controleur">MVC</acronym> est un outil puissant, il n'en est pas moins l'un des patterns les plus compliqués à assimiler et à utiliser.<br>
<br>
Ce dernier n'est pas qu'un pattern : il s'agit d'un pattern composé, ce qui signifie qu'il est constitué d'au moins deux patterns (mais ça peut être plus).<br>
<br>
Nous allons voir ceci tout de suite, inutile de tergiverser plus longtemps ! 
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65540">Premiers pas</h2>
		<div class="ss_part_texte">
		Dans ce chapitre, nous n'allons pas faire comme d'habitude : <br>
<ul>
<li>créer une situation ;</li>
<li>voir ce que nous pouvons faire ;</li>
<li>découvrir le pattern.</li>
</ul><br>
<br>
Je pense que, vu qu'il s'agit d'un pattern compliqué, nous allons directement rentrer dans le vif du sujet... Voici un schéma que ceux qui ont déjà fait des recherches sur ce pattern ont dû déjà voir et revoir : <br>
<br>
<div class="centre"><img src="./java_files/130634.png" alt="Image utilisateur"></div><br>
<br>
Avant d'expliquer ce schéma, nous devons faire un point sur ce que sont réellement ces trois entités !<br>
<br>
<h4><span class="souligne">La vue</span></h4><br>
Ce qu'on nomme la vue est en fait une IHM. Celle-ci est en fait ce qu'a l'utilisateur sous les yeux. La vue peut donc être : <br>
<ul>
<li>une application graphique <strong><span class="violet"><span class="courrier">swing</span></span></strong>, <strong><span class="violet"><span class="courrier">awt</span></span></strong>, <strong><span class="violet"><span class="courrier">swt</span></span></strong> pour Java (<strong><span class="violet"><span class="courrier">Form </span></span></strong>pour C#...) ;</li>
<li>une page web, vous connaissez... </li>
<li>un terminal Linux ou une console Windows...</li>
<li>...</li>
</ul><br>
<h4><span class="souligne">Le modèle</span></h4><br>
Le modèle peut être divers et varié. il s'agit en général d'un ou plusieurs objets Java (ou bean, nous y reviendrons). Ces objets s'apparentent généralement à ce qu'on appelle souvent "<strong><span class="italique"><span class="arial">la couche métier</span></span></strong>" de l'application. <br>
Ce sont des objets qui font des traitements absolument transparents pour l'utilisateur. Par exemple, on peut citer des objets dont le rôle est de gérer une ou plusieurs tables d'une base de données.<br>
En trois mots, il s'agit du <strong>cœur du programme !</strong><br>
<br>
Dans le chapitre précédent, nous avons confectionné une petite horloge. Dans cette application, notre fenêtre <strong><span class="violet"><span class="courrier">swing</span></span></strong> correspond à la vue et l'objet <strong><span class="violet"><span class="courrier">Horloge</span></span></strong> correspond au modèle.<br>
<br>
<h4><span class="souligne">Le contrôleur</span></h4><br>
Cet objet - car il s'agit aussi d'un objet - permet de faire le lien entre la vue et le modèle lorsqu'une interaction utilisateur est survenue sur la vue ! C'est cet objet qui aura pour rôle de contrôler les données et, le cas échéant, ira dire au modèle qu'il peut utiliser les données envoyées par l'utilisateur en toute tranquillité !<br>
<br>
Maintenant que toute la lumière est faite sur les trois composants de ce pattern, nous allons expliquer un peu plus la façon de travailler de ce dernier.<br>
<div class="rmq information">Afin d'avoir un exemple concret sur lequel travailler, nous allons reprendre notre calculatrice (cf <a href="http://www.siteduzero.com/tuto-3-28541-1-tp-une-calculatrice.html"><span class="souligne">TP N° 1</span></a>). <br>
</div><br>
Pour commencer, vous pouvez constater que les trois composants sont tous en interaction les uns avec les autres. <br>
Si nous partons du postulat que votre application, implémentant le pattern MVC, est chargée, voici ce qu'il peut se passer :<br>
<ul>
<li>l'utilisateur fait une action sur votre calculatrice (clic sur un bouton) ;</li>
<li>l'action est captée par le contrôleur qui va vérifier la cohérence des données et, le cas échéant, transformer celles-ci afin d'être comprises par le modèle. Le contrôleur peut aussi demander à la vue de changer...</li>
<li>le modèle reçoit les données et change d'état (une variable qui change, par exemple...) ;</li>
<li>le modèle notifie à la vue (ou aux vues) qu'elle (qu'elles) doit (doivent) se mettre à jour ;</li>
<li>l'affichage dans la vue est modifié en conséquence en allant chercher l'état du modèle.</li>
</ul><br>
<br>
<div class="rmq question">On y voit déjà plus clair, mais tu nous as dit que MVC est un pattern composé... Il est donc construit avec plusieurs patterns ?</div><br>
Tout à fait : en fait, avec les chapitres que vous avez vus, vous pouvez isoler deux patterns dans cette architecture.<br>
<div class="rmq question">Je crois voir du pattern observer...</div><br>
Bien ! Je vois que vous avez bien suivi le chapitre précédent...<br>
<br>
Il y a en effet le pattern observer au niveau du modèle. <strong>Comme ceci, lorsque celui-ci va changer d'état, tous les objets qui l'observeront seront mis au courant automatiquement et cela, avec un couplage faible !</strong><br>
<br>
Le deuxième est plus difficile à voir mais il s'agit du pattern strategy ! <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
Ce pattern est situé au niveau du contrôleur. <strong>On dit aussi que le contrôleur est la strategy de la vue !</strong><br>
En fait, le contrôleur va transférer les données de l'utilisateur au modèle et il a tout à fait le droit de modifier le contenu. Donc, s'il y a des contrôles à faire, la vue aura une implémentation du pattern strategy afin de <strong>centraliser les contrôles et découpler encore plus le modèle de la vue !</strong> <br>
<br>
<div class="rmq question">On ne comprend pas trop pourquoi utiliser le pattern strategy alors que le pattern observer aurait suffit !</div><br>
Souvenez-vous de la raison d'être du pattern strategy :<strong> encapsuler les morceaux de code qui changent !</strong><br>
Avec l'utilisation de ce pattern, vous prévenez les risques potentiels de changements dans votre logique de contrôle ! Il vous suffira d'utiliser une autre implémentation de votre contrôleur afin d'avoir des contrôles différents. <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
Ceci dit, vous devez tout de même savoir que le modèle et le contrôleur sont intimement liés : <strong>un objet contrôleur pour notre calculatrice ne servira que pour notre calculatrice ! Nous pouvons donc autoriser un couplage fort entre ces deux objets !</strong><br>
<br>
Vous comprenez le pourquoi du comment maintenant...<br>
Je pense qu'il est temps de se mettre à coder !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65561">Le modèle</h2>
		<div class="ss_part_texte">
		Le modèle sera l'objet qui sera chargé de stocker les données nécessaires à un calcul (nombre et opérateur)  et d'avoir le résultat ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Afin de prévoir un changement éventuel de modèle, nous allons créer celui-ci à partir d'un super-type de modèle : comme ça, si un changement s'opère, nous pourrons utiliser les différentes classes filles de façon polymorphe.<br>
<br>
Avant de foncer tête baissée, nous allons devoir réfléchir à ce que notre modèle doit savoir faire...<br>
Afin de faire des calculs simples, celui-ci devra pouvoir : <br>
<ul>
<li>récupérer et stocker au moins un nombre ;</li>
<li>stocker l'opérateur de calcul ;</li>
<li>renvoyer le résultat ;</li>
<li>calculer le résultat ;</li>
<li>tout remettre à zéro.</li>
</ul><br>
<br>
Très bien : voici donc la liste des méthodes que nous trouverons dans notre classe abstraite.<br>
Comme vous le savez, nous allons utiliser le pattern observer afin de faire communiquer notre modèle avec d'autres objets... Il nous faudra donc une implémentation de ce pattern ; le voici, dans un package <span class="code2 java"><span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">observer</span>
</span>. <br>
<br>
<h4><span class="souligne">Observable.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">observer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Observable</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addObserver</span><span class="o">(</span><span class="n">Observer</span> <span class="n">obs</span><span class="o">);</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">removeObserver</span><span class="o">();</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">notifyObserver</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="souligne">Observer.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">observer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Observer</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">update</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Notre classe abstraite devra donc implémenter ce pattern afin de centraliser les implémentations.<br>
Vu que notre super-type implémente le pattern observer, les classes héritant de cette dernière hériteront aussi des méthodes de ce pattern !<br>
<br>
Voici donc le code de notre classe abstraite que nous placerons dans le package <span class="code2 java"><span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">model</span>
</span>.<br>
<br>
<h4><span class="souligne">AbstractModel.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">model</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sdz.observer.Observable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.observer.Observer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">AbstractModel</span>  <span class="kd">implements</span> <span class="n">Observable</span><span class="o">{</span>
	
	<span class="kd">protected</span> <span class="kt">double</span> <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>	
	<span class="kd">protected</span> <span class="n">String</span> <span class="n">operateur</span> <span class="o">=</span> <span class="s">""</span><span class="o">,</span> <span class="n">operande</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
	<span class="kd">private</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Observer</span><span class="o">&gt;</span> <span class="n">listObserver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Observer</span><span class="o">&gt;();</span>	
	<span class="c">/**</span>
<span class="c">	 * Efface </span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">reset</span><span class="o">();</span>
	<span class="c">/**</span>
<span class="c">	 * Effectue le calcul</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">calcul</span><span class="o">();</span>
	<span class="c">/**</span>
<span class="c">	 * Affichage forcé du résultat</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">getResultat</span><span class="o">();</span>
	<span class="c">/**</span>
<span class="c">	 * Définit l'opérateur de l'opération</span>
<span class="c">	 * @param operateur</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">setOperateur</span><span class="o">(</span><span class="n">String</span> <span class="n">operateur</span><span class="o">);</span>
	<span class="c">/**</span>
<span class="c">	 * Définit le nombre à utiliser pour l'opération</span>
<span class="c">	 * @param nbre</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">setNombre</span><span class="o">(</span><span class="n">String</span> <span class="n">nbre</span><span class="o">)</span> <span class="o">;</span>
	
	
	<span class="c">//**************************************************</span>
	<span class="c">//		   IMPLÉMENTATION PATTERN OBSERVER</span>
	<span class="c">//**************************************************</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addObserver</span><span class="o">(</span><span class="n">Observer</span> <span class="n">obs</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">listObserver</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">obs</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">notifyObserver</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">matches</span><span class="o">(</span><span class="s">"^0[0-9]+"</span><span class="o">))</span>
			<span class="n">str</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
		
		<span class="k">for</span><span class="o">(</span><span class="n">Observer</span> <span class="n">obs</span> <span class="o">:</span> <span class="n">listObserver</span><span class="o">)</span>
			<span class="n">obs</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">removeObserver</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">listObserver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Observer</span><span class="o">&gt;();</span>
	<span class="o">}</span>

	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ce code est clair et simple à comprendre ; maintenant, nous allons créer une classe concrète héritant de <strong><span class="violet"><span class="courrier">AbstractModel</span></span></strong>.<br>
<br>
Voici la classe concrète que j'ai créée. <br>
<br>
<h4><span class="souligne">Calculator.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">model</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sdz.observer.Observable</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Calculator</span> <span class="kd">extends</span> <span class="n">AbstractModel</span><span class="o">{</span>
	
	<span class="c">//**************************************************</span>
	<span class="c">//				MÉTHODES DE CLASSES</span>
	<span class="c">//**************************************************</span>
	<span class="c">/**</span>
<span class="c">	 * Définit l'opérateur</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setOperateur</span><span class="o">(</span><span class="n">String</span> <span class="n">ope</span><span class="o">){</span>
		
		<span class="c">//On lance le calcul</span>
		<span class="n">calcul</span><span class="o">();</span>
		
		<span class="c">//On stocke l'opérateur</span>
		<span class="k">this</span><span class="o">.</span><span class="na">operateur</span> <span class="o">=</span> <span class="n">ope</span><span class="o">;</span>
		
		<span class="c">//Si l'opérateur n'est pas =</span>
		<span class="k">if</span><span class="o">(!</span><span class="n">ope</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"="</span><span class="o">)){</span>
			<span class="c">//On réinitialise l'opérande</span>
			<span class="k">this</span><span class="o">.</span><span class="na">operande</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Définit le nombre</span>
<span class="c">	 * @param result</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNombre</span><span class="o">(</span><span class="n">String</span> <span class="n">result</span><span class="o">){</span>
		<span class="c">//On concatène le nombre </span>
		<span class="k">this</span><span class="o">.</span><span class="na">operande</span> <span class="o">+=</span> <span class="n">result</span><span class="o">;</span>
		<span class="c">//On met à jour </span>
		<span class="n">notifyObserver</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operande</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Force le calcul</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">getResultat</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">calcul</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Réinitialise tout</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">reset</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">result</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">operande</span> <span class="o">=</span> <span class="s">"0"</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">operateur</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
		<span class="c">//Mis à jour !</span>
		<span class="n">notifyObserver</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">result</span><span class="o">));</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Calcul</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">calcul</span><span class="o">(){</span>
		<span class="c">//S'il n'y a pas d'opérateur, le résultat est le nombre saisi</span>
		<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operateur</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)){</span>
			<span class="k">this</span><span class="o">.</span><span class="na">result</span> <span class="o">=</span> <span class="n">Double</span><span class="o">.</span><span class="na">parseDouble</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operande</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="c">//Si l'opérande n'est pas vide, on calcule avec l'opérateur de calcul </span>
			<span class="k">if</span><span class="o">(!</span><span class="k">this</span><span class="o">.</span><span class="na">operande</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)){</span>
				
				<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operateur</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"+"</span><span class="o">)){</span>
					<span class="k">this</span><span class="o">.</span><span class="na">result</span> <span class="o">+=</span> <span class="n">Double</span><span class="o">.</span><span class="na">parseDouble</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operande</span><span class="o">);</span>
				<span class="o">}</span>
				<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operateur</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"-"</span><span class="o">)){</span>
					<span class="k">this</span><span class="o">.</span><span class="na">result</span> <span class="o">-=</span> <span class="n">Double</span><span class="o">.</span><span class="na">parseDouble</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operande</span><span class="o">);</span>
				<span class="o">}</span>
				<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operateur</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"*"</span><span class="o">)){</span>
					<span class="k">this</span><span class="o">.</span><span class="na">result</span> <span class="o">*=</span> <span class="n">Double</span><span class="o">.</span><span class="na">parseDouble</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operande</span><span class="o">);</span>
				<span class="o">}</span>
					
				<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operateur</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"/"</span><span class="o">)){</span>
					<span class="k">try</span><span class="o">{</span>
						<span class="k">this</span><span class="o">.</span><span class="na">result</span> <span class="o">/=</span> <span class="n">Double</span><span class="o">.</span><span class="na">parseDouble</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operande</span><span class="o">);</span>
					<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="n">ArithmeticException</span> <span class="n">e</span><span class="o">){</span>
						<span class="k">this</span><span class="o">.</span><span class="na">result</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
					<span class="o">}</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="k">this</span><span class="o">.</span><span class="na">operande</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
		<span class="c">//On lance aussi la mise à jour !</span>
		<span class="n">notifyObserver</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">result</span><span class="o">));</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous ne devriez avoir aucun souci à comprendre ce code, sinon, retournez faire un tour dans <a href="http://www.siteduzero.com/tuto-3-1999-0-programmation-en-java.html#part_8857">la partie 3 du tutoriel !</a><br>
<br>
Voilà, notre modèle est prêt à l'emploi !<br>
Nous allons donc continuer à créer les composants de ce pattern... <img src="./java_files/hihi.png" alt="^^" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65560">Le contrôleur</h2>
		<div class="ss_part_texte">
		Celui-ci sera chargé de faire le lien entre notre vue et notre modèle.<br>
Pour la même raison que pour le modèle : <strong>polymorphisme !</strong> Nous créerons aussi une classe abstraite afin de définir un super-type de variable pour, au cas où, utiliser des contrôleurs de façon polymorphe...<br>
<br>
Que doit faire notre contrôleur, ici ?<br>
C'est lui qui va intercepter les actions utilisateur, qui va modeler les données et les envoyer au modèle !<br>
Il devra donc : <br>
<ul>
<li>agir lors d'un clic sur un chiffre ;</li>
<li>agir aussi lors du clic sur un opérateur ;</li>
<li>avertir le modèle pour qu'il se réinitialise dans le cas d'un clic sur le bouton 'reset' ;</li>
<li>contrôler les données !</li>
</ul><br>
<br>
Voilà donc notre liste de méthodes pour cet objet. Cependant, vu que notre contrôleur doit interagir avec le modèle, celui-ci devra avoir une instance de notre modèle !<br>
<br>
Voici donc le code source de notre super-classe de contrôle.<br>
<br>
<h4><span class="souligne">AbstractControler.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">controler</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sdz.model.AbstractModel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">AbstractControler</span> <span class="o">{</span>
	
	<span class="kd">protected</span> <span class="n">AbstractModel</span> <span class="n">calc</span><span class="o">;</span>
	<span class="kd">protected</span> <span class="n">String</span> <span class="n">operateur</span> <span class="o">=</span> <span class="s">""</span><span class="o">,</span> <span class="n">nbre</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
	<span class="kd">protected</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">listOperateur</span> <span class="o">=</span>  <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
	
	<span class="kd">public</span> <span class="nf">AbstractControler</span><span class="o">(</span><span class="n">AbstractModel</span> <span class="n">cal</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">calc</span> <span class="o">=</span> <span class="n">cal</span><span class="o">;</span>
		<span class="c">//On définit la liste des opérateurs afin d'être sûr qu'ils soient bons</span>
		<span class="k">this</span><span class="o">.</span><span class="na">listOperateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"+"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">listOperateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"-"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">listOperateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"*"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">listOperateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"/"</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">listOperateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"="</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Définit l'opérateur</span>
<span class="c">	 * @param ope</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setOperateur</span><span class="o">(</span><span class="n">String</span> <span class="n">ope</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">operateur</span> <span class="o">=</span> <span class="n">ope</span><span class="o">;</span>
		<span class="n">control</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Définit le nombre</span>
<span class="c">	 * @param nombre</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNombre</span><span class="o">(</span><span class="n">String</span> <span class="n">nombre</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">nbre</span> <span class="o">=</span> <span class="n">nombre</span><span class="o">;</span>
		<span class="n">control</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Efface</span>
<span class="c">	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">reset</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">calc</span><span class="o">.</span><span class="na">reset</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="c">/**</span>
<span class="c">	 * Méthode de contrôle</span>
<span class="c">	 */</span>
	<span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">control</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Nous avons défini les actions globales à notre objet de contrôle et vous constatez aussi qu'à chaque action dans notre contrôleur, celui-ci invoque la méthode <span class="code2 java"><span class="n">control</span><span class="o">()</span>
</span>.<br>
Celle-ci va vérifier les données et informer le modèle en conséquence.<br>
<br>
Nous allons voir maintenant ce que doit faire notre instance concrète.<br>
Voici donc, sans plus tarder, notre classe.<br>
<br>
<h4><span class="souligne">CalculetteControler.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">controler</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sdz.model.AbstractModel</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CalculetteControler</span> <span class="kd">extends</span> <span class="n">AbstractControler</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="nf">CalculetteControler</span><span class="o">(</span><span class="n">AbstractModel</span> <span class="n">cal</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">cal</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kt">void</span> <span class="nf">control</span><span class="o">()</span> <span class="o">{</span>
		<span class="c">//On notifie le modèle d'une action si le contrôle est bon</span>
		<span class="c">//--------------------------------------------------------</span>
		
		<span class="c">//Si l'opérateur est dans la liste</span>
		<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">listOperateur</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operateur</span><span class="o">)){</span>
			<span class="c">//Si l'opérateur est =</span>
			<span class="c">//On informe le modèle d'afficher le résultat</span>
			<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operateur</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"="</span><span class="o">))</span>
				<span class="k">this</span><span class="o">.</span><span class="na">calc</span><span class="o">.</span><span class="na">getResultat</span><span class="o">();</span>
			<span class="c">//Sinon, on passe l'opérateur au modèle</span>
			<span class="k">else</span>
				<span class="k">this</span><span class="o">.</span><span class="na">calc</span><span class="o">.</span><span class="na">setOperateur</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">operateur</span><span class="o">);</span>
		<span class="o">}</span>

		<span class="c">//Si le nombre est conforme</span>
		<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">nbre</span><span class="o">.</span><span class="na">matches</span><span class="o">(</span><span class="s">"^[0-9.]+$"</span><span class="o">)){</span>
			<span class="k">this</span><span class="o">.</span><span class="na">calc</span><span class="o">.</span><span class="na">setNombre</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">nbre</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">this</span><span class="o">.</span><span class="na">operateur</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">nbre</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous pouvez voir que celle-ci redéfinit la méthode <span class="code2 java"><span class="n">control</span><span class="o">()</span>
</span> et qu'elle permet de dire quelles informations envoyer à notre modèle ! Celui-ci mis à jour, les données à afficher dans la vue seront envoyées via l'implémentation du pattern observer entre notre modèle et notre vue. <br>
D'ailleurs, il ne nous manque plus qu'elle. <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
Donc, allons-y !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65557">La vue</h2>
		<div class="ss_part_texte">
		Voici le plus facile à développer et celui que vous devez maîtriser le mieux... <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Nous allons créer celui-ci avec le package <span class="code2 java"><span class="n">javax</span><span class="o">.</span><span class="na">swing</span>
</span>. Vous devriez maintenant avoir l'habitude de créer des IHM, mais si vous ne voulez pas répéter ce que vous avez déjà fait, vous pouvez récupérer mon code d'IHM de calculatrice dans le <a href="http://www.siteduzero.com/tuto-3-28540-1-tp-une-calculatrice.html#ss_part_3">TP correspondant</a>.<br>
Il va de soi que, vu que les traitements sont tous dans cette classe, nous allons enlever un grand nombre de classes internes !<br>
<br>
Je vous donne donc le code source de notre classe que j'ai mis dans le package <span class="code2 java"><span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">vue</span>
</span>.<br>
<br>
<h4><span class="souligne">Calculette.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">vue</span><span class="o">;</span>


<span class="kn">import</span> <span class="nn">java.awt.BorderLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.event.ActionListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.swing.BorderFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JButton</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JFrame</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.SwingConstants</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.sdz.controler.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.observer.Observer</span><span class="o">;</span>
 
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Calculette</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="kd">implements</span> <span class="n">Observer</span><span class="o">{</span>
 
        <span class="kd">private</span> <span class="n">JPanel</span> <span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
        
        <span class="n">String</span><span class="o">[]</span> <span class="n">tab_string</span> <span class="o">=</span> <span class="o">{</span><span class="s">"1"</span><span class="o">,</span> <span class="s">"2"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">,</span> <span class="s">"4"</span><span class="o">,</span> <span class="s">"5"</span><span class="o">,</span> <span class="s">"6"</span><span class="o">,</span> <span class="s">"7"</span><span class="o">,</span> <span class="s">"8"</span><span class="o">,</span> <span class="s">"9"</span><span class="o">,</span> <span class="s">"0"</span><span class="o">,</span> <span class="s">"."</span><span class="o">,</span> <span class="s">"="</span><span class="o">,</span> <span class="s">"C"</span><span class="o">,</span> <span class="s">"+"</span><span class="o">,</span> <span class="s">"-"</span><span class="o">,</span> <span class="s">"*"</span><span class="o">,</span> <span class="s">"/"</span><span class="o">};</span>
        <span class="n">JButton</span><span class="o">[]</span> <span class="n">tab_button</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">[</span><span class="n">tab_string</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        
        <span class="kd">private</span> <span class="n">JLabel</span> <span class="n">ecran</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">();</span>
        <span class="kd">private</span> <span class="n">Dimension</span> <span class="n">dim</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">50</span><span class="o">,</span> <span class="mi">40</span><span class="o">);</span>
        <span class="kd">private</span> <span class="n">Dimension</span> <span class="n">dim2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">50</span><span class="o">,</span> <span class="mi">31</span><span class="o">);</span>
        <span class="kd">private</span> <span class="kt">double</span> <span class="n">chiffre1</span><span class="o">;</span>
        <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">clicOperateur</span> <span class="o">=</span> <span class="kc">false</span><span class="o">,</span> <span class="n">update</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="kd">private</span> <span class="n">String</span> <span class="n">operateur</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        
        <span class="c">//Notre instance de notre objet contrôleur</span>
        <span class="kd">private</span> <span class="n">AbstractControler</span> <span class="n">controler</span><span class="o">;</span>
        
        <span class="kd">public</span> <span class="nf">Calculette</span><span class="o">(</span><span class="n">AbstractControler</span> <span class="n">controler</span><span class="o">){</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">240</span><span class="o">,</span> <span class="mi">260</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Calculette"</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setDefaultCloseOperation</span><span class="o">(</span><span class="n">JFrame</span><span class="o">.</span><span class="na">EXIT_ON_CLOSE</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                <span class="n">initComposant</span><span class="o">();</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">controler</span> <span class="o">=</span> <span class="n">controler</span><span class="o">;</span>
                
                <span class="k">this</span><span class="o">.</span><span class="na">setContentPane</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initComposant</span><span class="o">(){</span>

                <span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"Arial"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
                <span class="n">ecran</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(</span><span class="s">"0"</span><span class="o">);</span>
                <span class="n">ecran</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
                <span class="n">ecran</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">RIGHT</span><span class="o">);</span>
                <span class="n">ecran</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">220</span><span class="o">,</span> <span class="mi">20</span><span class="o">));</span>
                
                <span class="n">JPanel</span> <span class="n">operateur</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>        
                <span class="n">operateur</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">55</span><span class="o">,</span> <span class="mi">225</span><span class="o">));</span>
                <span class="n">JPanel</span> <span class="n">chiffre</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
                <span class="n">chiffre</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">165</span><span class="o">,</span> <span class="mi">225</span><span class="o">));</span>
                <span class="n">JPanel</span> <span class="n">panEcran</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">();</span>
                <span class="n">panEcran</span><span class="o">.</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="k">new</span> <span class="n">Dimension</span><span class="o">(</span><span class="mi">220</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
                
                <span class="c">//Nous utiliserons le même listener pour tous les opérateurs</span>
                <span class="n">OperateurListener</span> <span class="n">opeListener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OperateurListener</span><span class="o">();</span>
                
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">tab_string</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
                <span class="o">{</span>
                    
                    <span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JButton</span><span class="o">(</span><span class="n">tab_string</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    <span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="n">dim</span><span class="o">);</span>
                    
                    <span class="k">switch</span><span class="o">(</span><span class="n">i</span><span class="o">){</span>
	                
                    	<span class="k">case</span> <span class="mi">11</span> <span class="o">:</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">opeListener</span><span class="o">);</span>
                    		<span class="n">chiffre</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    		<span class="k">break</span><span class="o">;</span>
                    	<span class="k">case</span> <span class="mi">12</span> <span class="o">:</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
	                        <span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ResetListener</span><span class="o">());</span>
	                        <span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="n">dim2</span><span class="o">);</span>
	                        <span class="n">operateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    		<span class="k">break</span><span class="o">;</span>
                    	<span class="k">case</span> <span class="mi">13</span> <span class="o">:</span>
                    	<span class="k">case</span> <span class="mi">14</span> <span class="o">:</span>
                    	<span class="k">case</span> <span class="mi">15</span> <span class="o">:</span>
                    	<span class="k">case</span> <span class="mi">16</span> <span class="o">:</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setForeground</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">red</span><span class="o">);</span>
	                        <span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">addActionListener</span><span class="o">(</span><span class="n">opeListener</span><span class="o">);</span>
	                        <span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">setPreferredSize</span><span class="o">(</span><span class="n">dim2</span><span class="o">);</span>
	                        <span class="n">operateur</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    		<span class="k">break</span><span class="o">;</span>
                    	<span class="k">default</span> <span class="o">:</span>
                    		<span class="n">chiffre</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                    		<span class="n">tab_button</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ChiffreListener</span><span class="o">());</span>
                    		<span class="k">break</span><span class="o">;</span>                    	
                    <span class="o">}</span>                    
                <span class="o">}</span>                
                <span class="n">panEcran</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">ecran</span><span class="o">);</span>
                <span class="n">panEcran</span><span class="o">.</span><span class="na">setBorder</span><span class="o">(</span><span class="n">BorderFactory</span><span class="o">.</span><span class="na">createLineBorder</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">black</span><span class="o">));</span>
 
                <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">panEcran</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">NORTH</span><span class="o">);</span>
                <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">chiffre</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
                <span class="n">container</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">operateur</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">EAST</span><span class="o">);</span>                
        <span class="o">}</span>
        
        
        
        <span class="c">//**********************************************</span>
        <span class="c">//			LES LISTENERS POUR NOS BOUTONS</span>
        <span class="c">//**********************************************</span>
        <span class="kd">class</span> <span class="nc">ChiffreListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span> 
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c">//On affiche le chiffre en plus dans le label                      </span>
                	<span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="o">((</span><span class="n">JButton</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">();</span>                        
                    <span class="k">if</span><span class="o">(!</span><span class="n">ecran</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"0"</span><span class="o">))</span>
                        <span class="n">str</span> <span class="o">=</span> <span class="n">ecran</span><span class="o">.</span><span class="na">getText</span><span class="o">()</span> <span class="o">+</span> <span class="n">str</span><span class="o">;</span>
                    
                    <span class="n">controler</span><span class="o">.</span><span class="na">setNombre</span><span class="o">(((</span><span class="n">JButton</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">());</span>
                <span class="o">}</span>                
        <span class="o">}</span>
 
        <span class="kd">class</span> <span class="nc">OperateurListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">controler</span><span class="o">.</span><span class="na">setOperateur</span><span class="o">(((</span><span class="n">JButton</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">getSource</span><span class="o">()).</span><span class="na">getText</span><span class="o">());</span>
			<span class="o">}</span>        	
        <span class="o">}</span>
        
        <span class="kd">class</span> <span class="nc">ResetListener</span> <span class="kd">implements</span> <span class="n">ActionListener</span><span class="o">{</span>
            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">arg0</span><span class="o">)</span> <span class="o">{</span>
            	<span class="n">controler</span><span class="o">.</span><span class="na">reset</span><span class="o">();</span>
            <span class="o">}</span>               
        <span class="o">}</span>
        
        
        
        <span class="c">//************************************************</span>
        <span class="c">//		IMPLEMENTATION DU PATTERN OBSERVER</span>
        <span class="c">//************************************************</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">update</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
		<span class="o">}</span>  
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Vous devez être à même de comprendre ce code vu qu'il ressemble beaucoup à notre calculette faite dans le TP de la partie 3... <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Il y a une nouveauté toutefois, une instance de notre contrôleur ! Celui-ci, je le rappelle, sera la strategy de notre vue...<br>
Notre classe devra donc inclure une instance de notre implémentation du pattern strategy : vous pouvez voir celle-ci juste avant le constructeur de notre classe.<br>
<br>
Voilà, toutes nos classes sont opérationnelles.<br>
Il ne nous manque plus qu'une classe de test afin de voir le résultat...<br>
La voici :<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">com.sdz.controler.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.model.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.vue.Calculette</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c">//Instanciation de notre modèle</span>
		<span class="n">AbstractModel</span> <span class="n">calc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Calculator</span><span class="o">();</span>
		<span class="c">//création du contrôleur</span>
		<span class="n">AbstractControler</span> <span class="n">controler</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CalculetteControler</span><span class="o">(</span><span class="n">calc</span><span class="o">);</span>
		<span class="c">//Création de notre fenêtre avec le contrôleur en paramètre</span>
		<span class="n">Calculette</span> <span class="n">calculette</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Calculette</span><span class="o">(</span><span class="n">controler</span><span class="o">);</span>
		<span class="c">//Ajout de la fenêtre comme observer de notre modèle</span>
		<span class="n">calc</span><span class="o">.</span><span class="na">addObserver</span><span class="o">(</span><span class="n">calculette</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Testez ce code et le tout fonctionne très bien ! <br>
Tous nos objets sont inter-connectés et dialoguent facilement. <br>
<br>
<div class="centre"><img src="./java_files/131201.jpg" alt="Image utilisateur"></div><br>
<br>
Vu que vous connaissez la façon de travailler de ce pattern, nous allons décortiquer ce qu'il se passe.<br>
<br>
<h4><span class="souligne">Lorsque vous cliquez sur un chiffre</span></h4><br>
<ul>
<li>L'action est envoyée au contrôleur.</li>
<li>Celui-ci vérifie si le chiffre est conforme.</li>
<li>Il informe le modèle.</li>
<li>Celui-ci est mis à jour et informe la vue de ses changements.</li>
<li>Celle-ci rafraîchit son affichage.</li>
</ul><br>
<br>
<h4><span class="souligne">Lorsque vous cliquez sur un opérateur</span></h4><br>
<ul>
<li>L'action est toujours envoyée au contrôleur.</li>
<li>Celui-ci vérifie si l'opérateur envoyé est dans sa liste.</li>
<li>Le cas échéant, il informe le modèle.</li>
<li>Celui-ci agit en conséquence et informe la vue de son changement.</li>
<li>La vue est mise à jour...</li>
</ul><br>
<br>
La même chose se passe lorsque nous cliquerons sur le bouton "<strong><span class="arial">reset</span></strong>".<br>
<br>
Voilà une bonne chose de faite ! <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<div class="rmq question">Nous aurions très bien pu faire la même chose sans le contrôleur !</div><br>
Oui, bien sûr. Même sans modèle !<br>
Rappelez-vous du pourquoi de l'existence des DP : <strong>prévenir des modifications de codes !</strong><br>
<br>
Avec une telle architecture, vous pourrez modifier indépendamment l'un des trois composants de ce pattern.<br>
<br>
Si vous ne voulez plus de nombres à virgules à l'affichage mais uniquement des entiers, vous pouvez créer un autre modèle qui ne travaille que sur des entiers !<br>
De même, si vous voulez bloquer certains chiffres ou certains opérateurs, il vous suffit de coder une autre classe héritant de <strong><span class="violet"><span class="courrier">AbstractControler</span></span></strong> qui, elle, ne laissera pas passer tel ou tel choix utilisateur !<br>
Je ne vous donne pas d'exemple pour la vue, nous avons déjà abordé cela dans le chapitre sur le pattern observer. <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Oh et puis si, tenez ! C'est encore un des exemples les plus simples qu'on puisse faire...<br>
<br>
Au lieu de gérer l'affichage dans notre classe <strong><span class="violet"><span class="courrier">Calculette</span></span></strong>, nous allons créer une classe <strong><span class="courrier"><span class="violet">Ecran</span></span></strong>, toujours dans notre package <span class="code2 java"><span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">vue</span>
</span>, dans laquelle nous allons afficher tout ce que nous renvoie le modèle !<br>
<br>
Voici cette classe.<br>
<br>
<h4><span class="souligne">Ecran.java</span></h4><br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">vue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.swing.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.observer.Observer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Ecran</span> <span class="kd">extends</span> <span class="n">JFrame</span> <span class="kd">implements</span> <span class="n">Observer</span><span class="o">{</span>

	<span class="kd">private</span> <span class="n">JLabel</span> <span class="n">ecran</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">();</span>
	
	<span class="kd">public</span> <span class="nf">Ecran</span><span class="o">(</span><span class="n">Component</span> <span class="n">c</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">300</span><span class="o">,</span> <span class="mi">100</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setLocationRelativeTo</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
		
		<span class="n">Font</span> <span class="n">police</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Font</span><span class="o">(</span><span class="s">"DS-digital"</span><span class="o">,</span> <span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">ecran</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">police</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">ecran</span><span class="o">.</span><span class="na">setHorizontalAlignment</span><span class="o">(</span><span class="n">JLabel</span><span class="o">.</span><span class="na">RIGHT</span><span class="o">);</span>
		<span class="k">this</span><span class="o">.</span><span class="na">getContentPane</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">ecran</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>
		
		<span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">update</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">ecran</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et voici notre nouveau code de test : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="syntax"><pre><span class="kn">import</span> <span class="nn">com.sdz.controler.AbstractControler</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.controler.CalculetteControler</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.model.AbstractModel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.model.Calculator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.vue.Calculette</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.sdz.vue.Ecran</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="n">AbstractModel</span> <span class="n">calc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Calculator</span><span class="o">();</span>		
		<span class="n">AbstractControler</span> <span class="n">controler</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CalculetteControler</span><span class="o">(</span><span class="n">calc</span><span class="o">);</span>		
		<span class="n">Calculette</span> <span class="n">calculette</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Calculette</span><span class="o">(</span><span class="n">controler</span><span class="o">);</span>
		
		<span class="c">//On crée notre Ecran</span>
		<span class="n">Ecran</span> <span class="n">ecran</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Ecran</span><span class="o">(</span><span class="n">calculette</span><span class="o">);</span>
		<span class="c">//On informe que c'est l'instance d'écran qui écoutera notre modèle</span>
		<span class="n">calc</span><span class="o">.</span><span class="na">addObserver</span><span class="o">(</span><span class="n">ecran</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Et le résultat : <br>
<br>
<div class="centre"><img src="./java_files/131202.jpg" alt="Image utilisateur"></div><br>
<br>
Vous pouvez aussi séparer les chiffres des opérateurs... Enfin, faire ce que vous voulez, quoi...<br>
<br>
Avant de terminer ce chapitre, vous devez savoir encore quelques choses...<br>
Ce pattern est aussi utilisé lorsque vous développez avec la plateforme J<acronym title="Java 5 Enterprise Edition">EE</acronym> et, pour être tout à fait honnête, il en est même le principe de base !
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65555">MVC pour le web : le pattern M2VC</h2>
		<div class="ss_part_texte">
		Si vous vous rappelez le schéma dont je me suis servi dans le chapitre sur les applets, vous devriez vous souvenir du cycle de vie d'une page web ! Pour mémoire : <br>
<br>
<div class="centre"><img src="./java_files/131204.jpg" alt="Image utilisateur"></div><br>
<br>
Nous reviendrons plus en détail sur le développement web en Java, mais, pour le moment, sachez seulement que vos fichiers seront interprétés et utilisés par <strong>le serveur d'applications</strong>.<br>
<br>
Le principe de fonctionnement pour le couple JSP - Servlet est le suivant : <br>
<br>
<div class="centre"><img src="./java_files/131206.jpg" alt="Image utilisateur"></div><br>
<br>
Le schéma est assez explicite.<br>
Vous pouvez voir que les servlets ont le rôle de contrôleurs, les JSP sont les vues et les objets métiers correspondent à votre modèle !<br>
Cependant, un problème pouvait se poser.<br>
<br>
En effet, dans certaines boîtes de développement, les tâches sont réparties entre plusieurs développeurs : <br>
<ul>
<li>certains seront chargés de développer les objets métiers ;</li>
<li>d'autres s'occuperont des servlets ;</li>
<li>et enfin, une troisième équipe sera en charge des vues.</li>
</ul><br>
<br>
Seulement voilà, les développeurs en charge des vues ne sont peut-être pas des développeurs Java ! Or, avec l'implémentation du pattern MVC vue ci-dessus, il n'était pas rare de trouver des portions de codes Java dans vos pages JSP...<br>
<br>
Un peu comme ceci : <br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="syntax"><pre><span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">body</span><span class="o">&gt;</span>
    <span class="o">&lt;%</span>
      <span class="n">String</span><span class="o">[]</span> <span class="n">langage</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Java"</span><span class="o">,</span> <span class="s">"C++"</span><span class="o">,</span> <span class="s">"C#"</span><span class="o">,</span> <span class="s">"PHP"</span><span class="o">};</span>
      <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;p&gt;Langage de programmtion :"</span><span class="o">);</span>
      <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;ul&gt;"</span><span class="o">);</span>
      <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">langage</span><span class="o">)</span>
        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;li&gt;"</span> <span class="o">+</span> <span class="n">str</span> <span class="o">+</span> <span class="s">"&lt;/li&gt;"</span><span class="o">);</span>

      <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;/ul&gt;"</span><span class="o">);</span>
      <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;/p&gt;"</span><span class="o">);</span>
    <span class="o">%&gt;</span>
  <span class="o">&lt;/</span><span class="n">body</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="n">html</span><span class="o">&gt;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<div class="rmq information">Le but de ce chapitre n'étant pas le développement web en Java, je n'expliciterai pas plus ce code ainsi que les suivants. Une partie sera consacrée à cet effet !</div><br>
<br>
Ceci pouvait être dérangeant dans la mesure où un développeur web n'a peut-être pas les connaissances requises pour inclure des portions de code Java dans les pages !<br>
C'est à ce niveau que le pattern <acronym title="Modèle 2, Vue, Contrôleur"> M2VC</acronym> entre en jeu !<br>
<br>
Le principe de celui-ci est de pouvoir appliquer le pattern MVC et de séparer les tâches de développement. Ainsi, un développeur web n'a plus qu'à insérer des tags (balises JSP) spécifiés par les développeurs des autres couches applicatives.<br>
<br>
En gros, la servlet va communiquer un objet (bean) à la page JSP afin que celle-ci puisse utiliser les informations de ce dernier. Ainsi, le développeur web n'a plus qu'à utiliser une balise propre aux JSP pour afficher le contenu souhaité. Voici un exemple illustrant mes propos : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="o">&lt;%</span><span class="nl">jsp:</span><span class="n">useBean</span> <span class="n">id</span><span class="o">=</span><span class="s">"compteur"</span> <span class="n">class</span><span class="o">=</span><span class="s">"Counter"</span> <span class="n">scope</span><span class="o">=</span><span class="s">"session"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">body</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
       <span class="n">Affichage</span> <span class="n">de</span> <span class="n">l</span>'<span class="n">attribut</span> <span class="s">"total"</span> <span class="n">de</span> <span class="n">l</span>'<span class="n">objet</span> <span class="o">:</span> <span class="o">&lt;</span><span class="nl">jsp:</span><span class="n">getProperty</span> <span class="n">name</span><span class="o">=</span><span class="s">"compteur"</span> <span class="n">property</span><span class="o">=</span><span class="s">"total"</span> <span class="o">/&gt;</span> <span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
   <span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>    
  <span class="o">&lt;/</span><span class="n">body</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="n">html</span><span class="o">&gt;</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Ainsi, les développeurs web n'ont plus à connaître le langage Java, juste à savoir récupérer les informations que leur transmettent les autres couches applicatives !<br>
Le modèle, dans cette architecture, n'avertit plus seulement les vues d'un changement d'état, mais elle leur fournit un ou plusieurs objets pouvant répondre à leurs demandes.<br>
<br>
Avant de vous envoyer sur le topo habituel, vous devez savoir encore une petite chose.<br>
Dans le schéma que je vous ai fourni au début de chapitre, le contrôleur passe des informations au modèle. Mais vous pourrez peut-être voir que, parfois, <strong>le contrôleur fait partie des observateurs du modèle... </strong><br>
<br>
Maintenant, nous pouvons voir le topo ! <img src="./java_files/smile.png" alt=":)" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65553">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Le pattern MVC est un pattern composé.</li>
<li>Celui-ci est composé du pattern observer et du pattern strategy.</li>
<li>L'implémentation du pattern observer permet au modèle de tenir informés ses observateurs.</li>
<li>L'implémentation du pattern strategy permet à la vue d'avoir des contrôles différents.</li>
<li>Utiliser ce pattern permet de découpler trois acteurs d'une application, ce qui permet plus de souplesse et de maintenabilité dans la durée de vie de celle-ci.</li>
<li>Pour la conception d'applications web, on utilise le pattern M2VC.</li>
</ul><br>
<br>
Toutefois, je mets aussi un bémol à ce pattern. Bien qu'il soit très utile grâce à ses avantages à long terme.<br>
Cependant, vous avez pu constater que <strong><span class="rouge">celui-ci complique grandement votre architecture !</span></strong>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	Un chapitre très riche en informations.<br>
<br>
Il faut toutefois que vous sachiez qu'il y a encore un pattern, caché, dans l'implémentation de MVC. En soit, il n'est pas vraiment dans les classes que vous avez programmées, mais plutôt dans le langage Java !<br>
<br>
En effet, vous ne le savez sûrement pas, mais vos composants <strong><span class="violet"><span class="courrier">swing</span></span></strong>, comme <strong><span class="violet"><span class="courrier">AWT</span></span></strong>, utilisent un pattern afin de coexister. <br>
Du coup, lorsque vous utilisez une de ces deux bibliothèques, vous utilisez de façon tacite ce pattern.<br>
<br>
Je vous propose donc de voir comment fonctionne <strong><span class="orange">le pattern composite</span></strong>.
	</div>
	
	<hr>
	<h1 id="chap_65554">Un véritable assemblage : le pattern composite</h1>
	<div id="chap_intro">
	Comme je vous l'ai dit à la fin du précédent chapitre, la façon dont Java gère les composants de vos IHM est particulier et c'est le meilleur exemple d'utilisation du pattern composite que je puisse vous donner !<br>
<br>
Le but principal de ce pattern est de définir une structure hiérarchique pour un ensemble de données et ceci de façon transparente pour l'utilisateur !<br>
Je me doute bien que ce baratin ne vous parle pas trop... Mais vous allez comprendre !<br>

	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65565">Creusez-vous les méninges</h2>
		<div class="ss_part_texte">
		Comme d'habitude, nous allons avoir un petit cas pratique.<br>
Le problème est simple, nous allons voir comment décortiquer la hiérarchie d'un forum avec ce pattern !<br>
Vous avez un forum qui est composé : <br>
<ul>
<li>de plusieurs thèmes (au choix) ;</li>
<li>chaque thème sera composé de plusieurs salons ;</li>
<li>chaque salon sera composé d'un ou plusieurs topics ;</li>
<li>et enfin, chaque topic aura un ou plusieurs messages.</li>
</ul><br>
<br>
Le but du jeu est de réussir à créer un ensemble d'objets interagissant ensemble et que, lorsque vous invoquez la méthode <span class="code2 java"><span class="n">afficher</span>
</span> de l'objet <strong><span class="violet"><span class="courrier">Forum</span></span></strong>, celle-ci affiche tout le contenu de votre forum !<br>
Vous pouvez ajouter des éléments à d'autres avec une méthode <span class="code2 java"><span class="n">add</span><span class="o">()</span>
</span> et, si vous voyez d'autres fonctionnalités à implémenter, allez-y.<br>
<br>
Je ne vous donne pas de solution, mais voici les classes que je vais utiliser : <br>
<br>
<div class="centre"><img src="./java_files/137838.png" alt="Image utilisateur"></div><br>
<br>
<div class="rmq information">La hiérarchie des ces objets est à définir par vous et vous seuls ! </div><br>
Non je rigole, vous pouvez vous y mettre à plusieurs. <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
<br>
Vous pouvez donc faire ce que vous voulez avec ces objets : <br>
<ul>
<li>créer un objet mère ;</li>
<li>faire de l'héritage ;</li>
<li>tout changer ;</li>
<li>tout créer.</li>
</ul><br>
<br>
Seul le nom des classes doit être respecté. De même, il doit y avoir une cohérence entre vos objets... Par là, entendez que les <strong><span class="violet"><span class="courrier">Salon</span></span></strong> ne contiendront pas de <strong><span class="violet"><span class="courrier">Theme</span></span></strong>... Ceci est un exemple de cohérence mais il y a en a d'autres...<br>
<br>
<h3><strong><span class="souligne">Comment feriez-vous pour gérer ce genre de hiérarchie d'objets ? </span></strong></h3><br>
<br>
Réfléchissez à une hiérarchie de classes qui vous permette de faire tout ça !<br>
Ne vous ruez pas tout de suite vers la solution, essayez par vous-mêmes... <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65545">La solution : le pattern composite</h2>
		<div class="ss_part_texte">
		Vous pourrez peut-être trouver cette définition du pattern composite : <br>
<span class="citation">Citation : Someone</span><div class="citation2">Le pattern Composite compose des objets en arborescences.<br>
Ceci permet de représenter une ou plusieurs hiérarchies d'objets sans se soucier de savoir si un objet est composé ou non d'autres objets.<br>
</div><br>
<br>
Pour faire court, ce pattern permet de gérer très facilement des données en les structurant en hiérarchie. Voyez ça comme un <strong><span class="violet"><span class="courrier">JTree</span></span></strong> : <br>
<br>
<div class="centre"><img src="./java_files/137638.jpg" alt="Image utilisateur"></div><br>
<br>
En fait, vous pouvez avoir un objet composé d'un ou plusieurs éléments qui peuvent, eux aussi, être composés d'autres éléments, etc.<br>
<br>
Afin de simplifier la chose, imaginez une voiture. Cette dernière est composée d'un habitacle, d'un moteur, d'un bas de caisse. <br>
Mais ces éléments sont, eux aussi, composés d'autre composants. Ainsi, nous pouvons voir que :<br>
<ul>
<li>le moteur est composé d'un radiateur, d'injecteurs, d'un bloc moteur. Mais le bloc moteur est lui aussi composé de telles pièces et de telles autres...</li>
<li>le radiateur est composé de telles et telles pièces aussi...</li>
<li>les injecteurs sont des pièces... Ils ne sont pas composés !</li>
</ul><br>
On peut aller très loin dans ce type de hiérarchie... <br>
<br>
Vous voyez mieux, j'espère !<br>
<br>
Si nous en revenons à notre forum, nous pouvez voir que la structure en grappe convient très bien. Il n'y aura pas de branches mixtes, par là entendez : des branches ayant à la fois des messages et des salons (par exemple).<br>
<br>
Avant de vous fournir un exemple de code source, voici le diagramme de classe que j'ai fait pour vous : <br>
<br>
<div class="centre"><img src="./java_files/137840.png" alt="Image utilisateur"></div><br>
<br>
<div class="rmq question">On le trouve bizarre, ton diagramme !</div><br>
Je sais, les diagrammes de classes peuvent sembler indigestes... <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
Par contre, vu que vous commencez à savoir les lire, vous devriez voir que : <br>
<ul>
<li>vous avez une super-classe dont dérivent toutes les autres et dans laquelle la méthode <span class="code2 java"><span class="n">toString</span><span class="o">()</span>
</span> est définie ;</li>
<li>une classe <strong><span class="violet"><span class="courrier">Message</span></span></strong> qui hérite directement de cette super-classe ;</li>
<li>une autre classe abstraite (eh oui, la première super-classe est aussi abstraite), qui hérite de la super-classe, dans laquelle les méthodes <span class="code2 java"><span class="n">add</span><span class="o">()</span>
</span>, <span class="code2 java"><span class="n">remove</span><span class="o">()</span>
</span> et <span class="code2 java"><span class="n">getChilds</span><span class="o">()</span>
</span> sont définies ;</li>
<li>et enfin les sous-classes concrètes héritant de la classe mentionnée plus haut !</li>
</ul><br>
<br>
La sous-classe <span class="violet"><span class="courrier"><strong>ComposantForum</strong></span></span> a une variable d'instance <strong><span class="courrier">tab</span></strong> qui va contenir les composants de chaque objet !<br>
La méthode <span class="code2 java"><span class="n">toString</span><span class="o">()</span>
</span> est redéfinie au premier niveau d'héritage. <br>
<br>
Voici le diagramme de classe que j'ai réellement utilisé, ceci dû à certaines restrictions sur certains types d'objets : <br>
<br>
<div class="centre"><img src="./java_files/137873.png" alt="Image utilisateur"></div><br>
<br>
<div class="rmq question">Pourquoi avoir créé les classes <strong><span class="violet"><span class="courrier">Theme</span></span></strong> et <strong><span class="violet"><span class="courrier">Salon</span></span></strong> ?</div><br>
Tout simplement car les objets de ces deux types auront des restrictions concernant le genre d'objets dont ils sont constitués... <br>
C'est dans ces classes que nous allons pouvoir gérer les composants de nos objets ! Ainsi, nous pourrons seulement ajouter des topics dans un salon, des salons dans un thème, des thèmes dans un forum... <br>
Vous comprenez mieux, j'espère ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
<br>
Voici les codes source des classes que j'ai créées (j'ai essayé de les regrouper du haut de la hiérarchie vers le bas).<br>
<br>
<h4><span class="bleu"><span class="souligne">Classe Composant.java</span></span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Composant</span> <span class="o">{</span>
        <span class="c">//Cette variable sert seulement pour mon exemple</span>
        <span class="kd">protected</span> <span class="n">String</span> <span class="n">tabulation</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="kd">public</span> <span class="kd">abstract</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">();</span>        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="bleu"><span class="souligne">Classe Message.java</span></span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Message</span> <span class="kd">extends</span> <span class="n">Composant</span><span class="o">{</span>

        <span class="kd">private</span> <span class="n">String</span> <span class="n">message</span><span class="o">;</span>
        
        <span class="kd">public</span> <span class="nf">Message</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">message</span> <span class="o">=</span> <span class="o">(</span><span class="n">message</span><span class="o">.</span><span class="na">trim</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)</span> <span class="o">||</span> <span class="n">message</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="s">""</span> <span class="o">:</span> <span class="n">message</span><span class="o">;</span>
                <span class="k">this</span><span class="o">.</span><span class="na">tabulation</span> <span class="o">=</span> <span class="s">"\t\t"</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
                <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">tabulation</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">message</span><span class="o">;</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="bleu"><span class="souligne">Classe ComposantForum.java</span></span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">ComposantForum</span> <span class="kd">extends</span> <span class="n">Composant</span><span class="o">{</span>
        <span class="kd">protected</span> <span class="n">ArrayList</span> <span class="n">tab</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">();</span>
        <span class="kd">protected</span> <span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        
        
        <span class="kd">public</span> <span class="nf">ComposantForum</span><span class="o">(){}</span>
        <span class="kd">public</span> <span class="nf">ComposantForum</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">nom</span><span class="o">;}</span>
        
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">(</span><span class="n">Composant</span> <span class="n">comp</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">tab</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">comp</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">remove</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">tab</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="n">ArrayList</span> <span class="nf">getChilds</span><span class="o">(){</span>
                <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">tab</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">(){</span>
                <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
                <span class="n">str</span> <span class="o">+=</span> <span class="k">this</span><span class="o">.</span><span class="na">tabulation</span> <span class="o">+</span><span class="s">"+ "</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">;</span>
                <span class="k">for</span><span class="o">(</span><span class="n">Object</span> <span class="n">comp</span> <span class="o">:</span> <span class="k">this</span><span class="o">.</span><span class="na">tab</span><span class="o">){</span>
                        <span class="n">str</span> <span class="o">+=</span> <span class="k">this</span><span class="o">.</span><span class="na">tabulation</span> <span class="o">+</span> <span class="o">((</span><span class="n">Composant</span><span class="o">)</span><span class="n">comp</span><span class="o">).</span><span class="na">toString</span><span class="o">()</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">;</span> 
                <span class="o">}</span>
                <span class="k">return</span>  <span class="n">str</span><span class="o">;</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4><span class="bleu"><span class="souligne">Classes Forum.java</span></span> et <span class="bleu"><span class="souligne">Topic.java</span></span></h4> <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Forum</span> <span class="kd">extends</span> <span class="n">ComposantForum</span><span class="o">{</span>

        <span class="kd">public</span> <span class="nf">Forum</span><span class="o">(){</span>
                <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="s">"Forum"</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="nf">Forum</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">)</span> <span class="o">{</span>
                <span class="kd">super</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">(</span><span class="n">Composant</span> <span class="n">comp</span><span class="o">){</span>
                <span class="k">if</span><span class="o">((</span><span class="n">comp</span> <span class="k">instanceof</span> <span class="n">Theme</span><span class="o">))</span>
                        <span class="k">this</span><span class="o">.</span><span class="na">tab</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">comp</span><span class="o">);</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Topic</span> <span class="kd">extends</span> <span class="n">ComposantForum</span> <span class="o">{</span>        
        
        <span class="kd">public</span> <span class="nf">Topic</span><span class="o">(</span><span class="n">String</span> <span class="n">string</span><span class="o">)</span> <span class="o">{</span>
                <span class="kd">super</span><span class="o">(</span><span class="n">string</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">tabulation</span> <span class="o">+=</span> <span class="s">"\t\t"</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">(</span><span class="n">Composant</span> <span class="n">comp</span><span class="o">){</span>
                <span class="k">if</span><span class="o">((</span><span class="n">comp</span> <span class="k">instanceof</span> <span class="n">Message</span><span class="o">))</span>
                        <span class="k">this</span><span class="o">.</span><span class="na">tab</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">comp</span><span class="o">);</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
<br>
<h4><span class="bleu"><span class="souligne">Classe Salon.java</span></span> et <span class="bleu"><span class="souligne">Theme.java</span></span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Salon</span> <span class="kd">extends</span> <span class="n">ComposantForum</span><span class="o">{</span>
        <span class="kd">public</span> <span class="nf">Salon</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">)</span> <span class="o">{</span>
                <span class="kd">super</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">tabulation</span> <span class="o">+=</span> <span class="s">"\t"</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">(</span><span class="n">Composant</span> <span class="n">comp</span><span class="o">){</span>
                <span class="k">if</span><span class="o">((</span><span class="n">comp</span> <span class="k">instanceof</span> <span class="n">Topic</span><span class="o">))</span>
                        <span class="k">this</span><span class="o">.</span><span class="na">tab</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">comp</span><span class="o">);</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Theme</span> <span class="kd">extends</span> <span class="n">ComposantForum</span><span class="o">{</span>

        <span class="kd">public</span> <span class="nf">Theme</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">)</span> <span class="o">{</span>
                <span class="kd">super</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>
                <span class="k">this</span><span class="o">.</span><span class="na">tabulation</span> <span class="o">+=</span> <span class="s">"\t"</span><span class="o">;</span> 
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">(</span><span class="n">Composant</span> <span class="n">comp</span><span class="o">){</span>
                <span class="k">if</span><span class="o">((</span><span class="n">comp</span> <span class="k">instanceof</span> <span class="n">Salon</span><span class="o">))</span>
                        <span class="k">this</span><span class="o">.</span><span class="na">tab</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">comp</span><span class="o">);</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div> <br>
<br>
<h4>Classes <span class="bleu"><span class="souligne">Programmation.java</span></span> et <span class="bleu"><span class="souligne">SiteWeb.java</span></span></h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Programmation</span> <span class="kd">extends</span> <span class="n">Theme</span><span class="o">{</span>

	<span class="kd">public</span> <span class="nf">Programmation</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>
	<span class="o">}</span>	
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SiteWeb</span> <span class="kd">extends</span> <span class="n">Theme</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="nf">SiteWeb</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<h4>Classes <span class="bleu"><span class="souligne">CPlus.java</span></span>, <span class="bleu"><span class="souligne">Java.java</span></span>, <span class="bleu"><span class="souligne">Html.java</span></span>, <span class="bleu"><span class="souligne">PHP.java</span></span>...</h4><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Cplus</span> <span class="kd">extends</span> <span class="n">Salon</span><span class="o">{</span>

        <span class="kd">public</span> <span class="nf">Cplus</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">)</span> <span class="o">{</span>
                <span class="kd">super</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>
        <span class="o">}</span>
        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Html</span> <span class="kd">extends</span> <span class="n">Salon</span> <span class="o">{</span>

        <span class="kd">public</span> <span class="nf">Html</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">)</span> <span class="o">{</span>
                <span class="kd">super</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Java</span> <span class="kd">extends</span> <span class="n">Salon</span> <span class="o">{</span>
        <span class="kd">public</span> <span class="nf">Java</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">)</span> <span class="o">{</span>
                <span class="kd">super</span><span class="o">(</span><span class="n">nom</span><span class="o">);;</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Php</span> <span class="kd">extends</span> <span class="n">Salon</span> <span class="o">{</span>

        <span class="kd">public</span> <span class="nf">Php</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">)</span> <span class="o">{</span>
                <span class="kd">super</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="syntax"><pre><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">sdz</span><span class="o">.</span><span class="na">composite</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">C</span> <span class="kd">extends</span> <span class="n">Salon</span> <span class="o">{</span>

        <span class="kd">public</span> <span class="nf">C</span><span class="o">(</span><span class="n">String</span> <span class="n">nom</span><span class="o">)</span> <span class="o">{</span>
                <span class="kd">super</span><span class="o">(</span><span class="n">nom</span><span class="o">);</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
<br>
Pfiou !... Il y en a, des classes...  <img src="./java_files/blink.gif" alt="o_O" class="smilies"> <br>
Même si vous aviez bien compris comment les objets allaient se comporter entre eux, vous devez mieux comprendre avec du code sous les yeux ! <img src="./java_files/hihi.png" alt="^^" class="smilies"><br>
Maintenant, vous comprenez comment on gère l'interdiction de certains composants dans d'autres...<br>
<div class="rmq information">Dans notre cas, nous n'avons rien fait de spécial ! <br>
Mais rien ne vous empêche de faire une levée d'exception si l'utilisateur essaie d'ajouter un type d'objet prohibé !</div><br>
<br>
Vu que nous avons toutes nos classes, il est grand-temps de voir comment celles-ci se comportent...<br>
Voici un code qui permet de tester notre hiérarchie : <br>
<br>
<span class="code">Code : Java - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 java"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58</pre></td><td class="code"><div class="syntax"><pre><span class="c">//J'ai déclaré mes classes dans un autre package, d'où l'import</span>
<span class="kn">import</span> <span class="nn">com.sdz.composite.*</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>

          <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
                  <span class="c">//Création de l'objet Forum</span>
                  <span class="n">Forum</span> <span class="n">fofo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Forum</span><span class="o">();</span>
                                    
                  <span class="c">//Création d'un thème</span>
                  <span class="n">Theme</span> <span class="n">prog</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Programmation</span><span class="o">(</span><span class="s">"Thème -&gt; Programmation &lt;-"</span><span class="o">);</span>
                  <span class="c">//Ajoute du thème dans le forum</span>
                  <span class="n">fofo</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">prog</span><span class="o">);</span>
                  <span class="c">//Création d'un Salon</span>
                  <span class="n">Salon</span> <span class="n">java</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Java</span><span class="o">(</span><span class="s">"Salon : Java"</span><span class="o">);</span>
                  <span class="c">//ce salon ne s'ajoutera pas : C'EST INTERDIT</span>
                  <span class="n">fofo</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">java</span><span class="o">);</span>
                  <span class="c">//Le salon n'aura pas non plus le thème dans la collection </span>
                  <span class="n">java</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">prog</span><span class="o">);</span>
                  <span class="c">//Par contre le thème aura le salon, et vu que le forum à le thème...</span>
                  <span class="n">prog</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">java</span><span class="o">);</span>
                  
                  <span class="c">//On crée deux topic</span>
                  <span class="n">Topic</span> <span class="n">topic</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Topic</span><span class="o">(</span><span class="s">"Je vous passe le bonjour !"</span><span class="o">);</span>
                  <span class="n">Topic</span> <span class="n">topic2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Topic</span><span class="o">(</span><span class="s">"Problème de pattern !"</span><span class="o">);</span>
                  <span class="c">//On les ajoute dans le salon</span>
                  <span class="n">java</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">topic</span><span class="o">);</span>
                  <span class="n">java</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">topic2</span><span class="o">);</span>
                  
                  <span class="c">//On ajoute les message dans les topics</span>
                  <span class="n">topic</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Message</span><span class="o">(</span><span class="s">"Coucou de cysboy !"</span><span class="o">));</span>
                  <span class="n">topic</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Message</span><span class="o">(</span><span class="s">"Coucou du SDZ ! ! !"</span><span class="o">));</span>
                  <span class="n">topic</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Message</span><span class="o">(</span><span class="s">"Vous suivez toujours..."</span><span class="o">));</span>
                  
                  <span class="n">topic2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Message</span><span class="o">(</span><span class="s">"Je ne comprends pas bien le pattern composite !"</span><span class="o">));</span>
                  <span class="n">topic2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Message</span><span class="o">(</span><span class="s">"Même avec cet exemple tu ne comprends pas ?"</span><span class="o">));</span>
                  <span class="n">topic2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Message</span><span class="o">(</span><span class="s">"C'est vrai que là... On comprend beaucoup mieux"</span><span class="o">));</span>
                  
                  <span class="c">//On crée un deuxième salon</span>
                  <span class="n">Salon</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Cplus</span><span class="o">(</span><span class="s">"Salon : C++"</span><span class="o">);</span>
                  <span class="c">//On l'ajoute dans programmation</span>
                  <span class="n">prog</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
                  <span class="c">//On crée aussi un topic et on l'ajoute dans le salon</span>
                  <span class="n">Topic</span> <span class="n">topic3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Topic</span><span class="o">(</span><span class="s">"Problème de pointeur..."</span><span class="o">);</span>
                  <span class="n">c</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">topic3</span><span class="o">);</span>
                  <span class="c">//On lui ajoute des messages</span>
                  <span class="n">topic3</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Message</span><span class="o">(</span><span class="s">"Je pige rien aux pointeurs... HELP !"</span><span class="o">));</span>
                  <span class="n">topic3</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Message</span><span class="o">(</span><span class="s">"Va faire un tour sur le tuto de M@teo..."</span><span class="o">));</span>
                  <span class="n">topic3</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Message</span><span class="o">(</span><span class="s">"Ah oui !.. :p"</span><span class="o">));</span>
                  
                  <span class="c">//Le forum a donc : </span>
                  <span class="c">//         - un thème</span>
                  <span class="c">//        - deux salons</span>
                  <span class="c">//                * Java : 2 topics</span>
                  <span class="c">//                * C++ : 1 topic</span>
                  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">fofo</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                  
          <span class="o">}</span>        
<span class="o">}</span>
</pre></div>
</td></tr></tbody></table></div><br>
<br>
Voilà ce que me donne ce code : <br>
<br>
<div class="centre"><img src="./java_files/155131.png" alt="Image utilisateur"></div><br>
<br>
Simple, <span class="italique">isn't it</span> ?<br>
Vous avez une belle hiérarchie d'objets qui s'entremêlent : un objet <strong><span class="violet"><span class="courrier">Forum</span></span></strong>, auquel vous ajoutez des thèmes ; à ces thèmes, vous ajoutez des salons qui, eux, ont des topics composés de messages. <br>
Et lorsque vous demandez au forum de s'afficher, tout est automatique ! Même si vous passez des objets non autorisés, cela n'empêche pas le code de fonctionner ! <img src="./java_files/magicien.png" alt=":magicien:" class="smilies"><br>
<br>
Afin de mieux comprendre ce pattern,  voici à quoi il ressemble dans Java.<br>
<br>
<br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_71854">Le composite et Java</h2>
		<div class="ss_part_texte">
		Je vous l'ai dit au début de ce chapitre et à la fin du précédent : le pattern composite est utilisé pour gérer le contenu des fenêtres en Java.<br>
<br>
Les objets graphiques que vous utilisez sont assemblés grâce à ce pattern, vous pouvez ainsi mettre des <strong><span class="courrier"><span class="violet">JPanel</span></span></strong> dans des <strong><span class="courrier"><span class="violet">JPanel</span></span></strong>, qui ont des <strong><span class="courrier"><span class="violet">JButton</span></span></strong>, le tout dans un <strong><span class="courrier"><span class="violet">JFrame</span></span></strong> !<br>
<br>
Vous avez remarqué que ces composants avaient aussi une méthode <span class="code2 java"><span class="n">add</span><span class="o">(</span><span class="n">Component</span> <span class="n">comp</span><span class="o">)</span>
</span> qui permet d'ajouter un composant !<br>
En fait, vous pouvez voir que s'il y a ce genre de méthode dans le langage, il y a fort à parier que le composite ne soit pas loin... <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
Tout du moins pour ce qui est des composants graphiques !<br>
<div class="rmq erreur">Les collections n'implémentent pas vraiment ce pattern, donc pas d'amalgame !</div><br>
<br>
Pour les plus curieux d'entre vous, voici à quoi ressemble le diagramme de classes des composants Java : <br>
<br>
<div class="centre"><img src="./java_files/142053.jpg" alt="Image utilisateur"></div><br>
<br>
Maintenant que le décryptage de diagramme de classes n'a plus de secret pour vous, vous pouvez voir clairement le pattern composite au niveau des objets <span class="violet"><span class="courrier"><strong>Container</strong></span></span> et <span class="violet"><span class="courrier"><strong>JComponent</strong></span></span>.<br>
<br>
Ceux-ci acceptent donc des objets de type <span class="violet"><span class="courrier"><strong>Component</strong></span></span> afin de les composer.<br>
De ce fait, on peut donc ajouter un <span class="violet"><span class="courrier"><strong>JPanel</strong></span></span> dans une <span class="violet"><span class="courrier"><strong>JFrame</strong></span></span>, etc.<br>
<br>
J'espère que c'est assez clair pour vous !<br>
<div class="rmq question">Très clair ! Par contre, on trouve que les patterns composite et decorator se ressemblent beaucoup !</div><br>
En effet, mais ne vous y trompez pas !  <img src="./java_files/siffle.png" alt=":-°" class="smilies"> <br>
Le pattern decorator implémente une relation de un à un entre ses acteurs, tandis que le pattern composite implémente une relation de un à plusieurs !<br>
Pour faire simple, pour décorer un objet A, on l'englobe dans un autre objet B.<br>
Pour composer un objet A, on stocke un ou plusieurs objets B dans l'objet A.<br>
<br>
De plus, leur rôle est totalement différent : <br>
<ul>
<li><strong>le composite permet de créer des objets composés d'autres objets ;</strong></li>
<li><strong>le decorator permet de rajouter des fonctionnalités à un objet.</strong></li>
</ul><br>
<br>
Les diagrammes de classes se ressemblent beaucoup ! Seule la flèche de composition diffère.<br>
Oui, la flèche avec le losange rempli s'appelle une flèche de "<strong><span class="italique">composition</span></strong>".<br>
Vous voyez que le nom de ce pattern peut être tiré de là... (Bon, là, c'est du folklore informatique...).<br>
<br>
Je crois qu'il est grand temps de faire un tour du côté de notre topo. <img src="./java_files/clin.png" alt=";)" class="smilies">
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_71853">Ce qu'il faut retenir</h2>
		<div class="ss_part_texte">
		<ul>
<li>Le pattern composite permet de faciliter la composition d'objets.</li>
<li>Ce pattern met en oeuvre une relation d'un à plusieurs envers ses différents acteurs.</li>
<li>Le composite est utilisé dans le langage Java pour gérer les composants des fenêtres graphiques.</li>
<li>Ce dernier ressemble au pattern decorator mais la relation de un à plusieurs est absente.</li>
<li>Le but du composite est de pouvoir construire des objets avec d'autres, tandis que celui du decorator est de rajouter des fonctionnalités à un objet.</li>
</ul>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	J'espère que vous comprenez mieux comment fonctionne vos IHM, maintenant ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
Normalement, vous devriez avoir de bonnes idées pour créer des collections faciles à utiliser...<br>
C'est vrai que ce pattern est souvent utilisé avec des collections : normal, il y a une relation de un à plusieurs ! <img src="./java_files/hihi.png" alt="^^" class="smilies">
	</div>
	
<div>
<br>
J'espère sincèrement que cette partie vous a permis d'y voir plus clair dans les méandres des DP !<br>
Vous conviendrez que ceux-ci sont très utiles et vous permettent de faire des applications plus faciles à maintenir, modifier, faire évoluer...
</div>

<hr>
<h2>Partie 5 : Annexes</h2>
<div>
Voici une annexe afin de vous fournir un complément sur certains des chapitres vus jusqu'ici ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
</div>
	
	<hr>
	<h1 id="chap_65579">Annexe A : liste des mots clés</h1>
	<div id="chap_intro">
	Voici ici la liste des mots clés du langage Java.<br>
Merci à <strong><span class="vertf">Drumer67bts</span></strong> pour cet annexe ainsi que pour la conclusion ! <img src="./java_files/heureux.png" alt=":D" class="smilies">
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65578">Les mots clés</h2>
		<div class="ss_part_texte">
		<div class="justifie"><br>
Cette annexe est une présentation des mots clés du langage Java et de leur signification. Ces mots clés ne peuvent être utilisés que pour quoi ils ont été créés. Ainsi, vous ne pouvez pas les utiliser comme noms de variables, noms de méthodes ou noms de classes.<br>
 <br>
À tout moment, cette liste de mots clés peut vous être utile. Si vous ne comprenez pas la signification de l'un d'eux, c'est que vous n'avez sans doute pas lu le chapitre dans lequel il se trouvait.<br>
 <br>
La signification de la liste de mots clés présentée dans cette annexe sera très courte pour chaque mot car il ne s'agit pas d'un chapitre de cours, mais plutôt de la présentation rapide de ceux-ci listés de façon à pouvoir retrouver rapidement celui que vous recherchez. Ainsi, vous n'aurez pas à rechercher dans tout le tutoriel la signification d'un de ces mots.<br>
</div><br>
<br>
<div class="justifie"><br>
<table class="tab_user">



















































<thead><tr><th><br>
<div class="gauche">Mots clés</div><br>
</th><th><br>
<div class="gauche">Signification</div><br>
</th></tr></thead><tbody><tr>
<td><br>
<strong><span class="courrier"><span class="bleu">abstract</span></span></strong><br>
</td>
<td><br>
Désigne une classe ou une méthode abstraite<br>
</td>
</tr><tr>
<td><br>
<strong><span class="courrier"><span class="bleu">assert</span></span></strong><br>
</td>
<td><br>
Localise les erreurs internes du programme (à utiliser de préférence en phase de test)<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">boolean</span></span></strong><br>
</td>
<td><br>
Type booléen (valeurs possibles : <span class="italique">true</span> ou <span class="italique">false</span>)<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">break</span></span></strong><br>
</td>
<td><br>
Sort de la boucle en cours ou d'une instruction <span class="courrier">switch</span><br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">byte</span></span></strong><br>
</td>
<td><br>
Type entier (8 bits) : -128 à 127<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">case</span></span></strong><br>
</td>
<td><br>
Clause d'une instruction <span class="italique">switch</span><br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">catch</span></span></strong><br>
</td>
<td><br>
Clause d'un bloc <span class="italique">try/catch</span> interceptant un type d'exception<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">char</span></span></strong><br>
</td>
<td><br>
Type caractère Unicode (16 bits)<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">class</span></span></strong><br>
</td>
<td><br>
Utilisé pour la définition d'une classe<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">continue</span></span></strong><br>
</td>
<td><br>
Passe à l'itération suivante d'une boucle sans effectuer les instructions situées après ce mot clé de l'itération en cours<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">default</span></span></strong><br>
</td>
<td><br>
Cas par défaut d'une instruction <span class="italique">switch</span><br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">do</span></span></strong><br>
</td>
<td><br>
Point d'entrée d'une boucle <span class="italique">do/while</span> (<span class="italique">RÉPÉTER / JUSQU'À</span> en algorithmique)<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">double</span></span></strong><br>
</td>
<td><br>
Type nombre flottant en double précision (64 bits)<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">else</span></span></strong><br>
</td>
<td><br>
Clause d'une instruction <span class="italique">if</span><br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">enum</span></span></strong><br>
</td>
<td><br>
Énumère les valeurs possibles pour le type énuméré<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">extends</span></span></strong><br>
</td>
<td><br>
Indique la classe mère d'une classe<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">false</span></span></strong><br>
</td>
<td><br>
Valeur booléenne contraire à <span class="italique">true</span><br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">final</span></span></strong><br>
</td>
<td><br>
<ul>
<li>Constante : type de variable dont le contenu ne peut pas changer</li>
<li>Méthode : elle ne peut pas être surchargée ou redéfinie dans une sous-classe</li>
<li>Classe : elle ne peut pas être dérivée</li>
</ul><br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">finally</span></span></strong><br>
</td>
<td><br>
Clause d'un bloc <span class="italique">try/catch</span> exécutée, qu'il y ait eu déclenchement d'une exception ou non<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">float</span></span></strong><br>
</td>
<td><br>
Type nombre flottant en simple précision (32 bits)<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">for</span></span></strong><br>
</td>
<td><br>
Boucle dont le nombre de répétitions est connu (correspond à la boucle <span class="italique">POUR / FIN POUR</span> en algorithmique)<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">if</span></span></strong><br>
</td>
<td><br>
Instruction conditionnelle (correspond au <span class="italique">SI / FIN SI</span> en algorithmique)<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">implements</span></span></strong><br>
</td>
<td><br>
Indique la ou les classes implémentée(s) par une classe<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">import</span></span></strong><br>
</td>
<td><br>
Importe un package<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">instanceof</span></span></strong><br>
</td>
<td><br>
Permet de tester si un objet est une instance d'une classe<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">int</span></span></strong><br>
</td>
<td><br>
Type entier (32 bits) : -2 147 483 648 à 2 147 483 647<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">interface</span></span></strong><br>
</td>
<td><br>
Comparable à une classe mais de manière plus abstraite, une interface contient des méthodes devant être redéfinies <strong>obligatoirement</strong> par la classe implémentant l'interface<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">long</span></span></strong><br>
</td>
<td><br>
Type entier (64 bits) : -9 223 372 036 854 775 808 à 9 223 372 036 854 775 807<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">native</span></span></strong><br>
</td>
<td><br>
Indique que le code qui suit est écrit dans un autre langage que Java (solution non portable)<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">new</span></span></strong><br>
</td>
<td><br>
Instancie un nouvel objet ou un tableau<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">null</span></span></strong><br>
</td>
<td><br>
Référence nulle : un objet ayant pour valeur <span class="italique">null</span> ne pointe vers aucun objet, il n'a aucune valeur<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">package</span></span></strong><br>
</td>
<td><br>
Ensemble de classes<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">private</span></span></strong><br>
</td>
<td><br>
<ul>
<li>Classe : uniquement utilisable pour les classes internes</li>
<li>Méthode : on ne peut y accéder qu'à partir de la classe dans laquelle elle est définie</li>
<li>Attribut : on ne peut y accéder qu'à partir de la classe dans lequel il est défini</li>
</ul><br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">protected</span></span></strong><br>
</td>
<td><br>
<ul>
<li>Classe : uniquement utilisable pour les classes internes</li>
<li>Méthode : on ne peut y accéder qu'à partir de la classe dans laquelle elle est définie, par les classes filles ou le package dans lequel se trouve la classe contenant la méthode</li>
<li>Attribut : on ne peut y accéder qu'à partir de la classe dans lequel il est défini, par les classes filles ou le package dans lequel se trouve la classe contenant l'attribut</li>
</ul><br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">public</span></span></strong><br>
</td>
<td><br>
Donne l'accessibilité par toutes les classes<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">return</span></span></strong><br>
</td>
<td><br>
Utilisé dans une méthode pour retourner une valeur ou un objet<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">short</span></span></strong><br>
</td>
<td><br>
Type entier (16 bits) : -32768 à 32767<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">static</span></span></strong><br>
</td>
<td><br>
<ul>
<li>Attribut : instancié une seule fois, l'attribut est commun à l'ensemble des instances d'une classe</li>
<li>Méthode : peut être appelée directement à partir du nom de la classe sans utiliser une instance de la classe</li>
</ul><br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">super</span></span></strong><br>
</td>
<td><br>
Accède à la super-classe ou à son constructeur<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">switch</span></span></strong><br>
</td>
<td><br>
Alternative à l'instruction <span class="italique">if</span> (les différents cas doivent être connus)<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">synchronized</span></span></strong><br>
</td>
<td><br>
Assure l'accès à une méthode ou à un bloc de code à un seul thread (les autres threads doivent alors attendre s'ils veulent accéder à cette partie du code)<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">this</span></span></strong><br>
</td>
<td><br>
Utilisé dans une classe pour indiquer l'objet courant<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">throw</span></span></strong><br>
</td>
<td><br>
Lance une exception<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">throws</span></span></strong><br>
</td>
<td><br>
Utilisé pour la déclaration des exceptions que peut lancer une méthode<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">transient</span></span></strong><br>
</td>
<td><br>
Déclare une variable non sérialisable<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">true</span></span></strong><br>
</td>
<td><br>
Valeur booléenne contraire à <span class="italique">false</span><br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">try</span></span></strong><br>
</td>
<td><br>
Bloc de code susceptible d'intercepter une exception<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">void</span></span></strong><br>
</td>
<td><br>
Utilisé pour les méthodes qui ne renvoient rien<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">volatile</span></span></strong><br>
</td>
<td><br>
Permet de s'assurer que plusieurs <strong><span class="violet"><span class="courrier">Thread </span></span></strong>concurrent puissent accéder à la dernière valeur de la variable. Donc, une variable déclarée <strong><span class="violet"><span class="arial">volatile</span></span></strong> est accessible  par plusieurs <strong><span class="violet"><span class="courrier">Thread </span></span></strong>simultanément !<br>
</td>
</tr><tr>
<td><br>
<strong><span class="bleu"><span class="courrier">while</span></span></strong><br>
</td>
<td><br>
Boucle dans laquelle il est possible de ne jamais entrer (correspond à <span class="italique">TANT QUE / FIN TANT QUE</span> en algorithmique)<br>
</td>
</tr></tbody></table><br>
</div>
		</div>
		<hr>
		
	<div id="chap_conclusion">
	<div class="justifie"><br>
Comme vous avez pu le constater, la liste des mots clés est assez importante. Vous êtes sûrement de mon avis : une telle liste était nécessaire pour vous y retrouver. <img src="./java_files/hihi.png" alt="^^" class="smilies"> <br>
</div>
	</div>
	
	<hr>
	<h1 id="chap_65577">Annexe B : Les objets travaillant avec des flux</h1>
	<div id="chap_intro">
	Voici une liste non exhaustive des objets java travaillant avec les flux I/O.
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65576">Les objets traitant des flux d'entrée (in)</h2>
		<div class="ss_part_texte">
		<strong><h3>Sous-classes de <span class="courrier"><strong><span class="violet">InputStream</span></strong></span></h3></strong><br>
<br>
<table class="tab_user">










<thead><tr><th>Sous-classe</th><th>Fonction</th></tr></thead><tbody><tr>
<td><strong><span class="courrier"><span class="bleu">FileInputStream</span></span></strong></td>
<td>Permet de créer un flux avec un fichier présent dans le système de fichiers.<br>
Cette classe possède un constructeur prenant en paramètre un objet de type <span class="courrier"><strong>File</strong></span> ou un <strong><span class="courrier">String </span></strong>, qui représente le chemin vers le fichier.</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">ByteArrayInputStream</span></span></strong></td>
<td>Permet de lire des données binaires à partir d'un tableau d'octets. </td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">PipedInputStream</span></span></strong></td>
<td>Permet de créer une sorte de tube d'entrée (pipe). Dans celui-ci, les informations circuleront sous forme d'octets. <br>
Cette classe possède un constructeur ayant pour paramètre un objet de type <span class="courrier"><strong>PipedOutputStream</strong></span>. On peut ainsi connecter les deux tubes ; en gros, ce qui est écrit dans une extrémité peut être lu depuis l'autre.</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">BufferedInputStream</span></span></strong></td>
<td>Cette classe permet la lecture de données à l'aide d'un tampon, un buffer si vous préférez.<br>
À l'instanciation, un tableau d'octets est créé afin de servir de tampon et permet de ne pas surcharger la mémoire. Ce tableau est redimensionné automatiquement à chaque lecture pour contenir les données provenant du flux d'entrée. Ce type d'objet est particulièrement approprié lors de traitement de fichiers volumineux !</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">DataInputStream</span></span></strong></td>
<td>Cet objet sert à lire des données représentant des types primitifs de Java <br>
(<strong><span class="courrier">int</span></strong>, <strong><span class="courrier">boolean</span></strong>, <strong><span class="courrier">double</span></strong>, <strong><span class="courrier">byte</span></strong>, ...) préalablement écrits par un <strong><span class="courrier">DataOutputStream</span></strong>.<br>
Grâce à cet objet, vous pouvez récupérer des éléments sérialisés avec des méthodes comme <span class="courrier"><strong>readInt()</strong></span>, <strong><span class="courrier">readDouble()</span></strong>...</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">PushbackInputStream</span></span></strong></td>
<td>Lit un flux binaire en entrée et replace le dernier octet lu dans le flux !</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">LineNumberInputStream</span></span></strong></td>
<td>Permet d'avoir les numéros de lignes lues dans le flux en plus de lire le flux lui-même.</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">SequenceInputStream</span></span></strong></td>
<td>Permet de concaténer deux (ou plus) flux d'entrée, ce qui permet de traiter plusieurs flux d'entrée comme un seul et unique flux !</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">ObjectInputStream</span></span></strong></td>
<td>Permet de «désérialiser» un objet, c'est-à-dire de restaurer un objet préalablement sauvegardé à l'aide d'un <strong><span class="courrier">ObjectOutputStream</span></strong>. Cet objet est l'homologue de l'objet <span class="courrier"><strong>DataInputStream</strong></span>, à la différence que celui-ci traite des objets.</td>
</tr></tbody></table><br>
<br>
<strong><h3>Sous-classes de <span class="courrier"><strong><span class="violet">Reader</span></strong></span></h3></strong><br>
<br>
<table class="tab_user">







<thead><tr><th>Sous-classe</th><th>Fonction</th></tr></thead><tbody><tr>
<td><strong><span class="bleu"><span class="courrier">CharArrayReader</span></span></strong></td>
<td>Offre la possibilité de lire un flux de caractères en mémoire. </td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">StringReader </span></span></strong></td>
<td>Idem que la classe précédente.</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">FileReader </span></span></strong></td>
<td>Permet de lire un fichier avec un flux de caractères.</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">InputStreamReader </span></span></strong></td>
<td>Convertit un flux binaire en flux de caractères : elle convertit un objet de type <span class="courrier"><span class="violet"><strong>InputStream </strong></span></span>en objet de type <strong><span class="courrier"><span class="violet">Reader</span></span></strong>.</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">PipedReader </span></span></strong></td>
<td>Idem que leurs cousines héritées de <strong><span class="violet"><span class="courrier">InputStream</span></span></strong>, mais pour des flux de caractères.</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">PushbackReader </span></span></strong></td>
<td>Au lieu de remettre un octet dans le flux comme sa cousine (<strong><span class="violet"><span class="courrier">PushbackInputStream</span></span></strong>), celle-ci remet un caractère dans le flux d'entrée.</td>
</tr></tbody></table>
		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_65575">Les objets traitant les flux de sortie (out)</h2>
		<div class="ss_part_texte">
		<h3>Sous-classes de <strong><span class="violet"><span class="courrier">OutputStream</span></span></strong></h3><br>
<br>
<table class="tab_user">










<thead><tr><th>Sous-classe</th><th>Fonction</th></tr></thead><tbody><tr>
<td><strong><span class="bleu"><span class="courrier">FileOutputStream </span></span></strong></td>
<td rowspan="9">Toutes ces classes ont les mêmes fonctions que les classes héritant de <strong><span class="violet"><span class="courrier">InputStream</span></span></strong>, mais cette fois pour l'écriture.</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">ByteArrayOutputStream </span></span></strong></td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">PipedOutputStream </span></span></strong></td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">BufferedOutputStream </span></span></strong></td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">DataOutputStream  </span></span></strong></td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">PushbackOutputStream  </span></span></strong></td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">LineNumberOutputStream  </span></span></strong></td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">SequenceOutputStream  </span></span></strong></td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">ObjectOutputStream  </span></span></strong></td>
</tr></tbody></table><br>
<br>
<h3>Sous-classes de <strong><span class="violet"><span class="courrier">Writer</span></span></strong></h3><br>
<br>
<table class="tab_user">







<thead><tr><th>Sous-classe</th><th>Fonction</th></tr></thead><tbody><tr>
<td><strong><span class="bleu"><span class="courrier">CharArrayWriter</span></span></strong> </td>
<td rowspan="6">Toutes ces classes ont les mêmes fonctions que les classes héritant de <strong><span class="violet"><span class="courrier">Reader</span></span></strong>, mais cette fois pour l'écriture.</td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">StringWriter </span></span></strong></td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">FileWriter </span></span></strong></td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">InputStreamWriter </span></span></strong></td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">PipedWriter </span></span></strong></td>
</tr><tr>
<td><strong><span class="bleu"><span class="courrier">PushbackWriter </span></span></strong></td>
</tr></tbody></table><br>

		</div>
		<hr>
		
	<div id="chap_conclusion">
	
	</div>
	
	<hr>
	<h1 id="chap_71861">Annexe C : Eclipse</h1>
	<div id="chap_intro">
	Voici un petit pense-bête sur Eclipse !<br>
Vous retrouverez toutes les astuces vues tout au long du tuto ainsi que quelques petits trucs en plus... <img src="./java_files/clin.png" alt=";)" class="smilies">
	</div>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_71860">Installation</h2>
		<div class="ss_part_texte">
		Pour installer Eclipse, vous devez vous souvenir que vous devez AVANT TOUT avoir un environnement Java !<br>
Si vous n'en avez pas, allez faire un tour à <a href="http://java.sun.com/javase/downloads/index.jsp">cette adresse</a> et téléchargez la dernière version du JRE.<br>
Installez-le, vous êtes maintenant prêts à télécharger et à installer Eclipse...<br>
<br>
<strong><h3>Installation Windows</h3></strong><br>
<br>
Pour le téléchargement, rendez-vous <a href="http://www.eclipse.org/downloads/">sur ce site</a>, et choisissez le lien "<strong><span class="arial">Eclipse IDE for Java Developers</span></strong>".<br>
<br>
Une fois téléchargé, vous pouvez constater qu'il s'agit d'une archive au format <strong><span class="arial"><span class="bleu">.zip</span></span></strong>. Il vous suffit de l'extraire à l'endroit souhaité (si vous n'avez pas de logiciel d'extraction d'archives, je vous conseille <a href="http://www.7-zip.org/">7Zip</a>).<br>
<br>
Vous devriez avoir un dossier contenant ces fichiers : <br>
<br>
<div class="centre"><img src="./java_files/140329.jpg" alt="Image utilisateur"></div><br>
<br>
En vert, vous pouvez voir l'exécutable pour lancer Eclipse !<br>
Et voilà, c'est fini. <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
<strong><h3>Installation Linux</h3></strong><br>
<br>
Pour installer Eclipse sous Linux, c'est très simple : vous pouvez aller à la même adresse (site officiel d'Eclipse) et choisissez la version Linux. Il vous suffit ensuite, tout comme pour Windows, d'extraire l'archive au format <strong><span class="arial"><span class="bleu">.tar.gz</span></span></strong> et de double cliquer sur l'icône "<strong><span class="bleu"><span class="arial">Eclipse</span></span></strong>" : <br>
<br>
<div class="centre"><img src="./java_files/140332.png" alt="Image utilisateur"></div><br>
<br>
Pour les inconditionnels du terminal, vous pouvez faire une recherche : <br>
<br>
<span class="code">Code : Bash - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 bash"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre>apt-cache search eclipse
</pre></div>
</td></tr></tbody></table></div> <br>
<br>
Ensuite, vous repérez la version qu'il vous faut et vous terminez par :<br>
<br>
<span class="code">Code : Bash - <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="select_code">Sélectionner</a></span><div class="code2 bash"><table class="syntaxtable"><tbody><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="syntax"><pre>sudo apt-get install &lt;LeNomDeVotreEclipse&gt;
</pre></div>
</td></tr></tbody></table></div> <br>

		</div>
		<hr>
		
		<hr class="separateur_parties">
		<h2 id="ss_part_71857">Raccourcis utiles</h2>
		<div class="ss_part_texte">
		Voici une liste des raccourcis clavier fort utiles !<br>
<br>
<ul>
<li><strong>ALT + SHIFT + N</strong> : Nouveau projet</li>
<li><strong>CTRL + S</strong> : enregistrer la <strong><span class="italique">classe *</span></strong> Java où on est positionnés</li>
<li><strong>CTRL + SHIFT + S</strong> : tout sauvegarder</li>
<li><strong>CTRL + W</strong> : fermer la classe Java où on est positionnés</li>
<li><strong>CTRL + SHIFT + W</strong> : fermer toutes les classes Java ouvertes</li>
<li><strong>CTRL + C</strong> : copier la sélection</li>
<li><strong>CTRL + X</strong> : couper la sélection</li>
<li><strong>CTRL + V</strong> : coller la sélection</li>
<li><strong>CTRL + A</strong> : tout sélectionner</li>
<li><strong>CTRL + F</strong> : chercher / remplacer</li>
</ul><br>
<br>
Vous avez déjà vu ces raccourcis au tout début du tutoriel !<br>
Mais il y a en a d'autres qui pourront peut-être vous servir :<br>
<br>
<ul>
<li><strong>CTRL + ESPACE</strong> : sûrement l'un des raccourcis les plus pratiques et les plus utilisés ! Avec ce dernier, vous n'avez qu'à taper le début d'un nom de méthode et, après avoir fait cette combinaison de touche, Eclipse vous propose une liste de méthodes correspondant au début de votre saisie ;</li>
<li><strong>CTRL + SHIFT + 0 </strong>: <span class="italique">organize Imports</span>, soit, en français, organisation des imports. Donc, permet de générer les imports dont vous avez besoin pour votre classe ;</li>
<li><strong>CTRL + SHIFT + R</strong> : vous permet de rechercher un fichier spécifié dans votre <span class="italique">workspace</span> ;</li>
<li><strong>CTRL + SHIFT + F</strong> : met en forme tout votre code si vous n'avez pas sélectionné de zone spécifique, sinon, met en forme la zone sélectionnée ;</li>
<li><strong>CTRL + SHIFT + C </strong>: commente / dé-commente les lignes de code sélectionnées ;</li>
<li><strong>CTRL + SHIFT + P </strong>: permet de se déplacer d'une accolade à l'autre (<span class="code2">if</span>, <span class="code2">while</span>, <span class="code2">for</span>...), très pratique pour se retrouver dans un code complexe...</li>
<li><strong>ALT + SHIFT + S </strong>: revient à faire "clic-droit / Source" sur votre projet ou votre classe. Permet donc de générer les <span class="italique">getters</span> et <span class="italique">setters</span>, des méthodes spécifique (<span class="code2">equals</span>...) ;</li>
<li><strong>SHIFT + ALT + Z</strong> : ouvre le menu "Surround with", ou "entourer par" en français. Ce qui signifie que vous pourrez entourer une portion de code pré-sélectionnée avec ce que vous propose ce raccourci.</li>
</ul><br>
<br>
Si vous voulez une liste plus complète, vous pouvez aller faire un tour <a href="http://eclipse-tools.sourceforge.net/KeyBind_Eclipse_v2_1.pdf">sur ce lien</a>. Il y a une grande quantité de raccourcis !<br>

		</div>
		<hr>
		
	<div id="chap_conclusion">
	Voilà une bonne chose de faite. <img src="./java_files/smile.png" alt=":)" class="smilies"><br>
<br>
J'ose espérer que cette annexe pourra vous servir. En tout cas, elle me sert déjà... <img src="./java_files/clin.png" alt=";)" class="smilies">
	</div>
	
<div>
<br>
En espérant que celle-ci vous a été utile.
</div>


<hr>

<div id="btuto_conclusion">
	Ce tutoriel sur Java se termine !<br>
J'ose espérer qu'il vous a été agréable et que avez appris à domestiquer la bête... <img src="./java_files/langue.png" alt=":p" class="smilies"><br>
<br>
<div class="rmq question">Eh ! Tu nous avais promis un tuto sur <acronym title="Java DataBase Connectivity">JDBC</acronym> ! !</div><br>
<br>
Et je vous réponds qu'un autre tuto portant sur des API Java va voir le jour d'ici peu de temps avec, au programme : <br>
<ul>
<li>JDBC ;</li>
<li>programmation réseau ;</li>
<li><acronym title="Java Media Framework">JMF</acronym> ;</li>
<li>...</li>
</ul><br>
<br>
Et oui, le tuto actuel commençait à être un peu gros et rajouter tout ça dedans aurait fini par vous faire peur...<br>
<br>
Donc je vous donne rendez-vous dans un autre tuto ! <img src="./java_files/clin.png" alt=";)" class="smilies"><br>
@ bientôt amis ZérOs...
</div>

<div class="clearer"></div>

<div class="infobox cadre_auteur_date" id="tuto_details">
  <form action="http://www.siteduzero.com/tutoriel-54-10601.html" method="post">
    <div class="dnone"><input type="hidden" value="4bca73605591512818aaf350fccd8ca9b6e9bf3c" name="challenge"></div>

    <h3 class="special">Informations sur le tutoriel</h3>
   
    <div class="conteneur_infobox">
	<a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#onglets_tutos">Retour en haut <img src="./java_files/fleche_haut.png" alt="Retour en haut" title="Retour en haut"></a>
	<br>
   	<br>			
<strong>Créé</strong> : Le 21/06/2006 à 15:02:22<br>
<strong>Modifié</strong> : Le 12/02/2010 à 11:20:29<br>

<strong>Avancement</strong> : 100%<br>

<br>


<a href="http://www.siteduzero.com/tutoriel-50-10601-71292-programmation-en-java.html#r71292">274 commentaires</a><br>

  <a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html">Revenir au sommaire du tutoriel</a><br>


    </div>
  </form>
</div>



                </div>
            </div>

            <div id="footer">
                <ul>
                    <li>
                        Le Site du Zéro
                        <ul>
                            <li><a href="http://www.siteduzero.com/plan.html">Plan du site</a></li>
                            <li><a href="http://www.siteduzero.com/membres-304.html">L'équipe</a></li>
                            <li><a href="http://www.siteduzero.com/mentions.html">Mentions légales</a></li>
                            <li><a href="http://www.siteduzero.com/accessibilite.html" accesskey="0">Accessibilité</a></li>
                            <li><a href="http://www.siteduzero.com/livreor.html">Livre d'or</a></li>
                            <li><a href="http://suggestions.siteduzero.com/"><img alt="logo_user_voice" src="./java_files/ico_uservoice.png"> Suggestions <img alt="Nouveau" src="./java_files/iconouveau.png"></a></li>
                        </ul>
                    </li>
                    <li>
                        Simple IT
                        <ul>
                            <li><a href="http://www.siteduzero.com/simpleit.html">Qui sommes-nous ? </a></li>
                            
                                <li><a href="http://www.siteduzero.com/formations.html">Formation professionnelle</a></li>
                                <li><a href="http://www.siteduzero.com/recrutement.html">Recrutement</a></li>
                            
                            <li><a href="http://www.simple-it.fr/blog/">Notre blog</a></li>
                        </ul>
                    </li>
                    <li>
                        Contacts
                        <ul>
                            <li><a href="http://www.siteduzero.com/publicite-440.html">Espace annonceurs</a></li>
                            <li><a href="http://www.siteduzero.com/presse.html">Espace presse</a></li>
                            <li><strong><a href="http://www.siteduzero.com/contact.html" accesskey="7">Nous contacter</a></strong></li>
                            <li><a href="http://www.siteduzero.com/promouvoir.html">Promouvoir le site</a></li>
                            <li><a href="http://suggestions.siteduzero.com/forums/97879-rapports-de-bugs">Signaler un bug</a></li>
                        </ul>
                    </li>
                    
                        <li>
                            Partenaires 
                            <ul>
                                <li><a href="http://www.planethoster.net/Site-du-Zero">Hébergement web</a></li>
                                <li><a href="http://www.zcorrecteurs.fr/">Correction tutoriels</a></li>
                            </ul>
                        </li>
                    
                    <li>
                        Suivez-nous
                        <ul class="dernier">
                            <li><a href="http://www.siteduzero.com/Templates/xml/news_fr.xml"><img src="./java_files/rss_mini.png" alt="Flux RSS"> Flux RSS News</a>, <a href="http://www.siteduzero.com/Templates/xml/tutoriels_fr.xml">Cours</a>, <a href="http://www.simple-it.fr/blog/index.php?feed/atom">Blog</a></li>
                            <li><a href="http://www.siteduzero.com/twitter.html"><img src="./java_files/twitter_mini.png" alt="Twitter"> Twitter</a></li>
                            <li><a href="http://www.facebook.com/siteduzero"><img src="./java_files/fb_mini.png" alt="Facebook"> Facebook</a></li>
                        </ul>
                    </li>
                </ul>

                
            </div>

            


            
            <script type="text/javascript" src="./java_files/scripts_lang.min.js"></script>
            <script type="text/javascript" src="./java_files/scripts.min.js"></script>
            <script type="text/javascript" src="./java_files/lib.min.js"></script>

            
                <script type="text/javascript">
    var addthis_config = {  ui_508_compliant: true,
                            ui_cobrand: "Site du Zéro",
                            ui_header_color: "#ffffff",
                            ui_header_background: "#7AB7FC",
                            username: "simpleit",
                            services_exclude: 'print,pdfonline,email,twitter,facebook,myspace,googlebuzz,blogger,buzz,live',
                            data_track_clickback: true  };
                        
    var addthis_share = {templates: { twitter:'{{title}} {{url}} #SdZ' } };

    $('div.slidable').hide();
    $('a.expend').show();
    $('a.expend').removeAttr('style');
    
    $('.expend').click(function(e)
    {
        e.preventDefault();
        $(this).hide('fast');
        $(this).next('div.slidable').slideToggle('fast');
    });
   
</script>
<script type="text/javascript" src="./java_files/addthis_widget.js"></script>
            

            <div class="droite printnone">
                <a href="http://www.xiti.com/xiti.asp?s=129196" title="WebAnalytics">
                    <script type="text/javascript">
                        <!--
                        Xt_param = 's=129196&p=%2Ftutoriel-3-10601-programmation-en-java.html%3Fall%3D1';
                        try {Xt_r = top.document.referrer;}
                        catch(e) {Xt_r = document.referrer; }
                        Xt_h = new Date();
                        Xt_i = '<img width="80" height="15" border="0" ';
                        Xt_i += 'src="http://logv23.xiti.com/g.xiti?'+Xt_param;
                        Xt_i += '&hl='+Xt_h.getHours()+'x'+Xt_h.getMinutes()+'x'+Xt_h.getSeconds();
                        if(parseFloat(navigator.appVersion)>=4)
                        {
                        Xt_s=screen;Xt_i+='&r='+Xt_s.width+'x'+Xt_s.height+'x'+Xt_s.pixelDepth+'x'+Xt_s.colorDepth;
                        }
                        document.write(Xt_i+'&ref='+Xt_r.replace(/[<>"]/g, '').replace(/&/g, '$')+'">');
                        //-->
                    </script><img width="80" height="15" border="0" src="./java_files/g.xiti">
                    <object>
                        <noscript>
                            &lt;p&gt;&lt;img width="80" height="15" src="http://logv23.xiti.com/g.xiti?s=129196&amp;amp;p=&amp;amp;" alt="WebAnalytics" /&gt;&lt;/p&gt;
                        </noscript>
                    </object>
                </a>
                <script type="text/javascript">
                    var _gaq = _gaq || [];
                    _gaq.push(['_setAccount', 'UA-19807070-2']);
                    _gaq.push(['_trackPageview']);

                    (function() {
                    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
                    })();
                </script>
            </div>

            <!-- /#3 305/#2.3395/#2.239/# -->
	
    


<div style="display: none; position: absolute; overflow-x: hidden; overflow-y: hidden; z-index: 1000; outline-width: 0px; outline-style: initial; outline-color: initial; " class="ui-dialog ui-widget ui-widget-content ui-corner-all " tabindex="-1" role="dialog" aria-labelledby="ui-dialog-title-dialog_bientot"><div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix" unselectable="on"><span class="ui-dialog-title" id="ui-dialog-title-dialog_bientot" unselectable="on">Bientôt sur le Site du Zéro.</span><a href="http://www.siteduzero.com/tutoriel-3-10601-programmation-en-java.html?all=1#" class="ui-dialog-titlebar-close ui-corner-all" role="button" unselectable="on"><span class="ui-icon ui-icon-closethick" unselectable="on">close</span></a></div><div id="dialog_bientot" style="" class="ui-dialog-content ui-widget-content">
                <p>Le Site du Zéro vous proposera bientôt de nouveaux cours partant de Zéro dans d'autres domaines que l'informatique ! </p>
                 <a style="color:#2677C9;text-decoration:none;" href="http://www.siteduzero.com/tutoriel-1-433-sciences.html">Découvrir les cours scientifiques</a>
            </div><div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"><button type="button" class="ui-state-default ui-corner-all">Ok</button></div></div><div id="tooltip" style="display: none; "><h3></h3><div class="body"></div><div class="url"></div></div></body></html>