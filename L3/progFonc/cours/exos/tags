!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Arbres	arbres.ml	1;"	M
Const	typesTDM.ml	/^type exp = Const of m3|Produit expression*expression|Somme expression*expression;;$/;"	C	type:exp
Deux	typesTDM.ml	/^type m3 = Zero|Un|Deux;;$/;"	C	type:m3
Listes	listes.ml	1;"	M
Listes2	listes2.ml	1;"	M
Node	arbres.ml	/^type 'a arbreNaire = Node of 'a * 'a arbreNaireList;$/;"	C	type:arbreNaire
Produit	typesTDM.ml	/^type exp = Const of m3|Produit expression*expression|Somme expression*expression;;$/;"	C	type:exp
TypesTDM	typesTDM.ml	1;"	M
Un	typesTDM.ml	/^type m3 = Zero|Un|Deux;;$/;"	C	type:m3
Zero	typesTDM.ml	/^type m3 = Zero|Un|Deux;;$/;"	C	type:m3
arbreNaire	arbres.ml	/^type 'a arbreNaire = Node of 'a * 'a arbreNaireList;$/;"	t
bool	listes.ml	/^ Error: This expression has type bool but an expression was expected of type int$/;"	t
cons	arbres.ml	/^let rec cons = function$/;"	v
e1	typesTDM.ml	/^let e1 = Const Un;;$/;"	v
elem2Sur3	listes2.ml	/^let elem2Sur3= function$/;"	v
exp	typesTDM.ml	/^type exp = Const of m3|Produit expression*expression|Somme expression*expression;;$/;"	t
float	listes.ml	/^ Error: This expression has type float but an expression was expected of type int$/;"	t
float	listes.ml	/^Error: This expression has type int but an expression was expected of type float$/;"	t
int	listes.ml	/^ Error: This expression has type bool but an expression was expected of type int$/;"	t
int	listes.ml	/^ Error: This expression has type float but an expression was expected of type int$/;"	t
int	listes.ml	/^ Error: This expression has type int but an expression was expected of type int list$/;"	t
int	listes.ml	/^Error: This expression has type int but an expression was expected of type float$/;"	t
m3	typesTDM.ml	/^type m3 = Zero|Un|Deux;;$/;"	t
m3s	typesTDM.ml	/^let m3s = function$/;"	v
somme	arbres.ml	/^let rec somme = function$/;"	v
