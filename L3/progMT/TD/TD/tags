!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Exercice 1	td.tex	/^	\\chapter{Introduction}$/;"	s
Exercice 2	td.tex	/^		\\lstinputlisting[language=C, caption=Exercice 1 -- Version Unix]{codes\/1-2.c}$/;"	s
Exercice 3	td.tex	/^	\\chapter{Processus}$/;"	s
Exercice 4	td.tex	/^		\\lstinputlisting[language=C, caption=Exercice 3]{codes\/3.c}$/;"	s
Exercice 5	td.tex	/^		\\lstinputlisting[language=C, caption=Exercice 4]{codes\/4.c}$/;"	s
Exercice 6	td.tex	/^\\end{lstlisting}$/;"	s
Exercice 7	td.tex	/^		Il va afficher deux fois le pid du programme courant.$/;"	s
Exercice 7	td.tex	/^		\\lstinputlisting[language=C, caption=Exercice 7]{codes\/7.c}$/;"	s
Gestion de la m   moire  m   moire virtuelle et allocation non contigu  	td.tex	/^		\\section{Exercice 7}$/;"	c
Introduction	td.tex	/^	\\tableofcontents$/;"	c
N	codes/4.c	9;"	d	file:
N	codes/6.c	8;"	d	file:
NBPROC	codes/4.c	8;"	d	file:
Processus	td.tex	/^		\\lstinputlisting[language=C, caption=Exercice 2 -- Correction]{codes\/2.c}$/;"	c
_POSIF_C_SOURCE	codes/1-2.c	1;"	d	file:
_POSIX_C_SOURCE	codes/2-2.c	1;"	d	file:
_POSIX_C_SOURCE	codes/3.c	1;"	d	file:
_POSIX_C_SOURCE	codes/4.c	1;"	d	file:
_POSIX_C_SOURCE	codes/6.c	1;"	d	file:
_POSQIX_C_SOURCE	codes/7.c	1;"	d	file:
affichage	codes/4.c	/^void affichage(pid_t pid) {$/;"	f	signature:(pid_t pid)
affichage	codes/4.c	/^void affichage(pid_t pid);$/;"	p	file:	signature:(pid_t pid)
fonction	test.c	/^void fonction() {$/;"	f
kamolox	test.c	/^void kamolox() {$/;"	f
main	codes/1-2.c	/^int main(int argc, char** argv, char** envp) {$/;"	f	signature:(int argc, char** argv, char** envp)
main	codes/1.c	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
main	codes/2-2.c	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
main	codes/2.c	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
main	codes/3.c	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
main	codes/4.c	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
main	codes/6.c	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
main	codes/7.c	/^int main(void) {$/;"	f	signature:(void)
main	test.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
test	test.c	/^void test(int a) {$/;"	f	signature:(int a)
